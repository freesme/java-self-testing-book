{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u300aJava \u7814\u53d1\u81ea\u6d4b\u300b \u6709\u5f88\u591a\u56fe\u4e66\u4ecb\u7ecd\u600e\u4e48\u505a\u6d4b\u8bd5\uff0c\u4f46\u662f\u5f88\u5c11\u6709\u5199\u7ed9\u5f00\u53d1\u4eba\u5458\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u56fe\u4e66\u3002\u8f6f\u4ef6\u8d28\u91cf\u662f\u51b3\u5b9a\u4e00\u6b3e\u8f6f\u4ef6\u662f\u5426\u80fd\u7528\u7684\u5e95\u7ebf\uff0c\u8f6f\u4ef6\u8d28\u91cf\u4f4e\u4e0b\uff0c\u4f1a\u9020\u6210\u5f00\u53d1\u4eba\u5458\u4e0d\u65ad\u5730\u8fd4\u5de5\u548c\u4fee\u590d Bug\uff0c\u800c\u8fd9\u9700\u8981\u4ed8\u51fa\u5de8\u5927\u7684\u4ee3\u4ef7\uff0c\u4fb5\u5360\u539f\u672c\u7d27\u51d1\u7684\u5f00\u53d1\u65f6\u95f4\u3002 \u8fd9\u672c\u5f00\u6e90\u7535\u5b50\u4e66\u6574\u7406\u4e86\u6bcf\u4e2a\u9879\u76ee\u4e0a\u90fd\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u7814\u53d1\u81ea\u6d4b\u914d\u7f6e\u548c\u6280\u5de7\uff0c\u4ee5\u5b9e\u7528\u7684\u89d2\u5ea6\u8bf4\u660e\u5982\u4f55\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u3001API\u6d4b\u8bd5\u7b49\u5185\u5bb9\uff0c\u76ee\u524d\u6301\u7eed\u66f4\u65b0\u4e2d\uff0c\u5e0c\u671b\u5927\u5bb6\u591a\u63d0\u53cd\u9988\uff0c\u8c22\u8c22! \u5f53\u524d\u66f4\u65b0\u7ae0\u8282\uff1a \u7b2c 1 \u7ae0 \u7814\u53d1\u81ea\u6d4b\u57fa\u7840 \u7b2c 2 \u7ae0 \u4ee3\u7801\u8bc4\u5ba1 \u7b2c 3 \u7ae0 \u5355\u5143\u6d4b\u8bd5\u57fa\u7840 \u7b2c 4 \u7ae0 \u6d4b\u8bd5\u66ff\u8eab \u7b2c 5 \u7ae0 Spring \u5e94\u7528\u7684\u6d4b\u8bd5 \u7b2c 6 \u7ae0 RESTful API \u6d4b\u8bd5 \u53c2\u4e0e\u8d21\u732e \u5982\u679c\u60a8\u53d1\u73b0\u5185\u5bb9\u6709\u9700\u8981\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \"Edit on GitHub\" \u63d0\u4ea4 Pull Request\u3002\u7531\u4e8e\u65f6\u95f4\u4ed3\u4fc3\uff0c\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\u6709\uff1a \u6807\u70b9\u7b26\u53f7\u5168\u89d2\u3001\u534a\u89d2\u95ee\u9898 \u82f1\u6587\u5355\u8bcd\u6ca1\u6709\u5408\u9002\u7684\u7a7a\u683c\uff0c\u5bfc\u81f4\u6392\u7248\u6548\u679c\u53d7\u5230\u5f71\u54cd \u5176\u5b83\u95ee\u9898\u53ef\u4ee5\u8054\u7cfb\u4f5c\u8005\u5fae\u4fe1\uff1ashaogefenhao\uff0c\u8c22\u8c22\uff01","title":"Home"},{"location":"#java","text":"\u6709\u5f88\u591a\u56fe\u4e66\u4ecb\u7ecd\u600e\u4e48\u505a\u6d4b\u8bd5\uff0c\u4f46\u662f\u5f88\u5c11\u6709\u5199\u7ed9\u5f00\u53d1\u4eba\u5458\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u56fe\u4e66\u3002\u8f6f\u4ef6\u8d28\u91cf\u662f\u51b3\u5b9a\u4e00\u6b3e\u8f6f\u4ef6\u662f\u5426\u80fd\u7528\u7684\u5e95\u7ebf\uff0c\u8f6f\u4ef6\u8d28\u91cf\u4f4e\u4e0b\uff0c\u4f1a\u9020\u6210\u5f00\u53d1\u4eba\u5458\u4e0d\u65ad\u5730\u8fd4\u5de5\u548c\u4fee\u590d Bug\uff0c\u800c\u8fd9\u9700\u8981\u4ed8\u51fa\u5de8\u5927\u7684\u4ee3\u4ef7\uff0c\u4fb5\u5360\u539f\u672c\u7d27\u51d1\u7684\u5f00\u53d1\u65f6\u95f4\u3002 \u8fd9\u672c\u5f00\u6e90\u7535\u5b50\u4e66\u6574\u7406\u4e86\u6bcf\u4e2a\u9879\u76ee\u4e0a\u90fd\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u7814\u53d1\u81ea\u6d4b\u914d\u7f6e\u548c\u6280\u5de7\uff0c\u4ee5\u5b9e\u7528\u7684\u89d2\u5ea6\u8bf4\u660e\u5982\u4f55\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u3001API\u6d4b\u8bd5\u7b49\u5185\u5bb9\uff0c\u76ee\u524d\u6301\u7eed\u66f4\u65b0\u4e2d\uff0c\u5e0c\u671b\u5927\u5bb6\u591a\u63d0\u53cd\u9988\uff0c\u8c22\u8c22! \u5f53\u524d\u66f4\u65b0\u7ae0\u8282\uff1a \u7b2c 1 \u7ae0 \u7814\u53d1\u81ea\u6d4b\u57fa\u7840 \u7b2c 2 \u7ae0 \u4ee3\u7801\u8bc4\u5ba1 \u7b2c 3 \u7ae0 \u5355\u5143\u6d4b\u8bd5\u57fa\u7840 \u7b2c 4 \u7ae0 \u6d4b\u8bd5\u66ff\u8eab \u7b2c 5 \u7ae0 Spring \u5e94\u7528\u7684\u6d4b\u8bd5 \u7b2c 6 \u7ae0 RESTful API \u6d4b\u8bd5 \u53c2\u4e0e\u8d21\u732e \u5982\u679c\u60a8\u53d1\u73b0\u5185\u5bb9\u6709\u9700\u8981\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \"Edit on GitHub\" \u63d0\u4ea4 Pull Request\u3002\u7531\u4e8e\u65f6\u95f4\u4ed3\u4fc3\uff0c\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\u6709\uff1a \u6807\u70b9\u7b26\u53f7\u5168\u89d2\u3001\u534a\u89d2\u95ee\u9898 \u82f1\u6587\u5355\u8bcd\u6ca1\u6709\u5408\u9002\u7684\u7a7a\u683c\uff0c\u5bfc\u81f4\u6392\u7248\u6548\u679c\u53d7\u5230\u5f71\u54cd \u5176\u5b83\u95ee\u9898\u53ef\u4ee5\u8054\u7cfb\u4f5c\u8005\u5fae\u4fe1\uff1ashaogefenhao\uff0c\u8c22\u8c22\uff01","title":"\u300aJava \u7814\u53d1\u81ea\u6d4b\u300b"},{"location":"01-self-testing-fundamentals/","text":"\u7b2c 1 \u7ae0 \u7814\u53d1\u81ea\u6d4b\u57fa\u7840 \u8f6f\u4ef6\u6d4b\u8bd5\u662f\u4e00\u4e2a\u975e\u5e38\u4e13\u4e1a\u7684\u9886\u57df\uff0c\u751a\u81f3\u6709\u4e00\u4e9b\u5927\u5b66\u4e5f\u8bbe\u7f6e\u4e86\u8f6f\u4ef6\u6d4b\u8bd5\u8bfe\u7a0b\u3002\u867d\u7136\u5927\u591a\u6570\u8f6f\u4ef6\u516c\u53f8\u90fd\u4f1a\u8bbe\u7f6e\u8f6f\u4ef6\u6d4b\u8bd5\u7c7b\u7684\u5c97\u4f4d\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\u4f18\u79c0\u7684\u7814\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u4fdd\u8bc1\u8f6f\u4ef6\u8d28\u91cf\u4e5f\u5e94\u8be5\u662f\u4efd\u5185\u7684\u4e8b\u60c5\u3002 \u7814\u53d1\u4eba\u5458\u5982\u679c\u4ece\u7814\u53d1\u7684\u89d2\u5ea6\u5173\u6ce8\u6d4b\u8bd5\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u4e00\u4e01\u70b9\u6295\u5165\uff0c\u5c31\u53ef\u4ee5\u6362\u53d6\u5de8\u5927\u7684\u4ef7\u503c\u3002\u56e0\u4e3a\u7814\u53d1\u4eba\u5458\u719f\u6089\u6280\u672f\u65b9\u6848\u3001\u7f16\u7801\u7684\u7ec6\u8282\uff0c\u751a\u81f3\u6240\u6709\u7684\u5206\u652f\u6d41\u7a0b\uff0c\u4e14\u4e86\u89e3\u57fa\u672c\u7684\u6d4b\u8bd5\u6982\u5ff5\uff0c\u5728\u672c\u5730\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5c31\u80fd\u53d1\u73b0\u5927\u91cf\u7684\u95ee\u9898\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u53cd\u590d\u79fb\u4ea4\u6d4b\u8bd5\u7b49\u6d41\u7a0b\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u6548\u7387\u3002\u53e6\u5916\uff0c\u7f16\u5199\u51fa\u9ad8\u8d28\u91cf\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u7ed9\u7814\u53d1\u4eba\u5458\u5e26\u6765\u6ee1\u8db3\u611f\u548c\u4fe1\u5fc3\uff0c\u907f\u514d\u4e86\u53cd\u590d\u8c03\u8bd5\u3002\u800c\u4e14\u4ea4\u4ed8\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u540e\uff0c\u7814\u53d1\u4eba\u5458\u4e5f\u53ef\u4ee5\u66f4\u597d\u5730\u96c6\u4e2d\u7cbe\u529b\u8fdb\u884c\u4e0b\u4e00\u6bb5\u7a0b\u5e8f\u7684\u5f00\u53d1\uff0c\u907f\u514d\u4e86\u56e0\u4e3a\u88ab\u6253\u65ad\u800c\u9020\u6210\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u5e26\u6765\u7684\u7cbe\u529b\u6d88\u8017\u3002 \u672c\u7ae0\u4f1a\u4ecb\u7ecd\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5\u548c\u77e5\u8bc6\uff0c\u7531\u4e8e\u672c\u4e66\u662f\u9762\u5411\u7814\u53d1\u4eba\u5458\u7684\uff0c\u56e0\u6b64\u5728\u5185\u5bb9\u7ec4\u7ec7\u4e0a\u4f1a\u4e3b\u8981\u5173\u6ce8\u5728\u767d\u76d2\u6d4b\u8bd5\u4e0a\u3002 \u672c\u7ae0\u6db5\u76d6\u7684\u5185\u5bb9\u4ee5\u53ca\u5b66\u4e60\u76ee\u6807\u5982\u4e0b\uff1a \u4e86\u89e3\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u57fa\u672c\u6982\u5ff5\u3002 \u7406\u89e3\u5e38\u89c1\u7684\u6d4b\u8bd5\u5206\u7c7b\u3002 \u638c\u63e1\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u7684\u4e00\u822c\u65b9\u6cd5\u3002 \u4e86\u89e3\u54ea\u4e9b\u7c7b\u578b\u7684\u6d4b\u8bd5\u9002\u5408\u7814\u53d1\u4eba\u5458\u81ea\u6d4b\u5b8c\u6210\u3002 \u4e00\u4e9b\u51c6\u5907\u6d4b\u8bd5\u6570\u636e\u7684\u6280\u5de7\u3002 1.1 \u8f6f\u4ef6\u6d4b\u8bd5\u7684\u57fa\u672c\u6982\u5ff5 \u8f6f\u4ef6\u6d4b\u8bd5\u662f\u4e00\u9879\u4e13\u4e1a\u7684\u5de5\u4f5c\uff0c\u91cc\u9762\u6d89\u53ca\u4e00\u4e9b\u4e13\u4e1a\u672f\u8bed\u548c\u6982\u5ff5\uff0c\u4e86\u89e3\u5b83\u4eec\u53ef\u4ee5\u66f4\u597d\u5730\u4e0e\u8d28\u91cf\u5de5\u7a0b\u5e08\u6c9f\u901a\uff0c\u672c\u8282\u5c06\u7cbe\u9009\u90e8\u5206\u6982\u5ff5\u8fdb\u884c\u89e3\u91ca\uff0c\u8fd9\u4e9b\u6982\u5ff5\u662f\u4e86\u89e3\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u57fa\u7840\u3002 1.1.1 \u8f6f\u4ef6\u6d4b\u8bd5 \u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u7684\u5f88\u591a\u6982\u5ff5\u6765\u81ea\u4f20\u7edf\u7684\u5de5\u7a0b\u884c\u4e1a\uff0c\u6d4b\u8bd5\uff08Testing\uff09\u662f\u4e00\u79cd\u68c0\u9a8c\u4ea7\u54c1\u8d28\u91cf\u7684\u6d3b\u52a8\u3002\u56e0\u6b64\uff0c\u901a\u5e38\u610f\u4e49\u4e0a\u7684\"\u8f6f\u4ef6\u6d4b\u8bd5\"\u88ab\u5b9a\u4e49\u4e3a\u7279\u5b9a\u73af\u5883\u4e0b\u68c0\u67e5\u8f6f\u4ef6\u662f\u5426\u5b58\u5728\u9519\u8bef\uff0c\u4ee5\u53ca\u80fd\u5426\u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\u548c\u8bbe\u8ba1\u7684\u6d3b\u52a8\u6216\u8fc7\u7a0b\u3002 \u4f46\u662f\u8f6f\u4ef6\u7684\u542b\u4e49\u4e0d\u4ec5\u4ec5\u662f\u7a0b\u5e8f\u672c\u8eab\uff0c\u8fd8\u5305\u62ec\u6587\u6863\u3001\u6570\u636e\u548c\u5176\u4ed6\u57fa\u7840\u8bbe\u65bd\uff0c\u56e0\u6b64\u5bf9\u8f6f\u4ef6\u8d28\u91cf\u7684\u4fdd\u8bc1\u5e76\u6ca1\u6709\u5c40\u9650\u4e8e\u4ee3\u7801\u672c\u8eab\u3002\u8fd9\u4e5f\u662f\u8d8a\u6765\u8d8a\u591a\u7684\u516c\u53f8\u5c06\u6d4b\u8bd5\u5de5\u7a0b\u5e08\uff08Software Test Engineer\uff09\u7684\u5c97\u4f4d\u8f6c\u53d8\u4e3a\u8d28\u91cf\u5de5\u7a0b\u5e08 \uff08Quality Assurance\uff09\u7684\u539f\u56e0\u3002 \u7531\u4e8e\u5bf9\u8f6f\u4ef6\u7684\u4fee\u6539\u4f34\u968f\u7740\u6574\u4e2a\u8f6f\u4ef6\u751f\u547d\u5468\u671f\uff0c\u4e1a\u754c\u5f00\u59cb\u63d0\u5021\u5168\u6d41\u7a0b\u6d4b\u8bd5\uff0c\u6216\u8005\u53eb\u5168\u751f\u547d\u5468\u671f\u8d28\u91cf\u4fdd\u8bc1\u3002\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u6216\u8005\u7279\u5b9a\u7c7b\u578b\u7684\u6d4b\u8bd5\u53ea\u662f\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u4e00\u5c0f\u90e8\u5206\u3002 \u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u65e0\u8bba\u91c7\u7528\u7684\u662f\u7011\u5e03\u5f00\u53d1\u6a21\u5f0f\u8fd8\u662f\u654f\u6377\u5f00\u53d1\u6a21\u5f0f\uff0c\u90fd\u4f1a\u5b58\u5728\u9700\u6c42\u5206\u6790\u3001\u8bbe\u8ba1\u3001\u7f16\u7801\u3001\u6d4b\u8bd5\u3001\u8fd0\u884c\u7b49\u8fc7\u7a0b\u3002\u5728\u57fa\u4e8e\u5168\u6d41\u7a0b\u6d4b\u8bd5\u7684\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u6d4b\u8bd5\u7c7b\u578b\u88ab\u63d0\u51fa\u6765\uff0c\u6bd4\u5982\u9700\u6c42\u6d4b\u8bd5\u3001\u67b6\u6784\u6d4b\u8bd5\u3001\u8bbe\u8ba1\u6d4b\u8bd5\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u7b49\u3002 \u4e0d\u4ec5\u4ec5\u662f\u6d4b\u8bd5\u4eba\u5458\u9700\u8981\u5173\u6ce8\u6d4b\u8bd5\u7ed3\u679c\uff0c\u6574\u4e2a\u56e2\u961f\u90fd\u9700\u8981\u5bf9\u8d28\u91cf\u8d1f\u8d23\u3002\u56e2\u961f\u5de5\u7a0b\u80fd\u529b\u5305\u542b\u4e86\u5bf9\u8f6f\u4ef6\u8d28\u91cf\u7684\u8981\u6c42\uff0c\u53ef\u4ee5\u53c2\u8003\u80fd\u529b\u6210\u719f\u5ea6\u6a21\u578b\u96c6\u6210\u7684\u63cf\u8ff0\u3002 \u80fd\u529b\u6210\u719f\u5ea6\u6a21\u578b\u96c6\u6210\uff08CMMI\uff09\u662f\u4e00\u4e2a\u7ec4\u7ec7\u8fc7\u7a0b\u6539\u8fdb\u6846\u67b6\uff0cCMMI \u4e2d\u7684\u4e0d\u540c\u7b49\u7ea7\u63cf\u8ff0\u4e86\u4e0d\u540c\u5c42\u6b21\u7684\u8f6f\u4ef6\u5f00\u53d1\u80fd\u529b\uff0c\u4e5f\u5c31\u662f\u8f6f\u4ef6\u5de5\u7a0b\u6210\u719f\u5ea6\u3002CMMI \u5bf9\u8f6f\u4ef6\u8d28\u91cf\u63d0\u51fa\u4e86\u8981\u6c42\uff0c\u8fd9\u4e9b\u8981\u6c42\u4e5f\u662f\u5f88\u591a\u516c\u53f8\u5bf9\u8d28\u91cf\u5de5\u7a0b\u5e08\u7684\u8bc9\u6c42\u3002 \u6b64\u5916\uff0c\u60f3\u8981\u4fdd\u8bc1\u8f6f\u4ef6\u7684\u8d28\u91cf\uff0c\u5bf9\u8f6f\u4ef6\u6d4b\u8bd5\u548c\u5f00\u53d1\u8fc7\u7a0b\u7684\u5ea6\u91cf\u4e5f\u975e\u5e38\u91cd\u8981\uff0c\u9664\u4e86\u6d4b\u8bd5\u672c\u8eab\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u5229\u7528\u7edf\u8ba1\u6280\u672f\u5bf9\u6d4b\u8bd5\u7684\u7ed3\u679c\u8fdb\u884c\u91cf\u5316\u3002\u8fd9\u79cd\u4ece\u6d4b\u8bd5\u4eba\u5458\u5173\u6ce8\u6d4b\u8bd5\uff0c\u5230\u56e2\u961f\u5173\u6ce8\u6d4b\u8bd5\u7684\u8f6c\u53d8\uff0c\u8ba9\u8f6f\u4ef6\u6d4b\u8bd5\u4ece\u4f5c\u574a\u5f0f\u7684\u5b9a\u6027\u64cd\u4f5c\uff0c\u8f6c\u53d8\u4e3a\u79d1\u5b66\u7684\u5b9a\u91cf\u64cd\u4f5c\u3002\u8d28\u91cf\u7684\u5ea6\u91cf\u6307\u6807\u548c\u65b9\u6cd5\u975e\u5e38\u591a\u6837\uff0c\u6bd4\u5982\u6709\u6d4b\u8bd5\u8986\u76d6\u7387\u3001\u6bcf\u5343\u884c\u4ee3\u7801\u7684\u7f3a\u9677\u7387\u7b49\u6307\u6807\u3002\u8d28\u91cf\u7684\u5ea6\u91cf\u6307\u6807\u53ef\u4ee5\u540c\u6bd4\u6216\u8005\u73af\u6bd4\u8f6f\u4ef6\u8d28\u91cf\u7684\u53d8\u5316\u3002 \u4e3a\u786e\u4fdd\u5728\u8f6f\u4ef6\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u5bf9\u9700\u6c42\u3001\u5f00\u53d1\u3001\u8fd0\u7ef4\u7684\u8d28\u91cf\u8fdb\u884c\u6d4b\u8bd5\u548c\u9a8c\u8bc1\uff0c\u5408\u7406\u7684\u5206\u6790\u548c\u89c4\u5212\u5fc5\u4e0d\u53ef\u5c11\u3002\u8fd9\u4e9b\u5206\u6790\u5305\u62ec\u8f6f\u4ef6\u9879\u76ee\u542f\u52a8\u65f6\u671f\u6d4b\u8bd5\u7b56\u7565\u7684\u5236\u5b9a\uff0c\u5bf9\u8bbe\u8ba1\u6307\u6807\u7684\u6838\u5b9a\uff0c\u63d0\u53d6\u9700\u6c42\u4e2d\u7684\u8bbe\u8ba1\u6307\u6807\u7b49\u3002 \u73b0\u4ee3\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u63d0\u5021\u6d4b\u8bd5\u7684\u5de5\u4f5c\u4e0d\u5728\u5f00\u53d1\u5b8c\u6210\u540e\u5f00\u59cb\uff0c\u4e5f\u4e0d\u5728\u8fd0\u8425\u6295\u4ea7\u540e\u7ed3\u675f\u3002\u9879\u76ee\u5f00\u59cb\u65f6\u6d4b\u8bd5\u4eba\u5458\u5c31\u9700\u8981\u53c2\u4e0e\u5bf9\u9700\u6c42\u7684\u9a8c\u8bc1\u548c\u8bc4\u5ba1\uff0c\u56e0\u6b64\u4e5f\u5c31\u884d\u751f\u51fa\u4e86\u6d4b\u8bd5\u5de6\u79fb\u7684\u6982\u5ff5\uff0c\u800c\u5bf9\u8fd0\u8425\u671f\u8d28\u91cf\u63d0\u51fa\u8981\u6c42\uff0c\u5219\u76f8\u5e94\u4ea7\u751f\u4e86\u6d4b\u8bd5\u53f3\u79fb\u7684\u6982\u5ff5\u3002 1.1.2 \u7f3a\u9677 \u5982\u679c\u8f6f\u4ef6\u6ca1\u6709\u6309\u7167\u6211\u4eec\u7684\u671f\u671b\u8fd0\u884c\uff0c\u6211\u4eec\u4f1a\u8bf4\u8f6f\u4ef6\u6709 Bug\u3002Bug \u7684\u539f\u610f\u662f\"\u81ed\u866b\"\uff0c\u8fd9\u4e2a\u540d\u79f0\u7684\u6765\u6e90\u662f\u7ee7\u7535\u5668\u8ba1\u7b97\u673a\u4e2d\u98de\u8fdb\u7684\u4e00\u53ea\u98de\u86fe\u3002 \u88ab\u516c\u8ba4\u4e3a\u4e16\u754c\u4e0a\u6700\u65e9\u4e00\u6279\u7a0b\u5e8f\u5458\u4e2d\u7684\u845b\u4e3d\u4e1d \u00b7 \u970d\u666e\u5973\u58eb\u5728 Mark II \u8ba1\u7b97\u673a\u4e0a\u5de5\u4f5c\u65f6\uff0c\u8bbe\u5907\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u4e86\uff0c\u6574\u4e2a\u56e2\u961f\u90fd\u4e0d\u77e5\u9053\u600e\u4e48\u56de\u4e8b\u3002\u540e\u6765\u7ecf\u8fc7\u6392\u67e5\u53d1\u73b0\u662f\u4e00\u53ea\u98de\u86fe\u98de\u5165\u8bbe\u5907\u5185\u90e8\u5f15\u8d77\u7684\u6545\u969c\uff08Mark II\u662f\u4e00\u53f0\u7ee7\u7535\u5668\u8ba1\u7b97\u673a\uff0c\u5f02\u7269\u7684\u4fb5\u5165\u4f1a\u5bfc\u81f4\u5143\u4ef6\u65e0\u6cd5\u5de5\u4f5c\uff09\u3002\u845b\u4e3d\u4e1d \u00b7\u970d\u666e\u5973\u58eb\u5728\u5979\u7684\u7b14\u8bb0\u4e2d\u8bb0\u5f55\u4e86\u8fd9\u4e2a\u6545\u4e8b\uff0c\u8bf4\u660e\u95ee\u9898\u7684\u6839\u56e0\u662f\u4e00\u4e2a\u866b\u5b50\u5f15\u8d77\u7684\uff0c Bug \u8fd9\u4e2a\u8bcd\u4e5f\u6d41\u4f20\u4e86\u4e0b\u6765\u3002 \u4e0d\u8fc7\u5728\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\uff0c\u66f4\u591a\u4f7f\u7528\u7f3a\u9677\uff08Defeat\uff09\u6765\u63cf\u8ff0\u8f6f\u4ef6\u6ca1\u6709\u6309\u7167\u9884\u671f\u8fd0\u884c\u7684\u73b0\u8c61\u3002\u7f3a\u9677\u63cf\u8ff0\u7684\u4e0d\u4ec5\u4ec5\u662f\u7a0b\u5e8f\u7f16\u7801\u4e0a\u7684\u9519\u8bef\uff0c\u8fd8\u5305\u62ec\u9700\u6c42\u548c\u8bbe\u8ba1\u7684\u4e0d\u5408\u7406\uff0c\u8fd0\u8425\u671f\u95f4\u7684\u914d\u7f6e\u95ee\u9898\uff0c\u4ee5\u53ca\u57fa\u7840\u8bbe\u65bd\u6545\u969c\u7b49\u3002 \u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u7f3a\u9677\u7684\u5f15\u5165\u53ef\u80fd\u4f1a\u53d1\u751f\u5728\u8f6f\u4ef6\u5f00\u53d1\u751f\u547d\u5468\u671f\u7684\u4efb\u4f55\u4e00\u4e2a\u73af\u8282\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b63\u4ea4\u7f3a\u9677\u5206\u7c7b\uff08Orthogonal Defect Classification\uff09\u6cd5\u5212\u5206\u7f3a\u9677\uff0c\u5177\u4f53\u5982\u4e0b\u3002 \u9700\u6c42\u7f3a\u9677\uff1a\u9700\u6c42\u672c\u8eab\u4e0d\u5408\u7406\u6216\u8005\u7f3a\u4e4f\u7cfb\u7edf\u6027\u8003\u8651\uff0c\u9020\u6210\u4e00\u81f4\u6027\u95ee\u9898\u6216\u903b\u8f91\u77db\u76fe\u3002 \u8bbe\u8ba1\u7f3a\u9677\uff1a\u8bbe\u8ba1\u65b9\u6848\u65f6\u672a\u8003\u8651\u5230\u4e00\u4e9b\u573a\u666f\uff0c\u6216\u8005\u5728\u8bbe\u8ba1\u4e0a\u4e0d\u80fd\u6ee1\u8db3\u4e00\u4e9b\u7279\u5b9a\u573a\u666f\uff0c\u9020\u6210\u8f6f\u4ef6\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u95ee\u9898\u3002 \u7f16\u7801\u7f3a\u9677\uff1a\u7531\u4e8e\u5f00\u53d1\u8005\u7684\u758f\u5ffd\u6216\u8005\u5176\u4ed6\u539f\u56e0\uff0c\u5728\u7f16\u7801\u9636\u6bb5\u5f15\u5165\u7684\u7f3a\u9677\u3002 \u914d\u7f6e\u7f3a\u9677\uff1a\u5728\u6295\u5165\u751f\u4ea7\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u914d\u7f6e\u4e0d\u5408\u7406\u6216\u8005\u73af\u5883\u53d1\u751f\u53d8\u5316\u9020\u6210\u7684\u7f3a\u9677\uff0c\u6bd4\u5982\u66f4\u6362\u64cd\u4f5c\u7cfb\u7edf\u540e\u8f6f\u4ef6\u65e0\u6cd5\u517c\u5bb9\u3002 \u4e3a\u4e86\u66f4\u6e05\u6670\u5730\u63cf\u8ff0\u7f3a\u9677\u8fd9\u4e2a\u6982\u5ff5\uff0c\u4eba\u4eec\u533a\u5206\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u6982\u5ff5\u3002 \u7f3a\u9677\uff08Defect\uff09\uff1a\u8f6f\u4ef6\u4ea7\u54c1\u4e2d\u4e0d\u6ee1\u8db3\u8bbe\u8ba1\u9700\u8981\u7684\u90e8\u5206\uff0c\u5b83\u662f\u9759\u6001\u7684\uff0c\u4e00\u76f4\u5b58\u5728\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u901a\u4fd7\u8bf4\u7684 Bug\u3002 \u9519\u8bef\uff08Error\uff09\uff1a\u7a0b\u5e8f\u6267\u884c\u6709\u7f3a\u9677\u7684\u4ee3\u7801\u6216\u8005\u8f93\u5165\u7279\u5b9a\u7684\u6570\u636e\u540e\uff0c\u9020\u6210\u7a0b\u5e8f\u72b6\u6001\u5f02\u5e38\u3002 \u5931\u6548\uff08Failure\uff09\uff1a\u5931\u6548\u662f\u8f6f\u4ef6\u4e0d\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u4f7f\u7528\u8005\u611f\u77e5\u5230\u7684\u72b6\u6001\u3002\u4e00\u4e2a\u8f6f\u4ef6\u53ef\u80fd\u6709\u7f3a\u9677\u4f46\u662f\u4e0d\u4e00\u5b9a\u4f1a\u5e26\u6765\u9519\u8bef\u5e76\u88ab\u611f\u77e5\u5230\uff0c\u5931\u6548\u4e5f\u6709\u53ef\u80fd\u662f\u975e\u7f3a\u9677\u9020\u6210\u7684\uff0c\u6bd4\u5982\u8fd0\u884c\u73af\u5883\u4e0d\u6ee1\u8db3\u8981\u6c42\u7b49\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7f3a\u9677\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u9519\u8bef\uff0c\u7531\u7f3a\u9677\u5bfc\u81f4\u7a0b\u5e8f\u53d1\u751f\u9519\u8bef\uff0c\u53eb\u505a\u7f3a\u9677\u7684\u6fc0\u6d3b\u3002\u7f3a\u9677\u5f80\u5f80\u9700\u8981\u5728\u7279\u5b9a\u7684\u6761\u4ef6\u548c\u573a\u666f\u4e0b\u624d\u4f1a\u88ab\u6fc0\u6d3b\uff0c\u4f8b\u5982\uff0c\u4e00\u4e9b\u7279\u522b\u7684\u8f93\u5165\u6216\u8005\u8fd0\u884c\u73af\u5883\u53d1\u751f\u53d8\u5316\u3002 \u672a\u77e5\u6761\u4ef6\u548c\u573a\u666f\u4e0b\u7684\u7f3a\u9677\u4fee\u590d\u8d77\u6765\u975e\u5e38\u56f0\u96be\uff0c\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u5de5\u4f5c\u5c31\u662f\u5c06\u80fd\u590d\u73b0\u8fd9\u4e9b\u7f3a\u9677\u7684\u573a\u666f\u627e\u51fa\u6765\uff0c\u4ee5\u4fbf\u4e8e\u4fee\u590d\u3002 \u53e6\u5916\uff0c\u73b0\u5728\u4e5f\u6709\u5f88\u591a\u516c\u53f8\u6839\u636e\u4f18\u5148\u7ea7\u548c\u4e25\u91cd\u6027\u5bf9\u5bfc\u81f4\u95ee\u9898\u7684\u7f3a\u9677\u8fdb\u884c\u5206\u7c7b\uff0c\u6bd4\u5982\u5c06\u7f3a\u9677\u5206\u4e3a4\u4e2a\u7ea7\u522b\uff1a P0\u81f4\u547d\uff1a\u975e\u5e38\u4e25\u91cd\u7684\u7ebf\u4e0a\u4e8b\u6545\uff08\u6bd4\u5982\u8ba9\u6574\u4e2a\u7cfb\u7edf\u762b\u75ea\uff09\uff0c\u9700\u8981\u505c\u4e0b\u624b\u4e0a\u7684\u5de5\u4f5c\u7acb\u5373\u4fee\u590d\u3002\u5982\u679c\u4e0d\u80fd\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u4fee\u590d\uff0c\u9700\u8981\u4e0a\u62a5\uff0c\u901a\u8fc7\u5176\u4ed6\u9014\u5f84\u6765\u89e3\u51b3\uff08\u6bd4\u5982\u4f7f\u7528\u5907\u7528\u65b9\u6848\uff09\u3002 P1 \u4e25\u91cd\uff1a\u90e8\u5206\u91cd\u8981\u529f\u80fd\u4e0d\u53ef\u4f7f\u7528\uff0c\u867d\u7136\u4f18\u5148\u7ea7\u6ca1\u6709 P0\u90a3\u4e48\u9ad8\uff0c\u4f46\u662f\u4e5f\u9700\u8981\u7acb\u5373\u4fee\u590d\u5e76\u53d1\u5e03\u8865\u4e01\u3002 P2\u4e00\u822c\uff1a\u6b21\u8981\u529f\u80fd\u4e0d\u53ef\u4f7f\u7528\uff0c\u4f1a\u7ed9\u7528\u6237\u5e26\u6765\u4e0d\u4fbf\uff0c\u4f46\u662f\u7531\u4e8e\u9700\u8981\u5e73\u8861\u6b63\u5e38\u5de5\u4f5c\u8282\u594f\uff0c\u56e0\u6b64\u4e0d\u4f1a\u7acb\u5373\u4fee\u590d\uff0c\u5728\u8fed\u4ee3\u53d1\u5e03\u65f6\u4fee\u590d\u5373\u53ef\u3002 P3 \u8f7b\u5fae\uff1a\u4f1a\u7ed9\u7528\u6237\u5e26\u6765\u4e0d\u4fbf\uff0c\u6216\u8005 UI\u3001\u6587\u6848\u4e0a\u5b58\u5728\u9700\u8981\u8c03\u6574\u7684\u5185\u5bb9\u3002\u5728\u4e0d\u5f71\u54cd\u5f00\u53d1\u8282\u594f\u7684\u524d\u63d0\u4e0b\uff0c\u8fdb\u884c\u4f18\u5316\u5904\u7406\u5373\u53ef\u3002 \u8bf4\u660e\uff1a\u4e0a\u8ff0\u5206\u7c7b\u4e2d\u7684\u5b57\u6bcd P \u662f Priority \u7684\u9996\u5b57\u6bcd\u7f29\u5199\uff0c\u4e2d\u6587\u542b\u4e49\u662f\u4f18\u5148\u7ea7\u3002 1.1.3 \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u7528\u4f8b\uff08Test Case\uff0cTC\uff09\u662f\u4e00\u7ec4\u6d4b\u8bd5\u8f93\u5165\u548c\u9884\u671f\u7684\u96c6\u5408\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5305\u542b\u6d4b\u8bd5\u5185\u5bb9\u9700\u8981\u7684\u8f93\u5165\u4fe1\u606f\u3001\u9884\u671f\u53ca\u7ed3\u679c\uff0c\u4ee5\u53ca\u7279\u5b9a\u7684\u6d4b\u8bd5\u73af\u5883\u3002 \u5728\u4e0d\u540c\u7684\u8f6f\u4ef6\u5f00\u53d1\u6a21\u578b\u4e2d\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5448\u73b0\u7684\u65b9\u5f0f\u4e0d\u540c\u3002\u5728\u7011\u5e03\u6a21\u578b\u4e2d\uff0c\u901a\u5e38\u4f1a\u6709\u5b8c\u5584\u7684\u8868\u683c\u6765\u7ba1\u7406\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u6301\u7eed\u7ef4\u62a4\uff1b\u4f7f\u7528\u654f\u6377\u7684\u65b9\u5f0f\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5f80\u5f80\u8ddf\u968f\u7740\u7528\u6237\u6545\u4e8b\uff08\u7528\u6237\u6545\u4e8b\u662f\u4e00\u79cd\u654f\u6377\u9700\u6c42\u6f84\u6e05\u7684\u65b9\u6cd5\uff0c\u5305\u542b\u53ef\u9a8c\u6536\u7684\u6700\u5c0f\u7279\u6027\u96c6\uff09\uff1bRUP\uff08\u7edf\u4e00\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\uff09\u5219\u8981\u6c42\u6d4b\u8bd5\u7528\u4f8b\u53ef\u4ee5\u8ffd\u6eaf\u9a8c\u8bc1\u7cfb\u7edf\u884c\u4e3a\uff0c\u91c7\u7528\u7c7b\u4f3c\u7011\u5e03\u7684\u65b9\u5f0f\u7ef4\u62a4\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f46\u662f\u6bcf\u4e2a\u8fed\u4ee3\u90fd\u9700\u8981\u66f4\u65b0\uff0c\u5e76\u6301\u7eed\u7ef4\u62a4\u3002 \u6d4b\u8bd5\u7528\u4f8b\u7684\u89c4\u683c\u5728 IEEE \u6807\u51c6\u548c\u56fd\u6807\uff08GB/T\uff09\u4e0a\u90fd\u6709\u88ab\u5b9a\u4e49\u8fc7\uff0c\u4e3b\u8981\u5305\u542b\u5982\u4e0b\u5185\u5bb9\uff1a \u88ab\u6d4b\u8bd5\u7684\u5bf9\u8c61\uff0c\u5bf9\u5e94\u8f6f\u4ef6\u7279\u6027\u6216\u8005\u9700\u6c42\u3002 \u7ed9\u4e88\u7684\u6761\u4ef6\uff0c\u5305\u62ec\u8f93\u5165\u4fe1\u606f\u548c\u6d4b\u8bd5\u73af\u5883\uff0c\u8f93\u5165\u4fe1\u606f\u5305\u542b\u4e86\u6d4b\u8bd5\u6570\u636e\u548c\u64cd\u4f5c\u6b65\u9aa4\uff08\u6267\u884c\u8def\u5f84\uff09\u3002 \u671f\u671b\u7684\u7ed3\u679c\uff0c\u5305\u542b\u8f6f\u4ef6\u7684\u6267\u884c\u9884\u671f\uff0c\u5373\u671f\u5f85\u7684\u7a0b\u5e8f\u8f93\u51fa\u3002 \u5982\u679c\u80fd\u4e25\u683c\u548c\u826f\u597d\u5730\u57fa\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u5b9e\u8df5\uff0c\u53ef\u4ee5\u7528\u8f83\u5c0f\u7684\u6210\u672c\u8986\u76d6\u5927\u91cf\u7684\u6d4b\u8bd5\u573a\u666f\uff0c\u5e76\u80fd\u51c6\u786e\u5730\u8ba9\u95ee\u9898\u91cd\u73b0\u3002 \u5728\u4e00\u4e9b\u56e2\u961f\u4f1a\u4f7f\u7528\u601d\u7ef4\u5bfc\u56fe\u4f5c\u4e3a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f46\u662f\u8fd9\u79cd\u5f62\u5f0f\u6bd4\u8f83\u96be\u4ee5\u7ef4\u62a4\u3002\u8d8a\u6765\u8d8a\u591a\u7684\u516c\u53f8\u4f1a\u521b\u5efa\u81ea\u5df1\u7684\u6d4b\u8bd5\u7ba1\u7406\u5e73\u53f0\uff0c\u601d\u7ef4\u5bfc\u56fe\u5219\u4f5c\u4e3a\u6d4b\u8bd5\u7528\u4f8b\u7684\u8865\u5145\u3002 \u7f16\u5199\u597d\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u9700\u8981\u9075\u5b88\u5982\u4e0b\u7684\u539f\u5219\uff1a \u671f\u671b\u7684\u7ed3\u679c\u53ef\u5224\u5b9a\u3002\u6d4b\u8bd5\u7528\u4f8b\u6709\u660e\u786e\u7684\u5224\u5b9a\u6807\u51c6\uff0c\u6bd4\u5982\u7cfb\u7edf\u767b\u5f55\u6210\u529f\u663e\u793a \"\u767b\u5f55\u6210\u529f\" \u6587\u6848\u4ee5\u53ca\u4e2a\u4eba\u4fe1\u606f\u3002 \u6d4b\u8bd5\u7528\u4f8b\u53ef\u91cd\u590d\u6267\u884c\u3002\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u80fd\u88ab\u53cd\u590d\u6267\u884c\uff0c\u5e76\u4e14\u7ed3\u679c\u4fdd\u6301\u7a33\u5b9a\u3002 \u6d4b\u8bd5\u7528\u4f8b\u5177\u6709\u4ee3\u8868\u6027\u3002\u6d4b\u8bd5\u7528\u4f8b\u7684\u8bbe\u8ba1\u5e94\u8be5\u4ece\u5178\u578b\u5230\u7279\u6b8a\u5ef6\u5c55\uff0c\u5e76\u80fd\u8986\u76d6\u6838\u5fc3\u4e1a\u52a1\u573a\u666f\u3002 \u8ba9\u6d4b\u8bd5\u7528\u4f8b\u5177\u6709\u4ee3\u8868\u6027\u662f\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u7684\u96be\u70b9\uff0c\u8bbe\u8ba1\u8005\u9700\u8981\u4ece\u4e0d\u540c\u7684\u89d2\u5ea6\u9009\u53d6\u6d4b\u8bd5\u573a\u666f\uff0c\u8fbe\u5230\u6700\u4f18\u7684\u6d4b\u8bd5\u6027\u4ef7\u6bd4\u3002\u6709\u4e9b\u516c\u53f8\u4f1a\u628a\u6b63\u5e38\u7684\u6d41\u7a0b\u548c\u7b26\u5408\u9884\u671f\u7684\u7ed3\u679c\u53eb\u505a\u6b63\u5411\u7528\u4f8b\uff0c\u628a\u4e00\u4e9b\u5f02\u5e38\u5904\u7406\u7684\u573a\u666f\u53eb\u505a\u53cd\u5411\u7528\u4f8b\u3002 \u53e6\u5916\u6700\u4e3a\u5173\u952e\u7684\u5730\u65b9\u662f\u8bbe\u8ba1\u6d4b\u8bd5\u6570\u636e\u65f6\uff0c\u9700\u8981\u8003\u8651\u5230\u5927\u91cf\u7684\u8fb9\u754c\u503c\u3002\u8fb9\u754c\u503c\u6307\u7684\u662f\u4ecb\u4e8e\u6b63\u5e38\u6570\u636e\u548c\u9519\u8bef\u6570\u636e\u4e4b\u95f4\u7684\u4e34\u754c\u6570\u636e\uff0c\u6bd4\u5982 0 \u662f\u6b63\u6570\u548c\u6574\u6570\u4e4b\u95f4\u7684\u4e00\u4e2a\u8fb9\u754c\u503c\u3002\u7528\u6237\u8f93\u5165\u5f80\u5f80\u96be\u4ee5\u7a77\u5c3d\uff0c\u501f\u52a9\u8fb9\u754c\u503c\u4f5c\u4e3a\u4ee3\u8868\u6027\u6d4b\u8bd5\u6570\u636e\u662f\u4e00\u79cd\u5e38\u7528\u7684\u65b9\u5f0f\u3002 1.1.4 \u6d4b\u8bd5\u91d1\u5b57\u5854 \u8f6f\u4ef6\u6d4b\u8bd5\u6709\u5f88\u591a\u7c7b\u578b\uff0c\u6d4b\u8bd5\u91d1\u5b57\u5854\u7684\u6838\u5fc3\u7406\u5ff5\u662f\uff1a\u4e0d\u540c\u6d4b\u8bd5\u7c7b\u578b\u7684\u6536\u76ca\u548c\u6027\u4ef7\u6bd4\u662f\u4e0d\u4e00\u6837\u7684\u3002\u5173\u4e8e\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u5206\u7c7b\u4f1a\u5728\u540e\u9762\u9010\u6b65\u8bb2\u89e3\u3002 \u4e3a\u4e86\u53d6\u5f97\u6700\u4f18\u7684\u6d4b\u8bd5\u6548\u679c\uff0c\u5728\u4e0d\u540c\u6027\u4ef7\u6bd4\u7684\u6d4b\u8bd5\u4e0a\u6295\u5165\u7684\u65f6\u95f4\u4e5f\u5e94\u4e0d\u4e00\u6837\u7684\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u57fa\u4e8e\u754c\u9762\u7684\u6d4b\u8bd5\uff0c\u81ea\u52a8\u5316\u96be\u5ea6\u9ad8\uff0c\u4e14\u4e3a\u4e86\u80fd\u8986\u76d6\u66f4\u591a\u7684\u7684\u573a\u666f\uff0c\u5e76\u8ba9\u6d4b\u8bd5\u6b63\u5e38\u8fd0\u884c\uff0c\u9700\u8981\u51c6\u5907\u7684\u6570\u636e\u91cf\u4e5f\u66f4\u591a\uff0c\u76f8\u5e94\u5730\u6295\u5165\u7684\u65f6\u95f4\u4e5f\u4f1a\u8f83\u591a\u3002 \u5355\u5143\u6d4b\u8bd5\u5219\u4e0d\u592a\u4e00\u6837\uff0c\u6d4b\u8bd5\u7684\u76ee\u6807\u66f4\u52a0\u7cbe\u786e\uff0c\u9700\u8981\u51c6\u5907\u7684\u6d4b\u8bd5\u6570\u636e\u91cf\u8f83\u5c11\uff0c\u540c\u65f6\u5355\u5143\u6d4b\u8bd5\u8fd0\u884c\u5f97\u66f4\u5feb\uff0c\u56e0\u6b64\u6295\u5165\u7684\u65f6\u95f4\u8f83\u5c11\u3002 \u5728 \u300aSucceeding with Agile\u300b[^1]\u4e00\u4e66\u4e2d\u63d0\u51fa\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u91d1\u5b57\u5854\uff0c\u5f62\u8c61\u5730\u63cf\u8ff0\u4e86\u754c\u9762\u6d4b\u8bd5\u3001\u670d\u52a1\u6d4b\u8bd5\u548c\u5355\u5143\u6d4b\u8bd5\u7684\u5dee\u5f02\u3002\u56fe 1-1 \u662f\u7b80\u5355\u7684\u6d4b\u8bd5\u91d1\u5b57\u5854\uff0c\u53ef\u4ee5\u7528\u6765\u63cf\u8ff0\u4e0d\u540c\u6d4b\u8bd5\u7c7b\u578b\u7684\u6267\u884c\u901f\u5ea6\u548c\u6d88\u8017\u8d44\u6e90\u7684\u60c5\u51b5\u3002 \u56fe 1-1 \u6d4b\u8bd5\u91d1\u5b57\u5854 \u5b9e\u9645\u4e0a\u6d4b\u8bd5\u91d1\u5b57\u5854\u4e2d\u5c42\u6b21\u7684\u5212\u5206\u53d6\u51b3\u4e8e\u6240\u91c7\u7528\u7684\u6280\u672f\u6808\uff0c\u5e76\u4e0d\u62d8\u6ce5\u4e8e\u56fe1-1\u4e2d\u6240\u793a\u8fd9\u4e09\u5c42\u3002\u5728\u5fae\u670d\u52a1\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u7684\u6d4b\u8bd5\u91d1\u5b57\u5854\u53ef\u4ee5\u63cf\u8ff0\u4e3a\uff1a\u5355\u5143\u6d4b\u8bd5\u3001API \u6d4b\u8bd5\u3001\u754c\u9762\u6d4b\u8bd5\u3002 \u6d4b\u8bd5\u91d1\u5b57\u5854\u7684\u6bcf\u4e00\u5c42\u90fd\u53ef\u4ee5\u9009\u7528\u4e0d\u540c\u7684\u5de5\u5177\u6765\u5b9e\u73b0\u81ea\u52a8\u5316\uff0c\u5728\u540e\u9762\u7684\u5185\u5bb9\u4e2d\uff0c\u4f1a\u9010\u6b65\u4ecb\u7ecd\u4e00\u4e9b\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\u3002 \u6d4b\u8bd5\u91d1\u5b57\u5854\u53ea\u662f\u4e00\u79cd\u5bf9\u6d4b\u8bd5\u5212\u5206\u65b9\u6cd5\u7684\u6a21\u578b\uff0c\u8fd9\u79cd\u6a21\u578b\u53ef\u4ee5\u6709\u975e\u5e38\u591a\u7684\u89e3\u91ca\u548c\u53d8\u79cd\u3002\u5728\u4e00\u4e9b\u6d4b\u8bd5\u91d1\u5b57\u5854\u4e2d\u6211\u4eec\u53ef\u80fd\u4f1a\u770b\u5230\u624b\u5de5\u6d4b\u8bd5\u3001\u9a8c\u6536\u6d4b\u8bd5\u7b49\u5185\u5bb9\uff0c\u4e5f\u53ef\u80fd\u4f1a\u6709\u975e\u5e38\u591a\u5c42\u3002\u6d4b\u8bd5\u91d1\u5b57\u5854\u4e3b\u8981\u5e94\u7528\u4e8e\u654f\u6377\u8fc7\u7a0b\u7684\u6d4b\u8bd5\u5de5\u4f5c\u4e2d\uff0c\u5728\u5176\u4ed6\u7684\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e5f\u4e0d\u540c\u7684\u6d4b\u8bd5\u6a21\u578b\uff0c\u4f8b\u5982 V \u6a21\u578b\u3002 1.1.5 \u6d4b\u8bd5\u7b56\u7565 \u4ece\u6d4b\u8bd5\u91d1\u5b57\u5854\u53c8\u53ef\u4ee5\u5f15\u7533\u51fa\u53e6\u5916\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6d4b\u8bd5\u6982\u5ff5\uff0c\u90a3\u5c31\u662f\u6d4b\u8bd5\u7b56\u7565\u3002\u6d4b\u8bd5\u7b56\u7565\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u9879\u76ee\u6216\u8005\u4ea7\u54c1\u5982\u4f55\u7ec4\u7ec7\u6d4b\u8bd5\u6d3b\u52a8\uff0c\u4ee5\u83b7\u53d6\u6700\u5927\u7684\u4ef7\u503c\u3002 \u5b8c\u6574\u7684\u6d4b\u8bd5\u7b56\u7565\u5c31\u662f\u4e00\u4e2a\u9879\u76ee\u7684\u5b8c\u6574\u6d4b\u8bd5\u6846\u67b6\uff0c\u6db5\u76d6\u4e86\u5173\u4e8e\u8d28\u91cf\u7684\u5404\u65b9\u9762\u6d4b\u8bd5\u6e05\u5355\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684\u5b9e\u65bd\u65b9\u5f0f\u3002\u6d4b\u8bd5\u7b56\u7565\u53ef\u4ee5\u662f\u4e00\u4efd\u8be6\u5c3d\u7684\u6587\u6863\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u56fe\u793a\u6216\u8005\u4e00\u4efd\u7b80\u5355\u7684\u68c0\u67e5\u6e05\u5355\u3002 \u540c\u4e8b\u6797\u51b0\u7389\u8001\u5e08\u5728\u4e00\u6b21\u5206\u4eab\u4e2d\u5c55\u793a\u4e86\u56fe 1-2 \uff08\u4e00\u4efd\u7b80\u5355\u660e\u4e86\u7684\u6d4b\u8bd5\u7b56\u7565\uff09\uff0c\u7528\u4e8e\u8bf4\u660e\u6d4b\u8bd5\u7b56\u7565\u3002\u6b64\u56fe\u63cf\u8ff0\u4e86\u654f\u6377\u56e2\u961f\u6d3b\u52a8\u4e2d\u7684\u6d4b\u8bd5\u5b9e\u8df5\uff0c\u56fe\u4e2d\u5de6\u4e0b\u89d2\u4f7f\u7528\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u8c61\u9650\uff0c\u63cf\u8ff0\u54ea\u4e9b\u6d4b\u8bd5\u5e94\u8be5\u81ea\u52a8\u8fdb\u884c\uff0c\u4e2d\u95f4\u5c55\u793a\u7684\u662f\u4e00\u4e2a\u56db\u5c42\u7684\u6d4b\u8bd5\u91d1\u5b57\u5854\u3002\u6d4b\u8bd5\u91d1\u5b57\u5854\u4e2d\u7684\u6d4b\u8bd5\u5b9e\u8df5\u4e3a\uff1a\u5355\u5143\u6d4b\u8bd5\u3001API \u96c6\u6210\u6d4b\u8bd5\u3001\u7aef\u5230\u7aef\u6d4b\u8bd5\u3001\u63a2\u7d22\u5f0f\u6d4b\u8bd5\u3002 \u56fe 1-2 \u4e00\u4efd\u7b80\u5355\u660e\u4e86\u7684\u6d4b\u8bd5\u7b56\u7565 \u6ce8\uff1a\u56fe\u7247\u6765\u6e90\u4e8e https://www.bylinzi.com/2020/01/10/one-page-test-strategy\u3002 \u6d4b\u8bd5\u7b56\u7565\u4e2d\u9700\u8981\u5305\u542b\u5982\u4e0b\u5185\u5bb9\u3002 \u6d4b\u8bd5\u539f\u5219\uff1a\u6240\u6709\u7684\u5b9e\u8df5\u90fd\u5e94\u8be5\u56f4\u7ed5\u8fd9\u4e2a\u539f\u5219\u5c55\u5f00\uff0c\u6bd4\u5982\"\u56e2\u961f\u4e3a\u8d28\u91cf\u8d1f\u8d23\"\u3002 \u6d4b\u8bd5\u8303\u56f4\uff1a\u529f\u80fd\u7279\u6027\u3001\u6027\u80fd\u3001\u5b89\u5168\u3001\u53ef\u7528\u6027\u3001\u53ef\u9760\u6027\u7b49\u3002 \u6d4b\u8bd5\u65b9\u6cd5\uff1a\u9700\u6c42\u548c\u8bbe\u8ba1\u8bc4\u5ba1\u3001\u9759\u6001\u4ee3\u7801\u5206\u6790\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u3001E2E\u6d4b\u8bd5\u3001\u5b89\u5168\u5efa\u6a21\u3001\u6e17\u900f\u6d4b\u8bd5\u3001\u63a2\u7d22\u6027\u6d4b\u8bd5\u7b49\u3002 \u5982\u679c\u5c06\u6d4b\u8bd5\u7b56\u7565\u5ef6\u5c55\uff0c\u8fd8\u53ef\u4ee5\u5305\u62ec\u5404\u9879\u8f6f\u4ef6\u8d28\u91cf\u5ea6\u91cf\u7684\u5185\u5bb9\u7b49\u3002 1.1.6 \u6d4b\u8bd5\u5de6\u79fb\u548c\u6d4b\u8bd5\u53f3\u79fb \u8fd9\u662f\u4e24\u4e2a\u6bd4\u8f83\u65b0\u7684\u6982\u5ff5\uff0c\u5728\u4f20\u7edf\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u6559\u7a0b\u4e2d\u6709\u7c7b\u4f3c\u7684\u6982\u5ff5\uff0c\u4f46\u662f\u53eb\u6cd5\u4e0d\u540c\u3002 \u6d4b\u8bd5\u5de6\u79fb\u662f\u6307\u5728\u8f6f\u4ef6\u8fdb\u5165\u6d4b\u8bd5\u9636\u6bb5\u4e4b\u524d\u5c31\u4ecb\u5165\u6d4b\u8bd5\uff0cQA\uff08\u6d4b\u8bd5\u4eba\u5458\uff09\u5728\u8bbe\u8ba1\u9636\u6bb5\u5c31\u53c2\u4e0e\uff0c\u5e76\u5bf9\u8bbe\u8ba1\u9636\u6bb5\u7684\u5404\u9879\u6d3b\u52a8\u8fdb\u884c\u8bc4\u4f30\u3002\u5728\u9700\u6c42\u6f84\u6e05\u7684\u65f6\u5019\u5c31\u5e94\u8be5\u53c2\u4e0e\uff0c\u5e76\u5bf9\u9700\u6c42\u3001\u7528\u6237\u6545\u4e8b\u7b49\u8f93\u51fa\u8fdb\u884c\u68c0\u67e5\u3002\u53e6\u5916\uff0c\u5728\u7814\u53d1\u4eba\u5458\u8fdb\u5165\u8bbe\u8ba1\u9636\u6bb5\u540e\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u8f93\u51fa\u7684\u6280\u672f\u65b9\u6848\u8fdb\u884c\u8bc4\u4f30\uff0c\u9a8c\u8bc1\u6280\u672f\u65b9\u6848\u662f\u5426\u80fd\u6ee1\u8db3\u8bbe\u8ba1\u76ee\u6807\u3002\u6d4b\u8bd5\u5de6\u79fb\u8fd8\u53ef\u4ee5\u63d0\u524d\u51c6\u5907\u7528\u4f8b\u548c\u6d4b\u8bd5\u73af\u5883\uff0c\u8c03\u6574\u6d4b\u8bd5\u65b9\u6848\u4ee5\u5177\u5907\u66f4\u597d\u7684\u6d4b\u8bd5\u6027\u3002 \u6d4b\u8bd5\u53f3\u79fb\u662f\u6307\u8f6f\u4ef6\u8fdb\u5165\u53d1\u5e03\u9636\u6bb5\u540e\u4e5f\u9700\u8981 QA \u53c2\u4e0e\uff0c\u8f6f\u4ef6\u53d1\u5e03\u540e QA \u9700\u8981\u6301\u7eed\u5173\u6ce8\u7ebf\u4e0a\u9884\u8b66\u548c\u76d1\u63a7\uff0c\u53ca\u65f6\u53d1\u73b0\u95ee\u9898\uff0c\u5e76\u5c1d\u8bd5\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u91cd\u73b0\u3002\u8fd9\u6837 QA \u5c31\u53ef\u4ee5\u9a71\u52a8\u7814\u53d1\u4eba\u5458\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u8003\u8651\u63a5\u5165\u76d1\u63a7\u3001\u544a\u8b66\u7b49\u57fa\u7840\u8bbe\u65bd\uff0c\u5f00\u53d1\u56e2\u961f\u9700\u8981\u6bd4\u5e02\u573a\u3001\u4e1a\u52a1\u65b9\u4ee5\u53ca\u7528\u6237\u66f4\u5feb\u5730\u53d1\u73b0\u95ee\u9898\uff0c\u5e76\u5236\u5b9a\u89e3\u51b3\u63aa\u65bd\u3002 \u6d4b\u8bd5\u5de6\u79fb\u548c\u6d4b\u8bd5\u53f3\u79fb\u542c\u8d77\u6765\u6bd4\u8f83\u6666\u6da9\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f QA \u53c2\u4e0e\u654f\u6377\u9879\u76ee\u7684\u5168\u751f\u547d\u5468\u671f\u3002 1.1.7 \u8d28\u91cf\u5ea6\u91cf \u5728\u73b0\u4ee3\u8f6f\u4ef6\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u5ea6\u91cf\u662f\u4e00\u79cd\u975e\u5e38\u91cd\u8981\u7684\u5b9e\u8df5\u3002\u5ea6\u91cf\u53ef\u4ee5\u901a\u8fc7\u7528\u91cf\u5316\u7684\u65b9\u6cd5\u53d6\u4ee3\u5b9a\u6027\u7684\u7ed3\u8bba\uff0c\u6765\u8bc4\u4f30\u8f6f\u4ef6\u7684\u8d28\u91cf\u3001\u8fc7\u7a0b\u548c\u6d4b\u8bd5\u6709\u6548\u6027\u7b49\uff0c\u8ba9\u7ba1\u7406\u5c42\u80fd\u505a\u51fa\u5408\u7406\u7684\u51b3\u7b56\u3002\u5bf9\u4e8e\u4eba\u5458\u914d\u6bd4\u3001\u80fd\u6548\u63d0\u5347\u3001\u7ee9\u6548\u8003\u6838\u7b49\u5404\u4e2a\u65b9\u9762\u90fd\u6709\u4e00\u5b9a\u610f\u4e49\u3002 \u8d28\u91cf\u5ea6\u91cf\u7684\u6307\u6807\u7814\u7a76\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a \u5bf9\u4e8e\u4ea7\u54c1\u7684\u8d28\u91cf\u8fdb\u884c\u8861\u91cf\u3002 \u5bf9\u4e8e\u6d4b\u8bd5\u7684\u6709\u6548\u6027\u8fdb\u884c\u8861\u91cf\u3002 \u5bf9\u4e8e\u6d4b\u8bd5\u7684\u5b8c\u6574\u6027\u8fdb\u884c\u8861\u91cf\u3002 \u5bf9\u4e8e\u6d4b\u8bd5\u8fc7\u7a0b\u548c\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u7684\u5206\u6790\u548c\u6539\u8fdb\u3002 \u5bf9\u4e8e\u666e\u901a\u6d4b\u8bd5\u4eba\u5458\u548c\u7814\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u7279\u522b\u53bb\u8bbe\u8ba1\u8fd9\u4e9b\u5ea6\u91cf\u6307\u6807\uff0c\u53ef\u4ee5\u6839\u636e\u56fd\u9645\u3001\u56fd\u5185\u7684\u6307\u6807\u6807\u51c6\u63d0\u53d6\u4e00\u4e9b\u5408\u9002\u81ea\u5df1\u7684\u6307\u6807\uff0c\u4f5c\u4e3a\u516c\u53f8\u5185\u90e8\u4f7f\u7528\u7684\u5ea6\u91cf\u4f53\u7cfb\u3002 ISO/IEC 9126 \u6807\u51c6\u4ece\u529f\u80fd\u6027\u3001\u53ef\u9760\u6027\u3001\u6613\u7528\u6027\u3001\u6548\u7387\u3001\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u79fb\u690d\u6027\u8fd9 6 \u4e2a\u7279\u6027\u8fdb\u884c\u5ea6\u91cf\uff0c\u548c\u524d\u9762\u5bf9\u7f3a\u9677\u7684\u7406\u89e3\u7c7b\u4f3c\uff0cISO/IEC 9126 \u6807\u51c6\u5c06\u8fd9\u4e9b\u6307\u6807\u5212\u5206\u4e3a\u901a\u7528\u3001\u5185\u90e8\u6307\u6807\u3001\u5916\u90e8\u6307\u6807\u3002\u5185\u90e8\u6307\u6807\u7684\u542b\u4e49\u662f\uff0c\u4fa7\u91cd\u5728\u4ea4\u4ed8\u524d\u7684\u5ea6\u91cf\uff0c\u4e0d\u5173\u6ce8\u7f3a\u9677\u88ab\u6fc0\u6d3b\u7684\u60c5\u51b5\uff0c\u66f4\u52a0\u5173\u6ce8\u8f6f\u4ef6\u7684\u672c\u8d28\u95ee\u9898\u3002 \u5728\u56fd\u5185\u4e5f\u6709\u76f8\u5e94\u7684\u5ea6\u91cf\u4f53\u7cfb\uff0cGB/T \u5ef6\u7528\u4e86 ISO/IEC 9126 \u4e2d\u7684\u6307\u6807\uff0c\u4ece6\u4e2a\u65b9\u9762\u5bf9\u8f6f\u4ef6\u8d28\u91cf\u8fdb\u884c\u8bc4\u4f30\u3002\u5728 \u300aGB/T 32904---2016 \u8f6f\u4ef6\u8d28\u91cf\u91cf\u5316\u8bc4\u4ef7\u89c4\u8303\u300b\u4e2d\uff0c\u8be5\u6587\u6863\u7ed9\u51fa\u4e86\u4e00\u5957\u6839\u636e\u6307\u6807\u8ba1\u7b97\u8f6f\u4ef6\u8d28\u91cf\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u53c2\u8003\u4f7f\u7528\u7684\u6807\u51c6\u4f53\u7cfb\u5982\u56fe 1-3\u6240\u793a\u3002 \u56fe 1-3 GB/T \u6807\u51c6\u4f53\u7cfb \u5bf9\u4e8e\u6d4b\u8bd5\u6709\u6548\u6027\u548c\u5b8c\u6574\u6027\u7684\u8861\u91cf\u53ef\u4ee5\u53c2\u8003\u4e00\u4e9b\u4e3b\u6d41\u8f6f\u4ef6\u516c\u53f8\u7684\u505a\u6cd5\uff0c\u6bd4\u5982\u67d0\u516c\u53f8\u4f1a\u6839\u636e\u5343\u884c\u4ee3\u7801\uff08\u4ee3\u7801\u89c4\u6a21\u4e00\u822c\u4e0d\u4f5c\u4e3a\u552f\u4e00\u624b\u6bb5\uff09\u4e3a\u57fa\u7ebf\u7edf\u8ba1\u4e00\u4e9b\u6d4b\u8bd5\u80fd\u529b\u7684\u6307\u6807\uff1a \u6bcf\u5343\u884c\u7528\u4f8b\u6570\u3002 \u6bcf\u5343\u884c\u7f3a\u9677\u7387\u3002 \u7528\u4f8b\u5e73\u5747\u6267\u884c\u65f6\u95f4\u3002 \u7f3a\u9677\u5e73\u5747\u56de\u5f52\u6b21\u6570\u3002 \u6709\u6548\u7f3a\u9677\u7387\uff08\u7ecf\u8fc7\u786e\u8ba4\u7279\u6027\u63cf\u8ff0\u4e0d\u6e05\u695a\u5bfc\u81f4\u7684\u7f3a\u9677\uff09\u3002 \u901a\u8fc7\u5ea6\u91cf\u540e\uff0c\u4f1a\u6839\u636e\u7f3a\u9677\u7684\u4f18\u5148\u7ea7\u548c\u4e25\u91cd\u7a0b\u5ea6\u8fdb\u884c\u52a0\u6743\u8ba1\u7b97\uff0c\u83b7\u5f97\u6bcf\u4e2a\u7248\u672c\u7684\u8f6f\u4ef6\u8d28\u91cf\u6307\u6570\u3002 \u5728\u5e94\u7528\u6307\u6807\u7684\u65f6\u5019\uff0c\u8fd8\u9700\u8981\u505a\u51fa\u533a\u5206\u3002\u7531\u4e8e\u6709\u4e00\u4e9b\u9879\u76ee\u662f\u5efa\u7acb\u5728\u9057\u7559\u7cfb\u7edf\u4e4b\u4e0a\u7684\uff0c\u5b83\u7684\u5f00\u53d1\u8fc7\u7a0b\u3001\u903b\u8f91\u548c\u5b8c\u5168\u4ece\u5934\u5f00\u59cb\u7684\u9879\u76ee\u5f88\u4e0d\u4e00\u6837\u3002\u56e0\u6b64\u6211\u4eec\u5728\u4f7f\u7528\u8fd9\u4e9b\u6307\u6807\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u7684\u7c7b\u578b\u505a\u51fa\u53d6\u820d\u3002\u6839\u636e\u8f6f\u4ef6\u7cfb\u7edf\u9057\u7559\u7279\u6027\u53ef\u4ee5\u5c06\u9879\u76ee\u5212\u5206\u4e3a\u7eff\u5730\u5de5\u7a0b\u3001\u68d5\u5730\u5de5\u7a0b\u3001\u7ef4\u62a4\u6027\u5de5\u7a0b\u3002 \u7eff\u5730\u5de5\u7a0b\uff1a\u4e00\u9879\u7eff\u5730\u5de5\u7a0b\u53ef\u80fd\u662f\u5728\u5168\u65b0\u7684\u9886\u57df\u4e2d\u5f00\u53d1\uff0c\u4e0d\u9700\u8981\u8003\u8651\u5386\u53f2\u9057\u7559\u95ee\u9898\u3002\u7eff\u5730\u5de5\u7a0b\u5f80\u5f80\u5b58\u5728\u9700\u6c42\u65e0\u6cd5\u6e05\u6670\u63cf\u8ff0\u7279\u6027\uff0c\u6709\u6548\u7f3a\u9677\u7387\u4f4e\uff0c\u7f3a\u9677\u4fee\u590d\u7684\u6210\u672c\u4f4e\uff0c\u7f3a\u9677\u56de\u5f52\u7684\u6548\u7387\u9ad8\u7b49\u7279\u70b9\u3002 \u68d5\u5730\u5de5\u7a0b\uff1a\u6b64\u7c7b\u5de5\u7a0b\u4e2d\u7684\u7cfb\u7edf\u901a\u5e38\u662f\u73b0\u6709\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u6216\u8005\u662f\u5176\u5b50\u7cfb\u7edf\u3002\u9700\u8981\u8003\u8651\u4e0e\u5176\u4ed6\u7cfb\u7edf\uff08\u5c24\u5176\u662f\u4e0e\u5386\u53f2\u9057\u7559\u7cfb\u7edf\uff08Legacy system\uff09\u7684\u96c6\u6210\u95ee\u9898\u3002\u8fd9\u7c7b\u9879\u76ee\u5f80\u5f80\u7f3a\u9677\u56de\u5f52\u6b21\u6570\u9ad8\uff0c\u7f3a\u9677\u7684\u4fee\u590d\u6210\u672c\u5f88\u5927\u3002 \u7ef4\u62a4\u6027\u5de5\u7a0b\uff1a\u6307\u7684\u662f\u4e0d\u518d\u5f00\u53d1\u65b0\u529f\u80fd\u7684\u7cfb\u7edf\uff0c\u53ea\u5b8c\u6210\u7ef4\u62a4\u6027\u5de5\u4f5c\u3002 1.2 \u8f6f\u4ef6\u7684\u6d4b\u8bd5\u5206\u7c7b \u4e0d\u540c\u7ef4\u5ea6\u4e0b\u4eba\u4eec\u5bf9\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u5206\u7c7b\u6781\u4e0d\u4e00\u81f4\u3002\u6bd4\u5982\uff0c\u6839\u636e\u5f00\u53d1\u8fc7\u7a0b\u8fdb\u884c\u5206\u7c7b\uff0c\u8f6f\u4ef6\u7684\u6d4b\u8bd5\u7c7b\u578b\u6709\uff1a\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u3001\u7cfb\u7edf\u6d4b\u8bd5\u548c\u9a8c\u6536\u6d4b\u8bd5\uff0c\u8fd9\u4e9b\u7c7b\u578b\u5206\u522b\u548c\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u5404\u4e2a\u9636\u6bb5\u76f8\u9002\u914d\u3002\u4f46\u662f\u5982\u679c\u4ece\u88ab\u6d4b\u8bd5\u7684\u5bf9\u8c61\u89d2\u5ea6\u6765\u770b\uff0c\u8f6f\u4ef6\u6d4b\u8bd5\u53c8\u53ef\u4ee5\u5206\u4e3a\u9759\u6001\u6d4b\u8bd5\u548c\u52a8\u6001\u6d4b\u8bd5\u3002\u5982\u679c\u662f\u4ee5\u6d4b\u8bd5\u4eba\u5458\u5bf9\u4ee3\u7801\u7684\u4e86\u89e3\u7a0b\u5ea6\u6765\u770b\uff0c\u5219\u53ef\u4ee5\u5206\u4e3a\u767d\u76d2\u6d4b\u8bd5\u3001\u9ed1\u76d2\u6d4b\u8bd5\u3001\u7070\u76d2\u6d4b\u8bd5\u3002\u6839\u636e\u662f\u5426\u662f\u81ea\u52a8\u5316\u8fd0\u884c\u7684\u6d4b\u8bd5\u6765\u533a\u5206\uff0c\u53c8\u53ef\u4ee5\u5206\u4e3a\u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u624b\u5de5\u6d4b\u8bd5\u3002 \u5f53\u7136\u8fd8\u6709\u4e00\u4e9b\u975e\u5e38\u65f6\u9ae6\u7684\u6d4b\u8bd5\u7c7b\u578b\uff0c\u6bd4\u5982\u5951\u7ea6\u6d4b\u8bd5\u3001\u5f39\u73e0\u6d4b\u8bd5\u3001\u5192\u70df\u6d4b\u8bd5\u7b49\u3002\u8fd9\u4e9b\u540d\u76ee\u7e41\u591a\u7684\u6d4b\u8bd5\uff0c\u4f1a\u7ed9\u56e2\u961f\u9020\u6210\u56f0\u6270\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u4e2d\u82f1\u6587\u7ffb\u8bd1\u7684\u539f\u56e0\uff0c\u50cf E2E\u8fd9\u7c7b\u540d\u79f0\u6ca1\u6709\u51c6\u786e\u4e2d\u6587\u542b\u4e49\u7684\u6d4b\u8bd5\uff0c\u66f4\u5bb9\u6613\u8ba9\u56e2\u961f\u6210\u5458\u6478\u4e0d\u7740\u5934\u8111\u3002 \u672c\u4e66\u5c06\u6839\u636e\u524d\u9762\u63d0\u5230\u7684\u6d4b\u8bd5\u7b56\u7565\u548c\u6d4b\u8bd5\u91d1\u5b57\u5854\uff0c\u5e76\u53c2\u8003 GB/T \u7684\u89c4\u8303\uff0c\u5bf9\u4e00\u4e2a\u654f\u6377\u56e2\u961f\u9700\u8981\u8fdb\u884c\u7684\u6d4b\u8bd5\u7c7b\u578b\u8fdb\u884c\u7b80\u5316\u3002\u4e3a\u4e86\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u548c\u8bb0\u5fc6\uff0c\u672c\u4e66\u5c06\u5176\u5206\u4e3a\u529f\u80fd\u6027\u6d4b\u8bd5\u548c\u975e\u529f\u80fd\u6027\u6d4b\u8bd5\u3002 \u6b63\u5982\u5b57\u9762\u4e0a\u7684\u7406\u89e3\uff0c\u529f\u80fd\u6027\u6d4b\u8bd5\u5bf9\u5e94\u7684\u662f\u529f\u80fd\u6027\u7684\u9700\u6c42\uff0c\u9488\u5bf9\u8f6f\u4ef6\u7279\u6027\u7684\u4e1a\u52a1\u76ee\u6807\u548c\u903b\u8f91\u3002\u975e\u529f\u80fd\u6027\u6d4b\u8bd5\uff0c\u9488\u5bf9\u7684\u662f\u975e\u529f\u80fd\u6027\u7684\u8981\u6c42\u3002\u8fd9\u4e9b\u8981\u6c42\u53ef\u80fd\u5728\u4e1a\u52a1\u9700\u6c42\u4e0a\u6ca1\u6709\u505a\u660e\u786e\u7684\u8bf4\u660e\uff0c\u4f46\u662f\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u5219\u4f1a\u7ed9\u8f6f\u4ef6\u4ea4\u4ed8\u5e26\u6765\u5de8\u5927\u7684\u98ce\u9669\u3002 \u529f\u80fd\u6027\u6d4b\u8bd5 \u5355\u5143\u6d4b\u8bd5\u3002 \u96c6\u6210\u6d4b\u8bd5\u3002 \u7cfb\u7edf\u6d4b\u8bd5\u3002 \u9a8c\u6536\u6d4b\u8bd5\u3002 \u975e\u529f\u80fd\u6027\u6d4b\u8bd5 \u9759\u6001\u5206\u6790\u3002 \u5b89\u5168\u6d4b\u8bd5\u3002 \u6027\u80fd\u6d4b\u8bd5\u3002 \u5c31\u4e00\u822c\u7684\u8f6f\u4ef6\u800c\u8a00\uff0c\u4e00\u4e2a\u654f\u6377\u56e2\u961f\u505a\u597d\u8fd9 7 \u9879\u6d4b\u8bd5\u5c31\u80fd\u6db5\u76d6\u7edd\u5927\u90e8\u5206\u6d4b\u8bd5\u9700\u6c42\u3002\u5b9e\u9645\u4e0a\uff0c\u5f88\u591a\u516c\u53f8\u90fd\u6ca1\u6709\u505a\u5230\uff0c\u6216\u8005\u505a\u597d\u8fd9 7 \u7c7b\u6d4b\u8bd5\u3002\u4e0b\u9762\u5c31\u8fd9 7 \u7c7b\u6d4b\u8bd5\u8fdb\u884c\u7b80\u5355\u7684\u4ecb\u7ecd\u3002 1.2.1 \u5355\u5143\u6d4b\u8bd5 \u5355\u5143\u6d4b\u8bd5\uff08Unit Testing\uff09\u662f\u6307\u5bf9\u8f6f\u4ef6\u4e2d\u6700\u5c0f\u53ef\u6d4b\u8bd5\u5355\u5143\u8fdb\u884c\u6d4b\u8bd5\u3002\"\u5355\u5143\"\u7684\u7c92\u5ea6\u5e76\u6ca1\u6709\u4e00\u4e2a\u660e\u786e\u7684\u754c\u9650\uff0c\u7ec6\u7c92\u5ea6\u7684\u5355\u5143\u6d4b\u8bd5\u542b\u4e49\u4e00\u822c\u662f\u5bf9\u65b9\u6cd5\u3001\u7c7b\u7b49\u4ee3\u7801\u7ed3\u6784\u8fdb\u884c\u6d4b\u8bd5\u548c\u9a8c\u8bc1\u3002\u7c97\u7c92\u5ea6\u7684\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u662f\u5bf9\u4e00\u4e2a\u6700\u5c0f\u7684\u8f6f\u4ef6\u7279\u6027\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6839\u636e\u8bbe\u8ba1\u9700\u6c42\u6587\u6863\u6216\u8005\u8bbe\u8ba1\u6587\u6863\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5355\u5143\u6d4b\u8bd5\u5f80\u5f80\u5904\u4e8e\u6d4b\u8bd5\u91d1\u5b57\u5854\u7684\u6700\u4f4e\u7aef\u3002\u56e0\u4e3a\u5355\u5143\u6d4b\u8bd5\u80fd\u900f\u660e\u5730\u9a8c\u8bc1\u65b9\u6cd5\u3001\u7c7b\u8fd9\u4e00\u7c7b\u4ee3\u7801\u7ed3\u6784\uff0c\u56e0\u6b64\u7f16\u5199\u81ea\u52a8\u5316\u8fd0\u884c\u7684\u6d4b\u8bd5\u4e5f\u6bd4\u8f83\u7b80\u5355\u3002\u5728\u76ee\u524d\u7684\u8bed\u4e49\u4e0b\uff0c\u5355\u5143\u6d4b\u8bd5\u9ed8\u8ba4\u6709\u81ea\u52a8\u5316\u8fd0\u884c\u7684\u542b\u4e49\u3002 \u5bf9\u8f6f\u4ef6\u8d28\u91cf\u6765\u8bf4\uff0c\u5355\u5143\u6d4b\u8bd5\u6709\u975e\u5e38\u79ef\u6781\u7684\u4f5c\u7528\uff0c\u662f\u6d4b\u8bd5\u91d1\u5b57\u5854\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\u3002\u901a\u8fc7\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u5c06\u590d\u6742\u7684\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u62c6\u89e3\uff0c\u6bd4\u5982\u4ece\u8f83\u5927\u89c4\u6a21\u7684\u6d4b\u8bd5\u8def\u5f84\u5206\u89e3\u6210\u5c0f\u89c4\u6a21\u7684\u6d4b\u8bd5\u3002\u4e14\u5355\u5143\u6d4b\u8bd5\u7684\u96be\u5ea6\u76f8\u5bf9\u8f83\u5c0f\uff0c\u6d4b\u8bd5\u6548\u7387\u4e5f\u76f8\u5e94\u8f83\u9ad8\u3002\u5355\u5143\u6d4b\u8bd5\u5bf9\u73af\u5883\u8981\u6c42\u4f4e\uff0c\u9694\u79bb\u6027\u597d\uff0c\u4e3a\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u63d0\u4f9b\u4e86\u53ef\u80fd\u6027\u3002 \u53e6\u5916\uff0c\u7814\u53d1\u4eba\u5458\u79ef\u6781\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u5728\u9047\u5230\u95ee\u9898\u65f6\u53ef\u4ee5\u5e2e\u52a9\u5b9a\u4f4d\u7f3a\u9677\u3002 1.2.2 \u96c6\u6210\u6d4b\u8bd5 \u96c6\u6210\u6d4b\u8bd5\uff08Integration Testing\uff09\u662f\u6307\u5728\u5355\u5143\u6d4b\u8bd5\u7684\u57fa\u7840\u4e0a\uff0c\u5bf9\u4e00\u90e8\u5206\u8f6f\u4ef6\u6a21\u5757\u8fdb\u884c\u7ec4\u5408\u6216\u8005\u5728\u7ec4\u88c5\u540e\u8fdb\u884c\u7684\u6d4b\u8bd5\u3002\u5728\u5fae\u670d\u52a1\u65f6\u4ee3\uff0c\u901a\u5e38\u6765\u8bf4\u96c6\u6210\u6d4b\u8bd5\u662f\u5bf9\u4e00\u4e2a\u670d\u52a1\u7684 API \u8fdb\u884c\u6d4b\u8bd5\uff0c\u56e0\u6b64\u5728\u5f88\u591a\u6587\u7ae0\u548c\u4e66\u7c4d\u4e2d\u90fd\u4f1a\u6709 API \u6d4b\u8bd5\u3002\u8bf7\u6ce8\u610f API \u8fd9\u4e2a\u8bcd\u7684\u542b\u4e49\u8fc7\u4e8e\u5e7f\u6cdb\uff0c\u5305\u62ec RESTful API \u548c\u64cd\u4f5c\u7cfb\u7edf\u7b49\u8f6f\u4ef6\u63a5\u53e3\u7684\u6982\u5ff5\uff0c\u9700\u8981\u6839\u636e\u4e0a\u4e0b\u6587\u786e\u5b9a\u542b\u4e49\u3002 \u96c6\u6210\u6d4b\u8bd5\u9700\u8981\u542f\u52a8\u90e8\u5206\u6216\u8005\u6574\u4e2a\u5e94\u7528\u7684\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u76f8\u5bf9\u5355\u5143\u6d4b\u8bd5\u6765\u8bf4\uff0c\u96c6\u6210\u6d4b\u8bd5\u9700\u8981\u51c6\u5907\u7684\u73af\u5883\u66f4\u591a\u3002\u5728\u5fae\u670d\u52a1\u7684\u6280\u672f\u6808\u4e0b\uff0c\u901a\u5e38\u96c6\u6210\u6d4b\u8bd5\u7b49\u540c\u4e8e\u5355\u4e2a\u670d\u52a1\u7684 API \u6d4b\u8bd5\u3002 \u968f\u7740 DevOps \u7684\u53d1\u5c55\uff0c\u6301\u7eed\u96c6\u6210\u7684\u6982\u5ff5\u5f97\u5230\u4e86\u5e7f\u6cdb\u5173\u6ce8\uff0c\u96c6\u6210\u6d4b\u8bd5\u81ea\u7136\u4e5f\u5c31\u975e\u5e38\u91cd\u8981\u4e86\u3002\u597d\u7684\u96c6\u6210\u6d4b\u8bd5\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u670d\u52a1\u90e8\u7f72\u5230\u6d4b\u8bd5\u73af\u5883\u540e\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u4f9d\u8d56\u7684\u670d\u52a1\u3002 \u5728\u4e00\u4e9b\u5927\u7684\u9879\u76ee\u4e2d\uff0c\u670d\u52a1\u4f17\u591a\u4e14\u76f8\u4e92\u4f9d\u8d56\u3002\u65e9\u671f\u7684\u96c6\u6210\u6d4b\u8bd5\u5927\u591a\u662f\u624b\u5de5\u5b8c\u6210\u7684\uff0c\u4f1a\u5728\u96c6\u6210\u6d4b\u8bd5\u65f6\uff0c\u5148\u8fdb\u884c\u4e00\u4e2a\u5feb\u901f\u5730\u5192\u70df\u6d4b\u8bd5\uff08Smoke Testing\uff09\u3002\u5192\u70df\u6d4b\u8bd5\u662f\u5bf9\u8f6f\u4ef6\u7684\u57fa\u672c\u529f\u80fd\u8fdb\u884c\u5feb\u901f\u9a8c\u8bc1\u7684\u8fc7\u7a0b\u3002\u5192\u70df\u6d4b\u8bd5\u6765\u6e90\u4e8e\u65e9\u671f\u786c\u4ef6\u5f00\u53d1\uff0c\u5728\u5bf9\u786c\u4ef6\u7ec4\u4ef6\u66f4\u6539\u540e\u76f4\u63a5\u7ed9\u8bbe\u5907\u901a\u7535\uff0c\u5982\u679c\u6ca1\u6709\u5192\u70df\u5c31\u901a\u8fc7\u6d4b\u8bd5\u3002\u5192\u70df\u6d4b\u8bd5\u7528\u6765\u68c0\u67e5\u4e3b\u8981\u7684\u529f\u80fd\u662f\u5426\u6b63\u5e38\uff0c\u907f\u514d\u56e0\u4e3a\u5176\u4e2d\u4e00\u4e2a\u670d\u52a1\u5f02\u5e38\u800c\u5bf9\u6574\u5957\u6d4b\u8bd5\u73af\u5883\u9020\u6210\u4e2d\u65ad\u3002 \u5728 CI/CD \u53d1\u5c55\u6bd4\u8f83\u597d\u7684\u56e2\u961f\uff0c\u4f1a\u5728\u670d\u52a1\u90e8\u7f72\u5230\u6b63\u5f0f\u7684\u6d4b\u8bd5\u73af\u5883\u524d\uff0c\u5bf9 API \u8fdb\u884c\u81ea\u52a8\u5316\u7684\u6d4b\u8bd5\uff0c\u5982\u679c\u6d4b\u8bd5\u53d1\u73b0\u95ee\u9898\uff0c\u4f1a\u505c\u6b62\u90e8\u7f72\u5230\u6d4b\u8bd5\u73af\u5883\u3002\u96c6\u6210\u6d4b\u8bd5\u7684\u4f9d\u636e\u662f\u6280\u672f\u8bbe\u8ba1\u6587\u6863\uff0c\u6bd4\u5982 API \u8bbe\u8ba1\u7b49\u6750\u6599\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7814\u53d1\u4eba\u5458\u4e5f\u4f1a\u53c2\u4e0e\u96c6\u6210\u6d4b\u8bd5\uff0c\u6216\u8005\u662f\u5728\u7814\u53d1\u4eba\u5458\u7684\u914d\u5408\u4e0b\u7531 QA \u5b8c\u6210\u96c6\u6210\u6d4b\u8bd5\u3002 1.2.3 \u7cfb\u7edf\u6d4b\u8bd5 \u7cfb\u7edf\u6d4b\u8bd5\uff08System Testing\uff09\u662f\u6307\u5bf9\u5b8c\u6574\u7684\u8f6f\u4ef6\u4ea7\u54c1\u8fdb\u884c\u7aef\u5230\u7aef\u7684\u6d4b\u8bd5\uff0c\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u7b49\u540c\u4e8eE2E \u6d4b\u8bd5\u3002 \u7cfb\u7edf\u6d4b\u8bd5\u9700\u8981\u642d\u5efa\u5b8c\u6574\u7684\u73af\u5883\uff0c\u4ee5\u4fbf\u5728\u771f\u5b9e\u6216\u8005\u6a21\u62df\u7cfb\u7edf\u7684\u73af\u5883\u4e0b\u5bf9\u8f6f\u4ef6\u8fdb\u884c\u9a8c\u8bc1\uff0c\u786e\u8ba4\u662f\u5426\u8fbe\u5230\u8bbe\u8ba1\u76ee\u6807\u3002\u9700\u8981\u914d\u7f6e\u7684\u5b8c\u6574\u7684\u8f6f\u786c\u4ef6\u73af\u5883\u548c\u57fa\u7840\u8bbe\u65bd\u5305\u62ec\u6570\u636e\u5e93\u3001\u7f51\u7edc\u8fde\u63a5\u3001DNS\u7b49\u3002 \u7cfb\u7edf\u6d4b\u8bd5\u5f80\u5f80\u662f\u9ed1\u76d2\u6d4b\u8bd5\uff0c\u6b64\u6d4b\u8bd5\u4f1a\u6a21\u62df\u6b63\u5e38\u7684\u7528\u6237\u5728\u4f7f\u7528\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u65f6\u7684\u5404\u79cd\u64cd\u4f5c\u3002\u7cfb\u7edf\u6d4b\u8bd5\u4e0d\u4ec5\u8981\u53d1\u73b0\u7f3a\u9677\uff0c\u8fd8\u5e94\u8be5\u63d0\u51fa\u4e0d\u9650\u4e8e\u9700\u6c42\u89c4\u683c\u8303\u56f4\u7684\u53cd\u9988\uff0c\u751a\u81f3\u8fd8\u5305\u62ec\u4e00\u4e9b\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u7684\u4fbf\u5229\u6027\u95ee\u9898\u3002 \u7cfb\u7edf\u6d4b\u8bd5\u7684\u4f9d\u636e\u662f\u9700\u6c42\u6587\u6863\uff0c\u5305\u62ec QA \u5728\u9700\u6c42\u6f84\u6e05\u9636\u6bb5\u7684\u4efb\u4f55\u8f93\u5165\u3002 1.2.4 \u9a8c\u6536\u6d4b\u8bd5 \u9a8c\u6536\u6d4b\u8bd5\uff08Acceptance Testing\uff09\u662f\u6307\u5728\u8f6f\u4ef6\u5f00\u53d1\u540e\u671f\uff0c\u9700\u6c42\u7684\u63d0\u51fa\u65b9\u5bf9\u8f6f\u4ef6\u8fdb\u884c\u9a8c\u6536\u786e\u8ba4\u65f6\u8fdb\u884c\u7684\u6d4b\u8bd5\u3002 \u5982\u679c\u662f\u8f6f\u4ef6\u4ea4\u4ed8\u6027\u8d28\u7684\u9879\u76ee\uff0c\u7532\u65b9\u5f80\u5f80\u4f1a\u6d3e\u51fa\u6d4b\u8bd5\u4e13\u5bb6\uff0c\u4ece\u7528\u6237\u7684\u89d2\u5ea6\u8fdb\u884c\u6d4b\u8bd5\uff0c\u786e\u8ba4\u662f\u5426\u6ee1\u8db3\u9700\u6c42\u89c4\u683c\u3002\u5728\u4e92\u8054\u7f51\u6216\u8005\u5176\u4ed6\u4ea7\u54c1\u578b\u7684\u516c\u53f8\uff0c\u9a8c\u6536\u6d4b\u8bd5\u5219\u662f\u4ea7\u54c1\u4e0a\u7ebf\u6216\u8005\u8f6f\u4ef6\u53d1\u5e03\u540e\uff0c\u7531\u4e1a\u52a1\u65b9\u5728\u771f\u5b9e\u7684\u73af\u5883\u4e0b\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5bf9\u4e00\u4e2a\u5728\u8fd0\u884c\u4e2d\u7684\u4e92\u8054\u7f51\u4ea7\u54c1\u6765\u8bf4\uff0c\u9a8c\u6536\u6d4b\u8bd5\u9700\u8981\u5f97\u5230\u7279\u522b\u7684\u6388\u6743\u3002\u56e0\u4e3a\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u4e00\u822c\u4f1a\u4ea7\u751f\u6570\u636e\u6216\u8005\u7559\u4e0b\u75d5\u8ff9\uff0c\u5728\u6709\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8003\u8651\u6e05\u7406\u6216\u8005\u9690\u85cf\u8fd9\u4e9b\u4fe1\u606f\u3002 1.2.5 \u9759\u6001\u5206\u6790 \u8f6f\u4ef6\u7684\u9759\u6001\u5206\u6790\uff08Static Analysis\uff09\u662f\u6307\u5bf9\u8f6f\u4ef6\u7684\u5404\u79cd\u7ed3\u6784\u548c\u6210\u5206\u8fdb\u884c\u626b\u63cf\uff0c\u63d0\u524d\u53d1\u73b0\u95ee\u9898\uff0c\u5b83\u901a\u5e38\u88ab\u4f5c\u4e3a\u6d4b\u8bd5\u7684\u8865\u5145\u3002\u9759\u6001\u5206\u6790\u4e00\u822c\u90fd\u662f\u7528\u81ea\u52a8\u5316\u7684\u5de5\u5177\u6216\u8005\u5e73\u53f0\u5728\u65e5\u5e38\u8fdb\u884c\u626b\u63cf\u548c\u76d1\u6d4b\u7684\u3002 \u5fb7\u56fd\u98de\u673a\u6da1\u8f6e\u673a\u7684\u53d1\u660e\u8005\u5e15\u5e03\u65af\u00b7\u6d77\u6069\u63d0\u51fa\u7684\u4e00\u4e2a\u5728\u822a\u7a7a\u754c\u5173\u4e8e\u98de\u884c\u5b89\u5168\u7684\u6cd5\u5219\uff0c\u6cd5\u5219\u6307\u51fa\uff1a\u6bcf\u4e00\u8d77\u4e25\u91cd\u4e8b\u6545\u7684\u80cc\u540e\uff0c\u5fc5\u7136\u6709 29 \u6b21\u8f7b\u5fae\u4e8b\u6545\u548c 300 \u8d77\u672a\u9042\u5148\u5146\u4ee5\u53ca 1000 \u8d77\u4e8b\u6545\u9690\u60a3\u3002\u5e94\u7528\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u9879\u76ee\u4e2d\u4ee3\u7801\u6df7\u4e71\u4e0d\u582a\uff0c\u5fc5\u7136\u4f1a\u5728\u67d0\u4e2a\u65f6\u5019\u7206\u53d1\u5927\u91cf\u7684\u95ee\u9898\u3002 \u9759\u6001\u5206\u6790\u7684\u76ee\u7684\u5c31\u662f\u901a\u8fc7\u626b\u63cf\u7684\u624b\u6bb5\u53d1\u73b0\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u901a\u7528\u95ee\u9898\uff0c\u6216\u8005\u627e\u51fa\u8fdd\u53cd\u7f16\u7801\u3001\u5b89\u5168\u89c4\u8303\u7684\u4ee3\u7801\u3002\u5e38\u89c1\u7684\u626b\u63cf\u5de5\u5177\u5982\u4e0b\u3002 Checkstyle\uff1aJava \u4ee3\u7801\u98ce\u683c\u626b\u63cf\u3002 FindBugs\uff1a\u4ece\u4ee3\u7801\u6a21\u5f0f\u4e0a\u53d1\u73b0\u6f5c\u5728\u95ee\u9898\u3002 ArchUnit\uff1a\u67b6\u6784\u89c4\u8303\u626b\u63cf\uff0c\u9a8c\u8bc1\u8f6f\u4ef6\u5305\u7684\u7ec4\u7ec7\u5408\u7406\u6027\u3002 OWASP Dependency-Track\uff1a\u5bf9\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u548c\u5e93\u8fdb\u884c\u68c0\u67e5\uff0c\u53d1\u73b0\u662f\u5426\u5b58\u5728\u5b89\u5168\u98ce\u9669\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u5e02\u9762\u4e0a\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u626b\u63cf\u5de5\u5177\uff0c\u6bd4\u5982\uff1aPMD\u3001FortifySCA\u8fd9\u4e9b\u90fd\u5c5e\u4e8e\u9759\u6001\u5206\u6790\u7684\u5185\u5bb9\u3002 1.2.6 \u5b89\u5168\u6d4b\u8bd5 \u5b89\u5168\u6d4b\u8bd5\uff08Security Testing\uff09\u662f\u6307\u5bf9\u7cfb\u7edf\u7684\u5b89\u5168\u8981\u6c42\u8fdb\u884c\u9a8c\u8bc1\u7684\u4e00\u7c7b\u6d4b\u8bd5\u3002\u5b89\u5168\u6d4b\u8bd5\u9488\u5bf9\u7684\u662f\u4ee3\u7801\u6267\u884c\u3001\u547d\u4ee4\u6267\u884c\u3001\u75c5\u6bd2\u690d\u5165\u3001\u7aef\u53e3\u626b\u63cf\u3001DoS\u653b\u51fb\u3001SQL\u6ce8\u5165\u653b\u51fb\u3001CSRF\u653b\u51fb\u3001XSS\u653b\u51fb\u3001\u6570\u636e\u904d\u5386\u3001\u8d8a\u6743\u3001\u8ba4\u8bc1\u7ed5\u8fc7\u3001\u91d1\u989d\u7be1\u6539\u7b49\u5b89\u5168\u95ee\u9898\u7684\u6d4b\u8bd5\u3002 \u7531\u4e8e\u4e92\u8054\u7f51\u9879\u76ee\u4f1a\u5c06\u7528\u6237\u4fe1\u606f\u66b4\u9732\u5230\u516c\u7f51\uff0c\u8fd1\u4e9b\u5e74\u6765\u4f01\u4e1a\u5bf9\u5b89\u5168\u6d4b\u8bd5\u7684\u8981\u6c42\u53c8\u6709\u4e00\u5b9a\u63d0\u9ad8\uff0c\u6570\u636e\u9690\u79c1\u3001\u5a01\u80c1\u5efa\u6a21\u4e5f\u90fd\u88ab\u5305\u542b\u5728\u5b89\u5168\u6d4b\u8bd5\u7684\u9886\u57df\u3002 \u6570\u636e\u9690\u79c1\u662f\u6307\u8f6f\u4ef6\u7cfb\u7edf\u5728\u4f7f\u7528\u7528\u6237\u7684\u4fe1\u606f\u65f6\uff0c\u9700\u8981\u6ee1\u8db3\u5f53\u5730\u6cd5\u5f8b\u5408\u89c4\u7684\u8981\u6c42\uff0c\u4e14\u5e94\u5c3d\u529b\u4fdd\u62a4\u7528\u6237\u7684\u9690\u79c1\u6570\u636e\u3002 \u5a01\u80c1\u5efa\u6a21\u662f\u901a\u8fc7\u4e00\u4e9b\u5efa\u6a21\u5de5\u5177\u6765\u5206\u6790\u8f6f\u4ef6\u4f1a\u53d7\u5230\u54ea\u4e9b\u65b9\u9762\u7684\u5b89\u5168\u5a01\u80c1\uff0c\u5e76\u5236\u5b9a\u6d4b\u8bd5\u7b56\u7565\u7684\u8fc7\u7a0b\u3002STRIDE\u662f\u5e38\u7528\u7684\u5a01\u80c1\u6a21\u578b\uff0c\u5b83\u5305\u542b\u6b3a\u9a97\u3001\u7be1\u6539\u3001\u5426\u8ba4\u3001\u4fe1\u606f\u6cc4\u9732\u3001DoS \u5a01\u80c1\u3001\u7279\u6743\u63d0\u5347 6 \u4e2a\u65b9\u9762\uff0c\u4ece\u8fd9\u4e9b\u65b9\u9762\u53ef\u4ee5\u7ed3\u6784\u5316\u5730\u5236\u5b9a\u5e94\u5bf9\u63aa\u65bd\u3002 \u5728\u4e00\u4e9b\u5927\u7684\u56e2\u961f\u4e2d\uff0c\u5b89\u5168\u6d4b\u8bd5\u5f80\u5f80\u4f1a\u7531\u4e13\u95e8\u7684\u5b89\u5168\u4e13\u5bb6\u8fdb\u884c\u6216\u8005\u7ed9\u4e88\u6307\u5bfc\u3002\u6ca1\u6709\u6761\u4ef6\u7684\uff0c\u5219\u7531\u7814\u53d1\u4eba\u5458\u548c QA \u5171\u540c\u5b8c\u6210\u3002 1.2.7 \u6027\u80fd\u6d4b\u8bd5 \u6027\u80fd\u6d4b\u8bd5\uff08Performance Testing\uff09\u662f\u6307\u9488\u5bf9\u8f6f\u4ef6\u6027\u80fd\u6307\u6807\u8fdb\u884c\u7684\u6d4b\u8bd5\u3002\u6027\u80fd\u6d4b\u8bd5\u5305\u62ec\u4e86\u8f6f\u4ef6\u54cd\u5e94\u901f\u5ea6\u548c\u7528\u6237\u5bb9\u91cf\u7b49\u65b9\u9762\u7684\u5185\u5bb9\u3002 \u54cd\u5e94\u901f\u5ea6\u4ee3\u8868\u7528\u6237\u4f7f\u7528\u8f6f\u4ef6\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5e38\u89c4\u64cd\u4f5c\u800c\u8a00\uff0c\u7b49\u5f85\u65f6\u95f4\u8fc7\u957f\uff0c\u4f1a\u6781\u5927\u5730\u5f71\u54cd\u7528\u6237\u4f7f\u7528\u3002\u4e00\u822c\u5bf9 Web \u7a0b\u5e8f\u6765\u8bf4\uff0c\u9875\u9762\u7684\u52a0\u8f7d\u65f6\u95f4\u4e0d\u8d85\u8fc7 2 \u79d2\uff0c\u5426\u5219\u4f1a\u9020\u6210\u5927\u91cf\u7684\u7528\u6237\u6d41\u5931\u3002 \u7528\u6237\u5bb9\u91cf\u4ee3\u8868\u7740\u6709\u591a\u5c11\u7528\u6237\u80fd\u540c\u65f6\u4f7f\u7528\u8be5\u8f6f\u4ef6\u3002\u5355\u673a\u8f6f\u4ef6\u5bf9\u7528\u6237\u5bb9\u91cf\u8981\u6c42\u4e0d\u9ad8\uff0c\u5bf9\u4e8e\u4e92\u8054\u7f51\u9879\u76ee\uff0c\u6027\u80fd\u6d4b\u8bd5\u9700\u8981\u6db5\u76d6\u5bb9\u91cf\u6307\u6807\u3002\u6027\u80fd\u6d4b\u8bd5\u4e2d\u6709\u4e00\u79cd\u8d1f\u8f7d\u6d4b\u8bd5\uff0c\u7528\u4e8e\u901a\u8fc7\u6a21\u62df\u7528\u6237\u9012\u589e\u7684\u65b9\u5f0f\u627e\u51fa\u7cfb\u7edf\u7684\u6700\u5927\u5bb9\u91cf\uff0c\u4ee5\u53ca\u9a8c\u8bc1\u7cfb\u7edf\u662f\u5426\u80fd\u901a\u8fc7\u589e\u52a0\u670d\u52a1\u7684\u65b9\u5f0f\u6c34\u5e73\u6269\u5bb9\u3002 \u6027\u80fd\u6d4b\u8bd5\u5de5\u5177\u5305\u62ec JMeter\u3001AB\u3001K6 \u7b49\u3002JMeter\u3001AB \u90fd\u662f Apache \u57fa\u91d1\u4f1a\u7684\u4ea7\u54c1\uff0c\u5177\u6709\u826f\u597d\u7684\u4f7f\u7528\u53e3\u7891\u3002K6 \u662f\u4e00\u6b3e\u65b0\u7684\u6027\u80fd\u6d4b\u8bd5\u5de5\u5177\uff0c\u80fd\u4f7f\u7528 JavaScript \u8bed\u6cd5\u7f16\u5199\u81ea\u52a8\u5316\u7684\u6027\u80fd\u6d4b\u8bd5\u811a\u672c\uff0c\u5bf9 Web \u7a0b\u5e8f\u76f8\u5f53\u53cb\u597d\u3002 1.3 \u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u5165\u95e8 \u4e00\u822c\u8bb2\u89e3\u6d4b\u8bd5\u7684\u4e66\u7c4d\u4f1a\u5c06\u6d4b\u8bd5\u5206\u4e3a\u767d\u76d2\u6d4b\u8bd5\u548c\u9ed1\u76d2\u6d4b\u8bd5\uff0c\u7136\u540e\u63d0\u4f9b\u66f4\u5177\u4f53\u7684\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u6bd4\u5982\u7b49\u4ef7\u5212\u5206\u3001\u56e0\u679c\u56fe\u6cd5\u3001\u51b3\u7b56\u8868\u6cd5\u3001\u8fb9\u754c\u503c\u5206\u6790\u7b49\u3002 \u4f46\u662f\uff0c\u5bf9\u4e8e\u5927\u90e8\u5206\u7684\u7814\u53d1\u4eba\u5458\u6765\u8bf4\u90fd\u7528\u4e0d\u5230\u8fd9\u4e48\u591a\u590d\u6742\u7684\u65b9\u6cd5\uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u51e0\u79cd\u5e38\u7528\u7684\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5728\u540e\u6587\u4f1a\u9010\u4e00\u7528\u5230\u3002 \u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u7684\u672c\u8d28\u601d\u60f3\u662f\uff0c\u5c06\u539f\u672c\u9700\u8981\u7a77\u4e3e\u7684\u6240\u6709\u6d4b\u8bd5\u6570\u636e\u8fdb\u884c\u79d1\u5b66\u7684\u5f52\u7c7b\u3001\u9009\u62e9\u3001\u5212\u5206\uff0c\u4ee5\u671f\u7528\u6700\u5c11\u7684\u6d4b\u8bd5\u6570\u636e\u5c31\u53ef\u4ee5\u8fbe\u5230\u6700\u4f73\u7684\u6d4b\u8bd5\u6548\u679c\u3002 \u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u9075\u5b88\u7684\u57fa\u672c\u601d\u60f3\u662f MECE \u539f\u5219\uff0c\u5b83\u662f Mutually Exclusive,Collectively Exhaustive \u7684\u7f29\u5199\uff0c\u4e2d\u6587\u610f\u601d\u662f \"\u76f8\u4e92\u72ec\u7acb\uff0c\u5b8c\u5168\u7a77\u5c3d\"\u3002\u8fd9\u662f\u4e00\u79cd\u62c6\u89e3\u548c\u5206\u6790\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u6700\u5f00\u59cb\u6765\u81ea\u4e8e\u300a\u91d1\u5b57\u5854\u539f\u7406\u300b\u4e00\u4e66\uff0c\u80fd\u6bd4\u8f83\u597d\u5730\u6307\u5bfc\u7528\u4f8b\u8bbe\u8ba1\u7684\u76f8\u5173\u5b9e\u8df5\u3002 \u5728\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u6bcf\u4e2a\u7528\u4f8b\u7684\u6267\u884c\uff08\u65e0\u8bba\u662f\u4eba\u5de5\u8fd8\u662f\u81ea\u52a8\u5316\uff09\u90fd\u6709\u6210\u672c\uff0c\u90a3\u4e48\u9700\u8981\u5c3d\u53ef\u80fd\u7684\u8282\u7ea6\u3002\u76f8\u4e92\u72ec\u7acb\u7684\u610f\u601d\u662f\u62c6\u5206\u7684\u7528\u4f8b\u6ca1\u6709\u4ea4\u53c9\uff0c\u5b8c\u5168\u7a77\u5c3d\u662f\u8bf4\u62c6\u5206\u7684\u95ee\u9898\u9700\u8981\u8986\u76d6\u5230\u6240\u6709\u7684\u60c5\u51b5\u3002\u6bd4\u5982\uff0c\u628a\u6d4b\u8bd5\u6570\u636e\u7528\u6237\u5206\u4e3a\u7537\u6027\u7528\u6237\u548c\u5b66\u751f\u7528\u6237\uff0c\u8fd9\u6837\u5c31\u53d1\u751f\u4e86\u91cd\u53e0\u3002\u5f53\u7136\uff0cMECE\u662f\u4e00\u79cd\u7406\u60f3\u60c5\u51b5\uff0c\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u5f88\u96be\u8fbe\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u5426\u5219\u7f3a\u9677\u4e5f\u5c31\u4e0d\u4f1a\u5b58\u5728\u4e86\u3002\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u53c2\u8003\u8fd9\u4e2a\u539f\u5219\u6765\u8bbe\u8ba1\u7528\u4f8b\uff0c\u8ba9\u6bcf\u4e2a\u7528\u4f8b\u90fd\u7269\u5c3d\u5176\u7528\u3002 1.3.1 \u7b49\u4ef7\u7c7b\u5212\u5206 \u7b49\u4ef7\u7c7b\u7684\u5212\u5206\u5176\u5b9e\u6765\u81ea\u4e8e\u6570\u5b66\u7684\u96c6\u5408\u8bba\uff0c\u6307\u7684\u662f\u53ef\u4ee5\u5c06\u8f93\u5165\u57df\u7684\u96c6\u5408\u5212\u5206\u4e3a\u51e0\u4e2a\u7b49\u4ef7\u5b50\u96c6\u5408\uff0c\u7b49\u4ef7\u7c7b\u4e2d\u7684\u5143\u7d20\u5bf9\u4e8e\u63ed\u9732\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u6765\u8bf4\u662f\u7b49\u6548\u7684\u3002\u4ece\u5212\u5206\u5408\u7406\u7684\u7b49\u4ef7\u7c7b\u4e2d\u53d6\u51fa\u4efb\u610f\u4e00\u6761\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u6761\u4ef6\uff0c\u5747\u53ef\u83b7\u5f97\u540c\u6837\u7684\u6d4b\u8bd5\u6548\u679c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63d0\u9ad8\u6d4b\u8bd5\u6548\u7387\u3002 \u901a\u4fd7\u5730\u6765\u8bf4\uff0c\u5728\u540c\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\uff0c\u53ea\u8981\u6709\u4e00\u6761\u6d4b\u8bd5\u6570\u636e\u8ba9\u8f6f\u4ef6\u51fa\u9519\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\u7684\u5176\u4ed6\u6570\u636e\u5f80\u5f80\u4e5f\u4f1a\u8ba9\u8f6f\u4ef6\u51fa\u9519\u3002 \u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5728\u4e00\u6b3e\u652f\u4ed8\u8f6f\u4ef6\u4e2d\uff0c\u6b63\u786e\u7684\u8f93\u5165\u662f\u5e38\u89c4\u5927\u5c0f\u7684\u6570\u5b57\uff0c\u8f93\u5165\u5176\u4ed6\u8bf8\u5982\"&* ( \"\u8fd9\u6837\u7684\u7279\u6b8a\u5b57\u7b26\u6216\u5b57\u6bcd\uff0c\u5219\u4f1a\u7ed9\u4e88\u63d0\u793a\u3002\u90a3\u4e48\uff0c \u8f93\u5165\u5b57\u6bcd A \u548c B \u5c31\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u53ef\u4ee5\u5c06\u5b83\u4eec\u89c6\u4e3a\u540c\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\u3002 \u6b63\u662f\u56e0\u4e3a\u6b63\u786e\u7684\u8f93\u5165\u548c\u9519\u8bef\u7684\u8f93\u5165\u5dee\u5f02\u975e\u5e38\u660e\u663e\uff0c\u6240\u4ee5\u5c31\u5f62\u6210\u4e86\u5929\u7136\u7684\u5212\u5206\u65b9\u5f0f\uff0c\u4e00\u822c\u5c06\u7b49\u4ef7\u7c7b\u5212\u5206\u4e3a\u6709\u6548\u7b49\u4ef7\u7c7b\u548c\u65e0\u6548\u7b49\u4ef7\u7c7b\u3002 \u6709\u6548\u7b49\u4ef7\u7c7b\u662f\u6307\u5bf9\u8f6f\u4ef6\u6765\u8bf4\u5408\u7406\u3001\u6709\u610f\u4e49\u7684\u8f93\u5165\u6570\u636e\u96c6\u5408\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6709\u6548\u7684\u7b49\u4ef7\u7c7b\u53ea\u9700\u8981\u4e00\u7ec4\u5373\u53ef\uff0c\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8bbe\u8ba1\u591a\u4e2a\uff0c\u4e00\u4e9b\u56e2\u961f\u79f0\u4e4b\u4e3a\u6b63\u5411\u6d4b\u8bd5\uff08Happy Path\uff09\u3002 \u65e0\u6548\u7684\u7b49\u4ef7\u7c7b\u662f\u6307\u5bf9\u8f6f\u4ef6\u6765\u8bf4\u4e0d\u5408\u7406\u3001\u65e0\u610f\u4e49\u7684\u8f93\u5165\u6570\u636e\u96c6\u5408\uff0c\u76f8\u5bf9\u4e8e\u6709\u6548\u7b49\u4ef7\u7c7b\u6765\u8bf4\uff0c\u65e0\u6548\u7b49\u4ef7\u7c7b\u7684\u60c5\u51b5\u591a\u5f97\u591a\uff0c\u9700\u8981\u7ee7\u7eed\u5212\u5206\u3002\u65e0\u6548\u7b49\u4ef7\u7c7b\u53c8\u88ab\u53eb\u505a\u53cd\u5411\u6d4b\u8bd5\u3002 \u7b49\u4ef7\u7c7b\u5212\u5206\u6709\u51e0\u9879\u56fa\u5b9a\u6a21\u5f0f\u53ef\u4ee5\u53c2\u8003\uff1a \u5982\u679c\u89c4\u5b9a\u4e86\u8f93\u5165\u6570\u503c\u7684\u8303\u56f4\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u4e00\u4e2a\u6709\u6548\u7b49\u4ef7\u7c7b\uff0c\u4e24\u4e2a\u65e0\u6548\u7684\u7b49\u4ef7\u7c7b\u3002 \u5982\u679c\u89c4\u5b9a\u4e86\u8f93\u5165\u7684\u6570\u503c\u7684\u89c4\u5219\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u4e00\u4e2a\u7b26\u5408\u89c4\u5219\u7684\u7b49\u4ef7\u7c7b\uff0c\u4e24\u4e2a\u8fdd\u6cd5\u89c4\u5219\u7684\u7b49\u4ef7\u7c7b\u3002 \u5982\u679c\u89c4\u5b9a\u4e86\u8f93\u5165\u7684\u6570\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u53ef\u4ee5\u53c2\u8003\u7684\u7b49\u4ef7\u7c7b\u67090\u3001\u6b63\u6574\u6570\u3001\u8d1f\u6574\u6570\u548c\u5c0f\u6570\u7b49\u3002 \u5982\u679c\u89c4\u5b9a\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u53c2\u8003\u7684\u7b49\u4ef7\u7c7b\u6709\u6b63\u786e\u7684\u5b57\u7b26\u4e32\u3001\u7a7a\u3001\u7a7a\u767d\u5b57\u7b26\u4e32\u548c\u8d85\u957f\u7684\u5b57\u7b26\u4e32\u7b49\u3002 \u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u901a\u8fc7\u7b49\u4ef7\u7c7b\u5212\u5206\uff0c\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u7684\u4f8b\u5b50\u3002 \u652f\u4ed8\u5e73\u53f0\u5728\u5904\u7406\u7528\u6237\u8f93\u5165\u65f6\uff0c\u8981\u6c42\u7528\u6237\u8f93\u5165\u7b26\u5408\u8981\u6c42\u7684\u91d1\u989d X\uff0c\u6709\u5982\u4e0b\u89c4\u5219\uff0c\u5982\u679c\u6ee1\u8db3\u89c4\u5219\u8f93\u5165\u6846\u6821\u9a8c\u901a\u8fc7\uff0c\u5426\u5219\u63d0\u793a\u9519\u8bef\uff1a 1. \u7528\u6237\u53ea\u80fd\u8f93\u5165\u5927\u4e8e 0 \u5c0f\u4e8e\u7b49\u4e8e 2000 \u7684\u91d1\u989d\u3002 2. \u91d1\u989d\u7684\u5355\u4f4d\u662f\u7cbe\u786e\u5230\u4e24\u4f4d\u5c0f\u6570\u7684\u4eba\u6c11\u5e01\u5143\u3002 \u7ecf\u8fc7\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8868 1-1 \u6240\u793a\u7684\u7b49\u4ef7\u7c7b\u5212\u5206\u6765\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u3002 \u7528\u4f8b \u7b49\u4ef7\u7c7b\u578b X \u9884\u671f Case 1 \u6709\u6548\u7b49\u4ef7\u7c7b 0<x<2000,x \u662f\u6574\u6570 \u6821\u9a8c\u901a\u8fc7 Case 2 \u6709\u6548\u7b49\u4ef7\u7c7b 0<x<2000,x \u662f\u4e24\u4f4d\u5c0f\u6570 \u6821\u9a8c\u901a\u8fc7 Case 3 \u6709\u6548\u7b49\u4ef7\u7c7b x = 2000 \u6821\u9a8c\u901a\u8fc7 Case 4 \u65e0\u6548\u7b49\u4ef7\u7c7b x = 0 \u63d0\u793a\u9519\u8bef Case 5 \u65e0\u6548\u7b49\u4ef7\u7c7b x = -1 \u63d0\u793a\u9519\u8bef Case 6 \u65e0\u6548\u7b49\u4ef7\u7c7b x=0.001 \u63d0\u793a\u9519\u8bef Case 7 \u65e0\u6548\u7b49\u4ef7\u7c7b x=\u5f20\u4e09 \u63d0\u793a\u9519\u8bef Case 8 \u65e0\u6548\u7b49\u4ef7\u7c7b x=^&*^& \u63d0\u793a\u9519\u8bef Case 9 \u65e0\u6548\u7b49\u4ef7\u7c7b x= \u63d0\u793a\u9519\u8bef 1.3.2 \u8fb9\u754c\u503c\u6cd5 \u8fb9\u754c\u503c\u5206\u6790\u6cd5\uff08Boundary Value Analysis\uff0cBVA\uff09 \u662f\u4e00\u79cd\u5bf9\u7b49\u4ef7\u7c7b\u5212\u5206\u505a\u51fa\u6709\u6548\u8865\u5145\u7684\u6d4b\u8bd5\u65b9\u6cd5\u3002 \u8fb9\u754c\u503c\u6cd5\u662f\u5efa\u7acb\u5728\u4e1a\u754c\u5171\u8bc6\u4e0a\u7684\uff0c\u5373\u8f6f\u4ef6\u7684\u9519\u8bef\u5f80\u5f80\u51fa\u73b0\u5728\u8f93\u5165\u8f93\u51fa\u57df\u7684\u8fb9\u754c\u4e0a\uff0c\u800c\u4e0d\u662f\u8f93\u5165\u8f93\u51fa\u57df\u7684\u5185\u90e8\uff0c\u56e0\u6b64\u5728\u9009\u62e9\u6d4b\u8bd5\u6570\u636e\u65f6\uff0c\u8fb9\u754c\u503c\u6bd4\u5185\u90e8\u7684\u6570\u636e\u66f4\u6709\u4ef7\u503c\u3002 \u4f9d\u7136\u4f7f\u7528\u524d\u9762\u7684\u4f8b\u5b50\uff0c\u7a0b\u5e8f\u4f1a\u5bf9\u7528\u6237\u7684\u8f93\u5165\u503c\u8fdb\u884c\u68c0\u67e5\uff0c\u68c0\u67e5\u7684\u6761\u4ef6\u5f80\u5f80\u90fd\u662f\u57fa\u4e8e\u8fb9\u754c\u503c\u8bbe\u5b9a\u7684\u3002\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a if(input <= 0 || !isANumber(input) || input > 2000){ throw new Exception(\"input error\"). } \u901a\u8fc7\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c0\u30012000 \u90fd\u662f\u4e00\u4e2a\u5178\u578b\u7684\u8fb9\u754c\u503c\uff0c\u6570\u5b57\u548c\u975e\u6570\u5b57\u5b57\u7b26\u4e4b\u95f4\u4e5f\u662f\u4e00\u4e2a\u8fb9\u754c\uff0c\u56e0\u4e3a\u5728\u8ba1\u7b97\u673a\u5185\u90e8\u6570\u5b57\u548c\u975e\u6570\u5b57\u5b57\u7b26\u7684\u7f16\u7801\u503c\u4e0d\u540c\u3002 \u4f7f\u7528\u8fb9\u754c\u503c\u6cd5\u9009\u62e9\u6d4b\u8bd5\u6570\u636e\u65f6\uff0c\u5e94\u5f53\u9009\u53d6\u521a\u597d\u7b49\u4e8e\u3001\u521a\u597d\u5927\u4e8e\u3001\u521a\u597d\u5c0f\u4e8e\u7684\u503c\u4f5c\u4e3a\u8f93\u5165\u3002 \u8fb9\u754c\u503c\u5206\u6790\u6cd5\u6709\u51e0\u9879\u56fa\u5b9a\u6a21\u5f0f\u53ef\u4ee5\u53c2\u8003\uff1a \u5982\u679c\u89c4\u5b9a\u4e86\u8f93\u5165\u6570\u503c\u7684\u8303\u56f4\uff0c\u53ef\u4ee5\u9009\u62e9\u521a\u597d\u7b49\u4e8e\u3001\u521a\u597d\u5927\u4e8e\u3001\u521a\u597d\u5c0f\u4e8e\u7684\u503c\u3002 \u5982\u679c\u89c4\u5b9a\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u53ef\u4ee5\u9009\u62e9\u7a7a\u96c6\u5408\u3001\u8d85\u51fa\u6700\u5927\u503c\u7684\u96c6\u5408\u3001\u4e00\u4e2a\u5143\u7d20\u7684\u96c6\u5408\u3002 \u4f7f\u7528\u89c4\u5219\u7684\u4e34\u754c\u6761\u4ef6\u3002\u6bd4\u5982\uff0c\u89c4\u5219 \"\u8f93\u5165\u4e0d\u4e3a\u7a7a\u7684\u5b57\u7b26\u4e32\"\u7684\u4e34\u754c\u8f93\u5165\u662f\u4e0d\u53ef\u89c1\u7684\u5b57\u7b26\u4e32\uff08\u7a7a\u683c\u3001\u5236\u8868\u7b26\u7b49\uff09\u3002 1.3.3 \u573a\u666f\u6cd5 \u524d\u9762\u4ecb\u7ecd\u7684\u51e0\u79cd\u6d4b\u8bd5\u7528\u4f8b\u7684\u8bbe\u8ba1\u65b9\u6cd5\u90fd\u662f\u9488\u5bf9\u5355\u6b21\u64cd\u4f5c\u7684\uff0c\u8f6f\u4ef6\u5f80\u5f80\u90fd\u9700\u8981\u8fdb\u884c\u591a\u6b21\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6d4b\u8bd5\u7ec4\u5408\u540e\u7684\u64cd\u4f5c\uff0c\u901a\u8fc7\u7ec4\u5408\u64cd\u4f5c\u6765\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5373\u4e3a\u4f7f\u7528\u573a\u666f\u6cd5\u3002 \u8f6f\u4ef6\u7684\u6d41\u7a0b\u63a7\u5236\u90fd\u662f\u901a\u8fc7\u4e8b\u4ef6\u7684\u89e6\u53d1\u6765\u5b8c\u6210\u7684\u3002\u5355\u4e2a\u4e8b\u4ef6\u7684\u6d4b\u8bd5\u53ef\u4ee5\u7528\u524d\u9762\u4ecb\u7ecd\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\uff0c\u591a\u4e2a\u4e8b\u4ef6\u5219\u9700\u8981\u6839\u636e\u4e0d\u540c\u7684\u987a\u5e8f\u6784\u5efa\u4e0d\u540c\u7684\u4e8b\u4ef6\u6d41\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u4e8b\u4ef6\u89e6\u53d1\u7684\u60c5\u666f\u79f0\u4e3a\u573a\u666f\u3002 \u6839\u636e\u4e8b\u4ef6\u7ec4\u5408\u800c\u6765\u7684\u7528\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u590d\u5408\u7528\u4f8b\u3002\u6267\u884c\u590d\u5408\u7528\u4f8b\uff0c\u53ef\u4ee5\u66b4\u9732\u5927\u91cf\u7684\u6d41\u7a0b\u95ee\u9898\uff0c\u63d0\u9ad8\u6d4b\u8bd5\u6548\u679c\u3002 \u5982\u56fe 1-4\u6240\u793a\uff0c\u573a\u666f\u6cd5\u4e00\u822c\u5305\u542b\u57fa\u672c\u6d41\u548c\u5907\u9009\u6d41\u3002 \u56fe 1-4 \u7528\u4f8b\u6d41\u793a\u610f\u56fe \u56fe1-4\u4e2d\u7684\u76f4\u7ebf\u8868\u793a\u57fa\u672c\u6d41\uff0c\u662f\u6700\u7b80\u5355\u7684\u6d4b\u8bd5\u8def\u5f84\uff0c\u66f2\u7ebf\u8868\u793a\u5907\u9009\u6d41\uff0c\u662f\u5728\u67d0\u4e2a\u7279\u5b9a\u7684\u6761\u4ef6\u4e0b\u6240\u53d1\u751f\u7684\u5f02\u5e38\u884c\u4e3a\u3002 \u5907\u9009\u6d41\u53ef\u4ee5\u4ece\u57fa\u672c\u6d41\u7684\u4efb\u4f55\u8282\u70b9\u5f00\u59cb\uff0c\u4e5f\u53ef\u4ee5\u56de\u9000\u3001\u8df3\u8fc7\u57fa\u672c\u6d41\u7684\u8282\u70b9\u3002 \u4f7f\u7528\u573a\u666f\u6cd5\u7684\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\u5982\u4e0b\uff1a 1\uff09\u6839\u636e\u4e1a\u52a1\u89c4\u5219\uff0c\u753b\u51fa\u57fa\u672c\u6d41\u7684\u6240\u6709\u7684\u8282\u70b9\u3002 2\uff09\u8003\u8651\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u5f02\u5e38\u60c5\u51b5\uff0c\u5e76\u753b\u51fa\u5f02\u5e38\u8282\u70b9\u3002 3\uff09\u6839\u636e\u53ef\u8fbe\u6027\uff0c\u8fd9\u4e9b\u8282\u70b9\u6784\u6210\u4e00\u4e2a\u6709\u5411\u7684\u56fe\u3002 4\uff09\u5bf9\u8fd9\u4e2a\u56fe\u8fdb\u884c\u904d\u5386\uff0c\u8bbe\u8ba1\u7528\u4f8b\u3002 \u573a\u666f\u6cd5\u7684\u6ce8\u610f\u4e8b\u9879\uff1a \u573a\u666f\u7684\u5212\u5206\u548c\u9009\u62e9\u6bd4\u8f83\u91cd\u8981\uff0c\u8f6f\u4ef6\u7684\u573a\u666f\u53ef\u80fd\u6bd4\u8f83\u591a\uff0c\u9700\u8981\u4ece\u6700\u91cd\u8981\u7684\u573a\u666f\u5f00\u59cb\u9009\u62e9\u3002 \u4e00\u4e2a\u573a\u666f\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u7528\u6237\u89d2\u8272\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u591a\u4e2a\u89d2\u8272\u4ea4\u66ff\u64cd\u4f5c\u7684\u60c5\u51b5\u3002 \u8bbe\u8ba1\u573a\u666f\u53ef\u4ee5\u53c2\u8003\u5f00\u53d1\u6587\u6863\u4e2d\u7684\u7528\u4f8b\uff08Use Case\uff09\u8bbe\u8ba1\u3002 \u4e0b\u9762\u662f\u4f7f\u7528\u573a\u666f\u6cd5\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u7684\u6848\u4f8b\u3002 \u9700\u6c42\u8bf4\u660e\u5982\u4e0b\uff1a \u8fd9\u662f\u4e00\u6b3e\u6536\u94f6\u673a\u8f6f\u4ef6\uff0c\u4e1a\u52a1\u8bbe\u5b9a\u4e3a\u670d\u52a1\u5458\u4e5f\u9700\u8981\u8ba9\u6536\u94f6\u5458\u6765\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e0d\u8bb0\u5ea7\u4f4d\u6a21\u5f0f\uff0c\u4f7f\u7528\u53f7\u724c\uff0c\u6536\u94f6\u5458\u53ef\u4ee5\u8fdb\u884c\u9009\u83dc\u3001\u4e0b\u5355\u3001\u9000\u83dc\u3001\u6253\u5355\u3001\u7ed3\u8d26\u7b49\u64cd\u4f5c\u3002\u540e\u53a8\u53ef\u4ee5\u8fdb\u884c\u51fa\u83dc\u64cd\u4f5c\u3002 \u5982\u56fe 1-5 \u6240\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0a\u8ff0\u9700\u6c42\u6765\u8bbe\u8ba1\u7528\u4f8b\u5e76\u8fdb\u884c\u6d4b\u8bd5\uff0c\u8868 1-2 \u7ed9\u51fa\u4e86\u5bf9\u5e94\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 \u56fe 1-5 \u70b9\u9910\u7528\u4f8b \u8868 1-2 \u4f7f\u7528\u7528\u4f8b\u6d41\u8bbe\u8ba1\u7528\u4f8b \u540d\u79f0 \u6b65\u9aa4 \u57fa\u672c\u6d41 1. \u6536\u94f6\u5458\u5f00\u59cb\u70b9\u9910\uff0c\u542f\u52a8\u8f6f\u4ef6\u540e\uff0c\u80fd\u52a0\u8f7d\u83dc\u54c1\u5217\u8868\uff0c\u5e76\u663e\u793a\u8be6\u60c52. \u6536\u94f6\u5458\u9009\u62e9\u83dc\u54c1\uff0c\u5e76\u8bbe\u5b9a\u6570\u91cf\u3001\u53e3\u5473\u7b49\uff0c\u786e\u8ba4\u83dc\u54c1\u65e0\u8bef\u540e\u8fdb\u5165\u4e0b\u4e00\u6b653. \u6536\u94f6\u5458\u6536\u5230\u7528\u6237\u8d39\u7528\u540e\uff0c\u8fdb\u5165\u4e0b\u5355\u6253\u5370\u754c\u9762\uff0c\u6253\u5370\u5c0f\u7968\u7ed9\u540e\u53a8\uff0c\u5e76\u6253\u5370\u8d26\u5355\u7ed9\u5ba2\u6237\uff0c\u6536\u94f6\u5458\u53ef\u4ee5\u5728\u7ed3\u8d26\u540e\u56de\u5230\u70b9\u9910\u72b6\u6001\uff0c\u4e3a\u4e0b\u4e00\u6b21\u70b9\u9910\u505a\u51c6\u59074. \u540e\u53a8\u770b\u5230\u5c0f\u7968\u5f00\u59cb\u505a\u83dc\uff0c\u51fa\u83dc\u540e\u7531\u540e\u53a8\u786e\u8ba4\u51fa\u83dc5. \u7cfb\u7edf\u63a5\u6536\u5230\u786e\u8ba4\u67d0\u4e2a\u8ba2\u5355\u7684\u6240\u6709\u51fa\u83dc\u4fe1\u606f\u540e\uff0c\u6807\u8bb0\u8ba2\u5355\u5b8c\u6210\uff0c\u7528\u4e8e\u7edf\u8ba1\u548c\u6536\u94f6\u5458\u5bf9\u8d26 \u5907\u9009\u6d41 1 - \u672a\u7ed3\u8d26\u56de\u9000 1. \u6536\u94f6\u5458\u5f00\u59cb\u70b9\u9910\uff0c\u542f\u52a8\u8f6f\u4ef6\u540e\uff0c\u80fd\u52a0\u8f7d\u83dc\u54c1\u5217\u8868\uff0c\u5e76\u663e\u793a\u8be6\u60c52. \u6536\u94f6\u5458\u786e\u8ba4\u83dc\u54c1\u65e0\u8bef\u540e\uff0c\u8fdb\u5165\u4e0b\u5355\u6253\u5370\u754c\u97623. \u6536\u94f6\u5458\u53ef\u4ee5\u9009\u62e9\u8fd4\u56de\u4e0a\u4e00\u6b65\uff0c\u8f6f\u4ef6\u8bb0\u5f55\u4e4b\u524d\u7684\u83dc\u54c1\u9009\u62e9 \u5907\u9009\u6d41 2 - \u7ed3\u8d26\u540e\u9000\u83dc \u987e\u5ba2\u53ef\u80fd\u70b9\u5355\u540e\u9009\u62e9\u9000\u83dc\uff0c\u8f6f\u4ef6\u5141\u8bb8\u76f8\u5e94\u7684\u64cd\u4f5c1. \u5b8c\u6210\u57fa\u672c\u6d41\u7684\u524d\u4e24\u4e2a\u6b65\u9aa42. \u4ece\u5386\u53f2\u8ba2\u5355\u8fdb\u5165\uff0c\u9009\u62e9\u9000\u83dc\u64cd\u4f5c\uff0c\u53ea\u80fd\u9009\u62e9\u672a\u51fa\u83dc\u7684\u83dc\u54c1\u9879\u76ee \u5907\u9009\u6d41 3 - \u7ed3\u8d26\u540e\u53d6\u6d88\u8ba2\u5355 \u987e\u5ba2\u53ef\u80fd\u70b9\u5355\u540e\u9009\u62e9\u53d6\u6d88\u8ba2\u5355\uff0c\u8f6f\u4ef6\u5141\u8bb8\u76f8\u5e94\u7684\u64cd\u4f5c1. \u5b8c\u6210\u57fa\u672c\u6d41\u7684\u524d\u4e24\u4e2a\u6b65\u9aa42. \u4ece\u5386\u53f2\u8ba2\u5355\u8fdb\u5165\uff0c\u9009\u62e9\u53d6\u6d88\u8ba2\u5355\u64cd\u4f5c\uff0c\u53ea\u80fd\u9009\u62e9\u672a\u53d1\u751f\u51fa\u83dc\u7684\u8ba2\u5355 1.4 \u7814\u53d1\u4eba\u5458\u81ea\u6d4b\u8303\u56f4 \u4e0a\u9762\u4ecb\u7ecd\u7684\u53ea\u662f\u6d4b\u8bd5\u5de5\u4f5c\u7684\u90e8\u5206\u5165\u95e8\u6216\u8005\u57fa\u7840\u77e5\u8bc6\uff0c\u5bf9\u4e8e\u7814\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u5e76\u4e0d\u9700\u8981\u5173\u6ce8\u6240\u6709\u7684\u6d4b\u8bd5\u5de5\u4f5c\u4efb\u52a1\u3002 \u7814\u53d1\u4eba\u5458\u9700\u8981\u5173\u6ce8\u4e00\u4e9b\u548c\u7814\u53d1\u76f8\u5173\u7684\u6d4b\u8bd5\uff0c\u964d\u4f4e\u5c06\u4ee3\u7801\u8f6c\u6d4b\uff08\u5c06\u5f00\u53d1\u5b8c\u6210\u7684\u529f\u80fd\u63d0\u4ea4\u7ed9 QA \u8fdb\u884c\u6d4b\u8bd5\uff09\u540e\u7684\u7f3a\u9677\u7387\u3002\u964d\u4f4e\u8f6c\u6d4b\u540e\u7f3a\u9677\u7387\u7684\u6536\u76ca\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u5927\u516c\u53f8\u5f80\u5f80\u90fd\u6709\u8fd9\u65b9\u9762\u7684\u8981\u6c42\uff0c\u5e76\u4e14\u548c\u90e8\u95e8\u7ee9\u6548\u76f8\u5173\uff0c\u7f3a\u9677\u7387\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u8003\u6838\u3002\u8f6c\u6d4b\u5931\u8d25\u6216\u8005\u5728\u9ad8\u6d4b\u8bd5\u73af\u5883\u53d1\u73b0\u95ee\u9898\uff0c\u975e\u5e38\u4e0d\u5229\u4e8e\u8c03\u8bd5\u548c\u89e3\u51b3\uff0c\u5c3d\u53ef\u80fd\u5730\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u751a\u81f3\u5728\u672c\u5730\u53d1\u73b0\u548c\u89e3\u51b3\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002 \u4e0d\u8fc7\uff0c\u54ea\u4e9b\u8d28\u91cf\u4fdd\u8bc1\u7684\u5de5\u4f5c\u7531\u7814\u53d1\u6765\u505a\uff0c\u54ea\u4e9b\u5de5\u4f5c\u7531 QA \u6765\u505a\u5f80\u5f80\u4e89\u8bae\u9887\u591a\u3002\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u65b9\u6cd5\u5219\u5c31\u662f \u767d\u76d2\u6d4b\u8bd5\u5927\u90e8\u5206\u7531\u7814\u53d1\u4eba\u5458\u5b8c\u6210\uff0c\u9ed1\u76d2\u6d4b\u8bd5\u5927\u90e8\u5206\u7531 QA \u6765\u5b8c\u6210\uff0c\u7531\u4e24\u8005\u4e00\u8d77\u5bf9\u6700\u7ec8\u8d28\u91cf\u8d1f\u8d23\u3002 \u56fe 1-6 \u7ed9\u51fa\u4e86\u4e00\u4e2a\u5f00\u53d1\u81ea\u6d4b\u7684\u8303\u56f4\uff0c\u4f46\u662f\u6700\u91cd\u8981\u7684\u662f\u9700\u8981\u548c\u56e2\u961f\u8fbe\u6210\u5171\u8bc6\u3002 \u56fe 1-6 \u7814\u53d1\u4eba\u5458\u548c\u6d4b\u8bd5\u4eba\u5458\u7684\u5206\u5de5 \u6839\u636e\u6d4b\u8bd5\u91d1\u5b57\u5854\u7684\u5212\u5206\u65b9\u5f0f\u53ef\u77e5\uff0c\u4e00\u822c\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u9700\u8981\u7814\u53d1\u4eba\u5458\u81ea\u5df1\u5b8c\u6210\uff0c\u5e76\u4e14\u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u7c7b\u6d4b\u8bd5\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u4ee3\u7801\u90fd\u548c\u4e1a\u52a1\u4ee3\u7801\u5728\u4e00\u4e2a\u4ed3\u5e93\u4e2d\u3002\u8fd9\u91cc\u8bf4\u8bf4\u8fd9\u6837\u5212\u5206\u7684\u8003\u91cf\u548c\u7ecf\u9a8c\u3002 \u5355\u5143\u6d4b\u8bd5\u9700\u8981\u5927\u91cf\u4f9d\u8d56\u6a21\u62df\uff08Mock\uff09\uff0c\u540c\u65f6\u9700\u8981\u5206\u6790\u4ee3\u7801\u7684\u5206\u652f\u7ed3\u6784\u624d\u80fd\u5199\u51fa\u6709\u6548\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002\u6b64\u5916\uff0c\u8fd9\u90e8\u5206\u6d4b\u8bd5\u4f1a\u5f15\u7528\u76ee\u6807\u4ee3\u7801\uff0c\u5b83\u9700\u8981\u548c\u76ee\u6807\u4ee3\u7801\u4fdd\u6301\u4e00\u81f4\u7684\u6280\u672f\u6808\uff0c\u800c\u8fd9\u4e9b\u53ea\u6709\u7814\u53d1\u4eba\u5458\u81ea\u5df1\u6700\u719f\u6089\uff0c\u6240\u4ee5\u7814\u53d1\u4eba\u5458\u53ef\u4ee5\u7528\u6700\u9ad8\u7684\u6548\u7387\u6765\u7f16\u5199\u6d4b\u8bd5\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5408\u683c\u7684\u7814\u53d1\u4eba\u5458\u90fd\u9700\u8981\u4f1a\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff08\u8fd9\u4e5f\u662f\u4e00\u4e9b\u5927\u5382\u7684\u5fc5\u5907\u8981\u6c42\uff09\u3002 \u96c6\u6210\u6d4b\u8bd5\u5728\u524d\u9762\u7684\u5b9a\u4e49\u4e2d\u662f\u6307\u5355\u4e2a\u6a21\u5757\u3001\u670d\u52a1\u7684\u6d4b\u8bd5\uff0c\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u5f80\u5f80\u9700\u8981\u542f\u52a8\u5e94\u7528\u4e0a\u4e0b\u6587\uff0c\u8fd9\u7c7b\u6d4b\u8bd5\u5173\u6ce8\u7684\u662f\u5355\u4e2a API \u7684\u80fd\u529b\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u7814\u53d1\u4eba\u5458\u7528 API \u4e3a\u57fa\u672c\u7c92\u5ea6\u4ea4\u4ed8\u7279\u6027\uff0c\u8fd9\u7c7b\u6d4b\u8bd5\u4fdd\u8bc1\u5bf9\u5916\u7684 API \u80fd\u529b\uff0c\u540c\u65f6\u53ef\u4ee5\u9a8c\u6536\u5355\u4e2a\u4e1a\u52a1\u8d28\u91cf\u3002\u5728\u4e00\u4e9b QA \u4eba\u5458\u76f8\u5bf9\u5145\u8db3\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8ba9 QA \u53c2\u4e0e\uff0c\u5171\u540c\u5b8c\u6210\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u5982\u679c\u628a\u4ee3\u7801\u89c4\u8303\u626b\u63cf\u3001\u5b89\u5168\u626b\u63cf\u7684\u7ed3\u679c\u4e5f\u7b97\u6d4b\u8bd5\u7684\u4e00\u90e8\u5206\u7684\u8bdd\uff0c\u90a3\u4e48\u540c\u6837\u9700\u8981\u7814\u53d1\u4eba\u5458\u5173\u6ce8\u3002\u4e0d\u8fc7\u8fd9\u7c7b\u5de5\u4f5c\uff0c\u4e00\u822c\u662f\u516c\u53f8 QA \u90e8\u95e8\u7edf\u4e00\u914d\u7f6e\u3001\u7ef4\u62a4\u7684\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u7814\u53d1\u4eba\u5458\u7684\u6d4b\u8bd5\u5de5\u4f5c\u4e0d\u4ec5\u4ec5\u662f\u9488\u5bf9\u65b0\u529f\u80fd\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6301\u7eed\u7ef4\u62a4\u624d\u662f\u6700\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u968f\u7740\u8f6f\u4ef6\u4ea7\u54c1\u8d70\u5411\u53d1\u5c55\u540e\u671f\uff0c\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u5c06\u662f\u7ef4\u62a4\u548c\u6539\u8fdb\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u7814\u53d1\u4eba\u5458\u7684\u81ea\u6d4b\u4efb\u52a1\u5f80\u5f80\u4e0d\u53ea\u662f\u5728\u65b0\u7f16\u5199\u8f6f\u4ef6\u7684\u65f6\u5019\u52a0\u5165\uff0c\u5728\u91cd\u6784\u3001\u4fee\u590d\u7f3a\u9677\u3001\u6570\u636e\u8fc1\u79fb\u7684\u65f6\u5019\u4e5f\u9700\u8981\u53ca\u65f6\u589e\u52a0\u6d4b\u8bd5\uff0c\u4e0b\u9762\u8be6\u7ec6\u8bf4\u660e\u8fd9\u51e0\u4e2a\u573a\u666f\u3002 1.4.1 \u65b0\u4ea4\u4ed8\u7684\u9700\u6c42 \u5bf9\u4e8e\u65b0\u7684\u9700\u6c42\uff0c\u4e00\u822c\u4f1a\u8ba9 QA \u5e2e\u5fd9\u63d0\u524d\u51c6\u5907\u597d\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u7684\u7528\u4f8b\u3002 \u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 JUnit \u8fd9\u7c7b\u6d4b\u8bd5\u6846\u67b6\uff0c\u901a\u8fc7\u6a21\u62df\u4f9d\u8d56\u5b9e\u73b0\u7ec6\u81f4\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5c3d\u91cf\u8986\u76d6\u66f4\u591a\u7684\u5206\u652f\u3002 \u96c6\u6210\u6d4b\u8bd5\u53ef\u4ee5\u4f7f\u7528 Spring MockMVC \u8fd9\u7c7b\u6d4b\u8bd5\u6846\u67b6\uff0c\u901a\u8fc7\u542f\u52a8\u5e94\u7528\u6765\u9a8c\u8bc1 API \u7684\u903b\u8f91\u662f\u5426\u6b63\u786e\u3002\u7531\u4e8e\u96c6\u6210\u6d4b\u8bd5\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u7528\u6765\u7f16\u5199\u590d\u6742\u7528\u4f8b\u4f1a\u62d6\u6162\u5f00\u53d1\u548c\u6d4b\u8bd5\uff0c\u56e0\u6b64\uff0c\u6d4b\u8bd5\u5173\u952e\u7684\u57fa\u672c\u573a\u666f\u5373\u53ef\u3002 \u5728\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u65f6\uff0c\u5982\u679c\u719f\u6089 TDD\uff08\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\uff09\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 TDD\uff0c\u5148\u7f16\u5199\u6d4b\u8bd5\u518d\u7f16\u5199\u5b9e\u73b0\uff0c\u4e0d\u8fc7 TDD \u6709\u4e00\u5b9a\u7684\u5b66\u4e60\u6210\u672c\u3002\u8fd9\u4e9b\u5185\u5bb9\u7684\u5177\u4f53\u64cd\u4f5c\u5728\u540e\u9762\u7684\u5185\u5bb9\u4e2d\u4f1a\u9010\u6b65\u8bb2\u89e3\u3002 \u6d4b\u8bd5\u8986\u76d6\u7387\u53ef\u4ee5\u5c06\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u53e0\u52a0\u8ba1\u7b97\uff0c\u4e00\u822c\u96c6\u6210\u6d4b\u8bd5\u53ef\u4ee5\u5feb\u901f\u5730\u8dd1\u5b8c\u4e00\u4e2a\u4e3b\u8981\u6d41\u7a0b\uff0c\u83b7\u5f97\u5927\u90e8\u5206\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u7136\u540e\u4f7f\u7528\u5355\u5143\u6d4b\u8bd5\u5f25\u8865\u6ca1\u6709\u8986\u76d6\u7684\u5206\u652f\uff0c\u8fdb\u4e00\u6b65\u83b7\u5f97\u66f4\u9ad8\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u3002 1.4.2 \u7f3a\u9677\u5904\u7406 \u5982\u679c\u4fee\u590d\u4e86\u4e00\u4e2a Bug\uff0c\u90a3\u4e48\u9700\u8981\u53ca\u65f6\u66f4\u65b0\u3001\u8865\u5145\u6d4b\u8bd5\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\u76ee\u7684\u662f\u4e3a\u4e86\u907f\u514d\u540c\u7c7b\u95ee\u9898\u518d\u6b21\u51fa\u73b0\uff0c\u6216\u8005\u5728\u5176\u4ed6\u7684\u573a\u666f\u4e2d\u51fa\u73b0\u3002\u53e6\u5916\uff0c\u4fee\u590d Bug \u5f80\u5f80\u4f1a\u5199\u4e00\u4e9b\u8865\u4e01\u4ee3\u7801\uff0c\u8fd9\u7c7b\u4ee3\u7801\u5176\u4ed6\u540c\u4e8b\u5f88\u96be\u7406\u89e3\u3002\u8865\u5145\u6d4b\u8bd5\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\u7684\u8bed\u4e49\u6765\u63cf\u8ff0\u8fd9\u6bb5\u96be\u4ee5\u7406\u89e3\u7684\u903b\u8f91\uff0c\u548c\u6ce8\u91ca\u76f8\u6bd4\uff0c\u6d4b\u8bd5\u53ef\u4ee5\u540c\u6b65\u66f4\u65b0\uff0c\u5982\u679c\u540e\u671f\u76f8\u5173\u4ee3\u7801\u6539\u9519\u4e86\uff0c\u6d4b\u8bd5\u5219\u65e0\u6cd5\u901a\u8fc7\u3002 1.4.3 \u91cd\u6784 \u8fdb\u884c\u91cd\u6784\u65f6\uff0c\u9700\u8981\u5148\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3001API \u6d4b\u8bd5\u6216\u5951\u7ea6\u6d4b\u8bd5\uff0c\u4fdd\u62a4\u539f\u6709\u884c\u4e3a\u4e0d\u53d7\u7834\u574f\u3002\u91cd\u6784\u7684\u542b\u4e49\u662f\uff0c\u5728\u4e1a\u52a1\u89c4\u5219\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u6539\u9020\u6216\u91cd\u65b0\u8bbe\u8ba1\u4ee3\u7801\uff0c\u63d0\u9ad8\u53ef\u7ef4\u62a4\u6027\u548c\u4ee3\u7801\u8d28\u91cf\u3002 \u56e0\u6b64\uff0c\u91cd\u6784\u4e5f\u662f\u6dfb\u52a0\u6d4b\u8bd5\u7684\u91cd\u8981\u65f6\u673a\u3002 1.4.4 \u6570\u636e\u8fc1\u79fb \u6570\u636e\u8fc1\u79fb\u7684\u7ed3\u679c\u9a8c\u8bc1\u662f\u4e00\u4ef6\u6bd4\u8f83\u56f0\u96be\u7684\u4e8b\u60c5\uff0c\u4fdd\u8bc1\u6570\u636e\u8fc1\u79fb\u7684\u7ed3\u679c\u6b63\u786e\u7684\u65b9\u6cd5\u6709\u4e24\u79cd\u3002 \u4e00\u79cd\u662f\u4e0d\u8981\u624b\u52a8\u8fc1\u79fb\u6570\u636e\uff0c\u4e00\u5b9a\u8981\u4f7f\u7528\u811a\u672c\uff0c\u7528\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684 ETL \u5de5\u5177\u53ef\u4ee5\u5b8c\u6210\u8fd9\u7c7b\u5de5\u4f5c\u3002\u6bd4\u5982\uff0cSpring Batch \u53ef\u4ee5\u7528 Java \u5199\u8fc1\u79fb\u811a\u672c\uff0c\u800c\u4e14\u53ef\u4ee5\u7ed9\u8fd9\u7c7b\u811a\u672c\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002 \u5176\u6b21\u662f\u7f16\u5199\u7b80\u5355\u7684\u4ee3\u7801\u5bf9\u7ed3\u679c\u8fdb\u884c\u6821\u9a8c\u3002\u5373\u4f7f\u8fc1\u79fb\u811a\u672c\u901a\u8fc7\u4e86\u5355\u5143\u6d4b\u8bd5\uff0c\u4e5f\u6709\u53ef\u80fd\u5728\u8fd0\u884c\u65f6\u56e0\u914d\u7f6e\u9519\u8bef\u9020\u6210\u6570\u636e\u9519\u8bef\uff0c\u56e0\u6b64\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u6821\u9a8c\u7a0b\u5e8f\uff0c\u7edf\u8ba1\u8fc1\u79fb\u524d\u540e\u7684\u6570\u636e\uff0c\u6216\u9010\u884c\u6821\u9a8c\u3002 1.5 \u6d4b\u8bd5\u6570\u636e\u7684\u6784\u9020\u548c\u5b89\u5168 \u5728\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6d4b\u8bd5\u6570\u636e\u7684\u6784\u9020\u770b\u4f3c\u662f\u4e00\u4ef6\u5c0f\u4e8b\uff0c\u4f46\u662f\u5982\u679c\u80fd\u901a\u8fc7\u9ad8\u6548\u7684\u65b9\u5f0f\u64cd\u4f5c\u5219\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4\u3002\u6709\u4e00\u4e9b\u56e2\u961f\u4f1a\u76f4\u63a5\u4f7f\u7528\u751f\u4ea7\u73af\u5883\u7684\u771f\u5b9e\u6570\u636e\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5b9e\u9645\u4e0a\u8fd9\u79cd\u505a\u6cd5\u8fdd\u53cd\u4e86\u4fe1\u606f\u5b89\u5168\u548c\u5408\u89c4\u7684\u8981\u6c42\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002\u53ef\u4ee5\u4f7f\u7528\u76f8\u5173\u5de5\u5177\u6765\u6784\u9020\u6d4b\u8bd5\u6570\u636e\uff0c\u8fd9\u4e9b\u968f\u673a\u751f\u6210\u7684\u6570\u636e\uff0c\u4f7f\u7528\u8d77\u6765\u4e0d\u4ec5\u5f88\u9ad8\u6548\uff0c\u8fd8\u907f\u514d\u4e86\u5b89\u5168\u548c\u5408\u89c4\u98ce\u9669\u3002 1.5.1 \u9ad8\u6548\u6d4b\u8bd5\u6570\u636e\u6784\u9020 \u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u5de5\u5177\u548c\u6280\u5de7\u6765\u5feb\u901f\u3001\u9ad8\u6548\u5730\u6784\u9020\u6d4b\u8bd5\u6570\u636e\u3002 1. \u901a\u7528\u6587\u672c\u6570\u636e\u6784\u9020 \u53ef\u80fd\u6709\u8bfb\u8005\u6df1\u6709\u4f53\u4f1a\uff0c\u6784\u9020\u6d4b\u8bd5\u6570\u636e\u5f80\u5f80\u80fd\u69a8\u5e72\u7075\u611f\uff0c\u597d\u5728\u4e00\u4e9b\u5e38\u89c1\u7684\u6d4b\u8bd5\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5f00\u6e90\u5de5\u5177\u6765\u5b9e\u73b0\uff0c\u6bd4\u5982\u76ee\u524d\u6709\u591a\u79cd\u8bed\u8a00\u7684 Faker \u5e93\uff0c\u5b83\u4f7f\u7528\u7684\u662fPython\u3001JavaScript \u7b49\u811a\u672c\u8bed\u8a00\u3002JavaScript \u7684 Faker \u7248\u672c faker.js \u53ef\u4ee5\u90e8\u7f72\u5e76\u8fd0\u884c\u5728\u6d4f\u89c8\u5668\u4e0a\uff0c\u8fdb\u884c\u5728\u7ebf\u6570\u636e\u751f\u6210\u3002\u5982\u56fe 1-7\u6240\u793a\uff0cfaker.js \u53ef\u4ee5\u968f\u673a\u751f\u6210\u4e00\u4e9b\u7528\u6237\u4fe1\u606f\u3002 \u56fe 1-7 \u968f\u673a\u6784\u9020\u4e2a\u4eba\u6570\u636e \u5728\u9700\u8981\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u5c06 faker.js \u7684 npm \u5305\u653e\u5230\u524d\u7aef\u7684\u4ee3\u7801\u5e93\u4e2d\u4f7f\u7528\u3002 2. \u6587\u4ef6\u6784\u9020 \u6709\u65f6\u5019\u9700\u8981\u6784\u9020\u4e0d\u540c\u5927\u5c0f\u7684\u6587\u4ef6\u6765\u5b8c\u6210\u6d4b\u8bd5\uff0c\u53ef\u662f\u8981\u627e\u5230\u521a\u597d\u5408\u9002\u7684\u6587\u4ef6\u5927\u5c0f\u548c MIME \u7c7b\u578b\u6765\u6ee1\u8db3\u8fb9\u754c\u503c\u5e76\u4e0d\u662f\u5f88\u5bb9\u6613\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u7f51\u7ad9 fakefilegenerator.com \u6765\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u751f\u6210\u6240\u9700\u7c7b\u578b\u548c\u5927\u5c0f\u7684\u6587\u4ef6\u3002 \u63d0\u793a\uff1aMIME \u7684\u5168\u79f0\u662f Multipurpose Internet Mail Extensions\uff0c\u5373\u591a\u7528\u9014\u4e92\u8054\u7f51\u90ae\u4ef6\u6269\u5c55\u7c7b\u578b\uff0c\u5728\u6587\u4ef6\u7684\u5934\u90e8\u6807\u660e\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u907f\u514d\u4f9d\u8d56\u6587\u4ef6\u540e\u7f00\u6765\u8bc6\u522b\u6587\u4ef6\u7c7b\u578b\u3002\u76ee\u524d\u5e38\u89c1\u7684\u6587\u4ef6\u7c7b\u578b\u4f1a\u5728 IANA \u673a\u6784\u8fdb\u884c\u6ce8\u518c\u8fdb\u884c\u7ba1\u7406\u3002 \u5982\u679c\u53ea\u662f\u60f3\u8981\u6784\u9020\u7a7a\u6587\u4ef6\uff08\u4e0d\u4ecb\u610f\u5185\u5bb9\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u5feb\u901f\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u6784\u9020\u4efb\u610f\u5927\u5c0f\u7684\u6587\u4ef6\u3002\u5728 Linux \u4e2d\uff0c /dev/zero \u6587\u4ef6\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u8bbe\u5907\u6587\u4ef6\uff0c\u5728\u88ab\u8bfb\u53d6\u65f6\u4f1a\u63d0\u4f9b\u65e0\u9650\u7684\u7a7a\u5b57\u7b26\u3002\u53ef\u4ee5\u901a\u8fc7 dd \u547d\u4ee4\u590d\u5236 /dev/zero \u6587\u4ef6\u6765\u6784\u9020\u65b0\u7684\u6587\u4ef6\u3002dd \u547d\u4ee4\u7684\u57fa\u672c\u7528\u6cd5\u5982\u4e0b\uff1a dd if=<\u8f93\u5165\u6587\u4ef6> of=<\u8f93\u51fa\u6587\u4ef6> bs=<\u590d\u5236\u5757\u5927\u5c0f> count=<\u590d\u5236\u6b21\u6570> \u4f8b\u5982\uff0c\u5982\u679c\u9700\u8981\u751f\u6210 10 MB \u5927\u5c0f\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a dd if=/dev/zero of=output.txt bs=1M count=10 \u5728 Linux \u4e2d\u8fd8\u6709\u4e00\u4e2a truncate \u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u6587\u4ef6\u4efb\u610f\u7f29\u5c0f\u6216\u62d3\u5c55\u5230\u6307\u5b9a\u7684\u5927\u5c0f\uff1a echo hello > test.txt truncate -s 1024 test.txt \u63d0\u793a\uff1a\u5728 Mac OS\u4e0b\u8981\u4f7f\u7528 truncate \u547d\u4ee4\u9700\u8981\u5355\u72ec\u5b89\u88c5\uff0c\u53ef\u4ee5\u4f7f\u7528 brew install truncate \u5feb\u901f\u5b89\u88c5\u8be5\u547d\u4ee4\u3002 \u5728 Windows \u4e2d\u5c31\u66f4\u7b80\u5355\u4e86\uff0cWindows \u63d0\u4f9b\u4e86\u4e00\u4e2a fsutil \u547d\u4ee4\u53ef\u4ee5\u63d0\u4f9b\u6307\u5b9a\u6587\u4ef6\u5927\u5c0f\u7684\u7a7a\u6587\u4ef6\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a fsutil file createnew <\u8f93\u51fa\u7684\u6587\u4ef6\u540d> <\u6587\u4ef6\u5927\u5c0f\uff08\u5b57\u8282\uff09> 3. \u56fe\u7247\u6784\u9020 \u5f53\u6211\u4eec\u9700\u8981\u6784\u9020\u4e00\u4e9b\u7279\u5b9a\u5c3a\u5bf8\u7684\u56fe\u7247\u65f6\uff0c\u5176\u5b9e\u4e0d\u9700\u8981\u5728\u7f51\u4e0a\u5230\u5904\u5bfb\u627e\u3002\u6709\u4e00\u4e9b\u56fe\u7247\u5360\u4f4d\u7b26\u7f51\u7ad9\u63d0\u4f9b\u4e86\u52a8\u6001\u751f\u6210\u56fe\u7247\u7684\u670d\u52a1\uff0c\u901a\u8fc7\u6784\u9020\u56fe\u7247\u94fe\u63a5\u53ef\u4ee5\u83b7\u5f97\u5408\u9002\u7684\u56fe\u7247\u3002 \u4f8b\u5982\uff0c\u5728 placeholder.com \u7f51\u7ad9\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u6784\u9020 URL\u6765\u751f\u6210\u6ee1\u8db3\u5c3a\u5bf8\u3001\u80cc\u666f\u3001\u6587\u5b57\u7b49\u4e0d\u540c\u9700\u6c42\u7684\u56fe\u7247\u3002\u5982\u56fe 1-8 \u5230\u56fe 1-11 \u6240\u793a\uff0c\u5728 URL \u540e\u9762\u8bbe\u7f6e\u76f8\u5173\u7684\u53c2\u6570\u5373\u53ef\u6784\u9020\u51fa\u60f3\u8981\u7684\u56fe\u7247 \u3002 \u56fe 1-8 \u6784\u5efa\u6b63\u65b9\u5f62\u56fe\u7247 \u6ce8\uff1a\u56fe\u7247\u6765\u6e90 https://via.placeholder.com/150\u3002 \u56fe 1-9 \u6784\u5efa\u77e9\u5f62\u56fe\u7247 \u6ce8\uff1a\u56fe\u7247\u6765\u6e90 https://via.placeholder.com/200x100\u3002 \u56fe 1-10 \u4fee\u6539\u80cc\u666f\u8272 \u6ce8\uff1a\u56fe\u7247\u6765\u6e90 https://via.placeholder.com/200x100/fff\u3002 \u56fe 1-11 \u589e\u52a0\u6587\u5b57 \u6ce8\uff1a\u56fe\u7247\u6765\u6e90 https://via.placeholder.com/200x100/fff?text=placeholder\u3002 4. \u9ad8\u6548\u6587\u672c\u64cd\u4f5c \u5982\u679c\u7ecf\u5e38\u9700\u8981\u6279\u91cf\u5904\u7406\u6570\u636e\u65f6\uff0c\u901a\u8fc7\u6279\u91cf\u7684\u6587\u672c\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5927\u5927\u8282\u7701\u6211\u4eec\u7684\u65f6\u95f4\u548c\u7f29\u5c0f\u5de5\u4f5c\u91cf\u3002\u652f\u6301\u6279\u91cf\u64cd\u4f5c\u7684\u7f16\u8f91\u5668\u975e\u5e38\u591a\uff0c\u8fd9\u91cc\u4ee5 Sublime \u4e3a\u4f8b\uff0c\u8bf4\u660e\u6279\u91cf\u7f16\u8f91\u7684\u65b9\u6cd5\u3002 Sublime \u53ef\u4ee5\u4f7f\u7528\u591a\u5149\u6807\u529f\u80fd\u6279\u91cf\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\uff0c\u5f88\u65b9\u4fbf\uff0c\u4ee5\u4e0b\u9762\u8fd9\u6bb5\u6587\u672c\u4e3a\u4f8b\uff1a \u900d\u9065\u6e38 \u9f50\u7269\u8bba \u517b\u751f\u4e3b \u4eba\u95f4\u4e16 \u5fb7\u5145\u7b26 \u5927\u5b97\u5e08 \u5e94\u5e1d\u738b \u5982\u679c\u9700\u8981\u53bb\u9664\u6362\u884c\uff0c\u5e76\u4e14\u589e\u52a0\u5f15\u53f7\u5c06\u6bcf\u4e2a\u8bcd\u5f15\u7528\u8d77\u6765\uff0c\u7136\u540e\u653e\u5230\u4ee3\u7801\u7684\u6570\u7ec4\u4e2d\u4f7f\u7528\uff0c\u90a3\u4e48\u5728 Sublime \u7f16\u8f91\u5668\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5168\u9009\uff0c\u518d\u4f7f\u7528 \u5feb\u6377\u952eCtrl + Shift + L\uff0c\u83b7\u5f97\u6bcf\u884c\u7684\u5149\u6807\u3002\u7136\u540e\u4f7f\u7528 Ctrl + \u5de6\u5bfc\u822a\u952e\u79fb\u52a8\u5149\u6807\u81f3\u884c\u9996\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u81ea\u7531\u7f16\u8f91\u4e86\u3002 \u63d0\u793a\uff1a\u5728 Mac OS \u7cfb\u7edf\u4e2d\uff0c\u4e00\u822c Ctrl \u952e\u7531 Command \u4ee3\u66ff\u3002 \u5728 Sublime \u4e2d\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u9009\u4e2d\u529f\u80fd\u3002\u5982\u679c\u4e00\u4e2a\u6587\u672c\u4e2d\u51fa\u73b0\u4e86\u591a\u6b21\u91cd\u590d\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u53ef\u4ee5\u9009\u4e2d\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u6309\u4e0b Ctrl + D \u952e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u62d3\u5c55\u9009\u4e2d\u4e0b\u4e00\u4e2a\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5feb\u901f\u6279\u91cf\u7f16\u8f91\u9009\u4e2d\u7684\u91cd\u590d\u5b57\u7b26\u4e32\u4e86\u3002 \u548c Ctrl + D \u952e\u76f8\u4f3c\u7684\u4e00\u7ec4\u5feb\u6377\u952e\u662f Alt + F3\uff0c\u9009\u4e2d\u6587\u672c\u6309\u4e0b\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u9009\u62e9\u6587\u672c\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u76f8\u540c\u6587\u672c\uff0c\u5e76\u540c\u65f6\u8fdb\u884c\u7f16\u8f91\u3002\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u5feb\u901f\u66ff\u6362\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u3002\u6b64\u5916\uff0c\u6362\u884c\u7b26\u4e5f\u53ef\u4ee5\u88ab\u9009\u4e2d\uff0c\u53ef\u4ee5\u7528\u4e8e\u53bb\u6389\u6279\u91cf\u6362\u884c\u7b26\u3002 1.5.2 \u6d4b\u8bd5\u6570\u636e\u7684\u5b89\u5168 \u7531\u4e8e\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u6570\u636e\u7684\u7ba1\u7406\u6ca1\u6709\u751f\u4ea7\u73af\u5883\u4e0a\u90a3\u4e48\u4e25\u683c\uff0c\u56e0\u6b64\u53ef\u80fd\u5b58\u5728\u4e00\u5b9a\u7684\u6570\u636e\u5b89\u5168\u98ce\u9669\uff0c\u5c24\u5176\u662f\u5728\u91d1\u878d\u3001\u94f6\u884c\u3001\u519b\u5de5\u7b49\u91cd\u8981\u9886\u57df\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u6ce8\u610f\u5bf9\u6d4b\u8bd5\u6570\u636e\u505a\u4e00\u4e9b\u4fdd\u62a4\u548c\u7ba1\u7406\uff0c\u4ee5\u53ca\u4e86\u89e3\u4e00\u4e9b\u6570\u636e\u4fdd\u62a4\u76f8\u5173\u7684\u6cd5\u5f8b\u6cd5\u89c4\u3002 1. \u4fe1\u606f\u6cc4\u9732\u98ce\u9669 \u6709\u4e00\u4e9b\u56e2\u961f\u4f1a\u76f4\u63a5\u4f7f\u7528\u751f\u4ea7\u4e0a\u7684\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u73af\u5883\u6570\u636e\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e0d\u662f\u975e\u5e38\u597d\u7684\u505a\u6cd5\uff0c\u867d\u7136\u5bf9\u4e8e\u4e00\u4e9b\u68d8\u624b\u7684\u7f3a\u9677\uff0c\u9700\u8981\u4f7f\u7528\u751f\u4ea7\u73af\u5883\u7684\u6570\u636e\u6765\u91cd\u73b0\uff0c\u4f46\u662f\u8fd9\u4e0d\u5e94\u8be5\u4f5c\u4e3a\u4e00\u79cd\u5e38\u6001\u5316\u7684\u64cd\u4f5c\u65b9\u6cd5\u3002\u751f\u4ea7\u6570\u636e\u9700\u8981\u548c\u975e\u751f\u4ea7\u7684\u73af\u5883\u4e25\u683c\u9694\u79bb\uff0c\u5e76\u4e14\u9700\u8981\u91c7\u53d6\u5fc5\u8981\u7684\u6743\u9650\u7ba1\u7406\u63aa\u65bd\uff0c\u6bd4\u5982\u5bf9\u6d4b\u8bd5\u6570\u636e\u8fdb\u884c\u8131\u654f\u3002 \u6d4b\u8bd5\u6570\u636e\u8131\u654f\u4e3b\u8981\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a\u5220\u9664\u3001\u7f6e\u6362\u548c\u6f02\u767d\u3002 \u5220\u9664\u662f\u6307\u5c06\u6d4b\u8bd5\u6570\u636e\u4e2d\u7684\u90e8\u5206\u6216\u8005\u5168\u90e8\u654f\u611f\u4fe1\u606f\u53bb\u9664\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u5220\u9664\u540e\u7684\u6570\u636e\u662f\u539f\u6765\u6570\u636e\u7684\u5b50\u96c6\uff1b\u7f6e\u6362\u662f\u6307\u5c06\u654f\u611f\u6570\u636e\u8fdb\u884c\u66ff\u6362\u6216\u8005\u63a9\u7801\u5904\u7406\uff0c\u4f7f\u7528\u7279\u6b8a\u7684\u7b26\u53f7\u62b9\u6389\u90e8\u5206\u4fe1\u606f\uff1b\u6f02\u767d\u662f\u6307\u901a\u8fc7\u7279\u5b9a\u7b97\u6cd5\u5c06\u539f\u6765\u7684\u654f\u611f\u4fe1\u606f\u8fdb\u884c\u52a0\u5de5\u548c\u5904\u7406\uff0c\u867d\u7136\u6570\u636e\u5185\u5bb9\u53d8\u5316\u4e86\uff0c\u4f46\u662f\u7279\u5f81\u672a\u53d8\uff0c\u8fd8\u662f\u80fd\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u4f7f\u7528\u7684\uff08\u6bd4\u5982\u968f\u673a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u8eab\u4efd\u8bc1\u53f7\u7801\uff09\u3002 \u7531\u4e8e\u6570\u636e\u8131\u654f\u5177\u6709\u7279\u6b8a\u6027\uff0c\u56e0\u6b64\u5f88\u591a\u516c\u53f8\u4f1a\u901a\u8fc7\u4e13\u95e8\u7684\u90e8\u95e8\u6765\u5b8c\u6210\u3002\u4ece\u5b9e\u73b0\u4e0a\u6765\u770b\uff0c\u6570\u636e\u8131\u654f\u53c8\u53ef\u4ee5\u5206\u4e3a\u9759\u6001\u8131\u654f\u548c\u52a8\u6001\u8131\u654f\u3002\u9759\u6001\u8131\u654f\u662f\u6307\u9700\u8981\u6d4b\u8bd5\u6570\u636e\u65f6\u624d\u4eba\u5de5\u5730\u4ece\u6570\u636e\u6e90\u83b7\u53d6\u5e76\u5904\u7406\u6570\u636e\uff1b\u800c\u52a8\u6001\u8131\u654f\u53ef\u4ee5\u901a\u8fc7\u8131\u654f\u670d\u52a1\u8fdb\u884c\u6570\u636e\u91c7\u96c6\uff0c\u7136\u540e\u7ecf\u8fc7\u8131\u654f\u7b97\u6cd5\u52a0\u5de5\uff0c\u518d\u5206\u53d1\u7ed9\u4f7f\u7528\u65b9\u3002\u4f7f\u7528\u65b9\u4e0d\u4ec5\u53ef\u4ee5\u7528\u4e8e\u6d4b\u8bd5\uff0c\u4e5f\u53ef\u7528\u4e8e\u4e1a\u52a1\u4fa7\u7684\u6570\u636e\u5bfc\u51fa\u3001\u62a5\u9001\u5ba1\u6279\u3001\u5b58\u6863\u7b49\u6d41\u7a0b\u3002 2. \u4fe1\u606f\u6570\u636e\u4fdd\u62a4\u6cd5\u89c4 \u54ea\u4e9b\u6570\u636e\u5c5e\u4e8e\u654f\u611f\u4fe1\u606f\uff0c\u4ee5\u53ca\u5982\u4f55\u7ba1\u7406\u5462\uff1f\u4e00\u822c\u53ef\u4ee5\u53c2\u8003\u7684\u4fe1\u606f\u662f\u76f8\u5173\u6cd5\u5f8b\u6cd5\u89c4\uff0c\u4ee5\u53ca\u884c\u4e1a\u76f8\u5173\u76d1\u7ba1\u90e8\u95e8\u7684\u8981\u6c42\u3002 2018\u5e745\u670825\u65e5\uff0c\u6b27\u6d32\u8054\u76df\u51fa\u53f0\u300a\u901a\u7528\u6570\u636e\u4fdd\u62a4\u6761\u4f8b\u300b\u7528\u4e8e\u6b27\u76df\u5185\u90e8\u7684\u6570\u636e\u7ba1\u7406\u3002\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4e2a\u4eba\u4fe1\u606f\u4fdd\u62a4\u6cd5\u300b\u662f2021\u5e7411\u67081\u65e5\u901a\u8fc7\u7684\u6211\u56fd\u5173\u4e8e\u4e2a\u4eba\u4fe1\u606f\u5b89\u5168\u7684\u9996\u90e8\u6cd5\u5f8b\u3002\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4e2a\u4eba\u4fe1\u606f\u4fdd\u62a4\u6cd5\u300b\u89c4\u5b9a\u4e86\u4e2a\u4eba\u4fe1\u606f\u5904\u7406\u8005\u6709\u4e49\u52a1\u5bf9\u4e2a\u4eba\u4fe1\u606f\u8fdb\u884c\u5206\u7c7b\u3001\u52a0\u5bc6\u5904\u7406\uff0c\u4ee5\u53ca\u89c4\u5b9a\u4e86\u654f\u611f\u4fe1\u606f\u7684\u8303\u56f4\u548c\u5904\u7406\u89c4\u5219\u3002 1.6 \u5c0f\u7ed3 \u672c\u7ae0\u4ecb\u7ecd\u4e86\u6d4b\u8bd5\u5de5\u4f5c\u7684\u57fa\u7840\u77e5\u8bc6\u3001\u6d4b\u8bd5\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u4ee5\u53ca\u53ef\u4ee5\u7528\u4e8e\u56e2\u961f\u6c9f\u901a\u7684\u57fa\u672c\u672f\u8bed\u3002\u5176\u4e2d\uff0c\u6d4b\u8bd5\u91d1\u5b57\u5854\u548c\u6d4b\u8bd5\u7b56\u7565\u7684\u4f7f\u7528\u9700\u8981\u5728\u56e2\u961f\u4e2d\u8fbe\u6210\u4e00\u81f4\uff0c\u8ba9\u56e2\u961f\u4e3a\u6700\u7ec8\u7684\u8d28\u91cf\u8d1f\u8d23\uff0c\u624d\u80fd\u4ea7\u51fa\u9ad8\u8d28\u91cf\u7684\u8f6f\u4ef6\u4ea7\u54c1\u3002 \u5bf9\u4e8e\u7814\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u6d4b\u8bd5\u7528\u4f8b\u7684\u8bbe\u8ba1\u4e0d\u9700\u8981\u7528\u5230\u8fc7\u4e8e\u590d\u6742\u7684\u6280\u5de7\u3002\u5728\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0c\u5f80\u5f80\u53ea\u9700\u8981\u4f7f\u7528\u8fb9\u754c\u503c\u548c\u7b49\u4ef7\u7c7b\u5212\u5206\u65b9\u6cd5\uff1b\u5728\u7f16\u5199 API \u6d4b\u8bd5\u65f6\uff0c\u53ef\u4ee5\u9002\u5f53\u4f7f\u7528\u573a\u666f\u6cd5\u7684\u65b9\u5f0f\u3002 \u672c\u7ae0\u7684\u6982\u5ff5\u8f83\u591a\uff0c\u8fd9\u4e9b\u6982\u5ff5\u662f\u540e\u7eed\u5185\u5bb9\u7684\u94fa\u57ab\uff0c\u4ece\u4e0b\u4e00\u7ae0\u5f00\u59cb\u672c\u4e66\u5c06\u9010\u6b65\u4ecb\u7ecd\u66f4\u591a\u5b9e\u8df5\u76f8\u5173\u7684\u5185\u5bb9\u3002 [^1]: Mike Cohn \u7684\u7ecf\u5178\u4e66\u7c4d\uff0c\u4e2d\u6587\u540d\u79f0\u4e3a\u300aScrum\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u300b.\u6e05\u534e\u5927\u5b66\u51fa\u7248\u793e, 2010.","title":"\u7b2c 1 \u7ae0 \u7814\u53d1\u81ea\u6d4b\u57fa\u7840"},{"location":"01-self-testing-fundamentals/#1","text":"\u8f6f\u4ef6\u6d4b\u8bd5\u662f\u4e00\u4e2a\u975e\u5e38\u4e13\u4e1a\u7684\u9886\u57df\uff0c\u751a\u81f3\u6709\u4e00\u4e9b\u5927\u5b66\u4e5f\u8bbe\u7f6e\u4e86\u8f6f\u4ef6\u6d4b\u8bd5\u8bfe\u7a0b\u3002\u867d\u7136\u5927\u591a\u6570\u8f6f\u4ef6\u516c\u53f8\u90fd\u4f1a\u8bbe\u7f6e\u8f6f\u4ef6\u6d4b\u8bd5\u7c7b\u7684\u5c97\u4f4d\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\u4f18\u79c0\u7684\u7814\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u4fdd\u8bc1\u8f6f\u4ef6\u8d28\u91cf\u4e5f\u5e94\u8be5\u662f\u4efd\u5185\u7684\u4e8b\u60c5\u3002 \u7814\u53d1\u4eba\u5458\u5982\u679c\u4ece\u7814\u53d1\u7684\u89d2\u5ea6\u5173\u6ce8\u6d4b\u8bd5\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u4e00\u4e01\u70b9\u6295\u5165\uff0c\u5c31\u53ef\u4ee5\u6362\u53d6\u5de8\u5927\u7684\u4ef7\u503c\u3002\u56e0\u4e3a\u7814\u53d1\u4eba\u5458\u719f\u6089\u6280\u672f\u65b9\u6848\u3001\u7f16\u7801\u7684\u7ec6\u8282\uff0c\u751a\u81f3\u6240\u6709\u7684\u5206\u652f\u6d41\u7a0b\uff0c\u4e14\u4e86\u89e3\u57fa\u672c\u7684\u6d4b\u8bd5\u6982\u5ff5\uff0c\u5728\u672c\u5730\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5c31\u80fd\u53d1\u73b0\u5927\u91cf\u7684\u95ee\u9898\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u53cd\u590d\u79fb\u4ea4\u6d4b\u8bd5\u7b49\u6d41\u7a0b\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u6548\u7387\u3002\u53e6\u5916\uff0c\u7f16\u5199\u51fa\u9ad8\u8d28\u91cf\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u7ed9\u7814\u53d1\u4eba\u5458\u5e26\u6765\u6ee1\u8db3\u611f\u548c\u4fe1\u5fc3\uff0c\u907f\u514d\u4e86\u53cd\u590d\u8c03\u8bd5\u3002\u800c\u4e14\u4ea4\u4ed8\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u540e\uff0c\u7814\u53d1\u4eba\u5458\u4e5f\u53ef\u4ee5\u66f4\u597d\u5730\u96c6\u4e2d\u7cbe\u529b\u8fdb\u884c\u4e0b\u4e00\u6bb5\u7a0b\u5e8f\u7684\u5f00\u53d1\uff0c\u907f\u514d\u4e86\u56e0\u4e3a\u88ab\u6253\u65ad\u800c\u9020\u6210\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u5e26\u6765\u7684\u7cbe\u529b\u6d88\u8017\u3002 \u672c\u7ae0\u4f1a\u4ecb\u7ecd\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5\u548c\u77e5\u8bc6\uff0c\u7531\u4e8e\u672c\u4e66\u662f\u9762\u5411\u7814\u53d1\u4eba\u5458\u7684\uff0c\u56e0\u6b64\u5728\u5185\u5bb9\u7ec4\u7ec7\u4e0a\u4f1a\u4e3b\u8981\u5173\u6ce8\u5728\u767d\u76d2\u6d4b\u8bd5\u4e0a\u3002 \u672c\u7ae0\u6db5\u76d6\u7684\u5185\u5bb9\u4ee5\u53ca\u5b66\u4e60\u76ee\u6807\u5982\u4e0b\uff1a \u4e86\u89e3\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u57fa\u672c\u6982\u5ff5\u3002 \u7406\u89e3\u5e38\u89c1\u7684\u6d4b\u8bd5\u5206\u7c7b\u3002 \u638c\u63e1\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u7684\u4e00\u822c\u65b9\u6cd5\u3002 \u4e86\u89e3\u54ea\u4e9b\u7c7b\u578b\u7684\u6d4b\u8bd5\u9002\u5408\u7814\u53d1\u4eba\u5458\u81ea\u6d4b\u5b8c\u6210\u3002 \u4e00\u4e9b\u51c6\u5907\u6d4b\u8bd5\u6570\u636e\u7684\u6280\u5de7\u3002","title":"\u7b2c 1 \u7ae0 \u7814\u53d1\u81ea\u6d4b\u57fa\u7840"},{"location":"01-self-testing-fundamentals/#11","text":"\u8f6f\u4ef6\u6d4b\u8bd5\u662f\u4e00\u9879\u4e13\u4e1a\u7684\u5de5\u4f5c\uff0c\u91cc\u9762\u6d89\u53ca\u4e00\u4e9b\u4e13\u4e1a\u672f\u8bed\u548c\u6982\u5ff5\uff0c\u4e86\u89e3\u5b83\u4eec\u53ef\u4ee5\u66f4\u597d\u5730\u4e0e\u8d28\u91cf\u5de5\u7a0b\u5e08\u6c9f\u901a\uff0c\u672c\u8282\u5c06\u7cbe\u9009\u90e8\u5206\u6982\u5ff5\u8fdb\u884c\u89e3\u91ca\uff0c\u8fd9\u4e9b\u6982\u5ff5\u662f\u4e86\u89e3\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u57fa\u7840\u3002","title":"1.1 \u8f6f\u4ef6\u6d4b\u8bd5\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"01-self-testing-fundamentals/#111","text":"\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u7684\u5f88\u591a\u6982\u5ff5\u6765\u81ea\u4f20\u7edf\u7684\u5de5\u7a0b\u884c\u4e1a\uff0c\u6d4b\u8bd5\uff08Testing\uff09\u662f\u4e00\u79cd\u68c0\u9a8c\u4ea7\u54c1\u8d28\u91cf\u7684\u6d3b\u52a8\u3002\u56e0\u6b64\uff0c\u901a\u5e38\u610f\u4e49\u4e0a\u7684\"\u8f6f\u4ef6\u6d4b\u8bd5\"\u88ab\u5b9a\u4e49\u4e3a\u7279\u5b9a\u73af\u5883\u4e0b\u68c0\u67e5\u8f6f\u4ef6\u662f\u5426\u5b58\u5728\u9519\u8bef\uff0c\u4ee5\u53ca\u80fd\u5426\u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\u548c\u8bbe\u8ba1\u7684\u6d3b\u52a8\u6216\u8fc7\u7a0b\u3002 \u4f46\u662f\u8f6f\u4ef6\u7684\u542b\u4e49\u4e0d\u4ec5\u4ec5\u662f\u7a0b\u5e8f\u672c\u8eab\uff0c\u8fd8\u5305\u62ec\u6587\u6863\u3001\u6570\u636e\u548c\u5176\u4ed6\u57fa\u7840\u8bbe\u65bd\uff0c\u56e0\u6b64\u5bf9\u8f6f\u4ef6\u8d28\u91cf\u7684\u4fdd\u8bc1\u5e76\u6ca1\u6709\u5c40\u9650\u4e8e\u4ee3\u7801\u672c\u8eab\u3002\u8fd9\u4e5f\u662f\u8d8a\u6765\u8d8a\u591a\u7684\u516c\u53f8\u5c06\u6d4b\u8bd5\u5de5\u7a0b\u5e08\uff08Software Test Engineer\uff09\u7684\u5c97\u4f4d\u8f6c\u53d8\u4e3a\u8d28\u91cf\u5de5\u7a0b\u5e08 \uff08Quality Assurance\uff09\u7684\u539f\u56e0\u3002 \u7531\u4e8e\u5bf9\u8f6f\u4ef6\u7684\u4fee\u6539\u4f34\u968f\u7740\u6574\u4e2a\u8f6f\u4ef6\u751f\u547d\u5468\u671f\uff0c\u4e1a\u754c\u5f00\u59cb\u63d0\u5021\u5168\u6d41\u7a0b\u6d4b\u8bd5\uff0c\u6216\u8005\u53eb\u5168\u751f\u547d\u5468\u671f\u8d28\u91cf\u4fdd\u8bc1\u3002\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u6216\u8005\u7279\u5b9a\u7c7b\u578b\u7684\u6d4b\u8bd5\u53ea\u662f\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u4e00\u5c0f\u90e8\u5206\u3002 \u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u65e0\u8bba\u91c7\u7528\u7684\u662f\u7011\u5e03\u5f00\u53d1\u6a21\u5f0f\u8fd8\u662f\u654f\u6377\u5f00\u53d1\u6a21\u5f0f\uff0c\u90fd\u4f1a\u5b58\u5728\u9700\u6c42\u5206\u6790\u3001\u8bbe\u8ba1\u3001\u7f16\u7801\u3001\u6d4b\u8bd5\u3001\u8fd0\u884c\u7b49\u8fc7\u7a0b\u3002\u5728\u57fa\u4e8e\u5168\u6d41\u7a0b\u6d4b\u8bd5\u7684\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u6d4b\u8bd5\u7c7b\u578b\u88ab\u63d0\u51fa\u6765\uff0c\u6bd4\u5982\u9700\u6c42\u6d4b\u8bd5\u3001\u67b6\u6784\u6d4b\u8bd5\u3001\u8bbe\u8ba1\u6d4b\u8bd5\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u7b49\u3002 \u4e0d\u4ec5\u4ec5\u662f\u6d4b\u8bd5\u4eba\u5458\u9700\u8981\u5173\u6ce8\u6d4b\u8bd5\u7ed3\u679c\uff0c\u6574\u4e2a\u56e2\u961f\u90fd\u9700\u8981\u5bf9\u8d28\u91cf\u8d1f\u8d23\u3002\u56e2\u961f\u5de5\u7a0b\u80fd\u529b\u5305\u542b\u4e86\u5bf9\u8f6f\u4ef6\u8d28\u91cf\u7684\u8981\u6c42\uff0c\u53ef\u4ee5\u53c2\u8003\u80fd\u529b\u6210\u719f\u5ea6\u6a21\u578b\u96c6\u6210\u7684\u63cf\u8ff0\u3002 \u80fd\u529b\u6210\u719f\u5ea6\u6a21\u578b\u96c6\u6210\uff08CMMI\uff09\u662f\u4e00\u4e2a\u7ec4\u7ec7\u8fc7\u7a0b\u6539\u8fdb\u6846\u67b6\uff0cCMMI \u4e2d\u7684\u4e0d\u540c\u7b49\u7ea7\u63cf\u8ff0\u4e86\u4e0d\u540c\u5c42\u6b21\u7684\u8f6f\u4ef6\u5f00\u53d1\u80fd\u529b\uff0c\u4e5f\u5c31\u662f\u8f6f\u4ef6\u5de5\u7a0b\u6210\u719f\u5ea6\u3002CMMI \u5bf9\u8f6f\u4ef6\u8d28\u91cf\u63d0\u51fa\u4e86\u8981\u6c42\uff0c\u8fd9\u4e9b\u8981\u6c42\u4e5f\u662f\u5f88\u591a\u516c\u53f8\u5bf9\u8d28\u91cf\u5de5\u7a0b\u5e08\u7684\u8bc9\u6c42\u3002 \u6b64\u5916\uff0c\u60f3\u8981\u4fdd\u8bc1\u8f6f\u4ef6\u7684\u8d28\u91cf\uff0c\u5bf9\u8f6f\u4ef6\u6d4b\u8bd5\u548c\u5f00\u53d1\u8fc7\u7a0b\u7684\u5ea6\u91cf\u4e5f\u975e\u5e38\u91cd\u8981\uff0c\u9664\u4e86\u6d4b\u8bd5\u672c\u8eab\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u5229\u7528\u7edf\u8ba1\u6280\u672f\u5bf9\u6d4b\u8bd5\u7684\u7ed3\u679c\u8fdb\u884c\u91cf\u5316\u3002\u8fd9\u79cd\u4ece\u6d4b\u8bd5\u4eba\u5458\u5173\u6ce8\u6d4b\u8bd5\uff0c\u5230\u56e2\u961f\u5173\u6ce8\u6d4b\u8bd5\u7684\u8f6c\u53d8\uff0c\u8ba9\u8f6f\u4ef6\u6d4b\u8bd5\u4ece\u4f5c\u574a\u5f0f\u7684\u5b9a\u6027\u64cd\u4f5c\uff0c\u8f6c\u53d8\u4e3a\u79d1\u5b66\u7684\u5b9a\u91cf\u64cd\u4f5c\u3002\u8d28\u91cf\u7684\u5ea6\u91cf\u6307\u6807\u548c\u65b9\u6cd5\u975e\u5e38\u591a\u6837\uff0c\u6bd4\u5982\u6709\u6d4b\u8bd5\u8986\u76d6\u7387\u3001\u6bcf\u5343\u884c\u4ee3\u7801\u7684\u7f3a\u9677\u7387\u7b49\u6307\u6807\u3002\u8d28\u91cf\u7684\u5ea6\u91cf\u6307\u6807\u53ef\u4ee5\u540c\u6bd4\u6216\u8005\u73af\u6bd4\u8f6f\u4ef6\u8d28\u91cf\u7684\u53d8\u5316\u3002 \u4e3a\u786e\u4fdd\u5728\u8f6f\u4ef6\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u5bf9\u9700\u6c42\u3001\u5f00\u53d1\u3001\u8fd0\u7ef4\u7684\u8d28\u91cf\u8fdb\u884c\u6d4b\u8bd5\u548c\u9a8c\u8bc1\uff0c\u5408\u7406\u7684\u5206\u6790\u548c\u89c4\u5212\u5fc5\u4e0d\u53ef\u5c11\u3002\u8fd9\u4e9b\u5206\u6790\u5305\u62ec\u8f6f\u4ef6\u9879\u76ee\u542f\u52a8\u65f6\u671f\u6d4b\u8bd5\u7b56\u7565\u7684\u5236\u5b9a\uff0c\u5bf9\u8bbe\u8ba1\u6307\u6807\u7684\u6838\u5b9a\uff0c\u63d0\u53d6\u9700\u6c42\u4e2d\u7684\u8bbe\u8ba1\u6307\u6807\u7b49\u3002 \u73b0\u4ee3\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u63d0\u5021\u6d4b\u8bd5\u7684\u5de5\u4f5c\u4e0d\u5728\u5f00\u53d1\u5b8c\u6210\u540e\u5f00\u59cb\uff0c\u4e5f\u4e0d\u5728\u8fd0\u8425\u6295\u4ea7\u540e\u7ed3\u675f\u3002\u9879\u76ee\u5f00\u59cb\u65f6\u6d4b\u8bd5\u4eba\u5458\u5c31\u9700\u8981\u53c2\u4e0e\u5bf9\u9700\u6c42\u7684\u9a8c\u8bc1\u548c\u8bc4\u5ba1\uff0c\u56e0\u6b64\u4e5f\u5c31\u884d\u751f\u51fa\u4e86\u6d4b\u8bd5\u5de6\u79fb\u7684\u6982\u5ff5\uff0c\u800c\u5bf9\u8fd0\u8425\u671f\u8d28\u91cf\u63d0\u51fa\u8981\u6c42\uff0c\u5219\u76f8\u5e94\u4ea7\u751f\u4e86\u6d4b\u8bd5\u53f3\u79fb\u7684\u6982\u5ff5\u3002","title":"1.1.1 \u8f6f\u4ef6\u6d4b\u8bd5"},{"location":"01-self-testing-fundamentals/#112","text":"\u5982\u679c\u8f6f\u4ef6\u6ca1\u6709\u6309\u7167\u6211\u4eec\u7684\u671f\u671b\u8fd0\u884c\uff0c\u6211\u4eec\u4f1a\u8bf4\u8f6f\u4ef6\u6709 Bug\u3002Bug \u7684\u539f\u610f\u662f\"\u81ed\u866b\"\uff0c\u8fd9\u4e2a\u540d\u79f0\u7684\u6765\u6e90\u662f\u7ee7\u7535\u5668\u8ba1\u7b97\u673a\u4e2d\u98de\u8fdb\u7684\u4e00\u53ea\u98de\u86fe\u3002 \u88ab\u516c\u8ba4\u4e3a\u4e16\u754c\u4e0a\u6700\u65e9\u4e00\u6279\u7a0b\u5e8f\u5458\u4e2d\u7684\u845b\u4e3d\u4e1d \u00b7 \u970d\u666e\u5973\u58eb\u5728 Mark II \u8ba1\u7b97\u673a\u4e0a\u5de5\u4f5c\u65f6\uff0c\u8bbe\u5907\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u4e86\uff0c\u6574\u4e2a\u56e2\u961f\u90fd\u4e0d\u77e5\u9053\u600e\u4e48\u56de\u4e8b\u3002\u540e\u6765\u7ecf\u8fc7\u6392\u67e5\u53d1\u73b0\u662f\u4e00\u53ea\u98de\u86fe\u98de\u5165\u8bbe\u5907\u5185\u90e8\u5f15\u8d77\u7684\u6545\u969c\uff08Mark II\u662f\u4e00\u53f0\u7ee7\u7535\u5668\u8ba1\u7b97\u673a\uff0c\u5f02\u7269\u7684\u4fb5\u5165\u4f1a\u5bfc\u81f4\u5143\u4ef6\u65e0\u6cd5\u5de5\u4f5c\uff09\u3002\u845b\u4e3d\u4e1d \u00b7\u970d\u666e\u5973\u58eb\u5728\u5979\u7684\u7b14\u8bb0\u4e2d\u8bb0\u5f55\u4e86\u8fd9\u4e2a\u6545\u4e8b\uff0c\u8bf4\u660e\u95ee\u9898\u7684\u6839\u56e0\u662f\u4e00\u4e2a\u866b\u5b50\u5f15\u8d77\u7684\uff0c Bug \u8fd9\u4e2a\u8bcd\u4e5f\u6d41\u4f20\u4e86\u4e0b\u6765\u3002 \u4e0d\u8fc7\u5728\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\uff0c\u66f4\u591a\u4f7f\u7528\u7f3a\u9677\uff08Defeat\uff09\u6765\u63cf\u8ff0\u8f6f\u4ef6\u6ca1\u6709\u6309\u7167\u9884\u671f\u8fd0\u884c\u7684\u73b0\u8c61\u3002\u7f3a\u9677\u63cf\u8ff0\u7684\u4e0d\u4ec5\u4ec5\u662f\u7a0b\u5e8f\u7f16\u7801\u4e0a\u7684\u9519\u8bef\uff0c\u8fd8\u5305\u62ec\u9700\u6c42\u548c\u8bbe\u8ba1\u7684\u4e0d\u5408\u7406\uff0c\u8fd0\u8425\u671f\u95f4\u7684\u914d\u7f6e\u95ee\u9898\uff0c\u4ee5\u53ca\u57fa\u7840\u8bbe\u65bd\u6545\u969c\u7b49\u3002 \u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u7f3a\u9677\u7684\u5f15\u5165\u53ef\u80fd\u4f1a\u53d1\u751f\u5728\u8f6f\u4ef6\u5f00\u53d1\u751f\u547d\u5468\u671f\u7684\u4efb\u4f55\u4e00\u4e2a\u73af\u8282\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b63\u4ea4\u7f3a\u9677\u5206\u7c7b\uff08Orthogonal Defect Classification\uff09\u6cd5\u5212\u5206\u7f3a\u9677\uff0c\u5177\u4f53\u5982\u4e0b\u3002 \u9700\u6c42\u7f3a\u9677\uff1a\u9700\u6c42\u672c\u8eab\u4e0d\u5408\u7406\u6216\u8005\u7f3a\u4e4f\u7cfb\u7edf\u6027\u8003\u8651\uff0c\u9020\u6210\u4e00\u81f4\u6027\u95ee\u9898\u6216\u903b\u8f91\u77db\u76fe\u3002 \u8bbe\u8ba1\u7f3a\u9677\uff1a\u8bbe\u8ba1\u65b9\u6848\u65f6\u672a\u8003\u8651\u5230\u4e00\u4e9b\u573a\u666f\uff0c\u6216\u8005\u5728\u8bbe\u8ba1\u4e0a\u4e0d\u80fd\u6ee1\u8db3\u4e00\u4e9b\u7279\u5b9a\u573a\u666f\uff0c\u9020\u6210\u8f6f\u4ef6\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u95ee\u9898\u3002 \u7f16\u7801\u7f3a\u9677\uff1a\u7531\u4e8e\u5f00\u53d1\u8005\u7684\u758f\u5ffd\u6216\u8005\u5176\u4ed6\u539f\u56e0\uff0c\u5728\u7f16\u7801\u9636\u6bb5\u5f15\u5165\u7684\u7f3a\u9677\u3002 \u914d\u7f6e\u7f3a\u9677\uff1a\u5728\u6295\u5165\u751f\u4ea7\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u914d\u7f6e\u4e0d\u5408\u7406\u6216\u8005\u73af\u5883\u53d1\u751f\u53d8\u5316\u9020\u6210\u7684\u7f3a\u9677\uff0c\u6bd4\u5982\u66f4\u6362\u64cd\u4f5c\u7cfb\u7edf\u540e\u8f6f\u4ef6\u65e0\u6cd5\u517c\u5bb9\u3002 \u4e3a\u4e86\u66f4\u6e05\u6670\u5730\u63cf\u8ff0\u7f3a\u9677\u8fd9\u4e2a\u6982\u5ff5\uff0c\u4eba\u4eec\u533a\u5206\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u6982\u5ff5\u3002 \u7f3a\u9677\uff08Defect\uff09\uff1a\u8f6f\u4ef6\u4ea7\u54c1\u4e2d\u4e0d\u6ee1\u8db3\u8bbe\u8ba1\u9700\u8981\u7684\u90e8\u5206\uff0c\u5b83\u662f\u9759\u6001\u7684\uff0c\u4e00\u76f4\u5b58\u5728\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u901a\u4fd7\u8bf4\u7684 Bug\u3002 \u9519\u8bef\uff08Error\uff09\uff1a\u7a0b\u5e8f\u6267\u884c\u6709\u7f3a\u9677\u7684\u4ee3\u7801\u6216\u8005\u8f93\u5165\u7279\u5b9a\u7684\u6570\u636e\u540e\uff0c\u9020\u6210\u7a0b\u5e8f\u72b6\u6001\u5f02\u5e38\u3002 \u5931\u6548\uff08Failure\uff09\uff1a\u5931\u6548\u662f\u8f6f\u4ef6\u4e0d\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u4f7f\u7528\u8005\u611f\u77e5\u5230\u7684\u72b6\u6001\u3002\u4e00\u4e2a\u8f6f\u4ef6\u53ef\u80fd\u6709\u7f3a\u9677\u4f46\u662f\u4e0d\u4e00\u5b9a\u4f1a\u5e26\u6765\u9519\u8bef\u5e76\u88ab\u611f\u77e5\u5230\uff0c\u5931\u6548\u4e5f\u6709\u53ef\u80fd\u662f\u975e\u7f3a\u9677\u9020\u6210\u7684\uff0c\u6bd4\u5982\u8fd0\u884c\u73af\u5883\u4e0d\u6ee1\u8db3\u8981\u6c42\u7b49\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7f3a\u9677\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u9519\u8bef\uff0c\u7531\u7f3a\u9677\u5bfc\u81f4\u7a0b\u5e8f\u53d1\u751f\u9519\u8bef\uff0c\u53eb\u505a\u7f3a\u9677\u7684\u6fc0\u6d3b\u3002\u7f3a\u9677\u5f80\u5f80\u9700\u8981\u5728\u7279\u5b9a\u7684\u6761\u4ef6\u548c\u573a\u666f\u4e0b\u624d\u4f1a\u88ab\u6fc0\u6d3b\uff0c\u4f8b\u5982\uff0c\u4e00\u4e9b\u7279\u522b\u7684\u8f93\u5165\u6216\u8005\u8fd0\u884c\u73af\u5883\u53d1\u751f\u53d8\u5316\u3002 \u672a\u77e5\u6761\u4ef6\u548c\u573a\u666f\u4e0b\u7684\u7f3a\u9677\u4fee\u590d\u8d77\u6765\u975e\u5e38\u56f0\u96be\uff0c\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u5de5\u4f5c\u5c31\u662f\u5c06\u80fd\u590d\u73b0\u8fd9\u4e9b\u7f3a\u9677\u7684\u573a\u666f\u627e\u51fa\u6765\uff0c\u4ee5\u4fbf\u4e8e\u4fee\u590d\u3002 \u53e6\u5916\uff0c\u73b0\u5728\u4e5f\u6709\u5f88\u591a\u516c\u53f8\u6839\u636e\u4f18\u5148\u7ea7\u548c\u4e25\u91cd\u6027\u5bf9\u5bfc\u81f4\u95ee\u9898\u7684\u7f3a\u9677\u8fdb\u884c\u5206\u7c7b\uff0c\u6bd4\u5982\u5c06\u7f3a\u9677\u5206\u4e3a4\u4e2a\u7ea7\u522b\uff1a P0\u81f4\u547d\uff1a\u975e\u5e38\u4e25\u91cd\u7684\u7ebf\u4e0a\u4e8b\u6545\uff08\u6bd4\u5982\u8ba9\u6574\u4e2a\u7cfb\u7edf\u762b\u75ea\uff09\uff0c\u9700\u8981\u505c\u4e0b\u624b\u4e0a\u7684\u5de5\u4f5c\u7acb\u5373\u4fee\u590d\u3002\u5982\u679c\u4e0d\u80fd\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u4fee\u590d\uff0c\u9700\u8981\u4e0a\u62a5\uff0c\u901a\u8fc7\u5176\u4ed6\u9014\u5f84\u6765\u89e3\u51b3\uff08\u6bd4\u5982\u4f7f\u7528\u5907\u7528\u65b9\u6848\uff09\u3002 P1 \u4e25\u91cd\uff1a\u90e8\u5206\u91cd\u8981\u529f\u80fd\u4e0d\u53ef\u4f7f\u7528\uff0c\u867d\u7136\u4f18\u5148\u7ea7\u6ca1\u6709 P0\u90a3\u4e48\u9ad8\uff0c\u4f46\u662f\u4e5f\u9700\u8981\u7acb\u5373\u4fee\u590d\u5e76\u53d1\u5e03\u8865\u4e01\u3002 P2\u4e00\u822c\uff1a\u6b21\u8981\u529f\u80fd\u4e0d\u53ef\u4f7f\u7528\uff0c\u4f1a\u7ed9\u7528\u6237\u5e26\u6765\u4e0d\u4fbf\uff0c\u4f46\u662f\u7531\u4e8e\u9700\u8981\u5e73\u8861\u6b63\u5e38\u5de5\u4f5c\u8282\u594f\uff0c\u56e0\u6b64\u4e0d\u4f1a\u7acb\u5373\u4fee\u590d\uff0c\u5728\u8fed\u4ee3\u53d1\u5e03\u65f6\u4fee\u590d\u5373\u53ef\u3002 P3 \u8f7b\u5fae\uff1a\u4f1a\u7ed9\u7528\u6237\u5e26\u6765\u4e0d\u4fbf\uff0c\u6216\u8005 UI\u3001\u6587\u6848\u4e0a\u5b58\u5728\u9700\u8981\u8c03\u6574\u7684\u5185\u5bb9\u3002\u5728\u4e0d\u5f71\u54cd\u5f00\u53d1\u8282\u594f\u7684\u524d\u63d0\u4e0b\uff0c\u8fdb\u884c\u4f18\u5316\u5904\u7406\u5373\u53ef\u3002 \u8bf4\u660e\uff1a\u4e0a\u8ff0\u5206\u7c7b\u4e2d\u7684\u5b57\u6bcd P \u662f Priority \u7684\u9996\u5b57\u6bcd\u7f29\u5199\uff0c\u4e2d\u6587\u542b\u4e49\u662f\u4f18\u5148\u7ea7\u3002","title":"1.1.2 \u7f3a\u9677"},{"location":"01-self-testing-fundamentals/#113","text":"\u6d4b\u8bd5\u7528\u4f8b\uff08Test Case\uff0cTC\uff09\u662f\u4e00\u7ec4\u6d4b\u8bd5\u8f93\u5165\u548c\u9884\u671f\u7684\u96c6\u5408\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5305\u542b\u6d4b\u8bd5\u5185\u5bb9\u9700\u8981\u7684\u8f93\u5165\u4fe1\u606f\u3001\u9884\u671f\u53ca\u7ed3\u679c\uff0c\u4ee5\u53ca\u7279\u5b9a\u7684\u6d4b\u8bd5\u73af\u5883\u3002 \u5728\u4e0d\u540c\u7684\u8f6f\u4ef6\u5f00\u53d1\u6a21\u578b\u4e2d\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5448\u73b0\u7684\u65b9\u5f0f\u4e0d\u540c\u3002\u5728\u7011\u5e03\u6a21\u578b\u4e2d\uff0c\u901a\u5e38\u4f1a\u6709\u5b8c\u5584\u7684\u8868\u683c\u6765\u7ba1\u7406\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u6301\u7eed\u7ef4\u62a4\uff1b\u4f7f\u7528\u654f\u6377\u7684\u65b9\u5f0f\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5f80\u5f80\u8ddf\u968f\u7740\u7528\u6237\u6545\u4e8b\uff08\u7528\u6237\u6545\u4e8b\u662f\u4e00\u79cd\u654f\u6377\u9700\u6c42\u6f84\u6e05\u7684\u65b9\u6cd5\uff0c\u5305\u542b\u53ef\u9a8c\u6536\u7684\u6700\u5c0f\u7279\u6027\u96c6\uff09\uff1bRUP\uff08\u7edf\u4e00\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\uff09\u5219\u8981\u6c42\u6d4b\u8bd5\u7528\u4f8b\u53ef\u4ee5\u8ffd\u6eaf\u9a8c\u8bc1\u7cfb\u7edf\u884c\u4e3a\uff0c\u91c7\u7528\u7c7b\u4f3c\u7011\u5e03\u7684\u65b9\u5f0f\u7ef4\u62a4\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f46\u662f\u6bcf\u4e2a\u8fed\u4ee3\u90fd\u9700\u8981\u66f4\u65b0\uff0c\u5e76\u6301\u7eed\u7ef4\u62a4\u3002 \u6d4b\u8bd5\u7528\u4f8b\u7684\u89c4\u683c\u5728 IEEE \u6807\u51c6\u548c\u56fd\u6807\uff08GB/T\uff09\u4e0a\u90fd\u6709\u88ab\u5b9a\u4e49\u8fc7\uff0c\u4e3b\u8981\u5305\u542b\u5982\u4e0b\u5185\u5bb9\uff1a \u88ab\u6d4b\u8bd5\u7684\u5bf9\u8c61\uff0c\u5bf9\u5e94\u8f6f\u4ef6\u7279\u6027\u6216\u8005\u9700\u6c42\u3002 \u7ed9\u4e88\u7684\u6761\u4ef6\uff0c\u5305\u62ec\u8f93\u5165\u4fe1\u606f\u548c\u6d4b\u8bd5\u73af\u5883\uff0c\u8f93\u5165\u4fe1\u606f\u5305\u542b\u4e86\u6d4b\u8bd5\u6570\u636e\u548c\u64cd\u4f5c\u6b65\u9aa4\uff08\u6267\u884c\u8def\u5f84\uff09\u3002 \u671f\u671b\u7684\u7ed3\u679c\uff0c\u5305\u542b\u8f6f\u4ef6\u7684\u6267\u884c\u9884\u671f\uff0c\u5373\u671f\u5f85\u7684\u7a0b\u5e8f\u8f93\u51fa\u3002 \u5982\u679c\u80fd\u4e25\u683c\u548c\u826f\u597d\u5730\u57fa\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u5b9e\u8df5\uff0c\u53ef\u4ee5\u7528\u8f83\u5c0f\u7684\u6210\u672c\u8986\u76d6\u5927\u91cf\u7684\u6d4b\u8bd5\u573a\u666f\uff0c\u5e76\u80fd\u51c6\u786e\u5730\u8ba9\u95ee\u9898\u91cd\u73b0\u3002 \u5728\u4e00\u4e9b\u56e2\u961f\u4f1a\u4f7f\u7528\u601d\u7ef4\u5bfc\u56fe\u4f5c\u4e3a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f46\u662f\u8fd9\u79cd\u5f62\u5f0f\u6bd4\u8f83\u96be\u4ee5\u7ef4\u62a4\u3002\u8d8a\u6765\u8d8a\u591a\u7684\u516c\u53f8\u4f1a\u521b\u5efa\u81ea\u5df1\u7684\u6d4b\u8bd5\u7ba1\u7406\u5e73\u53f0\uff0c\u601d\u7ef4\u5bfc\u56fe\u5219\u4f5c\u4e3a\u6d4b\u8bd5\u7528\u4f8b\u7684\u8865\u5145\u3002 \u7f16\u5199\u597d\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u9700\u8981\u9075\u5b88\u5982\u4e0b\u7684\u539f\u5219\uff1a \u671f\u671b\u7684\u7ed3\u679c\u53ef\u5224\u5b9a\u3002\u6d4b\u8bd5\u7528\u4f8b\u6709\u660e\u786e\u7684\u5224\u5b9a\u6807\u51c6\uff0c\u6bd4\u5982\u7cfb\u7edf\u767b\u5f55\u6210\u529f\u663e\u793a \"\u767b\u5f55\u6210\u529f\" \u6587\u6848\u4ee5\u53ca\u4e2a\u4eba\u4fe1\u606f\u3002 \u6d4b\u8bd5\u7528\u4f8b\u53ef\u91cd\u590d\u6267\u884c\u3002\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u80fd\u88ab\u53cd\u590d\u6267\u884c\uff0c\u5e76\u4e14\u7ed3\u679c\u4fdd\u6301\u7a33\u5b9a\u3002 \u6d4b\u8bd5\u7528\u4f8b\u5177\u6709\u4ee3\u8868\u6027\u3002\u6d4b\u8bd5\u7528\u4f8b\u7684\u8bbe\u8ba1\u5e94\u8be5\u4ece\u5178\u578b\u5230\u7279\u6b8a\u5ef6\u5c55\uff0c\u5e76\u80fd\u8986\u76d6\u6838\u5fc3\u4e1a\u52a1\u573a\u666f\u3002 \u8ba9\u6d4b\u8bd5\u7528\u4f8b\u5177\u6709\u4ee3\u8868\u6027\u662f\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u7684\u96be\u70b9\uff0c\u8bbe\u8ba1\u8005\u9700\u8981\u4ece\u4e0d\u540c\u7684\u89d2\u5ea6\u9009\u53d6\u6d4b\u8bd5\u573a\u666f\uff0c\u8fbe\u5230\u6700\u4f18\u7684\u6d4b\u8bd5\u6027\u4ef7\u6bd4\u3002\u6709\u4e9b\u516c\u53f8\u4f1a\u628a\u6b63\u5e38\u7684\u6d41\u7a0b\u548c\u7b26\u5408\u9884\u671f\u7684\u7ed3\u679c\u53eb\u505a\u6b63\u5411\u7528\u4f8b\uff0c\u628a\u4e00\u4e9b\u5f02\u5e38\u5904\u7406\u7684\u573a\u666f\u53eb\u505a\u53cd\u5411\u7528\u4f8b\u3002 \u53e6\u5916\u6700\u4e3a\u5173\u952e\u7684\u5730\u65b9\u662f\u8bbe\u8ba1\u6d4b\u8bd5\u6570\u636e\u65f6\uff0c\u9700\u8981\u8003\u8651\u5230\u5927\u91cf\u7684\u8fb9\u754c\u503c\u3002\u8fb9\u754c\u503c\u6307\u7684\u662f\u4ecb\u4e8e\u6b63\u5e38\u6570\u636e\u548c\u9519\u8bef\u6570\u636e\u4e4b\u95f4\u7684\u4e34\u754c\u6570\u636e\uff0c\u6bd4\u5982 0 \u662f\u6b63\u6570\u548c\u6574\u6570\u4e4b\u95f4\u7684\u4e00\u4e2a\u8fb9\u754c\u503c\u3002\u7528\u6237\u8f93\u5165\u5f80\u5f80\u96be\u4ee5\u7a77\u5c3d\uff0c\u501f\u52a9\u8fb9\u754c\u503c\u4f5c\u4e3a\u4ee3\u8868\u6027\u6d4b\u8bd5\u6570\u636e\u662f\u4e00\u79cd\u5e38\u7528\u7684\u65b9\u5f0f\u3002","title":"1.1.3 \u6d4b\u8bd5\u7528\u4f8b"},{"location":"01-self-testing-fundamentals/#114","text":"\u8f6f\u4ef6\u6d4b\u8bd5\u6709\u5f88\u591a\u7c7b\u578b\uff0c\u6d4b\u8bd5\u91d1\u5b57\u5854\u7684\u6838\u5fc3\u7406\u5ff5\u662f\uff1a\u4e0d\u540c\u6d4b\u8bd5\u7c7b\u578b\u7684\u6536\u76ca\u548c\u6027\u4ef7\u6bd4\u662f\u4e0d\u4e00\u6837\u7684\u3002\u5173\u4e8e\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u5206\u7c7b\u4f1a\u5728\u540e\u9762\u9010\u6b65\u8bb2\u89e3\u3002 \u4e3a\u4e86\u53d6\u5f97\u6700\u4f18\u7684\u6d4b\u8bd5\u6548\u679c\uff0c\u5728\u4e0d\u540c\u6027\u4ef7\u6bd4\u7684\u6d4b\u8bd5\u4e0a\u6295\u5165\u7684\u65f6\u95f4\u4e5f\u5e94\u4e0d\u4e00\u6837\u7684\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u57fa\u4e8e\u754c\u9762\u7684\u6d4b\u8bd5\uff0c\u81ea\u52a8\u5316\u96be\u5ea6\u9ad8\uff0c\u4e14\u4e3a\u4e86\u80fd\u8986\u76d6\u66f4\u591a\u7684\u7684\u573a\u666f\uff0c\u5e76\u8ba9\u6d4b\u8bd5\u6b63\u5e38\u8fd0\u884c\uff0c\u9700\u8981\u51c6\u5907\u7684\u6570\u636e\u91cf\u4e5f\u66f4\u591a\uff0c\u76f8\u5e94\u5730\u6295\u5165\u7684\u65f6\u95f4\u4e5f\u4f1a\u8f83\u591a\u3002 \u5355\u5143\u6d4b\u8bd5\u5219\u4e0d\u592a\u4e00\u6837\uff0c\u6d4b\u8bd5\u7684\u76ee\u6807\u66f4\u52a0\u7cbe\u786e\uff0c\u9700\u8981\u51c6\u5907\u7684\u6d4b\u8bd5\u6570\u636e\u91cf\u8f83\u5c11\uff0c\u540c\u65f6\u5355\u5143\u6d4b\u8bd5\u8fd0\u884c\u5f97\u66f4\u5feb\uff0c\u56e0\u6b64\u6295\u5165\u7684\u65f6\u95f4\u8f83\u5c11\u3002 \u5728 \u300aSucceeding with Agile\u300b[^1]\u4e00\u4e66\u4e2d\u63d0\u51fa\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u91d1\u5b57\u5854\uff0c\u5f62\u8c61\u5730\u63cf\u8ff0\u4e86\u754c\u9762\u6d4b\u8bd5\u3001\u670d\u52a1\u6d4b\u8bd5\u548c\u5355\u5143\u6d4b\u8bd5\u7684\u5dee\u5f02\u3002\u56fe 1-1 \u662f\u7b80\u5355\u7684\u6d4b\u8bd5\u91d1\u5b57\u5854\uff0c\u53ef\u4ee5\u7528\u6765\u63cf\u8ff0\u4e0d\u540c\u6d4b\u8bd5\u7c7b\u578b\u7684\u6267\u884c\u901f\u5ea6\u548c\u6d88\u8017\u8d44\u6e90\u7684\u60c5\u51b5\u3002 \u56fe 1-1 \u6d4b\u8bd5\u91d1\u5b57\u5854 \u5b9e\u9645\u4e0a\u6d4b\u8bd5\u91d1\u5b57\u5854\u4e2d\u5c42\u6b21\u7684\u5212\u5206\u53d6\u51b3\u4e8e\u6240\u91c7\u7528\u7684\u6280\u672f\u6808\uff0c\u5e76\u4e0d\u62d8\u6ce5\u4e8e\u56fe1-1\u4e2d\u6240\u793a\u8fd9\u4e09\u5c42\u3002\u5728\u5fae\u670d\u52a1\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u7684\u6d4b\u8bd5\u91d1\u5b57\u5854\u53ef\u4ee5\u63cf\u8ff0\u4e3a\uff1a\u5355\u5143\u6d4b\u8bd5\u3001API \u6d4b\u8bd5\u3001\u754c\u9762\u6d4b\u8bd5\u3002 \u6d4b\u8bd5\u91d1\u5b57\u5854\u7684\u6bcf\u4e00\u5c42\u90fd\u53ef\u4ee5\u9009\u7528\u4e0d\u540c\u7684\u5de5\u5177\u6765\u5b9e\u73b0\u81ea\u52a8\u5316\uff0c\u5728\u540e\u9762\u7684\u5185\u5bb9\u4e2d\uff0c\u4f1a\u9010\u6b65\u4ecb\u7ecd\u4e00\u4e9b\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\u3002 \u6d4b\u8bd5\u91d1\u5b57\u5854\u53ea\u662f\u4e00\u79cd\u5bf9\u6d4b\u8bd5\u5212\u5206\u65b9\u6cd5\u7684\u6a21\u578b\uff0c\u8fd9\u79cd\u6a21\u578b\u53ef\u4ee5\u6709\u975e\u5e38\u591a\u7684\u89e3\u91ca\u548c\u53d8\u79cd\u3002\u5728\u4e00\u4e9b\u6d4b\u8bd5\u91d1\u5b57\u5854\u4e2d\u6211\u4eec\u53ef\u80fd\u4f1a\u770b\u5230\u624b\u5de5\u6d4b\u8bd5\u3001\u9a8c\u6536\u6d4b\u8bd5\u7b49\u5185\u5bb9\uff0c\u4e5f\u53ef\u80fd\u4f1a\u6709\u975e\u5e38\u591a\u5c42\u3002\u6d4b\u8bd5\u91d1\u5b57\u5854\u4e3b\u8981\u5e94\u7528\u4e8e\u654f\u6377\u8fc7\u7a0b\u7684\u6d4b\u8bd5\u5de5\u4f5c\u4e2d\uff0c\u5728\u5176\u4ed6\u7684\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e5f\u4e0d\u540c\u7684\u6d4b\u8bd5\u6a21\u578b\uff0c\u4f8b\u5982 V \u6a21\u578b\u3002","title":"1.1.4 \u6d4b\u8bd5\u91d1\u5b57\u5854"},{"location":"01-self-testing-fundamentals/#115","text":"\u4ece\u6d4b\u8bd5\u91d1\u5b57\u5854\u53c8\u53ef\u4ee5\u5f15\u7533\u51fa\u53e6\u5916\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6d4b\u8bd5\u6982\u5ff5\uff0c\u90a3\u5c31\u662f\u6d4b\u8bd5\u7b56\u7565\u3002\u6d4b\u8bd5\u7b56\u7565\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u9879\u76ee\u6216\u8005\u4ea7\u54c1\u5982\u4f55\u7ec4\u7ec7\u6d4b\u8bd5\u6d3b\u52a8\uff0c\u4ee5\u83b7\u53d6\u6700\u5927\u7684\u4ef7\u503c\u3002 \u5b8c\u6574\u7684\u6d4b\u8bd5\u7b56\u7565\u5c31\u662f\u4e00\u4e2a\u9879\u76ee\u7684\u5b8c\u6574\u6d4b\u8bd5\u6846\u67b6\uff0c\u6db5\u76d6\u4e86\u5173\u4e8e\u8d28\u91cf\u7684\u5404\u65b9\u9762\u6d4b\u8bd5\u6e05\u5355\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684\u5b9e\u65bd\u65b9\u5f0f\u3002\u6d4b\u8bd5\u7b56\u7565\u53ef\u4ee5\u662f\u4e00\u4efd\u8be6\u5c3d\u7684\u6587\u6863\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u56fe\u793a\u6216\u8005\u4e00\u4efd\u7b80\u5355\u7684\u68c0\u67e5\u6e05\u5355\u3002 \u540c\u4e8b\u6797\u51b0\u7389\u8001\u5e08\u5728\u4e00\u6b21\u5206\u4eab\u4e2d\u5c55\u793a\u4e86\u56fe 1-2 \uff08\u4e00\u4efd\u7b80\u5355\u660e\u4e86\u7684\u6d4b\u8bd5\u7b56\u7565\uff09\uff0c\u7528\u4e8e\u8bf4\u660e\u6d4b\u8bd5\u7b56\u7565\u3002\u6b64\u56fe\u63cf\u8ff0\u4e86\u654f\u6377\u56e2\u961f\u6d3b\u52a8\u4e2d\u7684\u6d4b\u8bd5\u5b9e\u8df5\uff0c\u56fe\u4e2d\u5de6\u4e0b\u89d2\u4f7f\u7528\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u8c61\u9650\uff0c\u63cf\u8ff0\u54ea\u4e9b\u6d4b\u8bd5\u5e94\u8be5\u81ea\u52a8\u8fdb\u884c\uff0c\u4e2d\u95f4\u5c55\u793a\u7684\u662f\u4e00\u4e2a\u56db\u5c42\u7684\u6d4b\u8bd5\u91d1\u5b57\u5854\u3002\u6d4b\u8bd5\u91d1\u5b57\u5854\u4e2d\u7684\u6d4b\u8bd5\u5b9e\u8df5\u4e3a\uff1a\u5355\u5143\u6d4b\u8bd5\u3001API \u96c6\u6210\u6d4b\u8bd5\u3001\u7aef\u5230\u7aef\u6d4b\u8bd5\u3001\u63a2\u7d22\u5f0f\u6d4b\u8bd5\u3002 \u56fe 1-2 \u4e00\u4efd\u7b80\u5355\u660e\u4e86\u7684\u6d4b\u8bd5\u7b56\u7565 \u6ce8\uff1a\u56fe\u7247\u6765\u6e90\u4e8e https://www.bylinzi.com/2020/01/10/one-page-test-strategy\u3002 \u6d4b\u8bd5\u7b56\u7565\u4e2d\u9700\u8981\u5305\u542b\u5982\u4e0b\u5185\u5bb9\u3002 \u6d4b\u8bd5\u539f\u5219\uff1a\u6240\u6709\u7684\u5b9e\u8df5\u90fd\u5e94\u8be5\u56f4\u7ed5\u8fd9\u4e2a\u539f\u5219\u5c55\u5f00\uff0c\u6bd4\u5982\"\u56e2\u961f\u4e3a\u8d28\u91cf\u8d1f\u8d23\"\u3002 \u6d4b\u8bd5\u8303\u56f4\uff1a\u529f\u80fd\u7279\u6027\u3001\u6027\u80fd\u3001\u5b89\u5168\u3001\u53ef\u7528\u6027\u3001\u53ef\u9760\u6027\u7b49\u3002 \u6d4b\u8bd5\u65b9\u6cd5\uff1a\u9700\u6c42\u548c\u8bbe\u8ba1\u8bc4\u5ba1\u3001\u9759\u6001\u4ee3\u7801\u5206\u6790\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u3001E2E\u6d4b\u8bd5\u3001\u5b89\u5168\u5efa\u6a21\u3001\u6e17\u900f\u6d4b\u8bd5\u3001\u63a2\u7d22\u6027\u6d4b\u8bd5\u7b49\u3002 \u5982\u679c\u5c06\u6d4b\u8bd5\u7b56\u7565\u5ef6\u5c55\uff0c\u8fd8\u53ef\u4ee5\u5305\u62ec\u5404\u9879\u8f6f\u4ef6\u8d28\u91cf\u5ea6\u91cf\u7684\u5185\u5bb9\u7b49\u3002","title":"1.1.5 \u6d4b\u8bd5\u7b56\u7565"},{"location":"01-self-testing-fundamentals/#116","text":"\u8fd9\u662f\u4e24\u4e2a\u6bd4\u8f83\u65b0\u7684\u6982\u5ff5\uff0c\u5728\u4f20\u7edf\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u6559\u7a0b\u4e2d\u6709\u7c7b\u4f3c\u7684\u6982\u5ff5\uff0c\u4f46\u662f\u53eb\u6cd5\u4e0d\u540c\u3002 \u6d4b\u8bd5\u5de6\u79fb\u662f\u6307\u5728\u8f6f\u4ef6\u8fdb\u5165\u6d4b\u8bd5\u9636\u6bb5\u4e4b\u524d\u5c31\u4ecb\u5165\u6d4b\u8bd5\uff0cQA\uff08\u6d4b\u8bd5\u4eba\u5458\uff09\u5728\u8bbe\u8ba1\u9636\u6bb5\u5c31\u53c2\u4e0e\uff0c\u5e76\u5bf9\u8bbe\u8ba1\u9636\u6bb5\u7684\u5404\u9879\u6d3b\u52a8\u8fdb\u884c\u8bc4\u4f30\u3002\u5728\u9700\u6c42\u6f84\u6e05\u7684\u65f6\u5019\u5c31\u5e94\u8be5\u53c2\u4e0e\uff0c\u5e76\u5bf9\u9700\u6c42\u3001\u7528\u6237\u6545\u4e8b\u7b49\u8f93\u51fa\u8fdb\u884c\u68c0\u67e5\u3002\u53e6\u5916\uff0c\u5728\u7814\u53d1\u4eba\u5458\u8fdb\u5165\u8bbe\u8ba1\u9636\u6bb5\u540e\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u8f93\u51fa\u7684\u6280\u672f\u65b9\u6848\u8fdb\u884c\u8bc4\u4f30\uff0c\u9a8c\u8bc1\u6280\u672f\u65b9\u6848\u662f\u5426\u80fd\u6ee1\u8db3\u8bbe\u8ba1\u76ee\u6807\u3002\u6d4b\u8bd5\u5de6\u79fb\u8fd8\u53ef\u4ee5\u63d0\u524d\u51c6\u5907\u7528\u4f8b\u548c\u6d4b\u8bd5\u73af\u5883\uff0c\u8c03\u6574\u6d4b\u8bd5\u65b9\u6848\u4ee5\u5177\u5907\u66f4\u597d\u7684\u6d4b\u8bd5\u6027\u3002 \u6d4b\u8bd5\u53f3\u79fb\u662f\u6307\u8f6f\u4ef6\u8fdb\u5165\u53d1\u5e03\u9636\u6bb5\u540e\u4e5f\u9700\u8981 QA \u53c2\u4e0e\uff0c\u8f6f\u4ef6\u53d1\u5e03\u540e QA \u9700\u8981\u6301\u7eed\u5173\u6ce8\u7ebf\u4e0a\u9884\u8b66\u548c\u76d1\u63a7\uff0c\u53ca\u65f6\u53d1\u73b0\u95ee\u9898\uff0c\u5e76\u5c1d\u8bd5\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u91cd\u73b0\u3002\u8fd9\u6837 QA \u5c31\u53ef\u4ee5\u9a71\u52a8\u7814\u53d1\u4eba\u5458\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u8003\u8651\u63a5\u5165\u76d1\u63a7\u3001\u544a\u8b66\u7b49\u57fa\u7840\u8bbe\u65bd\uff0c\u5f00\u53d1\u56e2\u961f\u9700\u8981\u6bd4\u5e02\u573a\u3001\u4e1a\u52a1\u65b9\u4ee5\u53ca\u7528\u6237\u66f4\u5feb\u5730\u53d1\u73b0\u95ee\u9898\uff0c\u5e76\u5236\u5b9a\u89e3\u51b3\u63aa\u65bd\u3002 \u6d4b\u8bd5\u5de6\u79fb\u548c\u6d4b\u8bd5\u53f3\u79fb\u542c\u8d77\u6765\u6bd4\u8f83\u6666\u6da9\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f QA \u53c2\u4e0e\u654f\u6377\u9879\u76ee\u7684\u5168\u751f\u547d\u5468\u671f\u3002","title":"1.1.6 \u6d4b\u8bd5\u5de6\u79fb\u548c\u6d4b\u8bd5\u53f3\u79fb"},{"location":"01-self-testing-fundamentals/#117","text":"\u5728\u73b0\u4ee3\u8f6f\u4ef6\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u5ea6\u91cf\u662f\u4e00\u79cd\u975e\u5e38\u91cd\u8981\u7684\u5b9e\u8df5\u3002\u5ea6\u91cf\u53ef\u4ee5\u901a\u8fc7\u7528\u91cf\u5316\u7684\u65b9\u6cd5\u53d6\u4ee3\u5b9a\u6027\u7684\u7ed3\u8bba\uff0c\u6765\u8bc4\u4f30\u8f6f\u4ef6\u7684\u8d28\u91cf\u3001\u8fc7\u7a0b\u548c\u6d4b\u8bd5\u6709\u6548\u6027\u7b49\uff0c\u8ba9\u7ba1\u7406\u5c42\u80fd\u505a\u51fa\u5408\u7406\u7684\u51b3\u7b56\u3002\u5bf9\u4e8e\u4eba\u5458\u914d\u6bd4\u3001\u80fd\u6548\u63d0\u5347\u3001\u7ee9\u6548\u8003\u6838\u7b49\u5404\u4e2a\u65b9\u9762\u90fd\u6709\u4e00\u5b9a\u610f\u4e49\u3002 \u8d28\u91cf\u5ea6\u91cf\u7684\u6307\u6807\u7814\u7a76\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a \u5bf9\u4e8e\u4ea7\u54c1\u7684\u8d28\u91cf\u8fdb\u884c\u8861\u91cf\u3002 \u5bf9\u4e8e\u6d4b\u8bd5\u7684\u6709\u6548\u6027\u8fdb\u884c\u8861\u91cf\u3002 \u5bf9\u4e8e\u6d4b\u8bd5\u7684\u5b8c\u6574\u6027\u8fdb\u884c\u8861\u91cf\u3002 \u5bf9\u4e8e\u6d4b\u8bd5\u8fc7\u7a0b\u548c\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u7684\u5206\u6790\u548c\u6539\u8fdb\u3002 \u5bf9\u4e8e\u666e\u901a\u6d4b\u8bd5\u4eba\u5458\u548c\u7814\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u7279\u522b\u53bb\u8bbe\u8ba1\u8fd9\u4e9b\u5ea6\u91cf\u6307\u6807\uff0c\u53ef\u4ee5\u6839\u636e\u56fd\u9645\u3001\u56fd\u5185\u7684\u6307\u6807\u6807\u51c6\u63d0\u53d6\u4e00\u4e9b\u5408\u9002\u81ea\u5df1\u7684\u6307\u6807\uff0c\u4f5c\u4e3a\u516c\u53f8\u5185\u90e8\u4f7f\u7528\u7684\u5ea6\u91cf\u4f53\u7cfb\u3002 ISO/IEC 9126 \u6807\u51c6\u4ece\u529f\u80fd\u6027\u3001\u53ef\u9760\u6027\u3001\u6613\u7528\u6027\u3001\u6548\u7387\u3001\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u79fb\u690d\u6027\u8fd9 6 \u4e2a\u7279\u6027\u8fdb\u884c\u5ea6\u91cf\uff0c\u548c\u524d\u9762\u5bf9\u7f3a\u9677\u7684\u7406\u89e3\u7c7b\u4f3c\uff0cISO/IEC 9126 \u6807\u51c6\u5c06\u8fd9\u4e9b\u6307\u6807\u5212\u5206\u4e3a\u901a\u7528\u3001\u5185\u90e8\u6307\u6807\u3001\u5916\u90e8\u6307\u6807\u3002\u5185\u90e8\u6307\u6807\u7684\u542b\u4e49\u662f\uff0c\u4fa7\u91cd\u5728\u4ea4\u4ed8\u524d\u7684\u5ea6\u91cf\uff0c\u4e0d\u5173\u6ce8\u7f3a\u9677\u88ab\u6fc0\u6d3b\u7684\u60c5\u51b5\uff0c\u66f4\u52a0\u5173\u6ce8\u8f6f\u4ef6\u7684\u672c\u8d28\u95ee\u9898\u3002 \u5728\u56fd\u5185\u4e5f\u6709\u76f8\u5e94\u7684\u5ea6\u91cf\u4f53\u7cfb\uff0cGB/T \u5ef6\u7528\u4e86 ISO/IEC 9126 \u4e2d\u7684\u6307\u6807\uff0c\u4ece6\u4e2a\u65b9\u9762\u5bf9\u8f6f\u4ef6\u8d28\u91cf\u8fdb\u884c\u8bc4\u4f30\u3002\u5728 \u300aGB/T 32904---2016 \u8f6f\u4ef6\u8d28\u91cf\u91cf\u5316\u8bc4\u4ef7\u89c4\u8303\u300b\u4e2d\uff0c\u8be5\u6587\u6863\u7ed9\u51fa\u4e86\u4e00\u5957\u6839\u636e\u6307\u6807\u8ba1\u7b97\u8f6f\u4ef6\u8d28\u91cf\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u53c2\u8003\u4f7f\u7528\u7684\u6807\u51c6\u4f53\u7cfb\u5982\u56fe 1-3\u6240\u793a\u3002 \u56fe 1-3 GB/T \u6807\u51c6\u4f53\u7cfb \u5bf9\u4e8e\u6d4b\u8bd5\u6709\u6548\u6027\u548c\u5b8c\u6574\u6027\u7684\u8861\u91cf\u53ef\u4ee5\u53c2\u8003\u4e00\u4e9b\u4e3b\u6d41\u8f6f\u4ef6\u516c\u53f8\u7684\u505a\u6cd5\uff0c\u6bd4\u5982\u67d0\u516c\u53f8\u4f1a\u6839\u636e\u5343\u884c\u4ee3\u7801\uff08\u4ee3\u7801\u89c4\u6a21\u4e00\u822c\u4e0d\u4f5c\u4e3a\u552f\u4e00\u624b\u6bb5\uff09\u4e3a\u57fa\u7ebf\u7edf\u8ba1\u4e00\u4e9b\u6d4b\u8bd5\u80fd\u529b\u7684\u6307\u6807\uff1a \u6bcf\u5343\u884c\u7528\u4f8b\u6570\u3002 \u6bcf\u5343\u884c\u7f3a\u9677\u7387\u3002 \u7528\u4f8b\u5e73\u5747\u6267\u884c\u65f6\u95f4\u3002 \u7f3a\u9677\u5e73\u5747\u56de\u5f52\u6b21\u6570\u3002 \u6709\u6548\u7f3a\u9677\u7387\uff08\u7ecf\u8fc7\u786e\u8ba4\u7279\u6027\u63cf\u8ff0\u4e0d\u6e05\u695a\u5bfc\u81f4\u7684\u7f3a\u9677\uff09\u3002 \u901a\u8fc7\u5ea6\u91cf\u540e\uff0c\u4f1a\u6839\u636e\u7f3a\u9677\u7684\u4f18\u5148\u7ea7\u548c\u4e25\u91cd\u7a0b\u5ea6\u8fdb\u884c\u52a0\u6743\u8ba1\u7b97\uff0c\u83b7\u5f97\u6bcf\u4e2a\u7248\u672c\u7684\u8f6f\u4ef6\u8d28\u91cf\u6307\u6570\u3002 \u5728\u5e94\u7528\u6307\u6807\u7684\u65f6\u5019\uff0c\u8fd8\u9700\u8981\u505a\u51fa\u533a\u5206\u3002\u7531\u4e8e\u6709\u4e00\u4e9b\u9879\u76ee\u662f\u5efa\u7acb\u5728\u9057\u7559\u7cfb\u7edf\u4e4b\u4e0a\u7684\uff0c\u5b83\u7684\u5f00\u53d1\u8fc7\u7a0b\u3001\u903b\u8f91\u548c\u5b8c\u5168\u4ece\u5934\u5f00\u59cb\u7684\u9879\u76ee\u5f88\u4e0d\u4e00\u6837\u3002\u56e0\u6b64\u6211\u4eec\u5728\u4f7f\u7528\u8fd9\u4e9b\u6307\u6807\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u7684\u7c7b\u578b\u505a\u51fa\u53d6\u820d\u3002\u6839\u636e\u8f6f\u4ef6\u7cfb\u7edf\u9057\u7559\u7279\u6027\u53ef\u4ee5\u5c06\u9879\u76ee\u5212\u5206\u4e3a\u7eff\u5730\u5de5\u7a0b\u3001\u68d5\u5730\u5de5\u7a0b\u3001\u7ef4\u62a4\u6027\u5de5\u7a0b\u3002 \u7eff\u5730\u5de5\u7a0b\uff1a\u4e00\u9879\u7eff\u5730\u5de5\u7a0b\u53ef\u80fd\u662f\u5728\u5168\u65b0\u7684\u9886\u57df\u4e2d\u5f00\u53d1\uff0c\u4e0d\u9700\u8981\u8003\u8651\u5386\u53f2\u9057\u7559\u95ee\u9898\u3002\u7eff\u5730\u5de5\u7a0b\u5f80\u5f80\u5b58\u5728\u9700\u6c42\u65e0\u6cd5\u6e05\u6670\u63cf\u8ff0\u7279\u6027\uff0c\u6709\u6548\u7f3a\u9677\u7387\u4f4e\uff0c\u7f3a\u9677\u4fee\u590d\u7684\u6210\u672c\u4f4e\uff0c\u7f3a\u9677\u56de\u5f52\u7684\u6548\u7387\u9ad8\u7b49\u7279\u70b9\u3002 \u68d5\u5730\u5de5\u7a0b\uff1a\u6b64\u7c7b\u5de5\u7a0b\u4e2d\u7684\u7cfb\u7edf\u901a\u5e38\u662f\u73b0\u6709\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u6216\u8005\u662f\u5176\u5b50\u7cfb\u7edf\u3002\u9700\u8981\u8003\u8651\u4e0e\u5176\u4ed6\u7cfb\u7edf\uff08\u5c24\u5176\u662f\u4e0e\u5386\u53f2\u9057\u7559\u7cfb\u7edf\uff08Legacy system\uff09\u7684\u96c6\u6210\u95ee\u9898\u3002\u8fd9\u7c7b\u9879\u76ee\u5f80\u5f80\u7f3a\u9677\u56de\u5f52\u6b21\u6570\u9ad8\uff0c\u7f3a\u9677\u7684\u4fee\u590d\u6210\u672c\u5f88\u5927\u3002 \u7ef4\u62a4\u6027\u5de5\u7a0b\uff1a\u6307\u7684\u662f\u4e0d\u518d\u5f00\u53d1\u65b0\u529f\u80fd\u7684\u7cfb\u7edf\uff0c\u53ea\u5b8c\u6210\u7ef4\u62a4\u6027\u5de5\u4f5c\u3002","title":"1.1.7 \u8d28\u91cf\u5ea6\u91cf"},{"location":"01-self-testing-fundamentals/#12","text":"\u4e0d\u540c\u7ef4\u5ea6\u4e0b\u4eba\u4eec\u5bf9\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u5206\u7c7b\u6781\u4e0d\u4e00\u81f4\u3002\u6bd4\u5982\uff0c\u6839\u636e\u5f00\u53d1\u8fc7\u7a0b\u8fdb\u884c\u5206\u7c7b\uff0c\u8f6f\u4ef6\u7684\u6d4b\u8bd5\u7c7b\u578b\u6709\uff1a\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u3001\u7cfb\u7edf\u6d4b\u8bd5\u548c\u9a8c\u6536\u6d4b\u8bd5\uff0c\u8fd9\u4e9b\u7c7b\u578b\u5206\u522b\u548c\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u5404\u4e2a\u9636\u6bb5\u76f8\u9002\u914d\u3002\u4f46\u662f\u5982\u679c\u4ece\u88ab\u6d4b\u8bd5\u7684\u5bf9\u8c61\u89d2\u5ea6\u6765\u770b\uff0c\u8f6f\u4ef6\u6d4b\u8bd5\u53c8\u53ef\u4ee5\u5206\u4e3a\u9759\u6001\u6d4b\u8bd5\u548c\u52a8\u6001\u6d4b\u8bd5\u3002\u5982\u679c\u662f\u4ee5\u6d4b\u8bd5\u4eba\u5458\u5bf9\u4ee3\u7801\u7684\u4e86\u89e3\u7a0b\u5ea6\u6765\u770b\uff0c\u5219\u53ef\u4ee5\u5206\u4e3a\u767d\u76d2\u6d4b\u8bd5\u3001\u9ed1\u76d2\u6d4b\u8bd5\u3001\u7070\u76d2\u6d4b\u8bd5\u3002\u6839\u636e\u662f\u5426\u662f\u81ea\u52a8\u5316\u8fd0\u884c\u7684\u6d4b\u8bd5\u6765\u533a\u5206\uff0c\u53c8\u53ef\u4ee5\u5206\u4e3a\u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u624b\u5de5\u6d4b\u8bd5\u3002 \u5f53\u7136\u8fd8\u6709\u4e00\u4e9b\u975e\u5e38\u65f6\u9ae6\u7684\u6d4b\u8bd5\u7c7b\u578b\uff0c\u6bd4\u5982\u5951\u7ea6\u6d4b\u8bd5\u3001\u5f39\u73e0\u6d4b\u8bd5\u3001\u5192\u70df\u6d4b\u8bd5\u7b49\u3002\u8fd9\u4e9b\u540d\u76ee\u7e41\u591a\u7684\u6d4b\u8bd5\uff0c\u4f1a\u7ed9\u56e2\u961f\u9020\u6210\u56f0\u6270\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u4e2d\u82f1\u6587\u7ffb\u8bd1\u7684\u539f\u56e0\uff0c\u50cf E2E\u8fd9\u7c7b\u540d\u79f0\u6ca1\u6709\u51c6\u786e\u4e2d\u6587\u542b\u4e49\u7684\u6d4b\u8bd5\uff0c\u66f4\u5bb9\u6613\u8ba9\u56e2\u961f\u6210\u5458\u6478\u4e0d\u7740\u5934\u8111\u3002 \u672c\u4e66\u5c06\u6839\u636e\u524d\u9762\u63d0\u5230\u7684\u6d4b\u8bd5\u7b56\u7565\u548c\u6d4b\u8bd5\u91d1\u5b57\u5854\uff0c\u5e76\u53c2\u8003 GB/T \u7684\u89c4\u8303\uff0c\u5bf9\u4e00\u4e2a\u654f\u6377\u56e2\u961f\u9700\u8981\u8fdb\u884c\u7684\u6d4b\u8bd5\u7c7b\u578b\u8fdb\u884c\u7b80\u5316\u3002\u4e3a\u4e86\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u548c\u8bb0\u5fc6\uff0c\u672c\u4e66\u5c06\u5176\u5206\u4e3a\u529f\u80fd\u6027\u6d4b\u8bd5\u548c\u975e\u529f\u80fd\u6027\u6d4b\u8bd5\u3002 \u6b63\u5982\u5b57\u9762\u4e0a\u7684\u7406\u89e3\uff0c\u529f\u80fd\u6027\u6d4b\u8bd5\u5bf9\u5e94\u7684\u662f\u529f\u80fd\u6027\u7684\u9700\u6c42\uff0c\u9488\u5bf9\u8f6f\u4ef6\u7279\u6027\u7684\u4e1a\u52a1\u76ee\u6807\u548c\u903b\u8f91\u3002\u975e\u529f\u80fd\u6027\u6d4b\u8bd5\uff0c\u9488\u5bf9\u7684\u662f\u975e\u529f\u80fd\u6027\u7684\u8981\u6c42\u3002\u8fd9\u4e9b\u8981\u6c42\u53ef\u80fd\u5728\u4e1a\u52a1\u9700\u6c42\u4e0a\u6ca1\u6709\u505a\u660e\u786e\u7684\u8bf4\u660e\uff0c\u4f46\u662f\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u5219\u4f1a\u7ed9\u8f6f\u4ef6\u4ea4\u4ed8\u5e26\u6765\u5de8\u5927\u7684\u98ce\u9669\u3002 \u529f\u80fd\u6027\u6d4b\u8bd5 \u5355\u5143\u6d4b\u8bd5\u3002 \u96c6\u6210\u6d4b\u8bd5\u3002 \u7cfb\u7edf\u6d4b\u8bd5\u3002 \u9a8c\u6536\u6d4b\u8bd5\u3002 \u975e\u529f\u80fd\u6027\u6d4b\u8bd5 \u9759\u6001\u5206\u6790\u3002 \u5b89\u5168\u6d4b\u8bd5\u3002 \u6027\u80fd\u6d4b\u8bd5\u3002 \u5c31\u4e00\u822c\u7684\u8f6f\u4ef6\u800c\u8a00\uff0c\u4e00\u4e2a\u654f\u6377\u56e2\u961f\u505a\u597d\u8fd9 7 \u9879\u6d4b\u8bd5\u5c31\u80fd\u6db5\u76d6\u7edd\u5927\u90e8\u5206\u6d4b\u8bd5\u9700\u6c42\u3002\u5b9e\u9645\u4e0a\uff0c\u5f88\u591a\u516c\u53f8\u90fd\u6ca1\u6709\u505a\u5230\uff0c\u6216\u8005\u505a\u597d\u8fd9 7 \u7c7b\u6d4b\u8bd5\u3002\u4e0b\u9762\u5c31\u8fd9 7 \u7c7b\u6d4b\u8bd5\u8fdb\u884c\u7b80\u5355\u7684\u4ecb\u7ecd\u3002","title":"1.2 \u8f6f\u4ef6\u7684\u6d4b\u8bd5\u5206\u7c7b"},{"location":"01-self-testing-fundamentals/#121","text":"\u5355\u5143\u6d4b\u8bd5\uff08Unit Testing\uff09\u662f\u6307\u5bf9\u8f6f\u4ef6\u4e2d\u6700\u5c0f\u53ef\u6d4b\u8bd5\u5355\u5143\u8fdb\u884c\u6d4b\u8bd5\u3002\"\u5355\u5143\"\u7684\u7c92\u5ea6\u5e76\u6ca1\u6709\u4e00\u4e2a\u660e\u786e\u7684\u754c\u9650\uff0c\u7ec6\u7c92\u5ea6\u7684\u5355\u5143\u6d4b\u8bd5\u542b\u4e49\u4e00\u822c\u662f\u5bf9\u65b9\u6cd5\u3001\u7c7b\u7b49\u4ee3\u7801\u7ed3\u6784\u8fdb\u884c\u6d4b\u8bd5\u548c\u9a8c\u8bc1\u3002\u7c97\u7c92\u5ea6\u7684\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u662f\u5bf9\u4e00\u4e2a\u6700\u5c0f\u7684\u8f6f\u4ef6\u7279\u6027\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6839\u636e\u8bbe\u8ba1\u9700\u6c42\u6587\u6863\u6216\u8005\u8bbe\u8ba1\u6587\u6863\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5355\u5143\u6d4b\u8bd5\u5f80\u5f80\u5904\u4e8e\u6d4b\u8bd5\u91d1\u5b57\u5854\u7684\u6700\u4f4e\u7aef\u3002\u56e0\u4e3a\u5355\u5143\u6d4b\u8bd5\u80fd\u900f\u660e\u5730\u9a8c\u8bc1\u65b9\u6cd5\u3001\u7c7b\u8fd9\u4e00\u7c7b\u4ee3\u7801\u7ed3\u6784\uff0c\u56e0\u6b64\u7f16\u5199\u81ea\u52a8\u5316\u8fd0\u884c\u7684\u6d4b\u8bd5\u4e5f\u6bd4\u8f83\u7b80\u5355\u3002\u5728\u76ee\u524d\u7684\u8bed\u4e49\u4e0b\uff0c\u5355\u5143\u6d4b\u8bd5\u9ed8\u8ba4\u6709\u81ea\u52a8\u5316\u8fd0\u884c\u7684\u542b\u4e49\u3002 \u5bf9\u8f6f\u4ef6\u8d28\u91cf\u6765\u8bf4\uff0c\u5355\u5143\u6d4b\u8bd5\u6709\u975e\u5e38\u79ef\u6781\u7684\u4f5c\u7528\uff0c\u662f\u6d4b\u8bd5\u91d1\u5b57\u5854\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\u3002\u901a\u8fc7\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u5c06\u590d\u6742\u7684\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u62c6\u89e3\uff0c\u6bd4\u5982\u4ece\u8f83\u5927\u89c4\u6a21\u7684\u6d4b\u8bd5\u8def\u5f84\u5206\u89e3\u6210\u5c0f\u89c4\u6a21\u7684\u6d4b\u8bd5\u3002\u4e14\u5355\u5143\u6d4b\u8bd5\u7684\u96be\u5ea6\u76f8\u5bf9\u8f83\u5c0f\uff0c\u6d4b\u8bd5\u6548\u7387\u4e5f\u76f8\u5e94\u8f83\u9ad8\u3002\u5355\u5143\u6d4b\u8bd5\u5bf9\u73af\u5883\u8981\u6c42\u4f4e\uff0c\u9694\u79bb\u6027\u597d\uff0c\u4e3a\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u63d0\u4f9b\u4e86\u53ef\u80fd\u6027\u3002 \u53e6\u5916\uff0c\u7814\u53d1\u4eba\u5458\u79ef\u6781\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u5728\u9047\u5230\u95ee\u9898\u65f6\u53ef\u4ee5\u5e2e\u52a9\u5b9a\u4f4d\u7f3a\u9677\u3002","title":"1.2.1 \u5355\u5143\u6d4b\u8bd5"},{"location":"01-self-testing-fundamentals/#122","text":"\u96c6\u6210\u6d4b\u8bd5\uff08Integration Testing\uff09\u662f\u6307\u5728\u5355\u5143\u6d4b\u8bd5\u7684\u57fa\u7840\u4e0a\uff0c\u5bf9\u4e00\u90e8\u5206\u8f6f\u4ef6\u6a21\u5757\u8fdb\u884c\u7ec4\u5408\u6216\u8005\u5728\u7ec4\u88c5\u540e\u8fdb\u884c\u7684\u6d4b\u8bd5\u3002\u5728\u5fae\u670d\u52a1\u65f6\u4ee3\uff0c\u901a\u5e38\u6765\u8bf4\u96c6\u6210\u6d4b\u8bd5\u662f\u5bf9\u4e00\u4e2a\u670d\u52a1\u7684 API \u8fdb\u884c\u6d4b\u8bd5\uff0c\u56e0\u6b64\u5728\u5f88\u591a\u6587\u7ae0\u548c\u4e66\u7c4d\u4e2d\u90fd\u4f1a\u6709 API \u6d4b\u8bd5\u3002\u8bf7\u6ce8\u610f API \u8fd9\u4e2a\u8bcd\u7684\u542b\u4e49\u8fc7\u4e8e\u5e7f\u6cdb\uff0c\u5305\u62ec RESTful API \u548c\u64cd\u4f5c\u7cfb\u7edf\u7b49\u8f6f\u4ef6\u63a5\u53e3\u7684\u6982\u5ff5\uff0c\u9700\u8981\u6839\u636e\u4e0a\u4e0b\u6587\u786e\u5b9a\u542b\u4e49\u3002 \u96c6\u6210\u6d4b\u8bd5\u9700\u8981\u542f\u52a8\u90e8\u5206\u6216\u8005\u6574\u4e2a\u5e94\u7528\u7684\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u76f8\u5bf9\u5355\u5143\u6d4b\u8bd5\u6765\u8bf4\uff0c\u96c6\u6210\u6d4b\u8bd5\u9700\u8981\u51c6\u5907\u7684\u73af\u5883\u66f4\u591a\u3002\u5728\u5fae\u670d\u52a1\u7684\u6280\u672f\u6808\u4e0b\uff0c\u901a\u5e38\u96c6\u6210\u6d4b\u8bd5\u7b49\u540c\u4e8e\u5355\u4e2a\u670d\u52a1\u7684 API \u6d4b\u8bd5\u3002 \u968f\u7740 DevOps \u7684\u53d1\u5c55\uff0c\u6301\u7eed\u96c6\u6210\u7684\u6982\u5ff5\u5f97\u5230\u4e86\u5e7f\u6cdb\u5173\u6ce8\uff0c\u96c6\u6210\u6d4b\u8bd5\u81ea\u7136\u4e5f\u5c31\u975e\u5e38\u91cd\u8981\u4e86\u3002\u597d\u7684\u96c6\u6210\u6d4b\u8bd5\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u670d\u52a1\u90e8\u7f72\u5230\u6d4b\u8bd5\u73af\u5883\u540e\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u4f9d\u8d56\u7684\u670d\u52a1\u3002 \u5728\u4e00\u4e9b\u5927\u7684\u9879\u76ee\u4e2d\uff0c\u670d\u52a1\u4f17\u591a\u4e14\u76f8\u4e92\u4f9d\u8d56\u3002\u65e9\u671f\u7684\u96c6\u6210\u6d4b\u8bd5\u5927\u591a\u662f\u624b\u5de5\u5b8c\u6210\u7684\uff0c\u4f1a\u5728\u96c6\u6210\u6d4b\u8bd5\u65f6\uff0c\u5148\u8fdb\u884c\u4e00\u4e2a\u5feb\u901f\u5730\u5192\u70df\u6d4b\u8bd5\uff08Smoke Testing\uff09\u3002\u5192\u70df\u6d4b\u8bd5\u662f\u5bf9\u8f6f\u4ef6\u7684\u57fa\u672c\u529f\u80fd\u8fdb\u884c\u5feb\u901f\u9a8c\u8bc1\u7684\u8fc7\u7a0b\u3002\u5192\u70df\u6d4b\u8bd5\u6765\u6e90\u4e8e\u65e9\u671f\u786c\u4ef6\u5f00\u53d1\uff0c\u5728\u5bf9\u786c\u4ef6\u7ec4\u4ef6\u66f4\u6539\u540e\u76f4\u63a5\u7ed9\u8bbe\u5907\u901a\u7535\uff0c\u5982\u679c\u6ca1\u6709\u5192\u70df\u5c31\u901a\u8fc7\u6d4b\u8bd5\u3002\u5192\u70df\u6d4b\u8bd5\u7528\u6765\u68c0\u67e5\u4e3b\u8981\u7684\u529f\u80fd\u662f\u5426\u6b63\u5e38\uff0c\u907f\u514d\u56e0\u4e3a\u5176\u4e2d\u4e00\u4e2a\u670d\u52a1\u5f02\u5e38\u800c\u5bf9\u6574\u5957\u6d4b\u8bd5\u73af\u5883\u9020\u6210\u4e2d\u65ad\u3002 \u5728 CI/CD \u53d1\u5c55\u6bd4\u8f83\u597d\u7684\u56e2\u961f\uff0c\u4f1a\u5728\u670d\u52a1\u90e8\u7f72\u5230\u6b63\u5f0f\u7684\u6d4b\u8bd5\u73af\u5883\u524d\uff0c\u5bf9 API \u8fdb\u884c\u81ea\u52a8\u5316\u7684\u6d4b\u8bd5\uff0c\u5982\u679c\u6d4b\u8bd5\u53d1\u73b0\u95ee\u9898\uff0c\u4f1a\u505c\u6b62\u90e8\u7f72\u5230\u6d4b\u8bd5\u73af\u5883\u3002\u96c6\u6210\u6d4b\u8bd5\u7684\u4f9d\u636e\u662f\u6280\u672f\u8bbe\u8ba1\u6587\u6863\uff0c\u6bd4\u5982 API \u8bbe\u8ba1\u7b49\u6750\u6599\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7814\u53d1\u4eba\u5458\u4e5f\u4f1a\u53c2\u4e0e\u96c6\u6210\u6d4b\u8bd5\uff0c\u6216\u8005\u662f\u5728\u7814\u53d1\u4eba\u5458\u7684\u914d\u5408\u4e0b\u7531 QA \u5b8c\u6210\u96c6\u6210\u6d4b\u8bd5\u3002","title":"1.2.2 \u96c6\u6210\u6d4b\u8bd5"},{"location":"01-self-testing-fundamentals/#123","text":"\u7cfb\u7edf\u6d4b\u8bd5\uff08System Testing\uff09\u662f\u6307\u5bf9\u5b8c\u6574\u7684\u8f6f\u4ef6\u4ea7\u54c1\u8fdb\u884c\u7aef\u5230\u7aef\u7684\u6d4b\u8bd5\uff0c\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u7b49\u540c\u4e8eE2E \u6d4b\u8bd5\u3002 \u7cfb\u7edf\u6d4b\u8bd5\u9700\u8981\u642d\u5efa\u5b8c\u6574\u7684\u73af\u5883\uff0c\u4ee5\u4fbf\u5728\u771f\u5b9e\u6216\u8005\u6a21\u62df\u7cfb\u7edf\u7684\u73af\u5883\u4e0b\u5bf9\u8f6f\u4ef6\u8fdb\u884c\u9a8c\u8bc1\uff0c\u786e\u8ba4\u662f\u5426\u8fbe\u5230\u8bbe\u8ba1\u76ee\u6807\u3002\u9700\u8981\u914d\u7f6e\u7684\u5b8c\u6574\u7684\u8f6f\u786c\u4ef6\u73af\u5883\u548c\u57fa\u7840\u8bbe\u65bd\u5305\u62ec\u6570\u636e\u5e93\u3001\u7f51\u7edc\u8fde\u63a5\u3001DNS\u7b49\u3002 \u7cfb\u7edf\u6d4b\u8bd5\u5f80\u5f80\u662f\u9ed1\u76d2\u6d4b\u8bd5\uff0c\u6b64\u6d4b\u8bd5\u4f1a\u6a21\u62df\u6b63\u5e38\u7684\u7528\u6237\u5728\u4f7f\u7528\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u65f6\u7684\u5404\u79cd\u64cd\u4f5c\u3002\u7cfb\u7edf\u6d4b\u8bd5\u4e0d\u4ec5\u8981\u53d1\u73b0\u7f3a\u9677\uff0c\u8fd8\u5e94\u8be5\u63d0\u51fa\u4e0d\u9650\u4e8e\u9700\u6c42\u89c4\u683c\u8303\u56f4\u7684\u53cd\u9988\uff0c\u751a\u81f3\u8fd8\u5305\u62ec\u4e00\u4e9b\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u7684\u4fbf\u5229\u6027\u95ee\u9898\u3002 \u7cfb\u7edf\u6d4b\u8bd5\u7684\u4f9d\u636e\u662f\u9700\u6c42\u6587\u6863\uff0c\u5305\u62ec QA \u5728\u9700\u6c42\u6f84\u6e05\u9636\u6bb5\u7684\u4efb\u4f55\u8f93\u5165\u3002","title":"1.2.3 \u7cfb\u7edf\u6d4b\u8bd5"},{"location":"01-self-testing-fundamentals/#124","text":"\u9a8c\u6536\u6d4b\u8bd5\uff08Acceptance Testing\uff09\u662f\u6307\u5728\u8f6f\u4ef6\u5f00\u53d1\u540e\u671f\uff0c\u9700\u6c42\u7684\u63d0\u51fa\u65b9\u5bf9\u8f6f\u4ef6\u8fdb\u884c\u9a8c\u6536\u786e\u8ba4\u65f6\u8fdb\u884c\u7684\u6d4b\u8bd5\u3002 \u5982\u679c\u662f\u8f6f\u4ef6\u4ea4\u4ed8\u6027\u8d28\u7684\u9879\u76ee\uff0c\u7532\u65b9\u5f80\u5f80\u4f1a\u6d3e\u51fa\u6d4b\u8bd5\u4e13\u5bb6\uff0c\u4ece\u7528\u6237\u7684\u89d2\u5ea6\u8fdb\u884c\u6d4b\u8bd5\uff0c\u786e\u8ba4\u662f\u5426\u6ee1\u8db3\u9700\u6c42\u89c4\u683c\u3002\u5728\u4e92\u8054\u7f51\u6216\u8005\u5176\u4ed6\u4ea7\u54c1\u578b\u7684\u516c\u53f8\uff0c\u9a8c\u6536\u6d4b\u8bd5\u5219\u662f\u4ea7\u54c1\u4e0a\u7ebf\u6216\u8005\u8f6f\u4ef6\u53d1\u5e03\u540e\uff0c\u7531\u4e1a\u52a1\u65b9\u5728\u771f\u5b9e\u7684\u73af\u5883\u4e0b\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5bf9\u4e00\u4e2a\u5728\u8fd0\u884c\u4e2d\u7684\u4e92\u8054\u7f51\u4ea7\u54c1\u6765\u8bf4\uff0c\u9a8c\u6536\u6d4b\u8bd5\u9700\u8981\u5f97\u5230\u7279\u522b\u7684\u6388\u6743\u3002\u56e0\u4e3a\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u4e00\u822c\u4f1a\u4ea7\u751f\u6570\u636e\u6216\u8005\u7559\u4e0b\u75d5\u8ff9\uff0c\u5728\u6709\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8003\u8651\u6e05\u7406\u6216\u8005\u9690\u85cf\u8fd9\u4e9b\u4fe1\u606f\u3002","title":"1.2.4 \u9a8c\u6536\u6d4b\u8bd5"},{"location":"01-self-testing-fundamentals/#125","text":"\u8f6f\u4ef6\u7684\u9759\u6001\u5206\u6790\uff08Static Analysis\uff09\u662f\u6307\u5bf9\u8f6f\u4ef6\u7684\u5404\u79cd\u7ed3\u6784\u548c\u6210\u5206\u8fdb\u884c\u626b\u63cf\uff0c\u63d0\u524d\u53d1\u73b0\u95ee\u9898\uff0c\u5b83\u901a\u5e38\u88ab\u4f5c\u4e3a\u6d4b\u8bd5\u7684\u8865\u5145\u3002\u9759\u6001\u5206\u6790\u4e00\u822c\u90fd\u662f\u7528\u81ea\u52a8\u5316\u7684\u5de5\u5177\u6216\u8005\u5e73\u53f0\u5728\u65e5\u5e38\u8fdb\u884c\u626b\u63cf\u548c\u76d1\u6d4b\u7684\u3002 \u5fb7\u56fd\u98de\u673a\u6da1\u8f6e\u673a\u7684\u53d1\u660e\u8005\u5e15\u5e03\u65af\u00b7\u6d77\u6069\u63d0\u51fa\u7684\u4e00\u4e2a\u5728\u822a\u7a7a\u754c\u5173\u4e8e\u98de\u884c\u5b89\u5168\u7684\u6cd5\u5219\uff0c\u6cd5\u5219\u6307\u51fa\uff1a\u6bcf\u4e00\u8d77\u4e25\u91cd\u4e8b\u6545\u7684\u80cc\u540e\uff0c\u5fc5\u7136\u6709 29 \u6b21\u8f7b\u5fae\u4e8b\u6545\u548c 300 \u8d77\u672a\u9042\u5148\u5146\u4ee5\u53ca 1000 \u8d77\u4e8b\u6545\u9690\u60a3\u3002\u5e94\u7528\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u9879\u76ee\u4e2d\u4ee3\u7801\u6df7\u4e71\u4e0d\u582a\uff0c\u5fc5\u7136\u4f1a\u5728\u67d0\u4e2a\u65f6\u5019\u7206\u53d1\u5927\u91cf\u7684\u95ee\u9898\u3002 \u9759\u6001\u5206\u6790\u7684\u76ee\u7684\u5c31\u662f\u901a\u8fc7\u626b\u63cf\u7684\u624b\u6bb5\u53d1\u73b0\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u901a\u7528\u95ee\u9898\uff0c\u6216\u8005\u627e\u51fa\u8fdd\u53cd\u7f16\u7801\u3001\u5b89\u5168\u89c4\u8303\u7684\u4ee3\u7801\u3002\u5e38\u89c1\u7684\u626b\u63cf\u5de5\u5177\u5982\u4e0b\u3002 Checkstyle\uff1aJava \u4ee3\u7801\u98ce\u683c\u626b\u63cf\u3002 FindBugs\uff1a\u4ece\u4ee3\u7801\u6a21\u5f0f\u4e0a\u53d1\u73b0\u6f5c\u5728\u95ee\u9898\u3002 ArchUnit\uff1a\u67b6\u6784\u89c4\u8303\u626b\u63cf\uff0c\u9a8c\u8bc1\u8f6f\u4ef6\u5305\u7684\u7ec4\u7ec7\u5408\u7406\u6027\u3002 OWASP Dependency-Track\uff1a\u5bf9\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u548c\u5e93\u8fdb\u884c\u68c0\u67e5\uff0c\u53d1\u73b0\u662f\u5426\u5b58\u5728\u5b89\u5168\u98ce\u9669\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u5e02\u9762\u4e0a\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u626b\u63cf\u5de5\u5177\uff0c\u6bd4\u5982\uff1aPMD\u3001FortifySCA\u8fd9\u4e9b\u90fd\u5c5e\u4e8e\u9759\u6001\u5206\u6790\u7684\u5185\u5bb9\u3002","title":"1.2.5 \u9759\u6001\u5206\u6790"},{"location":"01-self-testing-fundamentals/#126","text":"\u5b89\u5168\u6d4b\u8bd5\uff08Security Testing\uff09\u662f\u6307\u5bf9\u7cfb\u7edf\u7684\u5b89\u5168\u8981\u6c42\u8fdb\u884c\u9a8c\u8bc1\u7684\u4e00\u7c7b\u6d4b\u8bd5\u3002\u5b89\u5168\u6d4b\u8bd5\u9488\u5bf9\u7684\u662f\u4ee3\u7801\u6267\u884c\u3001\u547d\u4ee4\u6267\u884c\u3001\u75c5\u6bd2\u690d\u5165\u3001\u7aef\u53e3\u626b\u63cf\u3001DoS\u653b\u51fb\u3001SQL\u6ce8\u5165\u653b\u51fb\u3001CSRF\u653b\u51fb\u3001XSS\u653b\u51fb\u3001\u6570\u636e\u904d\u5386\u3001\u8d8a\u6743\u3001\u8ba4\u8bc1\u7ed5\u8fc7\u3001\u91d1\u989d\u7be1\u6539\u7b49\u5b89\u5168\u95ee\u9898\u7684\u6d4b\u8bd5\u3002 \u7531\u4e8e\u4e92\u8054\u7f51\u9879\u76ee\u4f1a\u5c06\u7528\u6237\u4fe1\u606f\u66b4\u9732\u5230\u516c\u7f51\uff0c\u8fd1\u4e9b\u5e74\u6765\u4f01\u4e1a\u5bf9\u5b89\u5168\u6d4b\u8bd5\u7684\u8981\u6c42\u53c8\u6709\u4e00\u5b9a\u63d0\u9ad8\uff0c\u6570\u636e\u9690\u79c1\u3001\u5a01\u80c1\u5efa\u6a21\u4e5f\u90fd\u88ab\u5305\u542b\u5728\u5b89\u5168\u6d4b\u8bd5\u7684\u9886\u57df\u3002 \u6570\u636e\u9690\u79c1\u662f\u6307\u8f6f\u4ef6\u7cfb\u7edf\u5728\u4f7f\u7528\u7528\u6237\u7684\u4fe1\u606f\u65f6\uff0c\u9700\u8981\u6ee1\u8db3\u5f53\u5730\u6cd5\u5f8b\u5408\u89c4\u7684\u8981\u6c42\uff0c\u4e14\u5e94\u5c3d\u529b\u4fdd\u62a4\u7528\u6237\u7684\u9690\u79c1\u6570\u636e\u3002 \u5a01\u80c1\u5efa\u6a21\u662f\u901a\u8fc7\u4e00\u4e9b\u5efa\u6a21\u5de5\u5177\u6765\u5206\u6790\u8f6f\u4ef6\u4f1a\u53d7\u5230\u54ea\u4e9b\u65b9\u9762\u7684\u5b89\u5168\u5a01\u80c1\uff0c\u5e76\u5236\u5b9a\u6d4b\u8bd5\u7b56\u7565\u7684\u8fc7\u7a0b\u3002STRIDE\u662f\u5e38\u7528\u7684\u5a01\u80c1\u6a21\u578b\uff0c\u5b83\u5305\u542b\u6b3a\u9a97\u3001\u7be1\u6539\u3001\u5426\u8ba4\u3001\u4fe1\u606f\u6cc4\u9732\u3001DoS \u5a01\u80c1\u3001\u7279\u6743\u63d0\u5347 6 \u4e2a\u65b9\u9762\uff0c\u4ece\u8fd9\u4e9b\u65b9\u9762\u53ef\u4ee5\u7ed3\u6784\u5316\u5730\u5236\u5b9a\u5e94\u5bf9\u63aa\u65bd\u3002 \u5728\u4e00\u4e9b\u5927\u7684\u56e2\u961f\u4e2d\uff0c\u5b89\u5168\u6d4b\u8bd5\u5f80\u5f80\u4f1a\u7531\u4e13\u95e8\u7684\u5b89\u5168\u4e13\u5bb6\u8fdb\u884c\u6216\u8005\u7ed9\u4e88\u6307\u5bfc\u3002\u6ca1\u6709\u6761\u4ef6\u7684\uff0c\u5219\u7531\u7814\u53d1\u4eba\u5458\u548c QA \u5171\u540c\u5b8c\u6210\u3002","title":"1.2.6 \u5b89\u5168\u6d4b\u8bd5"},{"location":"01-self-testing-fundamentals/#127","text":"\u6027\u80fd\u6d4b\u8bd5\uff08Performance Testing\uff09\u662f\u6307\u9488\u5bf9\u8f6f\u4ef6\u6027\u80fd\u6307\u6807\u8fdb\u884c\u7684\u6d4b\u8bd5\u3002\u6027\u80fd\u6d4b\u8bd5\u5305\u62ec\u4e86\u8f6f\u4ef6\u54cd\u5e94\u901f\u5ea6\u548c\u7528\u6237\u5bb9\u91cf\u7b49\u65b9\u9762\u7684\u5185\u5bb9\u3002 \u54cd\u5e94\u901f\u5ea6\u4ee3\u8868\u7528\u6237\u4f7f\u7528\u8f6f\u4ef6\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5e38\u89c4\u64cd\u4f5c\u800c\u8a00\uff0c\u7b49\u5f85\u65f6\u95f4\u8fc7\u957f\uff0c\u4f1a\u6781\u5927\u5730\u5f71\u54cd\u7528\u6237\u4f7f\u7528\u3002\u4e00\u822c\u5bf9 Web \u7a0b\u5e8f\u6765\u8bf4\uff0c\u9875\u9762\u7684\u52a0\u8f7d\u65f6\u95f4\u4e0d\u8d85\u8fc7 2 \u79d2\uff0c\u5426\u5219\u4f1a\u9020\u6210\u5927\u91cf\u7684\u7528\u6237\u6d41\u5931\u3002 \u7528\u6237\u5bb9\u91cf\u4ee3\u8868\u7740\u6709\u591a\u5c11\u7528\u6237\u80fd\u540c\u65f6\u4f7f\u7528\u8be5\u8f6f\u4ef6\u3002\u5355\u673a\u8f6f\u4ef6\u5bf9\u7528\u6237\u5bb9\u91cf\u8981\u6c42\u4e0d\u9ad8\uff0c\u5bf9\u4e8e\u4e92\u8054\u7f51\u9879\u76ee\uff0c\u6027\u80fd\u6d4b\u8bd5\u9700\u8981\u6db5\u76d6\u5bb9\u91cf\u6307\u6807\u3002\u6027\u80fd\u6d4b\u8bd5\u4e2d\u6709\u4e00\u79cd\u8d1f\u8f7d\u6d4b\u8bd5\uff0c\u7528\u4e8e\u901a\u8fc7\u6a21\u62df\u7528\u6237\u9012\u589e\u7684\u65b9\u5f0f\u627e\u51fa\u7cfb\u7edf\u7684\u6700\u5927\u5bb9\u91cf\uff0c\u4ee5\u53ca\u9a8c\u8bc1\u7cfb\u7edf\u662f\u5426\u80fd\u901a\u8fc7\u589e\u52a0\u670d\u52a1\u7684\u65b9\u5f0f\u6c34\u5e73\u6269\u5bb9\u3002 \u6027\u80fd\u6d4b\u8bd5\u5de5\u5177\u5305\u62ec JMeter\u3001AB\u3001K6 \u7b49\u3002JMeter\u3001AB \u90fd\u662f Apache \u57fa\u91d1\u4f1a\u7684\u4ea7\u54c1\uff0c\u5177\u6709\u826f\u597d\u7684\u4f7f\u7528\u53e3\u7891\u3002K6 \u662f\u4e00\u6b3e\u65b0\u7684\u6027\u80fd\u6d4b\u8bd5\u5de5\u5177\uff0c\u80fd\u4f7f\u7528 JavaScript \u8bed\u6cd5\u7f16\u5199\u81ea\u52a8\u5316\u7684\u6027\u80fd\u6d4b\u8bd5\u811a\u672c\uff0c\u5bf9 Web \u7a0b\u5e8f\u76f8\u5f53\u53cb\u597d\u3002","title":"1.2.7 \u6027\u80fd\u6d4b\u8bd5"},{"location":"01-self-testing-fundamentals/#13","text":"\u4e00\u822c\u8bb2\u89e3\u6d4b\u8bd5\u7684\u4e66\u7c4d\u4f1a\u5c06\u6d4b\u8bd5\u5206\u4e3a\u767d\u76d2\u6d4b\u8bd5\u548c\u9ed1\u76d2\u6d4b\u8bd5\uff0c\u7136\u540e\u63d0\u4f9b\u66f4\u5177\u4f53\u7684\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u6bd4\u5982\u7b49\u4ef7\u5212\u5206\u3001\u56e0\u679c\u56fe\u6cd5\u3001\u51b3\u7b56\u8868\u6cd5\u3001\u8fb9\u754c\u503c\u5206\u6790\u7b49\u3002 \u4f46\u662f\uff0c\u5bf9\u4e8e\u5927\u90e8\u5206\u7684\u7814\u53d1\u4eba\u5458\u6765\u8bf4\u90fd\u7528\u4e0d\u5230\u8fd9\u4e48\u591a\u590d\u6742\u7684\u65b9\u6cd5\uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u51e0\u79cd\u5e38\u7528\u7684\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5728\u540e\u6587\u4f1a\u9010\u4e00\u7528\u5230\u3002 \u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u7684\u672c\u8d28\u601d\u60f3\u662f\uff0c\u5c06\u539f\u672c\u9700\u8981\u7a77\u4e3e\u7684\u6240\u6709\u6d4b\u8bd5\u6570\u636e\u8fdb\u884c\u79d1\u5b66\u7684\u5f52\u7c7b\u3001\u9009\u62e9\u3001\u5212\u5206\uff0c\u4ee5\u671f\u7528\u6700\u5c11\u7684\u6d4b\u8bd5\u6570\u636e\u5c31\u53ef\u4ee5\u8fbe\u5230\u6700\u4f73\u7684\u6d4b\u8bd5\u6548\u679c\u3002 \u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u9075\u5b88\u7684\u57fa\u672c\u601d\u60f3\u662f MECE \u539f\u5219\uff0c\u5b83\u662f Mutually Exclusive,Collectively Exhaustive \u7684\u7f29\u5199\uff0c\u4e2d\u6587\u610f\u601d\u662f \"\u76f8\u4e92\u72ec\u7acb\uff0c\u5b8c\u5168\u7a77\u5c3d\"\u3002\u8fd9\u662f\u4e00\u79cd\u62c6\u89e3\u548c\u5206\u6790\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u6700\u5f00\u59cb\u6765\u81ea\u4e8e\u300a\u91d1\u5b57\u5854\u539f\u7406\u300b\u4e00\u4e66\uff0c\u80fd\u6bd4\u8f83\u597d\u5730\u6307\u5bfc\u7528\u4f8b\u8bbe\u8ba1\u7684\u76f8\u5173\u5b9e\u8df5\u3002 \u5728\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u6bcf\u4e2a\u7528\u4f8b\u7684\u6267\u884c\uff08\u65e0\u8bba\u662f\u4eba\u5de5\u8fd8\u662f\u81ea\u52a8\u5316\uff09\u90fd\u6709\u6210\u672c\uff0c\u90a3\u4e48\u9700\u8981\u5c3d\u53ef\u80fd\u7684\u8282\u7ea6\u3002\u76f8\u4e92\u72ec\u7acb\u7684\u610f\u601d\u662f\u62c6\u5206\u7684\u7528\u4f8b\u6ca1\u6709\u4ea4\u53c9\uff0c\u5b8c\u5168\u7a77\u5c3d\u662f\u8bf4\u62c6\u5206\u7684\u95ee\u9898\u9700\u8981\u8986\u76d6\u5230\u6240\u6709\u7684\u60c5\u51b5\u3002\u6bd4\u5982\uff0c\u628a\u6d4b\u8bd5\u6570\u636e\u7528\u6237\u5206\u4e3a\u7537\u6027\u7528\u6237\u548c\u5b66\u751f\u7528\u6237\uff0c\u8fd9\u6837\u5c31\u53d1\u751f\u4e86\u91cd\u53e0\u3002\u5f53\u7136\uff0cMECE\u662f\u4e00\u79cd\u7406\u60f3\u60c5\u51b5\uff0c\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u5f88\u96be\u8fbe\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u5426\u5219\u7f3a\u9677\u4e5f\u5c31\u4e0d\u4f1a\u5b58\u5728\u4e86\u3002\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u53c2\u8003\u8fd9\u4e2a\u539f\u5219\u6765\u8bbe\u8ba1\u7528\u4f8b\uff0c\u8ba9\u6bcf\u4e2a\u7528\u4f8b\u90fd\u7269\u5c3d\u5176\u7528\u3002","title":"1.3 \u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u5165\u95e8"},{"location":"01-self-testing-fundamentals/#131","text":"\u7b49\u4ef7\u7c7b\u7684\u5212\u5206\u5176\u5b9e\u6765\u81ea\u4e8e\u6570\u5b66\u7684\u96c6\u5408\u8bba\uff0c\u6307\u7684\u662f\u53ef\u4ee5\u5c06\u8f93\u5165\u57df\u7684\u96c6\u5408\u5212\u5206\u4e3a\u51e0\u4e2a\u7b49\u4ef7\u5b50\u96c6\u5408\uff0c\u7b49\u4ef7\u7c7b\u4e2d\u7684\u5143\u7d20\u5bf9\u4e8e\u63ed\u9732\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u6765\u8bf4\u662f\u7b49\u6548\u7684\u3002\u4ece\u5212\u5206\u5408\u7406\u7684\u7b49\u4ef7\u7c7b\u4e2d\u53d6\u51fa\u4efb\u610f\u4e00\u6761\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u6761\u4ef6\uff0c\u5747\u53ef\u83b7\u5f97\u540c\u6837\u7684\u6d4b\u8bd5\u6548\u679c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63d0\u9ad8\u6d4b\u8bd5\u6548\u7387\u3002 \u901a\u4fd7\u5730\u6765\u8bf4\uff0c\u5728\u540c\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\uff0c\u53ea\u8981\u6709\u4e00\u6761\u6d4b\u8bd5\u6570\u636e\u8ba9\u8f6f\u4ef6\u51fa\u9519\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\u7684\u5176\u4ed6\u6570\u636e\u5f80\u5f80\u4e5f\u4f1a\u8ba9\u8f6f\u4ef6\u51fa\u9519\u3002 \u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5728\u4e00\u6b3e\u652f\u4ed8\u8f6f\u4ef6\u4e2d\uff0c\u6b63\u786e\u7684\u8f93\u5165\u662f\u5e38\u89c4\u5927\u5c0f\u7684\u6570\u5b57\uff0c\u8f93\u5165\u5176\u4ed6\u8bf8\u5982\"&* ( \"\u8fd9\u6837\u7684\u7279\u6b8a\u5b57\u7b26\u6216\u5b57\u6bcd\uff0c\u5219\u4f1a\u7ed9\u4e88\u63d0\u793a\u3002\u90a3\u4e48\uff0c \u8f93\u5165\u5b57\u6bcd A \u548c B \u5c31\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u53ef\u4ee5\u5c06\u5b83\u4eec\u89c6\u4e3a\u540c\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\u3002 \u6b63\u662f\u56e0\u4e3a\u6b63\u786e\u7684\u8f93\u5165\u548c\u9519\u8bef\u7684\u8f93\u5165\u5dee\u5f02\u975e\u5e38\u660e\u663e\uff0c\u6240\u4ee5\u5c31\u5f62\u6210\u4e86\u5929\u7136\u7684\u5212\u5206\u65b9\u5f0f\uff0c\u4e00\u822c\u5c06\u7b49\u4ef7\u7c7b\u5212\u5206\u4e3a\u6709\u6548\u7b49\u4ef7\u7c7b\u548c\u65e0\u6548\u7b49\u4ef7\u7c7b\u3002 \u6709\u6548\u7b49\u4ef7\u7c7b\u662f\u6307\u5bf9\u8f6f\u4ef6\u6765\u8bf4\u5408\u7406\u3001\u6709\u610f\u4e49\u7684\u8f93\u5165\u6570\u636e\u96c6\u5408\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6709\u6548\u7684\u7b49\u4ef7\u7c7b\u53ea\u9700\u8981\u4e00\u7ec4\u5373\u53ef\uff0c\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8bbe\u8ba1\u591a\u4e2a\uff0c\u4e00\u4e9b\u56e2\u961f\u79f0\u4e4b\u4e3a\u6b63\u5411\u6d4b\u8bd5\uff08Happy Path\uff09\u3002 \u65e0\u6548\u7684\u7b49\u4ef7\u7c7b\u662f\u6307\u5bf9\u8f6f\u4ef6\u6765\u8bf4\u4e0d\u5408\u7406\u3001\u65e0\u610f\u4e49\u7684\u8f93\u5165\u6570\u636e\u96c6\u5408\uff0c\u76f8\u5bf9\u4e8e\u6709\u6548\u7b49\u4ef7\u7c7b\u6765\u8bf4\uff0c\u65e0\u6548\u7b49\u4ef7\u7c7b\u7684\u60c5\u51b5\u591a\u5f97\u591a\uff0c\u9700\u8981\u7ee7\u7eed\u5212\u5206\u3002\u65e0\u6548\u7b49\u4ef7\u7c7b\u53c8\u88ab\u53eb\u505a\u53cd\u5411\u6d4b\u8bd5\u3002 \u7b49\u4ef7\u7c7b\u5212\u5206\u6709\u51e0\u9879\u56fa\u5b9a\u6a21\u5f0f\u53ef\u4ee5\u53c2\u8003\uff1a \u5982\u679c\u89c4\u5b9a\u4e86\u8f93\u5165\u6570\u503c\u7684\u8303\u56f4\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u4e00\u4e2a\u6709\u6548\u7b49\u4ef7\u7c7b\uff0c\u4e24\u4e2a\u65e0\u6548\u7684\u7b49\u4ef7\u7c7b\u3002 \u5982\u679c\u89c4\u5b9a\u4e86\u8f93\u5165\u7684\u6570\u503c\u7684\u89c4\u5219\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u4e00\u4e2a\u7b26\u5408\u89c4\u5219\u7684\u7b49\u4ef7\u7c7b\uff0c\u4e24\u4e2a\u8fdd\u6cd5\u89c4\u5219\u7684\u7b49\u4ef7\u7c7b\u3002 \u5982\u679c\u89c4\u5b9a\u4e86\u8f93\u5165\u7684\u6570\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u53ef\u4ee5\u53c2\u8003\u7684\u7b49\u4ef7\u7c7b\u67090\u3001\u6b63\u6574\u6570\u3001\u8d1f\u6574\u6570\u548c\u5c0f\u6570\u7b49\u3002 \u5982\u679c\u89c4\u5b9a\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u53c2\u8003\u7684\u7b49\u4ef7\u7c7b\u6709\u6b63\u786e\u7684\u5b57\u7b26\u4e32\u3001\u7a7a\u3001\u7a7a\u767d\u5b57\u7b26\u4e32\u548c\u8d85\u957f\u7684\u5b57\u7b26\u4e32\u7b49\u3002 \u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u901a\u8fc7\u7b49\u4ef7\u7c7b\u5212\u5206\uff0c\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u7684\u4f8b\u5b50\u3002 \u652f\u4ed8\u5e73\u53f0\u5728\u5904\u7406\u7528\u6237\u8f93\u5165\u65f6\uff0c\u8981\u6c42\u7528\u6237\u8f93\u5165\u7b26\u5408\u8981\u6c42\u7684\u91d1\u989d X\uff0c\u6709\u5982\u4e0b\u89c4\u5219\uff0c\u5982\u679c\u6ee1\u8db3\u89c4\u5219\u8f93\u5165\u6846\u6821\u9a8c\u901a\u8fc7\uff0c\u5426\u5219\u63d0\u793a\u9519\u8bef\uff1a 1. \u7528\u6237\u53ea\u80fd\u8f93\u5165\u5927\u4e8e 0 \u5c0f\u4e8e\u7b49\u4e8e 2000 \u7684\u91d1\u989d\u3002 2. \u91d1\u989d\u7684\u5355\u4f4d\u662f\u7cbe\u786e\u5230\u4e24\u4f4d\u5c0f\u6570\u7684\u4eba\u6c11\u5e01\u5143\u3002 \u7ecf\u8fc7\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8868 1-1 \u6240\u793a\u7684\u7b49\u4ef7\u7c7b\u5212\u5206\u6765\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u3002 \u7528\u4f8b \u7b49\u4ef7\u7c7b\u578b X \u9884\u671f Case 1 \u6709\u6548\u7b49\u4ef7\u7c7b 0<x<2000,x \u662f\u6574\u6570 \u6821\u9a8c\u901a\u8fc7 Case 2 \u6709\u6548\u7b49\u4ef7\u7c7b 0<x<2000,x \u662f\u4e24\u4f4d\u5c0f\u6570 \u6821\u9a8c\u901a\u8fc7 Case 3 \u6709\u6548\u7b49\u4ef7\u7c7b x = 2000 \u6821\u9a8c\u901a\u8fc7 Case 4 \u65e0\u6548\u7b49\u4ef7\u7c7b x = 0 \u63d0\u793a\u9519\u8bef Case 5 \u65e0\u6548\u7b49\u4ef7\u7c7b x = -1 \u63d0\u793a\u9519\u8bef Case 6 \u65e0\u6548\u7b49\u4ef7\u7c7b x=0.001 \u63d0\u793a\u9519\u8bef Case 7 \u65e0\u6548\u7b49\u4ef7\u7c7b x=\u5f20\u4e09 \u63d0\u793a\u9519\u8bef Case 8 \u65e0\u6548\u7b49\u4ef7\u7c7b x=^&*^& \u63d0\u793a\u9519\u8bef Case 9 \u65e0\u6548\u7b49\u4ef7\u7c7b x= \u63d0\u793a\u9519\u8bef","title":"1.3.1 \u7b49\u4ef7\u7c7b\u5212\u5206"},{"location":"01-self-testing-fundamentals/#132","text":"\u8fb9\u754c\u503c\u5206\u6790\u6cd5\uff08Boundary Value Analysis\uff0cBVA\uff09 \u662f\u4e00\u79cd\u5bf9\u7b49\u4ef7\u7c7b\u5212\u5206\u505a\u51fa\u6709\u6548\u8865\u5145\u7684\u6d4b\u8bd5\u65b9\u6cd5\u3002 \u8fb9\u754c\u503c\u6cd5\u662f\u5efa\u7acb\u5728\u4e1a\u754c\u5171\u8bc6\u4e0a\u7684\uff0c\u5373\u8f6f\u4ef6\u7684\u9519\u8bef\u5f80\u5f80\u51fa\u73b0\u5728\u8f93\u5165\u8f93\u51fa\u57df\u7684\u8fb9\u754c\u4e0a\uff0c\u800c\u4e0d\u662f\u8f93\u5165\u8f93\u51fa\u57df\u7684\u5185\u90e8\uff0c\u56e0\u6b64\u5728\u9009\u62e9\u6d4b\u8bd5\u6570\u636e\u65f6\uff0c\u8fb9\u754c\u503c\u6bd4\u5185\u90e8\u7684\u6570\u636e\u66f4\u6709\u4ef7\u503c\u3002 \u4f9d\u7136\u4f7f\u7528\u524d\u9762\u7684\u4f8b\u5b50\uff0c\u7a0b\u5e8f\u4f1a\u5bf9\u7528\u6237\u7684\u8f93\u5165\u503c\u8fdb\u884c\u68c0\u67e5\uff0c\u68c0\u67e5\u7684\u6761\u4ef6\u5f80\u5f80\u90fd\u662f\u57fa\u4e8e\u8fb9\u754c\u503c\u8bbe\u5b9a\u7684\u3002\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a if(input <= 0 || !isANumber(input) || input > 2000){ throw new Exception(\"input error\"). } \u901a\u8fc7\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c0\u30012000 \u90fd\u662f\u4e00\u4e2a\u5178\u578b\u7684\u8fb9\u754c\u503c\uff0c\u6570\u5b57\u548c\u975e\u6570\u5b57\u5b57\u7b26\u4e4b\u95f4\u4e5f\u662f\u4e00\u4e2a\u8fb9\u754c\uff0c\u56e0\u4e3a\u5728\u8ba1\u7b97\u673a\u5185\u90e8\u6570\u5b57\u548c\u975e\u6570\u5b57\u5b57\u7b26\u7684\u7f16\u7801\u503c\u4e0d\u540c\u3002 \u4f7f\u7528\u8fb9\u754c\u503c\u6cd5\u9009\u62e9\u6d4b\u8bd5\u6570\u636e\u65f6\uff0c\u5e94\u5f53\u9009\u53d6\u521a\u597d\u7b49\u4e8e\u3001\u521a\u597d\u5927\u4e8e\u3001\u521a\u597d\u5c0f\u4e8e\u7684\u503c\u4f5c\u4e3a\u8f93\u5165\u3002 \u8fb9\u754c\u503c\u5206\u6790\u6cd5\u6709\u51e0\u9879\u56fa\u5b9a\u6a21\u5f0f\u53ef\u4ee5\u53c2\u8003\uff1a \u5982\u679c\u89c4\u5b9a\u4e86\u8f93\u5165\u6570\u503c\u7684\u8303\u56f4\uff0c\u53ef\u4ee5\u9009\u62e9\u521a\u597d\u7b49\u4e8e\u3001\u521a\u597d\u5927\u4e8e\u3001\u521a\u597d\u5c0f\u4e8e\u7684\u503c\u3002 \u5982\u679c\u89c4\u5b9a\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u53ef\u4ee5\u9009\u62e9\u7a7a\u96c6\u5408\u3001\u8d85\u51fa\u6700\u5927\u503c\u7684\u96c6\u5408\u3001\u4e00\u4e2a\u5143\u7d20\u7684\u96c6\u5408\u3002 \u4f7f\u7528\u89c4\u5219\u7684\u4e34\u754c\u6761\u4ef6\u3002\u6bd4\u5982\uff0c\u89c4\u5219 \"\u8f93\u5165\u4e0d\u4e3a\u7a7a\u7684\u5b57\u7b26\u4e32\"\u7684\u4e34\u754c\u8f93\u5165\u662f\u4e0d\u53ef\u89c1\u7684\u5b57\u7b26\u4e32\uff08\u7a7a\u683c\u3001\u5236\u8868\u7b26\u7b49\uff09\u3002","title":"1.3.2 \u8fb9\u754c\u503c\u6cd5"},{"location":"01-self-testing-fundamentals/#133","text":"\u524d\u9762\u4ecb\u7ecd\u7684\u51e0\u79cd\u6d4b\u8bd5\u7528\u4f8b\u7684\u8bbe\u8ba1\u65b9\u6cd5\u90fd\u662f\u9488\u5bf9\u5355\u6b21\u64cd\u4f5c\u7684\uff0c\u8f6f\u4ef6\u5f80\u5f80\u90fd\u9700\u8981\u8fdb\u884c\u591a\u6b21\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6d4b\u8bd5\u7ec4\u5408\u540e\u7684\u64cd\u4f5c\uff0c\u901a\u8fc7\u7ec4\u5408\u64cd\u4f5c\u6765\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5373\u4e3a\u4f7f\u7528\u573a\u666f\u6cd5\u3002 \u8f6f\u4ef6\u7684\u6d41\u7a0b\u63a7\u5236\u90fd\u662f\u901a\u8fc7\u4e8b\u4ef6\u7684\u89e6\u53d1\u6765\u5b8c\u6210\u7684\u3002\u5355\u4e2a\u4e8b\u4ef6\u7684\u6d4b\u8bd5\u53ef\u4ee5\u7528\u524d\u9762\u4ecb\u7ecd\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\uff0c\u591a\u4e2a\u4e8b\u4ef6\u5219\u9700\u8981\u6839\u636e\u4e0d\u540c\u7684\u987a\u5e8f\u6784\u5efa\u4e0d\u540c\u7684\u4e8b\u4ef6\u6d41\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u4e8b\u4ef6\u89e6\u53d1\u7684\u60c5\u666f\u79f0\u4e3a\u573a\u666f\u3002 \u6839\u636e\u4e8b\u4ef6\u7ec4\u5408\u800c\u6765\u7684\u7528\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u590d\u5408\u7528\u4f8b\u3002\u6267\u884c\u590d\u5408\u7528\u4f8b\uff0c\u53ef\u4ee5\u66b4\u9732\u5927\u91cf\u7684\u6d41\u7a0b\u95ee\u9898\uff0c\u63d0\u9ad8\u6d4b\u8bd5\u6548\u679c\u3002 \u5982\u56fe 1-4\u6240\u793a\uff0c\u573a\u666f\u6cd5\u4e00\u822c\u5305\u542b\u57fa\u672c\u6d41\u548c\u5907\u9009\u6d41\u3002 \u56fe 1-4 \u7528\u4f8b\u6d41\u793a\u610f\u56fe \u56fe1-4\u4e2d\u7684\u76f4\u7ebf\u8868\u793a\u57fa\u672c\u6d41\uff0c\u662f\u6700\u7b80\u5355\u7684\u6d4b\u8bd5\u8def\u5f84\uff0c\u66f2\u7ebf\u8868\u793a\u5907\u9009\u6d41\uff0c\u662f\u5728\u67d0\u4e2a\u7279\u5b9a\u7684\u6761\u4ef6\u4e0b\u6240\u53d1\u751f\u7684\u5f02\u5e38\u884c\u4e3a\u3002 \u5907\u9009\u6d41\u53ef\u4ee5\u4ece\u57fa\u672c\u6d41\u7684\u4efb\u4f55\u8282\u70b9\u5f00\u59cb\uff0c\u4e5f\u53ef\u4ee5\u56de\u9000\u3001\u8df3\u8fc7\u57fa\u672c\u6d41\u7684\u8282\u70b9\u3002 \u4f7f\u7528\u573a\u666f\u6cd5\u7684\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\u5982\u4e0b\uff1a 1\uff09\u6839\u636e\u4e1a\u52a1\u89c4\u5219\uff0c\u753b\u51fa\u57fa\u672c\u6d41\u7684\u6240\u6709\u7684\u8282\u70b9\u3002 2\uff09\u8003\u8651\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u5f02\u5e38\u60c5\u51b5\uff0c\u5e76\u753b\u51fa\u5f02\u5e38\u8282\u70b9\u3002 3\uff09\u6839\u636e\u53ef\u8fbe\u6027\uff0c\u8fd9\u4e9b\u8282\u70b9\u6784\u6210\u4e00\u4e2a\u6709\u5411\u7684\u56fe\u3002 4\uff09\u5bf9\u8fd9\u4e2a\u56fe\u8fdb\u884c\u904d\u5386\uff0c\u8bbe\u8ba1\u7528\u4f8b\u3002 \u573a\u666f\u6cd5\u7684\u6ce8\u610f\u4e8b\u9879\uff1a \u573a\u666f\u7684\u5212\u5206\u548c\u9009\u62e9\u6bd4\u8f83\u91cd\u8981\uff0c\u8f6f\u4ef6\u7684\u573a\u666f\u53ef\u80fd\u6bd4\u8f83\u591a\uff0c\u9700\u8981\u4ece\u6700\u91cd\u8981\u7684\u573a\u666f\u5f00\u59cb\u9009\u62e9\u3002 \u4e00\u4e2a\u573a\u666f\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u7528\u6237\u89d2\u8272\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u591a\u4e2a\u89d2\u8272\u4ea4\u66ff\u64cd\u4f5c\u7684\u60c5\u51b5\u3002 \u8bbe\u8ba1\u573a\u666f\u53ef\u4ee5\u53c2\u8003\u5f00\u53d1\u6587\u6863\u4e2d\u7684\u7528\u4f8b\uff08Use Case\uff09\u8bbe\u8ba1\u3002 \u4e0b\u9762\u662f\u4f7f\u7528\u573a\u666f\u6cd5\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u7684\u6848\u4f8b\u3002 \u9700\u6c42\u8bf4\u660e\u5982\u4e0b\uff1a \u8fd9\u662f\u4e00\u6b3e\u6536\u94f6\u673a\u8f6f\u4ef6\uff0c\u4e1a\u52a1\u8bbe\u5b9a\u4e3a\u670d\u52a1\u5458\u4e5f\u9700\u8981\u8ba9\u6536\u94f6\u5458\u6765\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e0d\u8bb0\u5ea7\u4f4d\u6a21\u5f0f\uff0c\u4f7f\u7528\u53f7\u724c\uff0c\u6536\u94f6\u5458\u53ef\u4ee5\u8fdb\u884c\u9009\u83dc\u3001\u4e0b\u5355\u3001\u9000\u83dc\u3001\u6253\u5355\u3001\u7ed3\u8d26\u7b49\u64cd\u4f5c\u3002\u540e\u53a8\u53ef\u4ee5\u8fdb\u884c\u51fa\u83dc\u64cd\u4f5c\u3002 \u5982\u56fe 1-5 \u6240\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0a\u8ff0\u9700\u6c42\u6765\u8bbe\u8ba1\u7528\u4f8b\u5e76\u8fdb\u884c\u6d4b\u8bd5\uff0c\u8868 1-2 \u7ed9\u51fa\u4e86\u5bf9\u5e94\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 \u56fe 1-5 \u70b9\u9910\u7528\u4f8b \u8868 1-2 \u4f7f\u7528\u7528\u4f8b\u6d41\u8bbe\u8ba1\u7528\u4f8b \u540d\u79f0 \u6b65\u9aa4 \u57fa\u672c\u6d41 1. \u6536\u94f6\u5458\u5f00\u59cb\u70b9\u9910\uff0c\u542f\u52a8\u8f6f\u4ef6\u540e\uff0c\u80fd\u52a0\u8f7d\u83dc\u54c1\u5217\u8868\uff0c\u5e76\u663e\u793a\u8be6\u60c52. \u6536\u94f6\u5458\u9009\u62e9\u83dc\u54c1\uff0c\u5e76\u8bbe\u5b9a\u6570\u91cf\u3001\u53e3\u5473\u7b49\uff0c\u786e\u8ba4\u83dc\u54c1\u65e0\u8bef\u540e\u8fdb\u5165\u4e0b\u4e00\u6b653. \u6536\u94f6\u5458\u6536\u5230\u7528\u6237\u8d39\u7528\u540e\uff0c\u8fdb\u5165\u4e0b\u5355\u6253\u5370\u754c\u9762\uff0c\u6253\u5370\u5c0f\u7968\u7ed9\u540e\u53a8\uff0c\u5e76\u6253\u5370\u8d26\u5355\u7ed9\u5ba2\u6237\uff0c\u6536\u94f6\u5458\u53ef\u4ee5\u5728\u7ed3\u8d26\u540e\u56de\u5230\u70b9\u9910\u72b6\u6001\uff0c\u4e3a\u4e0b\u4e00\u6b21\u70b9\u9910\u505a\u51c6\u59074. \u540e\u53a8\u770b\u5230\u5c0f\u7968\u5f00\u59cb\u505a\u83dc\uff0c\u51fa\u83dc\u540e\u7531\u540e\u53a8\u786e\u8ba4\u51fa\u83dc5. \u7cfb\u7edf\u63a5\u6536\u5230\u786e\u8ba4\u67d0\u4e2a\u8ba2\u5355\u7684\u6240\u6709\u51fa\u83dc\u4fe1\u606f\u540e\uff0c\u6807\u8bb0\u8ba2\u5355\u5b8c\u6210\uff0c\u7528\u4e8e\u7edf\u8ba1\u548c\u6536\u94f6\u5458\u5bf9\u8d26 \u5907\u9009\u6d41 1 - \u672a\u7ed3\u8d26\u56de\u9000 1. \u6536\u94f6\u5458\u5f00\u59cb\u70b9\u9910\uff0c\u542f\u52a8\u8f6f\u4ef6\u540e\uff0c\u80fd\u52a0\u8f7d\u83dc\u54c1\u5217\u8868\uff0c\u5e76\u663e\u793a\u8be6\u60c52. \u6536\u94f6\u5458\u786e\u8ba4\u83dc\u54c1\u65e0\u8bef\u540e\uff0c\u8fdb\u5165\u4e0b\u5355\u6253\u5370\u754c\u97623. \u6536\u94f6\u5458\u53ef\u4ee5\u9009\u62e9\u8fd4\u56de\u4e0a\u4e00\u6b65\uff0c\u8f6f\u4ef6\u8bb0\u5f55\u4e4b\u524d\u7684\u83dc\u54c1\u9009\u62e9 \u5907\u9009\u6d41 2 - \u7ed3\u8d26\u540e\u9000\u83dc \u987e\u5ba2\u53ef\u80fd\u70b9\u5355\u540e\u9009\u62e9\u9000\u83dc\uff0c\u8f6f\u4ef6\u5141\u8bb8\u76f8\u5e94\u7684\u64cd\u4f5c1. \u5b8c\u6210\u57fa\u672c\u6d41\u7684\u524d\u4e24\u4e2a\u6b65\u9aa42. \u4ece\u5386\u53f2\u8ba2\u5355\u8fdb\u5165\uff0c\u9009\u62e9\u9000\u83dc\u64cd\u4f5c\uff0c\u53ea\u80fd\u9009\u62e9\u672a\u51fa\u83dc\u7684\u83dc\u54c1\u9879\u76ee \u5907\u9009\u6d41 3 - \u7ed3\u8d26\u540e\u53d6\u6d88\u8ba2\u5355 \u987e\u5ba2\u53ef\u80fd\u70b9\u5355\u540e\u9009\u62e9\u53d6\u6d88\u8ba2\u5355\uff0c\u8f6f\u4ef6\u5141\u8bb8\u76f8\u5e94\u7684\u64cd\u4f5c1. \u5b8c\u6210\u57fa\u672c\u6d41\u7684\u524d\u4e24\u4e2a\u6b65\u9aa42. \u4ece\u5386\u53f2\u8ba2\u5355\u8fdb\u5165\uff0c\u9009\u62e9\u53d6\u6d88\u8ba2\u5355\u64cd\u4f5c\uff0c\u53ea\u80fd\u9009\u62e9\u672a\u53d1\u751f\u51fa\u83dc\u7684\u8ba2\u5355","title":"1.3.3 \u573a\u666f\u6cd5"},{"location":"01-self-testing-fundamentals/#14","text":"\u4e0a\u9762\u4ecb\u7ecd\u7684\u53ea\u662f\u6d4b\u8bd5\u5de5\u4f5c\u7684\u90e8\u5206\u5165\u95e8\u6216\u8005\u57fa\u7840\u77e5\u8bc6\uff0c\u5bf9\u4e8e\u7814\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u5e76\u4e0d\u9700\u8981\u5173\u6ce8\u6240\u6709\u7684\u6d4b\u8bd5\u5de5\u4f5c\u4efb\u52a1\u3002 \u7814\u53d1\u4eba\u5458\u9700\u8981\u5173\u6ce8\u4e00\u4e9b\u548c\u7814\u53d1\u76f8\u5173\u7684\u6d4b\u8bd5\uff0c\u964d\u4f4e\u5c06\u4ee3\u7801\u8f6c\u6d4b\uff08\u5c06\u5f00\u53d1\u5b8c\u6210\u7684\u529f\u80fd\u63d0\u4ea4\u7ed9 QA \u8fdb\u884c\u6d4b\u8bd5\uff09\u540e\u7684\u7f3a\u9677\u7387\u3002\u964d\u4f4e\u8f6c\u6d4b\u540e\u7f3a\u9677\u7387\u7684\u6536\u76ca\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u5927\u516c\u53f8\u5f80\u5f80\u90fd\u6709\u8fd9\u65b9\u9762\u7684\u8981\u6c42\uff0c\u5e76\u4e14\u548c\u90e8\u95e8\u7ee9\u6548\u76f8\u5173\uff0c\u7f3a\u9677\u7387\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u8003\u6838\u3002\u8f6c\u6d4b\u5931\u8d25\u6216\u8005\u5728\u9ad8\u6d4b\u8bd5\u73af\u5883\u53d1\u73b0\u95ee\u9898\uff0c\u975e\u5e38\u4e0d\u5229\u4e8e\u8c03\u8bd5\u548c\u89e3\u51b3\uff0c\u5c3d\u53ef\u80fd\u5730\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u751a\u81f3\u5728\u672c\u5730\u53d1\u73b0\u548c\u89e3\u51b3\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002 \u4e0d\u8fc7\uff0c\u54ea\u4e9b\u8d28\u91cf\u4fdd\u8bc1\u7684\u5de5\u4f5c\u7531\u7814\u53d1\u6765\u505a\uff0c\u54ea\u4e9b\u5de5\u4f5c\u7531 QA \u6765\u505a\u5f80\u5f80\u4e89\u8bae\u9887\u591a\u3002\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u65b9\u6cd5\u5219\u5c31\u662f \u767d\u76d2\u6d4b\u8bd5\u5927\u90e8\u5206\u7531\u7814\u53d1\u4eba\u5458\u5b8c\u6210\uff0c\u9ed1\u76d2\u6d4b\u8bd5\u5927\u90e8\u5206\u7531 QA \u6765\u5b8c\u6210\uff0c\u7531\u4e24\u8005\u4e00\u8d77\u5bf9\u6700\u7ec8\u8d28\u91cf\u8d1f\u8d23\u3002 \u56fe 1-6 \u7ed9\u51fa\u4e86\u4e00\u4e2a\u5f00\u53d1\u81ea\u6d4b\u7684\u8303\u56f4\uff0c\u4f46\u662f\u6700\u91cd\u8981\u7684\u662f\u9700\u8981\u548c\u56e2\u961f\u8fbe\u6210\u5171\u8bc6\u3002 \u56fe 1-6 \u7814\u53d1\u4eba\u5458\u548c\u6d4b\u8bd5\u4eba\u5458\u7684\u5206\u5de5 \u6839\u636e\u6d4b\u8bd5\u91d1\u5b57\u5854\u7684\u5212\u5206\u65b9\u5f0f\u53ef\u77e5\uff0c\u4e00\u822c\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u9700\u8981\u7814\u53d1\u4eba\u5458\u81ea\u5df1\u5b8c\u6210\uff0c\u5e76\u4e14\u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u7c7b\u6d4b\u8bd5\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u4ee3\u7801\u90fd\u548c\u4e1a\u52a1\u4ee3\u7801\u5728\u4e00\u4e2a\u4ed3\u5e93\u4e2d\u3002\u8fd9\u91cc\u8bf4\u8bf4\u8fd9\u6837\u5212\u5206\u7684\u8003\u91cf\u548c\u7ecf\u9a8c\u3002 \u5355\u5143\u6d4b\u8bd5\u9700\u8981\u5927\u91cf\u4f9d\u8d56\u6a21\u62df\uff08Mock\uff09\uff0c\u540c\u65f6\u9700\u8981\u5206\u6790\u4ee3\u7801\u7684\u5206\u652f\u7ed3\u6784\u624d\u80fd\u5199\u51fa\u6709\u6548\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002\u6b64\u5916\uff0c\u8fd9\u90e8\u5206\u6d4b\u8bd5\u4f1a\u5f15\u7528\u76ee\u6807\u4ee3\u7801\uff0c\u5b83\u9700\u8981\u548c\u76ee\u6807\u4ee3\u7801\u4fdd\u6301\u4e00\u81f4\u7684\u6280\u672f\u6808\uff0c\u800c\u8fd9\u4e9b\u53ea\u6709\u7814\u53d1\u4eba\u5458\u81ea\u5df1\u6700\u719f\u6089\uff0c\u6240\u4ee5\u7814\u53d1\u4eba\u5458\u53ef\u4ee5\u7528\u6700\u9ad8\u7684\u6548\u7387\u6765\u7f16\u5199\u6d4b\u8bd5\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5408\u683c\u7684\u7814\u53d1\u4eba\u5458\u90fd\u9700\u8981\u4f1a\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff08\u8fd9\u4e5f\u662f\u4e00\u4e9b\u5927\u5382\u7684\u5fc5\u5907\u8981\u6c42\uff09\u3002 \u96c6\u6210\u6d4b\u8bd5\u5728\u524d\u9762\u7684\u5b9a\u4e49\u4e2d\u662f\u6307\u5355\u4e2a\u6a21\u5757\u3001\u670d\u52a1\u7684\u6d4b\u8bd5\uff0c\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u5f80\u5f80\u9700\u8981\u542f\u52a8\u5e94\u7528\u4e0a\u4e0b\u6587\uff0c\u8fd9\u7c7b\u6d4b\u8bd5\u5173\u6ce8\u7684\u662f\u5355\u4e2a API \u7684\u80fd\u529b\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u7814\u53d1\u4eba\u5458\u7528 API \u4e3a\u57fa\u672c\u7c92\u5ea6\u4ea4\u4ed8\u7279\u6027\uff0c\u8fd9\u7c7b\u6d4b\u8bd5\u4fdd\u8bc1\u5bf9\u5916\u7684 API \u80fd\u529b\uff0c\u540c\u65f6\u53ef\u4ee5\u9a8c\u6536\u5355\u4e2a\u4e1a\u52a1\u8d28\u91cf\u3002\u5728\u4e00\u4e9b QA \u4eba\u5458\u76f8\u5bf9\u5145\u8db3\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8ba9 QA \u53c2\u4e0e\uff0c\u5171\u540c\u5b8c\u6210\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u5982\u679c\u628a\u4ee3\u7801\u89c4\u8303\u626b\u63cf\u3001\u5b89\u5168\u626b\u63cf\u7684\u7ed3\u679c\u4e5f\u7b97\u6d4b\u8bd5\u7684\u4e00\u90e8\u5206\u7684\u8bdd\uff0c\u90a3\u4e48\u540c\u6837\u9700\u8981\u7814\u53d1\u4eba\u5458\u5173\u6ce8\u3002\u4e0d\u8fc7\u8fd9\u7c7b\u5de5\u4f5c\uff0c\u4e00\u822c\u662f\u516c\u53f8 QA \u90e8\u95e8\u7edf\u4e00\u914d\u7f6e\u3001\u7ef4\u62a4\u7684\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u7814\u53d1\u4eba\u5458\u7684\u6d4b\u8bd5\u5de5\u4f5c\u4e0d\u4ec5\u4ec5\u662f\u9488\u5bf9\u65b0\u529f\u80fd\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6301\u7eed\u7ef4\u62a4\u624d\u662f\u6700\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u968f\u7740\u8f6f\u4ef6\u4ea7\u54c1\u8d70\u5411\u53d1\u5c55\u540e\u671f\uff0c\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u5c06\u662f\u7ef4\u62a4\u548c\u6539\u8fdb\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u7814\u53d1\u4eba\u5458\u7684\u81ea\u6d4b\u4efb\u52a1\u5f80\u5f80\u4e0d\u53ea\u662f\u5728\u65b0\u7f16\u5199\u8f6f\u4ef6\u7684\u65f6\u5019\u52a0\u5165\uff0c\u5728\u91cd\u6784\u3001\u4fee\u590d\u7f3a\u9677\u3001\u6570\u636e\u8fc1\u79fb\u7684\u65f6\u5019\u4e5f\u9700\u8981\u53ca\u65f6\u589e\u52a0\u6d4b\u8bd5\uff0c\u4e0b\u9762\u8be6\u7ec6\u8bf4\u660e\u8fd9\u51e0\u4e2a\u573a\u666f\u3002","title":"1.4 \u7814\u53d1\u4eba\u5458\u81ea\u6d4b\u8303\u56f4"},{"location":"01-self-testing-fundamentals/#141","text":"\u5bf9\u4e8e\u65b0\u7684\u9700\u6c42\uff0c\u4e00\u822c\u4f1a\u8ba9 QA \u5e2e\u5fd9\u63d0\u524d\u51c6\u5907\u597d\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u7684\u7528\u4f8b\u3002 \u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 JUnit \u8fd9\u7c7b\u6d4b\u8bd5\u6846\u67b6\uff0c\u901a\u8fc7\u6a21\u62df\u4f9d\u8d56\u5b9e\u73b0\u7ec6\u81f4\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5c3d\u91cf\u8986\u76d6\u66f4\u591a\u7684\u5206\u652f\u3002 \u96c6\u6210\u6d4b\u8bd5\u53ef\u4ee5\u4f7f\u7528 Spring MockMVC \u8fd9\u7c7b\u6d4b\u8bd5\u6846\u67b6\uff0c\u901a\u8fc7\u542f\u52a8\u5e94\u7528\u6765\u9a8c\u8bc1 API \u7684\u903b\u8f91\u662f\u5426\u6b63\u786e\u3002\u7531\u4e8e\u96c6\u6210\u6d4b\u8bd5\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u7528\u6765\u7f16\u5199\u590d\u6742\u7528\u4f8b\u4f1a\u62d6\u6162\u5f00\u53d1\u548c\u6d4b\u8bd5\uff0c\u56e0\u6b64\uff0c\u6d4b\u8bd5\u5173\u952e\u7684\u57fa\u672c\u573a\u666f\u5373\u53ef\u3002 \u5728\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u65f6\uff0c\u5982\u679c\u719f\u6089 TDD\uff08\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\uff09\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 TDD\uff0c\u5148\u7f16\u5199\u6d4b\u8bd5\u518d\u7f16\u5199\u5b9e\u73b0\uff0c\u4e0d\u8fc7 TDD \u6709\u4e00\u5b9a\u7684\u5b66\u4e60\u6210\u672c\u3002\u8fd9\u4e9b\u5185\u5bb9\u7684\u5177\u4f53\u64cd\u4f5c\u5728\u540e\u9762\u7684\u5185\u5bb9\u4e2d\u4f1a\u9010\u6b65\u8bb2\u89e3\u3002 \u6d4b\u8bd5\u8986\u76d6\u7387\u53ef\u4ee5\u5c06\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u53e0\u52a0\u8ba1\u7b97\uff0c\u4e00\u822c\u96c6\u6210\u6d4b\u8bd5\u53ef\u4ee5\u5feb\u901f\u5730\u8dd1\u5b8c\u4e00\u4e2a\u4e3b\u8981\u6d41\u7a0b\uff0c\u83b7\u5f97\u5927\u90e8\u5206\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u7136\u540e\u4f7f\u7528\u5355\u5143\u6d4b\u8bd5\u5f25\u8865\u6ca1\u6709\u8986\u76d6\u7684\u5206\u652f\uff0c\u8fdb\u4e00\u6b65\u83b7\u5f97\u66f4\u9ad8\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u3002","title":"1.4.1 \u65b0\u4ea4\u4ed8\u7684\u9700\u6c42"},{"location":"01-self-testing-fundamentals/#142","text":"\u5982\u679c\u4fee\u590d\u4e86\u4e00\u4e2a Bug\uff0c\u90a3\u4e48\u9700\u8981\u53ca\u65f6\u66f4\u65b0\u3001\u8865\u5145\u6d4b\u8bd5\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\u76ee\u7684\u662f\u4e3a\u4e86\u907f\u514d\u540c\u7c7b\u95ee\u9898\u518d\u6b21\u51fa\u73b0\uff0c\u6216\u8005\u5728\u5176\u4ed6\u7684\u573a\u666f\u4e2d\u51fa\u73b0\u3002\u53e6\u5916\uff0c\u4fee\u590d Bug \u5f80\u5f80\u4f1a\u5199\u4e00\u4e9b\u8865\u4e01\u4ee3\u7801\uff0c\u8fd9\u7c7b\u4ee3\u7801\u5176\u4ed6\u540c\u4e8b\u5f88\u96be\u7406\u89e3\u3002\u8865\u5145\u6d4b\u8bd5\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\u7684\u8bed\u4e49\u6765\u63cf\u8ff0\u8fd9\u6bb5\u96be\u4ee5\u7406\u89e3\u7684\u903b\u8f91\uff0c\u548c\u6ce8\u91ca\u76f8\u6bd4\uff0c\u6d4b\u8bd5\u53ef\u4ee5\u540c\u6b65\u66f4\u65b0\uff0c\u5982\u679c\u540e\u671f\u76f8\u5173\u4ee3\u7801\u6539\u9519\u4e86\uff0c\u6d4b\u8bd5\u5219\u65e0\u6cd5\u901a\u8fc7\u3002","title":"1.4.2 \u7f3a\u9677\u5904\u7406"},{"location":"01-self-testing-fundamentals/#143","text":"\u8fdb\u884c\u91cd\u6784\u65f6\uff0c\u9700\u8981\u5148\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3001API \u6d4b\u8bd5\u6216\u5951\u7ea6\u6d4b\u8bd5\uff0c\u4fdd\u62a4\u539f\u6709\u884c\u4e3a\u4e0d\u53d7\u7834\u574f\u3002\u91cd\u6784\u7684\u542b\u4e49\u662f\uff0c\u5728\u4e1a\u52a1\u89c4\u5219\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u6539\u9020\u6216\u91cd\u65b0\u8bbe\u8ba1\u4ee3\u7801\uff0c\u63d0\u9ad8\u53ef\u7ef4\u62a4\u6027\u548c\u4ee3\u7801\u8d28\u91cf\u3002 \u56e0\u6b64\uff0c\u91cd\u6784\u4e5f\u662f\u6dfb\u52a0\u6d4b\u8bd5\u7684\u91cd\u8981\u65f6\u673a\u3002","title":"1.4.3 \u91cd\u6784"},{"location":"01-self-testing-fundamentals/#144","text":"\u6570\u636e\u8fc1\u79fb\u7684\u7ed3\u679c\u9a8c\u8bc1\u662f\u4e00\u4ef6\u6bd4\u8f83\u56f0\u96be\u7684\u4e8b\u60c5\uff0c\u4fdd\u8bc1\u6570\u636e\u8fc1\u79fb\u7684\u7ed3\u679c\u6b63\u786e\u7684\u65b9\u6cd5\u6709\u4e24\u79cd\u3002 \u4e00\u79cd\u662f\u4e0d\u8981\u624b\u52a8\u8fc1\u79fb\u6570\u636e\uff0c\u4e00\u5b9a\u8981\u4f7f\u7528\u811a\u672c\uff0c\u7528\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684 ETL \u5de5\u5177\u53ef\u4ee5\u5b8c\u6210\u8fd9\u7c7b\u5de5\u4f5c\u3002\u6bd4\u5982\uff0cSpring Batch \u53ef\u4ee5\u7528 Java \u5199\u8fc1\u79fb\u811a\u672c\uff0c\u800c\u4e14\u53ef\u4ee5\u7ed9\u8fd9\u7c7b\u811a\u672c\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002 \u5176\u6b21\u662f\u7f16\u5199\u7b80\u5355\u7684\u4ee3\u7801\u5bf9\u7ed3\u679c\u8fdb\u884c\u6821\u9a8c\u3002\u5373\u4f7f\u8fc1\u79fb\u811a\u672c\u901a\u8fc7\u4e86\u5355\u5143\u6d4b\u8bd5\uff0c\u4e5f\u6709\u53ef\u80fd\u5728\u8fd0\u884c\u65f6\u56e0\u914d\u7f6e\u9519\u8bef\u9020\u6210\u6570\u636e\u9519\u8bef\uff0c\u56e0\u6b64\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u6821\u9a8c\u7a0b\u5e8f\uff0c\u7edf\u8ba1\u8fc1\u79fb\u524d\u540e\u7684\u6570\u636e\uff0c\u6216\u9010\u884c\u6821\u9a8c\u3002","title":"1.4.4 \u6570\u636e\u8fc1\u79fb"},{"location":"01-self-testing-fundamentals/#15","text":"\u5728\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6d4b\u8bd5\u6570\u636e\u7684\u6784\u9020\u770b\u4f3c\u662f\u4e00\u4ef6\u5c0f\u4e8b\uff0c\u4f46\u662f\u5982\u679c\u80fd\u901a\u8fc7\u9ad8\u6548\u7684\u65b9\u5f0f\u64cd\u4f5c\u5219\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4\u3002\u6709\u4e00\u4e9b\u56e2\u961f\u4f1a\u76f4\u63a5\u4f7f\u7528\u751f\u4ea7\u73af\u5883\u7684\u771f\u5b9e\u6570\u636e\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5b9e\u9645\u4e0a\u8fd9\u79cd\u505a\u6cd5\u8fdd\u53cd\u4e86\u4fe1\u606f\u5b89\u5168\u548c\u5408\u89c4\u7684\u8981\u6c42\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002\u53ef\u4ee5\u4f7f\u7528\u76f8\u5173\u5de5\u5177\u6765\u6784\u9020\u6d4b\u8bd5\u6570\u636e\uff0c\u8fd9\u4e9b\u968f\u673a\u751f\u6210\u7684\u6570\u636e\uff0c\u4f7f\u7528\u8d77\u6765\u4e0d\u4ec5\u5f88\u9ad8\u6548\uff0c\u8fd8\u907f\u514d\u4e86\u5b89\u5168\u548c\u5408\u89c4\u98ce\u9669\u3002","title":"1.5 \u6d4b\u8bd5\u6570\u636e\u7684\u6784\u9020\u548c\u5b89\u5168"},{"location":"01-self-testing-fundamentals/#151","text":"\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u5de5\u5177\u548c\u6280\u5de7\u6765\u5feb\u901f\u3001\u9ad8\u6548\u5730\u6784\u9020\u6d4b\u8bd5\u6570\u636e\u3002","title":"1.5.1 \u9ad8\u6548\u6d4b\u8bd5\u6570\u636e\u6784\u9020"},{"location":"01-self-testing-fundamentals/#1_1","text":"\u53ef\u80fd\u6709\u8bfb\u8005\u6df1\u6709\u4f53\u4f1a\uff0c\u6784\u9020\u6d4b\u8bd5\u6570\u636e\u5f80\u5f80\u80fd\u69a8\u5e72\u7075\u611f\uff0c\u597d\u5728\u4e00\u4e9b\u5e38\u89c1\u7684\u6d4b\u8bd5\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5f00\u6e90\u5de5\u5177\u6765\u5b9e\u73b0\uff0c\u6bd4\u5982\u76ee\u524d\u6709\u591a\u79cd\u8bed\u8a00\u7684 Faker \u5e93\uff0c\u5b83\u4f7f\u7528\u7684\u662fPython\u3001JavaScript \u7b49\u811a\u672c\u8bed\u8a00\u3002JavaScript \u7684 Faker \u7248\u672c faker.js \u53ef\u4ee5\u90e8\u7f72\u5e76\u8fd0\u884c\u5728\u6d4f\u89c8\u5668\u4e0a\uff0c\u8fdb\u884c\u5728\u7ebf\u6570\u636e\u751f\u6210\u3002\u5982\u56fe 1-7\u6240\u793a\uff0cfaker.js \u53ef\u4ee5\u968f\u673a\u751f\u6210\u4e00\u4e9b\u7528\u6237\u4fe1\u606f\u3002 \u56fe 1-7 \u968f\u673a\u6784\u9020\u4e2a\u4eba\u6570\u636e \u5728\u9700\u8981\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u5c06 faker.js \u7684 npm \u5305\u653e\u5230\u524d\u7aef\u7684\u4ee3\u7801\u5e93\u4e2d\u4f7f\u7528\u3002","title":"1. \u901a\u7528\u6587\u672c\u6570\u636e\u6784\u9020"},{"location":"01-self-testing-fundamentals/#2","text":"\u6709\u65f6\u5019\u9700\u8981\u6784\u9020\u4e0d\u540c\u5927\u5c0f\u7684\u6587\u4ef6\u6765\u5b8c\u6210\u6d4b\u8bd5\uff0c\u53ef\u662f\u8981\u627e\u5230\u521a\u597d\u5408\u9002\u7684\u6587\u4ef6\u5927\u5c0f\u548c MIME \u7c7b\u578b\u6765\u6ee1\u8db3\u8fb9\u754c\u503c\u5e76\u4e0d\u662f\u5f88\u5bb9\u6613\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u7f51\u7ad9 fakefilegenerator.com \u6765\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u751f\u6210\u6240\u9700\u7c7b\u578b\u548c\u5927\u5c0f\u7684\u6587\u4ef6\u3002 \u63d0\u793a\uff1aMIME \u7684\u5168\u79f0\u662f Multipurpose Internet Mail Extensions\uff0c\u5373\u591a\u7528\u9014\u4e92\u8054\u7f51\u90ae\u4ef6\u6269\u5c55\u7c7b\u578b\uff0c\u5728\u6587\u4ef6\u7684\u5934\u90e8\u6807\u660e\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u907f\u514d\u4f9d\u8d56\u6587\u4ef6\u540e\u7f00\u6765\u8bc6\u522b\u6587\u4ef6\u7c7b\u578b\u3002\u76ee\u524d\u5e38\u89c1\u7684\u6587\u4ef6\u7c7b\u578b\u4f1a\u5728 IANA \u673a\u6784\u8fdb\u884c\u6ce8\u518c\u8fdb\u884c\u7ba1\u7406\u3002 \u5982\u679c\u53ea\u662f\u60f3\u8981\u6784\u9020\u7a7a\u6587\u4ef6\uff08\u4e0d\u4ecb\u610f\u5185\u5bb9\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u5feb\u901f\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u6784\u9020\u4efb\u610f\u5927\u5c0f\u7684\u6587\u4ef6\u3002\u5728 Linux \u4e2d\uff0c /dev/zero \u6587\u4ef6\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u8bbe\u5907\u6587\u4ef6\uff0c\u5728\u88ab\u8bfb\u53d6\u65f6\u4f1a\u63d0\u4f9b\u65e0\u9650\u7684\u7a7a\u5b57\u7b26\u3002\u53ef\u4ee5\u901a\u8fc7 dd \u547d\u4ee4\u590d\u5236 /dev/zero \u6587\u4ef6\u6765\u6784\u9020\u65b0\u7684\u6587\u4ef6\u3002dd \u547d\u4ee4\u7684\u57fa\u672c\u7528\u6cd5\u5982\u4e0b\uff1a dd if=<\u8f93\u5165\u6587\u4ef6> of=<\u8f93\u51fa\u6587\u4ef6> bs=<\u590d\u5236\u5757\u5927\u5c0f> count=<\u590d\u5236\u6b21\u6570> \u4f8b\u5982\uff0c\u5982\u679c\u9700\u8981\u751f\u6210 10 MB \u5927\u5c0f\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a dd if=/dev/zero of=output.txt bs=1M count=10 \u5728 Linux \u4e2d\u8fd8\u6709\u4e00\u4e2a truncate \u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u6587\u4ef6\u4efb\u610f\u7f29\u5c0f\u6216\u62d3\u5c55\u5230\u6307\u5b9a\u7684\u5927\u5c0f\uff1a echo hello > test.txt truncate -s 1024 test.txt \u63d0\u793a\uff1a\u5728 Mac OS\u4e0b\u8981\u4f7f\u7528 truncate \u547d\u4ee4\u9700\u8981\u5355\u72ec\u5b89\u88c5\uff0c\u53ef\u4ee5\u4f7f\u7528 brew install truncate \u5feb\u901f\u5b89\u88c5\u8be5\u547d\u4ee4\u3002 \u5728 Windows \u4e2d\u5c31\u66f4\u7b80\u5355\u4e86\uff0cWindows \u63d0\u4f9b\u4e86\u4e00\u4e2a fsutil \u547d\u4ee4\u53ef\u4ee5\u63d0\u4f9b\u6307\u5b9a\u6587\u4ef6\u5927\u5c0f\u7684\u7a7a\u6587\u4ef6\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a fsutil file createnew <\u8f93\u51fa\u7684\u6587\u4ef6\u540d> <\u6587\u4ef6\u5927\u5c0f\uff08\u5b57\u8282\uff09>","title":"2. \u6587\u4ef6\u6784\u9020"},{"location":"01-self-testing-fundamentals/#3","text":"\u5f53\u6211\u4eec\u9700\u8981\u6784\u9020\u4e00\u4e9b\u7279\u5b9a\u5c3a\u5bf8\u7684\u56fe\u7247\u65f6\uff0c\u5176\u5b9e\u4e0d\u9700\u8981\u5728\u7f51\u4e0a\u5230\u5904\u5bfb\u627e\u3002\u6709\u4e00\u4e9b\u56fe\u7247\u5360\u4f4d\u7b26\u7f51\u7ad9\u63d0\u4f9b\u4e86\u52a8\u6001\u751f\u6210\u56fe\u7247\u7684\u670d\u52a1\uff0c\u901a\u8fc7\u6784\u9020\u56fe\u7247\u94fe\u63a5\u53ef\u4ee5\u83b7\u5f97\u5408\u9002\u7684\u56fe\u7247\u3002 \u4f8b\u5982\uff0c\u5728 placeholder.com \u7f51\u7ad9\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u6784\u9020 URL\u6765\u751f\u6210\u6ee1\u8db3\u5c3a\u5bf8\u3001\u80cc\u666f\u3001\u6587\u5b57\u7b49\u4e0d\u540c\u9700\u6c42\u7684\u56fe\u7247\u3002\u5982\u56fe 1-8 \u5230\u56fe 1-11 \u6240\u793a\uff0c\u5728 URL \u540e\u9762\u8bbe\u7f6e\u76f8\u5173\u7684\u53c2\u6570\u5373\u53ef\u6784\u9020\u51fa\u60f3\u8981\u7684\u56fe\u7247 \u3002 \u56fe 1-8 \u6784\u5efa\u6b63\u65b9\u5f62\u56fe\u7247 \u6ce8\uff1a\u56fe\u7247\u6765\u6e90 https://via.placeholder.com/150\u3002 \u56fe 1-9 \u6784\u5efa\u77e9\u5f62\u56fe\u7247 \u6ce8\uff1a\u56fe\u7247\u6765\u6e90 https://via.placeholder.com/200x100\u3002 \u56fe 1-10 \u4fee\u6539\u80cc\u666f\u8272 \u6ce8\uff1a\u56fe\u7247\u6765\u6e90 https://via.placeholder.com/200x100/fff\u3002 \u56fe 1-11 \u589e\u52a0\u6587\u5b57 \u6ce8\uff1a\u56fe\u7247\u6765\u6e90 https://via.placeholder.com/200x100/fff?text=placeholder\u3002","title":"3. \u56fe\u7247\u6784\u9020"},{"location":"01-self-testing-fundamentals/#4","text":"\u5982\u679c\u7ecf\u5e38\u9700\u8981\u6279\u91cf\u5904\u7406\u6570\u636e\u65f6\uff0c\u901a\u8fc7\u6279\u91cf\u7684\u6587\u672c\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5927\u5927\u8282\u7701\u6211\u4eec\u7684\u65f6\u95f4\u548c\u7f29\u5c0f\u5de5\u4f5c\u91cf\u3002\u652f\u6301\u6279\u91cf\u64cd\u4f5c\u7684\u7f16\u8f91\u5668\u975e\u5e38\u591a\uff0c\u8fd9\u91cc\u4ee5 Sublime \u4e3a\u4f8b\uff0c\u8bf4\u660e\u6279\u91cf\u7f16\u8f91\u7684\u65b9\u6cd5\u3002 Sublime \u53ef\u4ee5\u4f7f\u7528\u591a\u5149\u6807\u529f\u80fd\u6279\u91cf\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\uff0c\u5f88\u65b9\u4fbf\uff0c\u4ee5\u4e0b\u9762\u8fd9\u6bb5\u6587\u672c\u4e3a\u4f8b\uff1a \u900d\u9065\u6e38 \u9f50\u7269\u8bba \u517b\u751f\u4e3b \u4eba\u95f4\u4e16 \u5fb7\u5145\u7b26 \u5927\u5b97\u5e08 \u5e94\u5e1d\u738b \u5982\u679c\u9700\u8981\u53bb\u9664\u6362\u884c\uff0c\u5e76\u4e14\u589e\u52a0\u5f15\u53f7\u5c06\u6bcf\u4e2a\u8bcd\u5f15\u7528\u8d77\u6765\uff0c\u7136\u540e\u653e\u5230\u4ee3\u7801\u7684\u6570\u7ec4\u4e2d\u4f7f\u7528\uff0c\u90a3\u4e48\u5728 Sublime \u7f16\u8f91\u5668\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5168\u9009\uff0c\u518d\u4f7f\u7528 \u5feb\u6377\u952eCtrl + Shift + L\uff0c\u83b7\u5f97\u6bcf\u884c\u7684\u5149\u6807\u3002\u7136\u540e\u4f7f\u7528 Ctrl + \u5de6\u5bfc\u822a\u952e\u79fb\u52a8\u5149\u6807\u81f3\u884c\u9996\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u81ea\u7531\u7f16\u8f91\u4e86\u3002 \u63d0\u793a\uff1a\u5728 Mac OS \u7cfb\u7edf\u4e2d\uff0c\u4e00\u822c Ctrl \u952e\u7531 Command \u4ee3\u66ff\u3002 \u5728 Sublime \u4e2d\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u9009\u4e2d\u529f\u80fd\u3002\u5982\u679c\u4e00\u4e2a\u6587\u672c\u4e2d\u51fa\u73b0\u4e86\u591a\u6b21\u91cd\u590d\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u53ef\u4ee5\u9009\u4e2d\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u6309\u4e0b Ctrl + D \u952e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u62d3\u5c55\u9009\u4e2d\u4e0b\u4e00\u4e2a\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5feb\u901f\u6279\u91cf\u7f16\u8f91\u9009\u4e2d\u7684\u91cd\u590d\u5b57\u7b26\u4e32\u4e86\u3002 \u548c Ctrl + D \u952e\u76f8\u4f3c\u7684\u4e00\u7ec4\u5feb\u6377\u952e\u662f Alt + F3\uff0c\u9009\u4e2d\u6587\u672c\u6309\u4e0b\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u9009\u62e9\u6587\u672c\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u76f8\u540c\u6587\u672c\uff0c\u5e76\u540c\u65f6\u8fdb\u884c\u7f16\u8f91\u3002\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u5feb\u901f\u66ff\u6362\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u3002\u6b64\u5916\uff0c\u6362\u884c\u7b26\u4e5f\u53ef\u4ee5\u88ab\u9009\u4e2d\uff0c\u53ef\u4ee5\u7528\u4e8e\u53bb\u6389\u6279\u91cf\u6362\u884c\u7b26\u3002","title":"4. \u9ad8\u6548\u6587\u672c\u64cd\u4f5c"},{"location":"01-self-testing-fundamentals/#152","text":"\u7531\u4e8e\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u6570\u636e\u7684\u7ba1\u7406\u6ca1\u6709\u751f\u4ea7\u73af\u5883\u4e0a\u90a3\u4e48\u4e25\u683c\uff0c\u56e0\u6b64\u53ef\u80fd\u5b58\u5728\u4e00\u5b9a\u7684\u6570\u636e\u5b89\u5168\u98ce\u9669\uff0c\u5c24\u5176\u662f\u5728\u91d1\u878d\u3001\u94f6\u884c\u3001\u519b\u5de5\u7b49\u91cd\u8981\u9886\u57df\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u6ce8\u610f\u5bf9\u6d4b\u8bd5\u6570\u636e\u505a\u4e00\u4e9b\u4fdd\u62a4\u548c\u7ba1\u7406\uff0c\u4ee5\u53ca\u4e86\u89e3\u4e00\u4e9b\u6570\u636e\u4fdd\u62a4\u76f8\u5173\u7684\u6cd5\u5f8b\u6cd5\u89c4\u3002","title":"1.5.2 \u6d4b\u8bd5\u6570\u636e\u7684\u5b89\u5168"},{"location":"01-self-testing-fundamentals/#1_2","text":"\u6709\u4e00\u4e9b\u56e2\u961f\u4f1a\u76f4\u63a5\u4f7f\u7528\u751f\u4ea7\u4e0a\u7684\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u73af\u5883\u6570\u636e\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e0d\u662f\u975e\u5e38\u597d\u7684\u505a\u6cd5\uff0c\u867d\u7136\u5bf9\u4e8e\u4e00\u4e9b\u68d8\u624b\u7684\u7f3a\u9677\uff0c\u9700\u8981\u4f7f\u7528\u751f\u4ea7\u73af\u5883\u7684\u6570\u636e\u6765\u91cd\u73b0\uff0c\u4f46\u662f\u8fd9\u4e0d\u5e94\u8be5\u4f5c\u4e3a\u4e00\u79cd\u5e38\u6001\u5316\u7684\u64cd\u4f5c\u65b9\u6cd5\u3002\u751f\u4ea7\u6570\u636e\u9700\u8981\u548c\u975e\u751f\u4ea7\u7684\u73af\u5883\u4e25\u683c\u9694\u79bb\uff0c\u5e76\u4e14\u9700\u8981\u91c7\u53d6\u5fc5\u8981\u7684\u6743\u9650\u7ba1\u7406\u63aa\u65bd\uff0c\u6bd4\u5982\u5bf9\u6d4b\u8bd5\u6570\u636e\u8fdb\u884c\u8131\u654f\u3002 \u6d4b\u8bd5\u6570\u636e\u8131\u654f\u4e3b\u8981\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a\u5220\u9664\u3001\u7f6e\u6362\u548c\u6f02\u767d\u3002 \u5220\u9664\u662f\u6307\u5c06\u6d4b\u8bd5\u6570\u636e\u4e2d\u7684\u90e8\u5206\u6216\u8005\u5168\u90e8\u654f\u611f\u4fe1\u606f\u53bb\u9664\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u5220\u9664\u540e\u7684\u6570\u636e\u662f\u539f\u6765\u6570\u636e\u7684\u5b50\u96c6\uff1b\u7f6e\u6362\u662f\u6307\u5c06\u654f\u611f\u6570\u636e\u8fdb\u884c\u66ff\u6362\u6216\u8005\u63a9\u7801\u5904\u7406\uff0c\u4f7f\u7528\u7279\u6b8a\u7684\u7b26\u53f7\u62b9\u6389\u90e8\u5206\u4fe1\u606f\uff1b\u6f02\u767d\u662f\u6307\u901a\u8fc7\u7279\u5b9a\u7b97\u6cd5\u5c06\u539f\u6765\u7684\u654f\u611f\u4fe1\u606f\u8fdb\u884c\u52a0\u5de5\u548c\u5904\u7406\uff0c\u867d\u7136\u6570\u636e\u5185\u5bb9\u53d8\u5316\u4e86\uff0c\u4f46\u662f\u7279\u5f81\u672a\u53d8\uff0c\u8fd8\u662f\u80fd\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u4f7f\u7528\u7684\uff08\u6bd4\u5982\u968f\u673a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u8eab\u4efd\u8bc1\u53f7\u7801\uff09\u3002 \u7531\u4e8e\u6570\u636e\u8131\u654f\u5177\u6709\u7279\u6b8a\u6027\uff0c\u56e0\u6b64\u5f88\u591a\u516c\u53f8\u4f1a\u901a\u8fc7\u4e13\u95e8\u7684\u90e8\u95e8\u6765\u5b8c\u6210\u3002\u4ece\u5b9e\u73b0\u4e0a\u6765\u770b\uff0c\u6570\u636e\u8131\u654f\u53c8\u53ef\u4ee5\u5206\u4e3a\u9759\u6001\u8131\u654f\u548c\u52a8\u6001\u8131\u654f\u3002\u9759\u6001\u8131\u654f\u662f\u6307\u9700\u8981\u6d4b\u8bd5\u6570\u636e\u65f6\u624d\u4eba\u5de5\u5730\u4ece\u6570\u636e\u6e90\u83b7\u53d6\u5e76\u5904\u7406\u6570\u636e\uff1b\u800c\u52a8\u6001\u8131\u654f\u53ef\u4ee5\u901a\u8fc7\u8131\u654f\u670d\u52a1\u8fdb\u884c\u6570\u636e\u91c7\u96c6\uff0c\u7136\u540e\u7ecf\u8fc7\u8131\u654f\u7b97\u6cd5\u52a0\u5de5\uff0c\u518d\u5206\u53d1\u7ed9\u4f7f\u7528\u65b9\u3002\u4f7f\u7528\u65b9\u4e0d\u4ec5\u53ef\u4ee5\u7528\u4e8e\u6d4b\u8bd5\uff0c\u4e5f\u53ef\u7528\u4e8e\u4e1a\u52a1\u4fa7\u7684\u6570\u636e\u5bfc\u51fa\u3001\u62a5\u9001\u5ba1\u6279\u3001\u5b58\u6863\u7b49\u6d41\u7a0b\u3002","title":"1. \u4fe1\u606f\u6cc4\u9732\u98ce\u9669"},{"location":"01-self-testing-fundamentals/#2_1","text":"\u54ea\u4e9b\u6570\u636e\u5c5e\u4e8e\u654f\u611f\u4fe1\u606f\uff0c\u4ee5\u53ca\u5982\u4f55\u7ba1\u7406\u5462\uff1f\u4e00\u822c\u53ef\u4ee5\u53c2\u8003\u7684\u4fe1\u606f\u662f\u76f8\u5173\u6cd5\u5f8b\u6cd5\u89c4\uff0c\u4ee5\u53ca\u884c\u4e1a\u76f8\u5173\u76d1\u7ba1\u90e8\u95e8\u7684\u8981\u6c42\u3002 2018\u5e745\u670825\u65e5\uff0c\u6b27\u6d32\u8054\u76df\u51fa\u53f0\u300a\u901a\u7528\u6570\u636e\u4fdd\u62a4\u6761\u4f8b\u300b\u7528\u4e8e\u6b27\u76df\u5185\u90e8\u7684\u6570\u636e\u7ba1\u7406\u3002\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4e2a\u4eba\u4fe1\u606f\u4fdd\u62a4\u6cd5\u300b\u662f2021\u5e7411\u67081\u65e5\u901a\u8fc7\u7684\u6211\u56fd\u5173\u4e8e\u4e2a\u4eba\u4fe1\u606f\u5b89\u5168\u7684\u9996\u90e8\u6cd5\u5f8b\u3002\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4e2a\u4eba\u4fe1\u606f\u4fdd\u62a4\u6cd5\u300b\u89c4\u5b9a\u4e86\u4e2a\u4eba\u4fe1\u606f\u5904\u7406\u8005\u6709\u4e49\u52a1\u5bf9\u4e2a\u4eba\u4fe1\u606f\u8fdb\u884c\u5206\u7c7b\u3001\u52a0\u5bc6\u5904\u7406\uff0c\u4ee5\u53ca\u89c4\u5b9a\u4e86\u654f\u611f\u4fe1\u606f\u7684\u8303\u56f4\u548c\u5904\u7406\u89c4\u5219\u3002","title":"2. \u4fe1\u606f\u6570\u636e\u4fdd\u62a4\u6cd5\u89c4"},{"location":"01-self-testing-fundamentals/#16","text":"\u672c\u7ae0\u4ecb\u7ecd\u4e86\u6d4b\u8bd5\u5de5\u4f5c\u7684\u57fa\u7840\u77e5\u8bc6\u3001\u6d4b\u8bd5\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u4ee5\u53ca\u53ef\u4ee5\u7528\u4e8e\u56e2\u961f\u6c9f\u901a\u7684\u57fa\u672c\u672f\u8bed\u3002\u5176\u4e2d\uff0c\u6d4b\u8bd5\u91d1\u5b57\u5854\u548c\u6d4b\u8bd5\u7b56\u7565\u7684\u4f7f\u7528\u9700\u8981\u5728\u56e2\u961f\u4e2d\u8fbe\u6210\u4e00\u81f4\uff0c\u8ba9\u56e2\u961f\u4e3a\u6700\u7ec8\u7684\u8d28\u91cf\u8d1f\u8d23\uff0c\u624d\u80fd\u4ea7\u51fa\u9ad8\u8d28\u91cf\u7684\u8f6f\u4ef6\u4ea7\u54c1\u3002 \u5bf9\u4e8e\u7814\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u6d4b\u8bd5\u7528\u4f8b\u7684\u8bbe\u8ba1\u4e0d\u9700\u8981\u7528\u5230\u8fc7\u4e8e\u590d\u6742\u7684\u6280\u5de7\u3002\u5728\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0c\u5f80\u5f80\u53ea\u9700\u8981\u4f7f\u7528\u8fb9\u754c\u503c\u548c\u7b49\u4ef7\u7c7b\u5212\u5206\u65b9\u6cd5\uff1b\u5728\u7f16\u5199 API \u6d4b\u8bd5\u65f6\uff0c\u53ef\u4ee5\u9002\u5f53\u4f7f\u7528\u573a\u666f\u6cd5\u7684\u65b9\u5f0f\u3002 \u672c\u7ae0\u7684\u6982\u5ff5\u8f83\u591a\uff0c\u8fd9\u4e9b\u6982\u5ff5\u662f\u540e\u7eed\u5185\u5bb9\u7684\u94fa\u57ab\uff0c\u4ece\u4e0b\u4e00\u7ae0\u5f00\u59cb\u672c\u4e66\u5c06\u9010\u6b65\u4ecb\u7ecd\u66f4\u591a\u5b9e\u8df5\u76f8\u5173\u7684\u5185\u5bb9\u3002 [^1]: Mike Cohn \u7684\u7ecf\u5178\u4e66\u7c4d\uff0c\u4e2d\u6587\u540d\u79f0\u4e3a\u300aScrum\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u300b.\u6e05\u534e\u5927\u5b66\u51fa\u7248\u793e, 2010.","title":"1.6 \u5c0f\u7ed3"},{"location":"02-code-review/","text":"\u7b2c 2 \u7ae0 \u4ee3\u7801\u8bc4\u5ba1 \u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u9664\u4e86\u53ef\u4ee5\u4ece\u529f\u80fd\u89d2\u5ea6\u53d1\u73b0\u95ee\u9898\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u68c0\u89c6\u53d1\u73b0\u4e00\u4e9b\u663e\u800c\u6613\u89c1\u7684\u95ee\u9898\uff0c\u505a\u597d\u8fd9\u90e8\u5206\u5de5\u4f5c\u5e26\u6765\u7684\u6536\u76ca\u751a\u81f3\u6bd4\u6d4b\u8bd5\u4eba\u5458\u624b\u52a8\u6d4b\u8bd5\u8fd8\u9ad8\u3002 \u5728\u5b9e\u8df5\u4e2d\uff0c\u5bf9\u4ee3\u7801\u8fdb\u884c\u8bc4\u5ba1\u53ef\u4ee5\u4ece\u5982\u4e0b\u4e09\u4e2a\u5c42\u9762\u628a\u63a7\uff1a \u9759\u6001\u4ee3\u7801\u5206\u6790\u3002 \u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u3002 \u4ee3\u7801\u5408\u5165\u8bf7\u6c42\u3002 \u9759\u6001\u4ee3\u7801\u5206\u6790 \u662f\u6307\u5728\u4ee3\u7801\u63d0\u4ea4\u65f6\u4f7f\u7528\u5de5\u5177\u81ea\u52a8\u626b\u63cf\uff0c\u6216\u8005\u5728\u6d41\u6c34\u7ebf\u4e2d\u8ba9\u6784\u5efa\u670d\u52a1\u5668\u4ee3\u4e3a\u626b\u63cf\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5927\u7684\u516c\u53f8\u4f1a\u6709\u4e13\u95e8\u7684\u90e8\u95e8\u91c7\u8d2d\u5404\u79cd\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4ee3\u7801\u98ce\u683c\u3001\u6f5c\u5728\u7684\u7f3a\u9677\u3001\u5408\u89c4\u548c\u5b89\u5168\u7b49\u65b9\u9762\u7cfb\u7edf\u5730\u68c0\u67e5\u4ee3\u7801\u4e2d\u5b58\u5728\u7684\u95ee\u9898\u3002\u626b\u63cf\u4e0d\u5408\u683c\u7684\u4ee3\u7801\u4e0d\u4e88\u53d1\u5e03\uff0c\u907f\u514d\u4e3a\u4ea7\u54c1\u5e26\u6765\u6f5c\u5728\u7684\u98ce\u9669\u3002 \u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1 \u662f\u6307\u56e2\u961f\u6bcf\u65e5\u4e00\u8d77\u8bc4\u5ba1\u5f53\u65e5\u6216\u4e0a\u4e00\u65e5\u7684\u4ee3\u7801\uff0c\u4e00\u822c\u5728\u4e0b\u5348\u4e0b\u73ed\u524d\u8fdb\u884c\uff0c\u65f6\u95f4\u9700\u8981\u63a7\u5236\u572830\uff5e60\u5206\u949f\u3002\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u9664\u4e86\u53ef\u4ee5\u7528\u4e8e\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u4ee5\u5916\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u56e2\u961f\u7684\u6280\u672f\u4ea4\u6d41\u548c\u95ee\u9898\u6c9f\u901a\uff0c\u6bd5\u7adf\u5927\u5bb6\u5de5\u4f5c\u5728\u540c\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u91cc\u3002 \u4ee3\u7801\u8bc4\u5ba1\u4e00\u822c\u7531\u4eba\u5de5\u5b8c\u6210\uff0c\u53ef\u4f7f\u7528Git\u3001GitLab\u3001IntelliJ IDEA\u7b49\u5de5\u5177\u3002\u4ee3\u7801\u8bc4\u5ba1\u4f5c\u4e3a\u9759\u6001\u4ee3\u7801\u5206\u6790\u7684\u8865\u5145\u65b9\u6cd5\uff0c\u4e00\u822c\u4e0d\u4f1a\u6d89\u53ca\u5df2\u7ecf\u88ab\u9759\u6001\u4ee3\u7801\u5206\u6790\u6240\u8986\u76d6\u7684\u5185\u5bb9\u3002 \u4ee3\u7801\u5408\u5165\u8bf7\u6c42 \u662f\u6307\u5728\u5fc5\u8981\u65f6\u901a\u8fc7\u5408\u5165\u8bf7\u6c42\u6765\u5408\u5165\u4ee3\u7801\u3002\u5177\u4f53\u5408\u5165\u65b9\u5f0f\u53d6\u51b3\u4e8e\u56e2\u961f\u4f7f\u7528\u7684Git\u5de5\u4f5c\u6d41\uff0c\u4e00\u822c\u654f\u6377\u56e2\u961f\u4f1a\u4f7f\u7528\u4e3b\u5e72\u5f00\u53d1\u7684\u65b9\u5f0f\u3002\u5728\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5f00\u542f\u540e\uff0c\u56e2\u961f\u4f1a\u5728\u4e3b\u5e72\u4e0a\u5f00\u53d1\u3001\u63d0\u4ea4\u4ee3\u7801\uff0c\u5e76\u4e14\u4f1a\u5728\u9700\u8981\u53d1\u5e03\u7684\u65f6\u5019\u521b\u5efa\u4e00\u4e2aRelease\u5206\u652f\u6765\u51bb\u7ed3\u4ee3\u7801\u3002\u4ee3\u7801\u51bb\u7ed3\u540e\uff0c\u5982\u679c\u8fd8\u6709\u7f3a\u9677\u9700\u8981\u4fee\u590d\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6d4b\u8bd5\u7684\u53ef\u9760\u6027\uff0c\u907f\u514d\u591a\u6b21\u5168\u91cf\u56de\u5f52\uff0c\u5c31\u9700\u8981\u901a\u8fc7\u5408\u5165\u8bf7\u6c42\u6765\u5408\u5165\u3002 \u4e0a\u8ff0\u6bcf\u4e00\u4e2a\u5c42\u9762\u90fd\u6709\u4e0d\u540c\u7684\u4ef7\u503c\uff0c\u5b83\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u5408\u7406\u7ba1\u7406\u4ee3\u7801\u8d28\u91cf\uff0c\u8fd8\u80fd\u505a\u5230\u4e0d\u6253\u6270\u5f00\u53d1\u4eba\u5458\u7684\u65e5\u5e38\u5de5\u4f5c\uff0c\u4e0d\u589e\u52a0\u989d\u5916\u7684\u8d1f\u62c5\u3002 \u672c\u7ae0\u5c06\u56f4\u7ed5\u8fd9\u4e09\u4e2a\u5c42\u9762\u5c55\u5f00\uff0c\u76ee\u6807\u662f\u57fa\u4e8e\u5bf9\u4ee3\u7801\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u3001\u4eba\u5de5\u68c0\u67e5\u7b49\u65b9\u6cd5\u6765\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\uff0c\u6db5\u76d6\u7684\u5185\u5bb9\u5982\u4e0b\uff1a \u9759\u6001\u4ee3\u7801\u5206\u6790\u3002 \u4eba\u5de5\u4ee3\u7801\u8bc4\u5ba1\u7684\u65b9\u6cd5\u548c\u5b9e\u8df5\u3002 Git\u5de5\u4f5c\u6d41\u3002 2.1 \u5e38\u7528\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177 \u4e00\u4e9b\u5927\u7684\u516c\u53f8\u90fd\u4f1a\u8fdb\u884c\u9759\u6001\u4ee3\u7801\u5206\u6790\uff0c\u4ed6\u4eec\u4e00\u822c\u4f1a\u901a\u8fc7\u4e00\u4e9b\u5b9a\u5236\u5316\u7684\u5de5\u5177\u6216\u8005\u5e73\u53f0\u6765\u5b8c\u6210\u6b64\u9879\u5de5\u4f5c\u3002\u5bf9\u4e8e\u4e2d\u5c0f\u56e2\u961f\u6765\u8bf4\uff0c\u53ef\u4ee5\u9009\u7528\u4e0b\u9762\u51e0\u79cd\u5f00\u6e90\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\u3002 Checkstyle\uff0c\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\uff0c\u4f8b\u5982\u4ee3\u7801\u7684\u7f29\u8fdb\u3001\u6bcf\u884c\u7684\u6700\u5927\u957f\u5ea6\u3001\u6362\u884c\u7b49\u89c4\u8303\u95ee\u9898\u3002 ArchUnit\uff0c\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u4ee3\u7801\u7684\u5206\u5c42\u5173\u7cfb\uff0c\u907f\u514d\u4e0d\u5408\u7406\u7684\u4ee3\u7801\u4f9d\u8d56\u5173\u7cfb\u51fa\u73b0\uff0c\u6bd4\u5982\u5faa\u73af\u5f15\u7528\u7b49\u3002 FindBugs\uff0c\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u6f5c\u5728\u7684\u7f3a\u9677\uff0c\u4f8b\u5982\u6253\u5f00\u7684\u6587\u4ef6\u6ca1\u6709\u5173\u95ed\u3001\u6f5c\u5728\u7684\u5185\u5b58\u6cc4\u6f0f\u7b49\u3002 OWASP Dependency-Check\uff0c\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u5f15\u5165\u7684\u7b2c\u4e09\u65b9\u4ee3\u7801\u5305\u662f\u5426\u6709\u516c\u5f00\u7684\u6f0f\u6d1e\u7b49\u3002 \u8fd9\u4e9b\u5de5\u5177\u57fa\u672c\u90fd\u6709IDE\u63d2\u4ef6\uff0c\u76f8\u5173\u63d2\u4ef6\u7684\u4f7f\u7528\u6bd4\u8f83\u7b80\u5355\uff0c\u4e0d\u9700\u8981\u8fc7\u591a\u4ecb\u7ecd\uff0c\u5982\u679c\u5e0c\u671b\u5c06\u5176\u96c6\u6210\u5230\u6784\u5efa\u8fc7\u7a0b\u4e2d\uff0c\u5219\u9700\u8981\u4f7f\u7528\u76f8\u5e94\u7684\u914d\u7f6e\u3002\u6d77\u5916\u7684Java\u9879\u76ee\u4e00\u822c\u4f7f\u7528Gradle\uff08\u4e00\u79cd\u6784\u5efa\u5de5\u5177\uff0c\u4e0eMaven\u7c7b\u4f3c\uff09\uff0c\u56fd\u5185\u7684 Java\u9879\u76ee\u5219\u4f7f\u7528Maven\u8f83\u591a\u3002 \u4e0b\u9762\u4ee5\u4f7f\u7528Maven\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u914d\u7f6e\u8fd9\u51e0\u79cd\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u5e76\u7ed9\u51fa\u5404\u4e2a\u914d\u7f6e\u9879\u7684\u542b\u4e49\u3002\u672c\u7ae0\u7684\u4ee3\u7801\u793a\u4f8b\u90fd\u662fMaven\u591a\u6a21\u5757\u5b9e\u73b0\u7684\uff0c\u8fd9\u91cc\u4e5f\u63a8\u8350\u4f7f\u7528IntelliJ IDEA\u4f5c\u4e3a\u5f00\u53d1\u5de5\u5177\uff0c \u5b83\u662f\u4e1a\u754c\u516c\u8ba4\u7684\u4f18\u79c0 Java \u5f00\u53d1\u5de5\u5177\u3002 \u672c\u8282\u7684\u793a\u4f8b\u4ee3\u7801\u53ef\u4ee5\u5728Git\u4ed3\u5e93 https://github.com/java-self-testing/java-self-testing-example \u4e2d\u4e0b\u8f7d\u3002 2.1.1 Checkstyle Checkstyle\u662f\u4e00\u6b3eJava\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u53ef\u5e2e\u52a9\u7a0b\u5e8f\u5458\u7f16\u5199\u7b26\u5408\u7f16\u7801\u89c4\u8303\u7684Java\u4ee3\u7801\u3002\u5b83\u4f1a\u81ea\u52a8\u5b8c\u6210\u68c0\u67e5\uff0c\u80fd\u8ba9\u7a0b\u5e8f\u5458\u907f\u514d\u624b\u5de5\u505a\u8fd9\u4e9b\u7410\u788e\u7684\u4e8b\u60c5\u3002 Checkstyle\u81ea\u5e26\u4e86Sun\u516c\u53f8\u548c\u8c37\u6b4c\u516c\u53f8\u7684Java\u4ee3\u7801\u98ce\u683c\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u57fa\u4e8e\u6b64\u5b9a\u4e49\u9002\u5408\u81ea\u5df1\u56e2\u961f\u7684\u4ee3\u7801\u89c4\u8303\u3002\u53ef\u4ee5\u901a\u8fc7IDEA\u63d2\u4ef6\u3001Maven\u3001Gradle\u7b49\u4e0d\u540c\u7684\u5de5\u5177\u548c\u5e73\u53f0\u6765\u8fd0\u884cCheckstyle\uff0c\u5982\u679c\u6709\u9519\u8bef\u63d0\u793a\uff0cCheckstyle \u4f1a\u4e2d\u65ad\u6784\u5efa\u5e76\u63d0\u4f9b\u53cb\u597d\u7684\u62a5\u544a\u3002 1. \u5728 Maven \u4e2d\u4f7f\u7528 Checkstyle \u521b\u5efa\u4e00\u4e2aMaven\u6a21\u5757\uff0c\u5728Pom\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4ee3\u7801\u6e05\u53552-1\u6240\u793a\u7684\u914d\u7f6e\u3002 \u4ee3\u7801\u6e05\u53552-1 Checkstyle\u4e2d\u7684Pom\u914d\u7f6e <properties> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> </properties> <build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> <version>3.1.2</version> <dependencies> <!-- Checkstyle plugin \u4f7f\u7528\u7684 Checkstyle \u5e93\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7248\u672c --> <dependency> <groupId>com.puppycrawl.tools</groupId> <artifactId>checkstyle</artifactId> <version>8.40</version> </dependency> </dependencies> <executions> <!-- \u52a0\u5165\u5230 maven \u7684\u6784\u5efa\u751f\u547d\u5468\u671f\u4e2d\u53bb --> <execution> <id>checkstyle</id> <phase>validate</phase> <goals> <goal>check</goal> </goals> <configuration> <failOnViolation>true</failOnViolation> </configuration> </execution> </executions> </plugin> </plugins> </build> \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 Maven \u547d\u4ee4\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\uff1a mvn checkstyle:check 2. \u81ea\u5b9a\u4e49\u4ee3\u7801\u98ce\u683c\u68c0\u67e5\u89c4\u5219 Checkstyle\u9ed8\u8ba4\u7684\u98ce\u683c\u53ef\u80fd\u4f1a\u4e0e\u6211\u4eec\u65e5\u5e38\u5f00\u53d1\u7684\u4e60\u60ef\u4e0d\u76f8\u7b26\uff0c\u76f4\u63a5\u4f7f\u7528\u6709\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5728\u65e5\u5e38\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2dIDE\u683c\u5f0f\u5316\u7684\u7ed3\u679c\u548cCheckstyle\u51b2\u7a81\u3001\u9ed8\u8ba4\u7684\u53c2\u6570\u8fc7\u4e8e\u82db\u523b\u7b49\u95ee\u9898\u3002\u867d\u7136\u53ef\u4ee5\u5c06Checkstyle\u7684\u914d\u7f6e\u6587\u4ef6\u5bfc\u5165IDE\u683c\u5f0f\u5316\u5668\u7684\u76f8\u5173\u914d\u7f6e\u4e2d\uff0c\u4f46\u5982\u679c\u6709\u65b0\u540c\u4e8b\u52a0\u5165\uff0c\u5219\u53c8\u9700\u8981\u989d\u5916\u914d\u7f6e\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4e00\u822c\u90fd\u4f1a\u5bf9 Checkstyle \u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u505a\u4e00\u4e9b\u4fee\u6539\uff0c\u5c06\u5176\u8c03\u6574\u4e3a\u9002\u5408\u81ea\u5df1\u56e2\u961f\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5c3d\u91cf\u6309\u7167IDE\u7684\u9ed8\u8ba4\u683c\u5f0f\u5316\u98ce\u683c\u6765\u64cd\u4f5c\u3002 \u5728Maven\u7684Pom\u6587\u4ef6\u4e2d\u901a\u8fc7checkstyle.config.location\u5c5e\u6027\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2aXML\u6587\u4ef6\u6765\u5b9a\u5236Checkstyle\u89c4\u5219\uff0c\u5177\u4f53\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff1a <properties> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <!-- \u81ea\u5b9a\u4e49\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u76f8\u5bf9\u4e8e Pom \u6587\u4ef6\u7684\u8def\u5f84 --> <checkstyle.config.location>checkstyle/checkstyle.xml</checkstyle.config.location> </properties> \u6211\u4eec\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u901a\u5e38\u90fd\u9700\u8981\u5b9a\u5236\u4e0a\u8ff0\u89c4\u5219\uff0c\u4ee3\u7801\u6e05\u53552-2\u57fa\u4e8eGoogle Java \u4ee3\u7801\u89c4\u5219\u5bf9\u914d\u7f6e\u505a\u4e86\u8c03\u6574\uff0c\u5e76\u7ed9\u51fa\u4e86\u5177\u4f53\u8bf4\u660e\u3002 \u4ee3\u7801\u6e05\u53552-2 \u81ea\u5b9a\u4e49 Checkstyle \u89c4\u5219\u7684\u914d\u7f6e\u6587\u4ef6 <?xml version=\"1.0\"?> <!DOCTYPE module PUBLIC \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\" \"https://checkstyle.org/dtds/configuration_1_3.dtd\"> <module name = \"Checker\"> <property name=\"charset\" value=\"UTF-8\"/> <!--\u8fdd\u89c4\u7ea7\u522b\uff0c\u7528\u4e8e\u63d0\u793a\u7ed9\u6784\u5efa\u5de5\u5177\uff0c\u5982\u679c\u662f error \u7ea7\u522b\u4f1a\u8ba9\u6784\u5efa\u5931\u8d25--> <property name=\"severity\" value=\"warning\"/> <!--\u626b\u63cf\u7684\u6587\u4ef6\u7c7b\u578b--> <property name=\"fileExtensions\" value=\"java, properties, xml\"/> <!-- Excludes all 'module-info.java' files --> <!-- See https://checkstyle.org/config_filefilters.html --> <!-- \u6392\u9664 'module-info.java' \u6a21\u5757\u63cf\u8ff0\u6587\u4ef6 --> <module name=\"BeforeExecutionExclusionFileFilter\"> <property name=\"fileNamePattern\" value=\"module\\-info\\.java$\"/> </module> <!-- https://checkstyle.org/config_filters.html#SuppressionFilter --> <!--\u5b9a\u4e49\u5ffd\u7565\u89c4\u5219\u6587\u4ef6\u4f4d\u7f6e--> <module name=\"SuppressionFilter\"> <property name=\"file\" value=\"${org.checkstyle.google.suppressionfilter.config}\" default=\"checkstyle-suppressions.xml\" /> <property name=\"optional\" value=\"true\"/> </module> <!-- Checks for whitespace --> <!-- See http://checkstyle.org/config_whitespace.html --> <!--\u68c0\u67e5\u6587\u4ef6\u7a7a\u767d\u5236\u8868\u5b57\u7b26--> <module name=\"FileTabCharacter\"> <property name=\"eachLine\" value=\"true\"/> </module> <!--\u68c0\u67e5\u5355\u884c\u957f\u5ea6\uff0c\u539f\u89c4\u5219\u662f 100\uff0c\u4f46\u662f\u5f80\u5f80\u4e0d\u591f\u7528\uff0c\u6240\u4ee5\u4f1a\u8bbe\u7f6e\u957f\u4e00\u70b9--> <module name=\"LineLength\"> <property name=\"fileExtensions\" value=\"java\"/> <property name=\"max\" value=\"160\"/> <property name=\"ignorePattern\" value=\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/> </module> <!--\u68c0\u67e5 Java \u6e90\u4ee3\u7801\u8bed\u6cd5\u6811--> <module name=\"TreeWalker\"> <!--\u68c0\u67e5\u7c7b\u578b\u548c\u6587\u4ef6\u540d\u662f\u5426\u5339\u914d\uff0c\u7c7b\u540d\u548c\u6587\u4ef6\u540d\u9700\u8981\u5bf9\u5e94--> <module name=\"OuterTypeFilename\"/> <!--\u68c0\u67e5\u4e0d\u5408\u89c4\u7684\u6587\u672c\uff0c\u8003\u8651\u4f7f\u7528\u7279\u6b8a\u8f6c\u4e49\u5e8f\u5217\u6765\u4ee3\u66ff\u516b\u8fdb\u5236\u503c\u6216 Unicode \u503c\u3002--> <module name=\"IllegalTokenText\"> <property name=\"tokens\" value=\"STRING_LITERAL, CHAR_LITERAL\"/> <property name=\"format\" value=\"\\\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\"/> <property name=\"message\" value=\"Consider using special escape sequence instead of octal value or Unicode escaped value.\"/> </module> <!--\u907f\u514d\u4f7f\u7528 Unicode \u8f6c\u4e49--> <module name=\"AvoidEscapedUnicodeCharacters\"> <property name=\"allowEscapesForControlCharacters\" value=\"true\"/> <property name=\"allowByTailComment\" value=\"true\"/> <property name=\"allowNonPrintableEscapes\" value=\"true\"/> </module> <!--\u907f\u514d\u5728 import \u8bed\u53e5\u4e2d\u4f7f\u7528 * --> <module name=\"AvoidStarImport\"/> <!--\u6bcf\u4e2a\u6587\u4ef6\u4e2d\u53ea\u5141\u8bb8\u6709\u4e00\u4e2a\u9876\u7ea7\u7c7b--> <module name=\"OneTopLevelClass\"/> <!--\u8be5\u7c7b\u8bed\u53e5\u4e0d\u5141\u8bb8\u6362\u884c--> <module name=\"NoLineWrap\"> <property name=\"tokens\" value=\"PACKAGE_DEF, IMPORT, STATIC_IMPORT\"/> </module> <!--\u68c0\u67e5\u7a7a\u5757--> <module name=\"EmptyBlock\"> <property name=\"option\" value=\"TEXT\"/> <property name=\"tokens\" value=\"LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH\"/> </module> <!--\u68c0\u67e5\u4ee3\u7801\u5757\u5468\u56f4\u7684\u5927\u62ec\u53f7\uff0c\u8fd9\u4e9b\u5927\u62ec\u53f7\u4e0d\u5141\u8bb8\u7701\u7565--> <module name=\"NeedBraces\"> <property name=\"tokens\" value=\"LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE\"/> </module> <!--\u68c0\u67e5\u4ee3\u7801\u5757\u7684\u5de6\u82b1\u62ec\u53f7\u7684\u4f4d\u7f6e--> <module name=\"LeftCurly\"> <property name=\"tokens\" value=\"ANNOTATION_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, INTERFACE_DEF, LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF, OBJBLOCK, STATIC_INIT, RECORD_DEF, COMPACT_CTOR_DEF\"/> </module> <!--\u68c0\u67e5\u4ee3\u7801\u5757\u7684\u53f3\u82b1\u62ec\u53f7\u7684\u4f4d\u7f6e--> <module name=\"RightCurly\"> <property name=\"id\" value=\"RightCurlySame\"/> <property name=\"tokens\" value=\"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO\"/> </module> <!--\u68c0\u67e5\u4ee3\u7801\u5757\u7684\u53f3\u82b1\u62ec\u53f7\u7684\u4f4d\u7f6e\uff0c\u5fc5\u987b\u5355\u72ec\u4e00\u884c--> <module name=\"RightCurly\"> <property name=\"id\" value=\"RightCurlyAlone\"/> <property name=\"option\" value=\"alone\"/> <property name=\"tokens\" value=\"CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF, RECORD_DEF, COMPACT_CTOR_DEF\"/> </module> <module name=\"SuppressionXpathSingleFilter\"> <!-- suppresion is required till https://github.com/checkstyle/checkstyle/issues/7541 --> <property name=\"id\" value=\"RightCurlyAlone\"/> <property name=\"query\" value=\"//RCURLY[parent::SLIST[count(./*)=1] or preceding-sibling::*[last()][self::LCURLY]]\"/> </module> <!--\u68c0\u67e5\u5173\u952e\u5b57\u540e\u9762\u7684\u7a7a\u683c--> <module name=\"WhitespaceAfter\"> <property name=\"tokens\" value=\"COMMA, SEMI, TYPECAST, LITERAL_IF, LITERAL_ELSE, LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, DO_WHILE\"/> </module> <!--\u68c0\u67e5\u5173\u952e\u5b57\u662f\u5426\u88ab\u7a7a\u683c\u5305\u56f4\uff0c\u4e00\u822c\u662f\u8bed\u53e5\uff0c\u6bd4\u5982\u7a7a\u6784\u9020\u51fd\u6570--> <module name=\"WhitespaceAround\"> <property name=\"allowEmptyConstructors\" value=\"true\"/> <property name=\"allowEmptyLambdas\" value=\"true\"/> <property name=\"allowEmptyMethods\" value=\"true\"/> <property name=\"allowEmptyTypes\" value=\"true\"/> <property name=\"allowEmptyLoops\" value=\"true\"/> <property name=\"ignoreEnhancedForColon\" value=\"false\"/> <property name=\"tokens\" value=\"ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND\"/> <message key=\"ws.notFollowed\" value=\"WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)\"/> <message key=\"ws.notPreceded\" value=\"WhitespaceAround: ''{0}'' is not preceded with whitespace.\"/> </module> <!--\u68c0\u67e5\u6bcf\u884c\u53ea\u6709\u4e00\u4e2a\u8bed\u53e5--> <module name=\"OneStatementPerLine\"/> <!--\u907f\u514d\u53d8\u91cf\u8fde\u7eed\u5b9a\u4e49\u548c\u6362\u884c\u5b9a\u4e49\uff0c\u6bcf\u4e2a\u53d8\u91cf\u90fd\u9700\u8981\u5728\u81ea\u5df1\u7684\u884c\u4e2d\u5355\u72ec\u5b9a\u4e49--> <module name=\"MultipleVariableDeclarations\"/> <!--\u68c0\u67e5\u6570\u7ec4\u7c7b\u578b\u5b9a\u4e49\u7684\u98ce\u683c--> <module name=\"ArrayTypeStyle\"/> <!--\u68c0\u67e5 switch \u5fc5\u987b\u5177\u6709 default \u5b50\u53e5--> <module name=\"MissingSwitchDefault\"/> <!--\u68c0\u67e5 switch \u8bed\u53e5\uff0ccase \u5b50\u53e5\u5982\u679c\u6709\u4ee3\u7801\uff0c\u5fc5\u987b\u4f7f\u7528 break \u8bed\u53e5\u6216\u629b\u51fa\u5f02\u5e38--> <module name=\"FallThrough\"/> <!--\u68c0\u67e5\u5e38\u91cf\u662f\u5426\u7528\u5927\u5199\u5b9a\u4e49--> <module name=\"UpperEll\"/> <!--\u68c0\u67e5\u4fee\u9970\u7b26\u662f\u5426\u7b26\u5408\u987a\u5e8f--> <module name=\"ModifierOrder\"/> <!--\u68c0\u67e5\u7a7a\u884c\uff0c\u5728\u5fc5\u8981\u7684\u5730\u65b9\u9700\u8981\u7a7a\u884c--> <module name=\"EmptyLineSeparator\"> <property name=\"tokens\" value=\"PACKAGE_DEF, IMPORT, STATIC_IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, RECORD_DEF, COMPACT_CTOR_DEF\"/> <property name=\"allowNoEmptyLineBetweenFields\" value=\"true\"/> </module> <!--\u5b9a\u4e49\u4e00\u4e9b\u4e0d\u5141\u8bb8\u6362\u884c\u7684\u5173\u952e\u5b57\uff0c\u6bd4\u5982\u70b9\u3001\u9017\u53f7\u7b49--> <module name=\"SeparatorWrap\"> <property name=\"id\" value=\"SeparatorWrapDot\"/> <property name=\"tokens\" value=\"DOT\"/> <property name=\"option\" value=\"nl\"/> </module> <module name=\"SeparatorWrap\"> <property name=\"id\" value=\"SeparatorWrapComma\"/> <property name=\"tokens\" value=\"COMMA\"/> <property name=\"option\" value=\"EOL\"/> </module> <module name=\"SeparatorWrap\"> <!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/259 --> <property name=\"id\" value=\"SeparatorWrapEllipsis\"/> <property name=\"tokens\" value=\"ELLIPSIS\"/> <property name=\"option\" value=\"EOL\"/> </module> <module name=\"SeparatorWrap\"> <!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/258 --> <property name=\"id\" value=\"SeparatorWrapArrayDeclarator\"/> <property name=\"tokens\" value=\"ARRAY_DECLARATOR\"/> <property name=\"option\" value=\"EOL\"/> </module> <module name=\"SeparatorWrap\"> <property name=\"id\" value=\"SeparatorWrapMethodRef\"/> <property name=\"tokens\" value=\"METHOD_REF\"/> <property name=\"option\" value=\"nl\"/> </module> <!--\u68c0\u67e5\u5305\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"PackageName\"> <property name=\"format\" value=\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/> <message key=\"name.invalidPattern\" value=\"Package name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u7c7b\u578b\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"TypeName\"> <property name=\"tokens\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF\"/> <message key=\"name.invalidPattern\" value=\"Type name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u5b9e\u4f8b\u6210\u5458\u53d8\u91cf\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"MemberName\"> <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/> <message key=\"name.invalidPattern\" value=\"Member name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u53c2\u6570\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"ParameterName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Parameter name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5 Lambda \u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"LambdaParameterName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Lambda parameter name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5 catch \u53c2\u6570\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"CatchParameterName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Catch parameter name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u672c\u5730\u53d8\u91cf\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"LocalVariableName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Local variable name ''{0}'' must match pattern ''{1}''.\"/> </module> <module name=\"PatternVariableName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Pattern variable name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u7c7b\u7c7b\u578b\u53c2\u6570(\u6cdb\u578b)\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"ClassTypeParameterName\"> <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/> <message key=\"name.invalidPattern\" value=\"Class type name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u5b57\u6bb5\uff08record \u4e3a Java \u65b0\u7279\u6027\uff09\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"RecordComponentName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Record component name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u5b57\u6bb5\uff08record \u4e3a Java \u65b0\u7279\u6027\uff09\u7c7b\u578b\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"RecordTypeParameterName\"> <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/> <message key=\"name.invalidPattern\" value=\"Record type name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u65b9\u6cd5\u7c7b\u578b\u53c2\u6570\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"MethodTypeParameterName\"> <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/> <message key=\"name.invalidPattern\" value=\"Method type name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u63a5\u53e3\u7c7b\u578b\u53c2\u6570\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"InterfaceTypeParameterName\"> <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/> <message key=\"name.invalidPattern\" value=\"Interface type name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u4e0d\u5141\u8bb8\u5b9a\u4e49\u65e0\u53c2\u7684 finalize \u65b9\u6cd5--> <module name=\"NoFinalizer\"/> <!--\u68c0\u67e5\u5c16\u62ec\u53f7\u7684\u7a7a\u767d\u5b57\u7b26\u89c4\u5219--> <module name=\"GenericWhitespace\"> <message key=\"ws.followed\" value=\"GenericWhitespace ''{0}'' is followed by whitespace.\"/> <message key=\"ws.preceded\" value=\"GenericWhitespace ''{0}'' is preceded with whitespace.\"/> <message key=\"ws.illegalFollow\" value=\"GenericWhitespace ''{0}'' should followed by whitespace.\"/> <message key=\"ws.notPreceded\" value=\"GenericWhitespace ''{0}'' is not preceded with whitespace.\"/> </module> <!--\u68c0\u67e5\u7f29\u8fdb\u89c4\u5219--> <module name=\"Indentation\"> <property name=\"basicOffset\" value=\"2\"/> <property name=\"braceAdjustment\" value=\"2\"/> <property name=\"caseIndent\" value=\"2\"/> <property name=\"throwsIndent\" value=\"4\"/> <property name=\"lineWrappingIndentation\" value=\"4\"/> <property name=\"arrayInitIndent\" value=\"2\"/> </module> <!--\u68c0\u67e5\u662f\u5426\u4ee5\u5927\u5199\u5b57\u6bcd\u4f5c\u4e3a\u7f29\u5199\u7684\u957f\u5ea6--> <module name=\"AbbreviationAsWordInName\"> <property name=\"ignoreFinal\" value=\"false\"/> <property name=\"allowedAbbreviationLength\" value=\"0\"/> <property name=\"tokens\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF, PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF, PATTERN_VARIABLE_DEF, RECORD_DEF, RECORD_COMPONENT_DEF\"/> </module> <!--\u68c0\u67e5\u8986\u5199\u65b9\u6cd5\u5728\u7c7b\u4e2d\u7684\u987a\u5e8f--> <module name=\"OverloadMethodsDeclarationOrder\"/> <!--\u68c0\u67e5\u53d8\u91cf\u58f0\u660e\u4e0e\u7b2c\u4e00\u88ab\u4f7f\u7528\u4e4b\u95f4\u7684\u8ddd\u79bb--> <module name=\"VariableDeclarationUsageDistance\"/> <!--\u68c0\u67e5 import \u8bed\u53e5\u7684\u987a\u5e8f--> <module name=\"CustomImportOrder\"> <property name=\"sortImportsInGroupAlphabetically\" value=\"true\"/> <property name=\"separateLineBetweenGroups\" value=\"true\"/> <property name=\"customImportOrderRules\" value=\"STATIC###THIRD_PARTY_PACKAGE\"/> <property name=\"tokens\" value=\"IMPORT, STATIC_IMPORT, PACKAGE_DEF\"/> </module> <!--\u68c0\u67e5\u65b9\u6cd5\u540d\u79f0\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u7684\u7a7a\u683c--> <module name=\"MethodParamPad\"> <property name=\"tokens\" value=\"CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF, SUPER_CTOR_CALL, ENUM_CONSTANT_DEF, RECORD_DEF\"/> </module> <!--\u68c0\u67e5\u5173\u952e\u5b57\u524d\u9762\u7684\u7a7a\u683c--> <module name=\"NoWhitespaceBefore\"> <property name=\"tokens\" value=\"COMMA, SEMI, POST_INC, POST_DEC, DOT, LABELED_STAT, METHOD_REF\"/> <property name=\"allowLineBreaks\" value=\"true\"/> </module> <!--\u68c0\u67e5\u62ec\u53f7\u524d\u540e\u662f\u5426\u9700\u8981\u7a7a\u683c--> <module name=\"ParenPad\"> <property name=\"tokens\" value=\"ANNOTATION, ANNOTATION_FIELD_DEF, CTOR_CALL, CTOR_DEF, DOT, ENUM_CONSTANT_DEF, EXPR, LITERAL_CATCH, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_NEW, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_WHILE, METHOD_CALL, METHOD_DEF, QUESTION, RESOURCE_SPECIFICATION, SUPER_CTOR_CALL, LAMBDA, RECORD_DEF\"/> </module> <!--\u68c0\u67e5\u8fd0\u7b97\u7b26\u6362\u884c\u7684\u89c4\u5219--> <module name=\"OperatorWrap\"> <!-- \u64cd\u4f5c\u7b26\u9700\u8981\u5728\u65b0\u884c--> <property name=\"option\" value=\"NL\"/> <property name=\"tokens\" value=\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF \"/> </module> <!--\u68c0\u67e5\u6ce8\u89e3\u4f4d\u7f6e\u89c4\u5219\uff0c\u6bd4\u5982\u7c7b\u7684\u5b9a\u4e49\u4e2d\u6ce8\u91ca\u9700\u8981\u5355\u72ec\u4e00\u884c--> <module name=\"AnnotationLocation\"> <property name=\"id\" value=\"AnnotationLocationMostCases\"/> <property name=\"tokens\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, RECORD_DEF, COMPACT_CTOR_DEF\"/> </module> <!--\u68c0\u67e5\u6ce8\u89e3\u4f4d\u7f6e\u89c4\u5219\uff0c\u53d8\u91cf\u5b9a\u4e49\u6ce8\u91ca\u53ef\u4ee5\u4e00\u884c\u5b9a\u4e49\u591a\u4e2a--> <module name=\"AnnotationLocation\"> <property name=\"id\" value=\"AnnotationLocationVariables\"/> <property name=\"tokens\" value=\"VARIABLE_DEF\"/> <property name=\"allowSamelineMultipleAnnotations\" value=\"true\"/> </module> <!--\u8fd9\u90e8\u5206\u662f\u6ce8\u91ca\u76f8\u5173\u7684\u914d\u7f6e--> <!--\u5757\u6ce8\u91ca\u4e2d @ \u5b50\u53e5\u540e\u9762\u4e0d\u80fd\u4e3a\u7a7a--> <module name=\"NonEmptyAtclauseDescription\"/> <!--\u68c0\u67e5\u6ce8\u91ca\u4f4d\u7f6e\uff0c\u5757\u6ce8\u91ca\u5fc5\u987b\u5728\u6240\u6709\u6ce8\u89e3\u524d\u9762--> <module name=\"InvalidJavadocPosition\"/> <!--\u68c0\u67e5\u6ce8\u91ca\u5fc5\u987b\u7edf\u4e00\u7f29\u8fdb--> <module name=\"JavadocTagContinuationIndentation\"/> <!--\u68c0\u67e5\u63cf\u8ff0\u6027\u6ce8\u91ca\uff0c\u65b9\u6cd5\u7684\u5757\u6ce8\u91ca\u7b2c\u4e00\u884c\u5fc5\u987b\u603b\u7ed3\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4e00\u822c\u6211\u4eec\u4e0d\u8981\u6c42\uff0c\u4f1a\u5173\u95ed\u6b64\u884c--> <!-- <module name=\"SummaryJavadoc\">--> <!-- <property name=\"forbiddenSummaryFragments\"--> <!-- value=\"^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )\"/>--> <!-- </module>--> <!--\u68c0\u67e5\u6ce8\u91ca\u6bb5\u843d\uff0c\u6bb5\u843d\u4e4b\u95f4\u9700\u8981\u6362\u884c\uff0c\u53e6\u5916\u4f7f\u7528\u4e86 <p> \u6807\u7b7e\u4e0d\u80fd\u6709\u7a7a\u683c--> <module name=\"JavadocParagraph\"/> <!--\u68c0\u67e5\u6ce8\u91ca\u6bb5\u843d\uff0c\u5757\u6807\u7b7e\u4e4b\u524d\u9700\u8981\u4e00\u4e2a\u7a7a\u683c\uff0c\u6bd4\u5982 @return --> <module name=\"RequireEmptyLineBeforeBlockTagGroup\"/> <!--\u68c0\u67e5\u6ce8\u91ca\u6bb5\u843d\u5757\u6807\u7b7e\u987a\u5e8f --> <module name=\"AtclauseOrder\"> <property name=\"tagOrder\" value=\"@param, @return, @throws, @deprecated\"/> <property name=\"target\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF\"/> </module> <!--\u68c0\u67e5 public \u65b9\u6cd5\u7684\u6ce8\u91ca\u89c4\u5219 --> <module name=\"JavadocMethod\"> <property name=\"scope\" value=\"public\"/> <property name=\"allowMissingParamTags\" value=\"true\"/> <property name=\"allowMissingReturnTag\" value=\"true\"/> <property name=\"allowedAnnotations\" value=\"Override, Test\"/> <property name=\"tokens\" value=\"METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF\"/> </module> <!--\u5bf9\u4e8e\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u5ffd\u7565\u65b9\u6cd5\u7684\u6ce8\u91ca\u89c4\u5219\u3002\u4f8b\u5982\uff0c\u5e26\u6709Override \u6ce8\u89e3\u7684\u65b9\u6cd5--> <module name=\"MissingJavadocMethod\"> <property name=\"scope\" value=\"public\"/> <property name=\"minLineCount\" value=\"2\"/> <property name=\"allowedAnnotations\" value=\"Override, Test\"/> <property name=\"tokens\" value=\"METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF\"/> </module> <!--\u68c0\u67e5\u65b9\u6cd5\u5fc5\u987b\u63d0\u4f9b\u6ce8\u91ca\u7684\u89c4\u5219 --> <module name=\"MissingJavadocType\"> <property name=\"scope\" value=\"protected\"/> <property name=\"tokens\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, RECORD_DEF, ANNOTATION_DEF\"/> <property name=\"excludeScope\" value=\"nothing\"/> </module> <!--\u68c0\u67e5\u65b9\u6cd5\u540d\u662f\u5426\u7b26\u5408\u89c4\u5219 --> <module name=\"MethodName\"> <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9_]*$\"/> <message key=\"name.invalidPattern\" value=\"Method name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u5355\u884c\u6ce8\u91ca\u89c4\u5219,\u5355\u884c\u6ce8\u91ca\u4e0d\u5141\u8bb8\u4f7f\u7528\u5757\u4e2d\u7684\u6807\u7b7e --> <module name=\"SingleLineJavadoc\"/> <!--\u68c0\u67e5\u7a7a\u7684 catch \u5757--> <module name=\"EmptyCatchBlock\"> <property name=\"exceptionVariableName\" value=\"expected\"/> </module> <!--\u68c0\u67e5\u6ce8\u91ca\u4ee3\u7801\u4e4b\u95f4\u7684\u7f29\u8fdb--> <module name=\"CommentsIndentation\"> <property name=\"tokens\" value=\"SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN\"/> </module> <!-- https://checkstyle.org/config_filters.html#SuppressionXpathFilter --> <module name=\"SuppressionXpathFilter\"> <property name=\"file\" value=\"${org.checkstyle.google.suppressionxpathfilter.config}\" default=\"checkstyle-xpath-suppressions.xml\" /> <property name=\"optional\" value=\"true\"/> </module> </module> </module> 2.1.2 FindBugs FindBugs\u662f\u4e00\u4e2a\u5f00\u6e90\u5de5\u5177\uff0c\u53ef\u7528\u4e8e\u5bf9Java\u4ee3\u7801\u6267\u884c\u9759\u6001\u4ee3\u7801\u5206\u6790\uff0c\u5176\u7531\u9a6c\u91cc\u5170\u5927\u5b66Bill Pugh \u9886\u5bfc\u7684\u56e2\u961f\u7814\u53d1\uff0c\u5b9e\u73b0\u539f\u7406\u662f\u5bf9\u5b57\u8282\u7801\u8fdb\u884c\u626b\u63cf\u5e76\u8fdb\u884c\u6a21\u5f0f\u8bc6\u522b\u3002\u548cCheckstyle \u4e0d\u4e00\u6837\u7684\u662f\uff0cFindBugs\u4f1a\u901a\u8fc7\u5bf9\u4ee3\u7801\u7684\u6a21\u5f0f\u8fdb\u884c\u5206\u6790\u6765\u53d1\u73b0\u6f5c\u5728\u7684Bug\u548c\u5b89\u5168\u95ee\u9898\uff0c\u800cCheckstyle\u53ea\u80fd\u4f5c\u4e3a\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\u7684\u5de5\u5177\u3002\u867d\u7136FindBugs\u548cCheckstyle\u7684\u90e8\u5206\u529f\u80fd\u91cd\u53e0\uff0c\u4f46\u4e24\u8005\u7684\u5b9a\u4f4d\u660e\u663e\u4e0d\u540c\u3002 FindBugs\u4e2d\u5305\u542b\u4e0b\u9762\u51e0\u79cd\u95ee\u9898\u7c7b\u578b\u3002 Correctness\uff1a\u7531\u5f00\u53d1\u4eba\u5458\u758f\u5ffd\u9020\u6210\u7684\u6b63\u786e\u6027\u95ee\u9898\uff0c\u6bd4\u5982\u65e0\u9650\u9012\u5f52\u8c03\u7528\u3002 Bad practice\uff1a\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u574f\u4e60\u60ef\uff0c\u6bd4\u5982\u4f7f\u7528==\u5bf9String\u505a\u5224\u5b9a\u3002 Dodgy code\uff1a\u7cdf\u7cd5\u7684\u4ee3\u7801\uff0c\u80fd\u5de5\u4f5c\u4f46\u4e0d\u662f\u597d\u7684\u5b9e\u73b0\uff0c\u6bd4\u5982\u5197\u4f59\u7684\u6d41\u7a0b\u63a7\u5236\u3002 Multithreaded Correctness\uff1a\u591a\u7ebf\u7a0b\u548c\u5e76\u53d1\u95ee\u9898\u3002 Malicious Code Vulnerability\uff1a\u6076\u610f\u4ee3\u7801\u6f0f\u6d1e\u3002 Security\uff1a\u5b89\u5168\u95ee\u9898\u3002 Experimental\uff1a\u7ecf\u9a8c\u6027\u95ee\u9898\u3002 Internationalization\uff1a\u56fd\u9645\u5316\u95ee\u9898\u3002 \u9759\u6001\u4ee3\u7801\u5206\u6790\u5728\u4e00\u4e9b\u516c\u53f8\u7684\u7814\u53d1\u8fc7\u7a0b\u4e2d\u662f\u975e\u5e38\u91cd\u8981\u7684\u73af\u8282\uff0c\u901a\u5e38\u7528\u4e8e\u63d0\u4ea4\u4ee3\u7801\u540e\u7684\u7b2c\u4e00\u8f6e\u68c0\u67e5\uff0c\u5982\u679c\u5b58\u5728\u95ee\u9898\uff0c\u5c31\u4e0d\u4f1a\u8d70\u540e\u9762\u7684\u53d1\u5e03\u6d41\u7a0b\u3002\u53ef\u89c1\uff0c\u9759\u6001\u4ee3\u7801\u5206\u6790\u662f\u8d28\u91cf\u95e8\u7981\u7684\u4e00\u90e8\u5206\u3002 \u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u4f7f\u7528FindBugs\u68c0\u67e5\u5e76\u4fee\u590d\u4ee3\u7801\u95ee\u9898\u5bf9\u4e2a\u4eba\u6280\u80fd\u7684\u63d0\u5347\u4e5f\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\uff0c\u80fd\u9a71\u4f7f\u5f00\u53d1\u8005\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u6709\u610f\u8bc6\u5730\u89c4\u907f\u4e00\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\u3002 FindBugs\u6709\u4e24\u79cd\u5e38\u7528\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u4f7f\u7528IntelliJ IDEA \u7684\u63d2\u4ef6\u505a\u672c\u5730\u5206\u6790\uff0c\u6216\u8005\u4f5c\u4e3aMaven\u3001Gradle\u7684\u4efb\u52a1\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u8fd0\u884c\u3002 1.\u4f7f\u7528IntelliJ IDEA\u7684\u63d2\u4ef6FindBugs FindBugs\u63d2\u4ef6\u5728IntelliJ IDEA \u65e9\u671f\u7684\u7248\u672c\u4e2d\u662f\u72ec\u7acb\u63d0\u4f9b\u7684\uff0c\u540e\u6765\u9700\u8981\u5148\u5b89\u88c5QAPlug \u8fd9\u4e2a\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u5e76\u4f5c\u4e3aQAPlug\u7684\u4e00\u4e2a\u6a21\u5757\u63d0\u4f9b\u3002 QAPlug\u63d0\u4f9b\u4e86\u4ee3\u7801\u5206\u6790\u548c\u626b\u63cf\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u80fd\u96c6\u6210PMD\u7b49\u8bf8\u591a\u6a21\u5757\u3002\u4e0d\u8fc7\uff0c\u4f7f\u7528\u5b83\u4eec\u9700\u8981\u540c\u65f6\u5b89\u88c5QAPlug\u548cFindBugs\u8fd9\u4e24\u4e2a\u63d2\u4ef6\uff0c\u5e76\u4e14\u8981\u5728\u5b89\u88c5\u540e\u91cd\u542f\u3002 \u901a\u8fc7IDEA\u9996\u9009\u9879\u7684\u63d2\u4ef6\u5e02\u573a\u5373\u53ef\u5b89\u88c5QAPlug\u548cFindBugs\uff0c\u5982\u56fe2-1\u6240\u793a\u3002 \u56fe 2-1 \u63d2\u4ef6\u5b89\u88c5 \u8fd9\u4e24\u4e2a\u63d2\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u6bd4\u8f83\u7b80\u5355\uff0c\u53c2\u8003\u56fe2-2\uff0c\u76f4\u63a5\u5728\u9700\u8981\u626b\u63cf\u7684\u76ee\u5f55\u6216\u8005\u6a21\u5757\u4e0a\u70b9\u51fb\u53f3\u952e\uff0c\u5c31\u4f1a\u5f39\u51fa\u4ee3\u7801\u5206\u6790\u83dc\u5355\u3002 \u56fe 2-2 \u4ee3\u7801\u5206\u6790 \u5206\u6790\u5b8c\u6210\u540e\uff0c\u5728\u5e95\u90e8\u9762\u677f\u4e2d\u4f1a\u5f39\u51fa\u5206\u6790\u7ed3\u679c\uff0c\u5982\u56fe2-3\u6240\u793a\u3002 \u56fe 2-3 \u5206\u6790\u7ed3\u679c \u4ece\u56fe2-3\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u91cc\u626b\u63cf\u51fa\u4ee3\u7801\u4e2d\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u5728\u67d0\u4e00\u4e2a\u65b9\u6cd5\u4e2d\u4f7f\u7528\u4e86\u6d6e\u70b9\u7c7b\u578b\u505a\u6570\u5b66\u8fd0\u7b97\uff0c\u5b58\u5728\u6f5c\u5728\u7684\u7cbe\u5ea6\u95ee\u9898\u3002 2. \u5728 Maven \u4e2d\u4f7f\u7528 FindBugs \u60f3\u8981\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u4f7f\u7528FindBugs\uff08\u5982\u679c\u5b58\u5728\u95ee\u9898\u53ef\u4ee5\u8ba9\u6784\u5efa\u5931\u8d25\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528Maven\u7684\u63d2\u4ef6\u6765\u8fd0\u884c\u3002 \u521b\u5efaMaven\u9879\u76ee\u540e\uff0c\u5728Pom\u6587\u4ef6\u7684build\u5757\u4e2d\u6dfb\u52a0Maven\u63d2\u4ef6\u5373\u53ef\u5f00\u542fFindBugs \u529f\u80fd\uff1a <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>findbugs-maven-plugin</artifactId> <version>3.0.4</version> <configuration> <effort>Max</effort> </configuration> <executions> <execution> <goals> <goal>check</goal> </goals> </execution> </executions> </plugin> \u5728configuration\u5c5e\u6027\u7684\u914d\u7f6e\u4e2d\uff0ceffort\u53c2\u6570\u6bd4\u8f83\u5e38\u7528\uff0c\u5176\u542b\u4e49\u662f\u4f7f\u7528\u4e0d\u540c\u7a0b\u5ea6\u7684\u7b97\u529b\u8fdb\u884c\u5206\u6790\u3002Effort\u53c2\u6570\u6709max\u548cmin\u8fd9\u4e24\u4e2a\u503c\uff0c\u4f7f\u7528max\u610f\u5473\u7740\u9700\u8981\u82b1\u8d39\u66f4\u591a\u7684\u5185\u5b58\u548c\u65f6\u95f4\u6765\u627e\u51fa\u66f4\u591a\u7684\u7f3a\u9677\uff1b\u4f7f\u7528min\u5219\u4f1a\u5173\u95ed\u4e00\u4e9b\u9700\u8981\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\u548c\u5185\u5b58\u7684\u5206\u6790\u9879\u3002\u5982\u679c\u53d1\u73b0\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u8017\u65f6\u4e25\u91cd\uff0c\u53ef\u4ee5\u8c03\u6574\u8fd9\u4e2a\u503c\u3002 \u5176\u4ed6\u53c2\u6570\u53ca\u5176\u914d\u7f6e\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003FindBugs\u548cFindBugs Maven\u63d2\u4ef6\u7684\u76f8\u5173\u6587\u6863\u3002 3. FindBugs \u7684\u9ad8\u9891\u9519\u8bef\u96c6\u5408 \u5728\u793a\u4f8b\u9879\u76ee\u4e2d\uff0c\u53ef\u80fd\u6709\u8bfb\u8005\u5df2\u7ecf\u627e\u5230\u4e86FindBugs\u6a21\u5757\uff0c\u8fd9\u4e2a\u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5178\u578b\u7684\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u5728\u65e5\u5e38\u4fee\u590dFindBugs\u65f6\u51fa\u73b0\u7684\u9891\u7387\u8f83\u9ad8\u3002\u5373\u4fbf\u4f60\u4e0d\u4f7f\u7528FindBugs\uff0c\u4e5f\u9700\u8981\u4e86\u89e3\u8fd9\u4e9b\u5e38\u89c1\u7684\u95ee\u9898\u6a21\u5f0f\uff0c\u867d\u7136\u8fd9\u4e9b\u95ee\u9898IDE\u5f80\u5f80\u4e5f\u90fd\u4f1a\u63d0\u793a\u3002 \u7cbe\u5ea6\u95ee\u9898 \u7531\u4e8e\u8ba1\u7b97\u673a\u901a\u8fc7\u4e8c\u8fdb\u5236\u65e0\u6cd5\u5b8c\u5168\u8868\u8fbe\u67d0\u4e9b\u5c0f\u6570\uff0c\u56e0\u6b64\u4f1a\u5bf9\u7cbe\u5ea6\u8fdb\u884c\u53d6\u820d\uff0c\u6545\u800c\u6211\u4eec\u5728\u4f7f\u7528\u5c0f\u6570\u8fdb\u884c\u6570\u5b66\u8fd0\u7b97\u65f6\u9700\u8981\u6ce8\u610f\u7cbe\u5ea6\u95ee\u9898\u3002\u793a\u4f8b\u5982\u4e0b\uff1a private static void mathCalculate() { double number1 = 0.1; double number2 = 0.2; double number3 = 0.3; if (number1 + number2 == number3) { System.out.println(\"\u7cbe\u5ea6\u95ee\u9898\u793a\u4f8b\"); } } \u65e0\u9650\u9012\u5f52\u8c03\u7528 \u9012\u5f52\u7a0b\u5e8f\u9700\u8981\u8bbe\u5b9a\u57fa\u672c\u7684\u7ed3\u675f\u6761\u4ef6\uff0c\u5426\u5219\u4f1a\u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u6808\u6ea2\u51fa\u3002\u793a\u4f8b\u5982\u4e0b\uff1a public class Person { private String name; public Person(String name) { this.name = name; } public String name() { return name(); } } Person testPerson = new Person(\"test\"); testPerson.name(); \u7a7a\u6307\u9488\u95ee\u9898 Java\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u4f7f\u7528\u5bf9\u8c61\u4e2d\u7684\u6210\u5458\u65f6\u9700\u8981\u6ce8\u610f\u5bf9\u8c61\u662f\u5426\u5b58\u5728\u3002\u793a\u4f8b\u5982\u4e0b\uff1a private static void nullIssue() { String test = null; if (test != null || test.length() > 0) { System.out.println(\"\u7a7a\u6307\u9488\u5f02\u5e38\"); } if (test == null && test.length() > 0) { System.out.println(\"\u76f8\u53cd\u7684\u60c5\u51b5\uff0c\u5bfc\u81f4\u7a7a\u6307\u9488\u5f02\u5e38\"); } } \u6f5c\u5728\u6b7b\u9501\u95ee\u9898 synchronized \u662f\u5bf9\u8c61\u6392\u4ed6\u9501\uff0c\u800c\u5b57\u7b26\u4e32\u7684\u5b57\u9762\u91cf\u662f\u6574\u4e2a JVM \u5171\u4eab\u7684\uff0c\u56e0\u6b64\u5bb9\u6613\u9020\u6210\u6b7b\u9501\uff0c\u6211\u4eec\u5f80\u5f80\u4e5f\u5bb9\u6613\u758f\u5ffd\u3002\u793a\u4f8b\u5982\u4e0b\uff1a private static final String lockField = \"LOCK_PLACE_HOLDER\"; private static void deadLock() { synchronized (lockField) { System.out.println(\"\u6b7b\u9501\u95ee\u9898\"); } } \u52a8\u6001\u7684\u6b7b\u9501\u6bd4\u8f83\u96be\u626b\u63cf\u51fa\u6765\uff0c\u5728\u540e\u9762\u7684\u5185\u5bb9\u4e2d\u4f1a\u4e13\u95e8\u8ba8\u8bba\u8fd9\u4e2a\u8bdd\u9898\u3002 \u5fd8\u8bb0\u4f7f\u7528throw \u8bed\u53e5\u629b\u51fa\u5f02\u5e38 \u5f02\u5e38\u88ab\u521b\u5efa\u540e\u4e0d\u4f7f\u7528throw \u8bed\u53e5\u629b\u51fa\uff0c\u7f16\u8bd1\u5668\u5e76\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f46\u662f\u5e94\u8be5\u629b\u51fa\u7684\u5f02\u5e38\u6ca1\u6709\u88ab\u629b\u51fa\uff0c\u5219\u53ef\u80fd\u5b58\u5728\u6f5c\u5728\u7684\u4e1a\u52a1\u903b\u8f91\u95ee\u9898\u3002\u793a\u4f8b\u5982\u4e0b\uff1a private static void noThrow() { boolean condition = false; if (condition) { // \u5fd8\u8bb0 throw \u4e00\u4e2a\u5f02\u5e38\uff0c\u4ec5\u4ec5\u521b\u5efa\u4e86 new RuntimeException(\"Dissatisfied condition\"); } } \u76f8\u7b49\u5224\u5b9a\u95ee\u9898 \u5bf9\u8c61\u662f\u5426\u76f8\u7b49\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u903b\u8f91\u6765\u5224\u65ad\uff0c\u50cf\u57fa\u672c\u7c7b\u578b\u4e00\u6837\u7b80\u5355\u6839\u636e\u8fd0\u7b97\u7b26==\u6765\u8fdb\u884c\u5224\u5b9a\u5e76\u4e0d\u53ef\u9760\u3002\u793a\u4f8b\u5982\u4e0b\uff1a private static void equalsString() { String sting1 = \"test\"; String sting2 = \"test\"; if (sting1 == sting2) { System.out.println(\"\u4e0d\u5b89\u5168\u7684\u76f8\u7b49\u5224\u5b9a\"); } } \u5b57\u7b26\u4e32\u5faa\u73af\u62fc\u63a5 \u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u91c7\u7528\u5b57\u7b26\u4e32\u5faa\u73af\u62fc\u63a5\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u4ee3\u7801\u6027\u80fd\u4f4e\u4e0b\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a private static void stringConcat() { String sting = \"test\"; // \u5e94\u8be5\u4f7f\u7528 String Builder for (int i = 0; i < 1000; i++) { sting += sting; } } \u5fd8\u8bb0\u4f7f\u7528\u8fd4\u56de\u503c \u5728\u4e00\u4e9b\u65b9\u6cd5\u4e2d\uff0c\u65b9\u6cd5\u4e0d\u4f1a\u5bf9\u53c2\u6570\u672c\u8eab\u505a\u4fee\u6539\uff0c\u56e0\u6b64\u9700\u8981\u63a5\u6536\u8fd4\u56de\u503c\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\uff0c\u8fd9\u90e8\u5206\u5f80\u5f80\u4f1a\u51fa\u73b0 Bug\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a private static void forgotReturnValue() { List<String> list = Arrays.asList(\"hello\"); // map \u9700\u8981\u4f7f\u7528\u8fd4\u56de\u503c list.stream().map(String::toUpperCase); String hello = \"hello \"; // \u5b57\u7b26\u4e32\u64cd\u4f5c\u4e5f\u9700\u8981\u8fd4\u56de\u503c hello.trim(); } \u6570\u7ec4\u4e0d\u4f7f\u7528\u8fed\u4ee3\u5668\u5220\u9664\u5143\u7d20 \u5982\u679c\u6570\u7ec4\u4e0d\u4f7f\u7528\u8fed\u4ee3\u5668\u5220\u9664\u5143\u7d20\uff0c\u800c\u662f\u76f4\u63a5\u5728for\u5faa\u73af\u4e2d\u5220\u9664\uff0c\u90a3\u4e48\u4f1a\u89e6\u53d1 Concurrent-ModificationException\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a private static void arrayListRemoveException() { ArrayList<String> list = new ArrayList<>(); // \u76f4\u63a5\u5728 for \u5faa\u73af\u4e2d\u5220\u9664\u4e86\u5143\u7d20 for (String item : list) { list.remove(item); } } \u8d44\u6e90\u5fd8\u8bb0\u5173\u95ed Java \u7684\u5783\u573e\u56de\u6536\u5668\u53ea\u8d1f\u8d23\u5904\u7406\u5185\u5b58\u56de\u6536\uff0c\u5b57\u8282\u6d41\u3001\u7f51\u7edc\u3001\u6587\u4ef6\u3001\u8fdb\u7a0b\u7b49\u76f8\u5173\u8d44\u6e90\u90fd\u9700\u8981\u624b\u52a8\u5173\u95ed\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u5b57\u8282\u6d41\uff1a private static void forgotCloseStream() { ByteArrayOutputStream out = new ByteArrayOutputStream(); ObjectOutputStream s = null; // \u9700\u8981\u5173\u95ed\u6d41 try { s = new ObjectOutputStream(out); s.writeObject(1); } catch (IOException e) { e.printStackTrace(); } } \u6570\u636e\u622a\u65ad \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e5f\u4f1a\u5b58\u5728\u6f5c\u5728\u7684 Bug\uff0c\u5b83\u4f1a\u5bfc\u81f4\u6570\u636e\u88ab\u622a\u65ad\u3002 private static void objectCastIssue() { long number = 1000L; // \u6570\u636e\u4f1a\u88ab\u622a\u65ad int number2 = (int) number; } \u8fd9\u4e9b\u95ee\u9898\u90fd\u975e\u5e38\u5e38\u89c1\uff0c\u901a\u8fc7 FindBugs \u57fa\u672c\u90fd\u53ef\u4ee5\u627e\u51fa\u6765\uff0c\u5982\u6b64\u4e00\u6765\uff0c\u5373\u53ef\u6709\u6548\u5730\u51cf\u5c11\u4ee3\u7801\u8bc4\u5ba1\u7684\u538b\u529b\u3002 2.1.3 ArchUnit \u901a\u8fc7Checkstyle\u89e3\u51b3\u4e86\u4ee3\u7801\u7684\u98ce\u683c\u95ee\u9898\uff0c\u53c8\u4f7f\u7528FindBugs\u89e3\u51b3\u4e86\u57fa\u672c\u7684\u4ee3\u7801\u8d28\u91cf\u95ee\u9898\uff0c\u73b0\u5728\u8fd8\u9700\u8981\u89e3\u51b3\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u67b6\u6784\u89c4\u8303\u95ee\u9898\u3002 \u6709\u8db3\u591f\u7ecf\u9a8c\u7684\u5f00\u53d1\u8005\u90fd\u77e5\u9053\uff0c\u8f6f\u4ef6\u9879\u76ee\u548c\u67b6\u6784\u6781\u5176\u5bb9\u6613\u8150\u5316\u3002\u5982\u679c\u6ca1\u6709\u5f88\u597d\u5730\u7ba1\u63a7\uff0c\u65e0\u8bba\u662f\u91c7\u7528MVC\u7684\u4e09\u5c42\u67b6\u6784\u8fd8\u662fDDD\u7684\u56db\u5c42\u67b6\u6784\uff0c\u4ee3\u7801\u7684\u7ed3\u6784\u90fd\u4f1a\u5728\u51e0\u4e2a\u6708\u5185\u53d8\u5f97\u6df7\u4e71\u4e0d\u582a\u3002 \u6211\u66fe\u7ecf\u63a5\u624b\u8fc7\u4e00\u4e2a\u9879\u76ee\uff0c\u5b83\u7684\u4f9d\u8d56\u5173\u7cfb\u975e\u5e38\u6df7\u4e71\u3002\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0c\u5f00\u53d1\u8005\u5e38\u5e38\u5c06API \u63a5\u53e3\u53c2\u6570\u7684Request\u3001Response\u7b49\u5bf9\u8c61\u7528\u4e8e\u6570\u636e\u5e93\u3001Redis\u5b58\u50a8\uff0c\u8fd9\u5bfc\u81f4\u67b6\u6784\u7684\u4e0b\u5c42\u5b8c\u5168\u4f9d\u8d56\u4e8e\u4e0a\u5c42\u7ed3\u6784\u3002\u6211\u4e0d\u5f97\u4e0d\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u8fdb\u884c\u91cd\u6784\uff0c\u5e76\u4e14\u5728\u6bcf\u65e5\u8fdb\u884cCode Review\u65f6\u4e0d\u505c\u5730\u5411\u9879\u76ee\u6210\u5458\u5f3a\u8c03\u5305\u7ed3\u6784\u7684\u91cd\u8981\u6027\uff0c\u4ee5\u514d\u9879\u76ee\u7684\u65b0\u4eba\u56e0\u4e3a\u4e0d\u719f\u6089\u60c5\u51b5\u800c\u968f\u610f\u653e\u7f6e\u4ee3\u7801\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5\u8ba9\u5305\u7ed3\u6784\u68c0\u67e5\u6210\u4e3a\u81ea\u52a8\u5316\u68c0\u67e5\u7684\u4e00\u90e8\u5206\uff0c\u4ece\u800c\u8282\u7701\u56e2\u961f\u6280\u672f\u7ecf\u7406\u7684\u7ba1\u7406\u7cbe\u529b\u3002ArchUnit\u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u578b\u3001\u7b80\u5355\u3001\u53ef\u6269\u5c55\u7684\u5f00\u6e90Java\u6d4b\u8bd5\u5e93\uff0c\u53ef\u7528\u4e8e\u9a8c\u8bc1\u9884\u5b9a\u4e49\u7684\u5e94\u7528\u7a0b\u5e8f\u4f53\u7cfb\u7ed3\u6784\u548c\u7ea6\u675f\u5173\u7cfb\u3002 \u5728\u4f7f\u7528ArchUnit\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u8ba8\u8bba\u4e00\u4e0b\u5e38\u89c1\u7684\u4ee3\u7801\u5212\u5206\u5305\u7ed3\u6784\u7684\u65b9\u5f0f\u3002\u56e0\u5fae\u670d\u52a1\u548c\u5355\u4f53\u7cfb\u7edf\u4e0b\u4ee3\u7801\u7684\u80cc\u666f\u4e0d\u540c\uff0c\u6545\u800c\u4e0d\u540c\u9879\u76ee\u7684\u5305\u7ed3\u6784\u5212\u5206\u7b56\u7565\u4e5f\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u8fd9\u91cc\u6309\u7167\u5355\u4f53\u7cfb\u7edf\u4e0b\u7684\u7ed3\u6784\u6765\u8bf4\u660e\u3002 1. \u5e38\u89c1 \u7684Java \u5de5\u7a0b\u7684\u5305\u7ed3\u6784 Java\u5e94\u7528\u9879\u76ee\u4e2d\u4e00\u822c\u6709\u4e24\u79cd\u7ec4\u7ec7\u4ee3\u7801\u7684\u65b9\u5f0f\u3002\u4e00\u79cd\u662f\u6309\u7167\"\u5927\u5e73\u5c42\"\u7684\u98ce\u683c\u7ec4\u7ec7\uff0c\u5373\u5c06\u540c\u4e00\u7c7b\u4ee3\u7801\u653e\u5230\u4e00\u4e2a\u5305\u4e2d\uff0c\u6bd4\u5982Service\u3001Dao\uff1b\u8fd8\u6709\u4e00\u79cd\u662f\u6309\u7167\u4e1a\u52a1\u6a21\u5757\u6765\u5212\u5206\uff0c\u6bcf\u4e2a\u6a21\u5757\u4e0b\u6709\u81ea\u5df1\u7684\"\u5927\u5e73\u5c42\"\u3002 \u53e6\u5916\uff0c\u4e0d\u540c\u7684\u4ee3\u7801\u4e5f\u4f1a\u6709\u4e0d\u540c\u7684\u5c42\u6b21\u5212\u5206\u65b9\u5f0f\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4e24\u79cd\uff0c\u4e00\u79cd\u662fMVC\u98ce\u683c\u7684\u4e09\u5c42\u7ed3\u6784\uff0c\u5373Controller\u3001Service\u548cDao\uff1b\u53e6\u5916\u4e00\u79cd\u662fDDD\u7684\u56db\u5c42\u7ed3\u6784\uff0c\u5373Interface\u3001Application\u3001Domain\u548cInfrastructure\u3002 \u63d0\u793a\uff1aDDD \u662f\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\uff08Domain-driven design\uff09\u7684\u82f1\u6587\u7f29\u5199\uff0c\u4e5f\u6307 Eric Evans \u5728 2003 \u5e74\u6240\u51fa\u7248\u7684\u56fe\u4e66\u300a\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\uff1a\u8f6f\u4ef6\u6838\u5fc3\u590d\u6742\u5ea6\u7684\u89e3\u51b3\u65b9\u6cd5\u300b\uff0c\u8be5\u4e66\u63d0\u51fa\u4e86\u4e00\u79cd\u56db\u5c42\u7684\u8f6f\u4ef6\u5206\u5c42\u7ed3\u6784\u3002 \u4e0a\u8ff0\u4e24\u4e2a\u7ef4\u5ea6\u5305\u542b\u4ee5\u4e0b 4 \u79cd\u5305\u7ec4\u7ec7\u7684\u65b9\u5f0f\uff0c\u4e0b\u9762\u4e00\u4e00\u8bf4\u660e\u3002 MVC \u5927\u5e73\u5c42\u5206\u5305 \u8fd9\u662f\u4e00\u79cd\u6700\u7b80\u5355\u7684\u5206\u5305\u65b9\u5f0f\uff0c\u5982\u56fe2-4\u6240\u793a\uff0c\u6309\u7167\u6700\u521dMVC\u6a21\u5f0f\u7684\u903b\u8f91\uff0c\u4e1a\u52a1\u5e94\u8be5\u5199\u5728Controller \u4e2d\u3002\u4f46\u662f\u968f\u7740\u524d\u540e\u7aef\u5206\u79bb\u7684\u53d1\u5c55\uff0cView\u5c42\u6d88\u5931\u4e86\u3002\u5728Spring Boot\u7b49\u6846\u67b6\u4e2d\uff0cController\u901a\u8fc7RESTful\u7684\u6ce8\u89e3\u4ee3\u66ff\u4e86View\u5c42\uff0c\u4e3b\u6d41\u7684\u505a\u6cd5\u6f14\u5316\u6210\u5c06\u4e1a\u52a1\u903b\u8f91\u5199\u5728Service\u4e2d\u3002 \u56fe 2-4 MVC \u5927\u5e73\u5c42\u5206\u5305 \u4e3a\u4e86\u4fdd\u6301\u67b6\u6784\u6574\u6d01\uff0c\u8fd9\u79cd\u5206\u5305\u7ed3\u6784\u4e0b\u9700\u8981\u6709\u5982\u4e0b\u7b80\u5355\u89c4\u5219\uff1a \u76f8\u540c\u7c7b\u578b\u7684\u6587\u4ef6\u653e\u5230\u76f8\u540c\u7684\u5305\u4e2d\u3002 \u4e0a\u5c42\u5bf9\u8c61\u53ef\u4ee5\u4f9d\u8d56\u4e0b\u5c42\u5bf9\u8c61\uff0c\u7981\u6b62\u53cd\u5411\u4f9d\u8d56\u3002 Request \u5bf9\u8c61\u53ea\u80fd\u5728 Controller \u4e2d\u4f7f\u7528\uff0c\u4e3a\u4e86\u4fdd\u6301 Service \u5c42\u7684\u590d\u7528\u6027\uff0c\u4e0d\u5141\u8bb8\u5728 Service \u4e2d\u5f15\u7528 Controller \u5c42\u7684\u4efb\u4f55\u7c7b\u3002 \u4e0d\u5efa\u8bae\u5c06 Model \u76f4\u63a5\u7528\u4e8e\u63a5\u53e3\u7684\u6570\u636e\u8f93\u51fa\uff0c\u800c\u5e94\u8be5\u8f6c\u6362\u4e3a\u7279\u5b9a\u7684 Response \u7c7b\u3002 \u6240\u6709\u6587\u4ef6\u9700\u8981\u4f7f\u7528\u5305\u540d\u4f5c\u4e3a\u7ed3\u5c3e\uff0c\u4f8b\u5982 UserController\u3001UserService\u3001UserModel\u3001UserDao\u7b49\u3002 \u8fd9\u662f\u4e00\u79cd\u6700\u7b80\u5355\u3001\u6e05\u6670\u7684\u5305\u7ed3\u6784\u5212\u5206\uff0c\u8fd9\u91cc\u8fd8\u6ca1\u6709\u6d89\u53ca\u679a\u4e3e\u3001\u8fdc\u7a0b\u8c03\u7528\u3001\u5de5\u5382\u7b49\u66f4\u4e3a\u7ec6\u8282\u7684\u5305\u7ed3\u6784\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u7ee7\u7eed\u6309\u7167\u9700\u8981\u62d3\u5c55\u3002 MVC \u6309\u7167\u6a21\u5757\u5206\u5305 \u5927\u5e73\u5c42\u7684\u5206\u5305\u65b9\u5f0f\u5728\u5927\u591a\u6570\u9879\u76ee\u4e2d\u5df2\u7ecf\u591f\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e9b\u590d\u6742\u7684\u9879\u76ee\uff0c\u8fd9\u79cd\u5305\u7ed3\u6784\u4f1a\u53d7\u5230\u56e2\u961f\u7684\u8d28\u7591\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e1a\u52a1\u5f88\u590d\u6742\u65f6\uff0c\u6bcf\u4e00\u4e2a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u90fd\u4f1a\u975e\u5e38\u591a\u3002\u8fd9\u65f6\uff0c\u53ef\u6839\u636e\u4e1a\u52a1\u5212\u5206\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u4e0b\u518d\u8bbe\u7f6e\u5355\u72ec\u7684\u5927\u5e73\u5c42\u7ed3\u6784\uff0c\u5982\u56fe 2-5 \u6240\u793a\u3002 \u56fe 2-5 MVC \u6309\u6a21\u5757\u5206\u5305 \u5728\u89c4\u6a21\u8f83\u5927\u3001\u590d\u6742\u7684\u5e94\u7528\u4e2d\u6309\u7167\u6a21\u5757\u5206\u5305\uff0c\u53ef\u4ee5\u5c06\u5355\u4e2a\u5f00\u53d1\u8005\u7684\u8ba4\u77e5\u8d1f\u8f7d\u964d\u4f4e\u3002\u867d\u7136\u6309\u7167\u8fd9\u79cd\u65b9\u5f0f\u5206\u5305\u53ef\u4ee5\u5c06\u5404\u4e2a\u4e1a\u52a1\u6a21\u5757\u5206\u5f00\uff0c\u7b80\u5316\u5355\u4e2a\u6a21\u5757\u7684\u5f00\u53d1\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u4f1a\u8ba9\u7cfb\u7edf\u6574\u4f53\u53d8\u5f97\u590d\u6742\u3002\u6211\u4eec\u5728\u4eab\u53d7\u8fd9\u79cd\u5206\u5305\u597d\u5904\u7684\u540c\u65f6\uff0c\u9700\u8981\u989d\u5916\u6ce8\u610f\u5b83\u5e26\u6765\u7684\u95ee\u9898\u3002\u4f8b\u5982\u7528\u6237\u6a21\u5757\u7684Controller\u53ef\u4ee5\u8bbf\u95ee\u5546\u54c1\u6a21\u5757\u7684Service\uff0c\u5546\u54c1\u6a21\u5757\u7684Service\u53c8\u53ef\u4ee5\u8f6c\u800c\u8bbf\u95ee\u7528\u6237\u6a21\u5757\u7684Dao\uff0c\u968f\u7740\u65f6\u95f4\u7684\u6d41\u901d\uff0c\u867d\u7136\u5404\u4e2a\u6a21\u5757\u7684\u6587\u4ef6\u770b\u8d77\u6765\u90fd\u662f\u5206\u5f00\u7684\uff0c\u4f46\u662f\u4e1a\u52a1\u4f9d\u7136\u4f1a\u6df7\u4e71\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u4f7f\u7528\u8fd9\u79cd\u5206\u5305\u65b9\u5f0f\u65f6\uff0c\u9664\u4e86\u9700\u8981\u9075\u5b88\u4e0a\u9762\u7684\u89c4\u5219\u4ee5\u5916\uff0c\u8fd8\u9700\u8981\u989d\u5916\u589e\u52a0\u5982\u4e0b\u89c4\u5219\uff1a \u8de8\u6a21\u5757\u8bbf\u95ee\u65f6\uff0c\u4e0d\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee Dao\uff0c\u800c\u662f\u5e94\u8bbf\u95ee\u5bf9\u65b9\u7684 Service\u3002 \u6a21\u5757\u4e4b\u95f4\u5e94\u8be5\u901a\u8fc7 Service \u4e92\u76f8\u8bbf\u95ee\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u8868\u5173\u8054\u3002 \u6a21\u5757\u4e4b\u95f4\u4e0d\u5141\u8bb8\u5b58\u5728\u5faa\u73af\u4f9d\u8d56\uff0c\u5982\u679c\u4ea7\u751f\u5faa\u73af\u4f9d\u8d56\uff0c\u5e94\u8be5\u91cd\u65b0\u8bbe\u8ba1\u3002 DDD \u5927\u5e73\u5c42\u5206\u5305 MVC\u5206\u5305\u65b9\u5f0f\u867d\u7136\u80fd\u6ee1\u8db3\u5927\u90e8\u5206\u9879\u76ee\u7684\u9700\u6c42\uff0c\u4f46\u662f\u5bf9\u4e8e\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u89c4\u6a21\u5316\u5e94\u7528\u6765\u8bf4\uff0c\u4e5f\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53\u6211\u4eec\u7684\u5e94\u7528\u9700\u8981\u652f\u6301\u591a\u4e2a\u89d2\u8272\u7684\u64cd\u4f5c\u65f6\uff0cMVC\u5c31\u4f1a\u5e26\u6765\u4e00\u5b9a\u7684\u6df7\u4e71\u3002\u8fd9\u91cc\u7684\u89d2\u8272\u4e0d\u662f\u6307\u7ba1\u7406\u5458\u548c\u8d85\u7ea7\u7ba1\u7406\u5458\u90a3\u79cd\u4ec5\u4ec5\u662f\u6743\u9650\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u800c\u662f\u6307\u7ba1\u7406\u5458\u3001\u7528\u6237\u3001\u4ee3\u7406\u5546\u7b49\u5b8c\u5168\u4e0d\u540c\u7684\u64cd\u4f5c\u903b\u8f91\u548c\u4ea4\u4e92\u884c\u4e3a\u3002\u8fd9\u79cd\u601d\u60f3\u548cDDD\u7684\u5206\u5c42\u601d\u60f3\u4e0d\u8c0b\u800c\u5408\u3002 \u5982\u56fe 2-6 \u6240\u793a\uff0cDDD\u7684\u56db\u5c42\u7ed3\u6784\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u6982\u5ff5\u3002 Interface \u5c42\uff1a\u7528\u4e8e\u9694\u79bb\u63a5\u53e3\u5dee\u5f02\uff0c\u5373\u6bd4\u5982 XML\u3001WebSocket\u3001JSON \u7b49\u3002 Application \u5c42\uff1a\u7528\u4e8e\u9694\u79bb\u5e94\u7528\u5dee\u5f02\uff0c\u5373\u5c06\u7528\u6237\u7684\u64cd\u4f5c\u548c\u7ba1\u7406\u5458\u7684\u64cd\u4f5c\u533a\u5206\u5f00\u3002 Domain \u5c42\uff1a\u7528\u4e8e\u590d\u7528\u4e1a\u52a1\u903b\u8f91\u3002 Infrastructure \u5c42\uff1a\u4e00\u4e9b\u57fa\u7840\u8bbe\u65bd\uff0c\u4f8b\u5982\u6570\u636e\u5e93\u3001Redis\u3001\u8fdc\u7a0b\u8bbf\u95ee\u7b49\u3002 \u53ef\u4ee5\u770b\u5230\uff0c DDD \u5927\u5e73\u5c42\u5206\u5305\u65b9\u5f0f\u5212\u5206\u7684\u5305\u7ed3\u6784\u548c MVC \u533a\u522b\u4e0d\u7b97\u5927\uff0c\u4e3b\u8981\u662f\u5c06\u5e94\u7528\u5c42\u9694\u79bb\uff0c\u800c\u5c06\u9886\u57df\u5c42\u7684\u540c\u7c7b\u578b\u4ee3\u7801\u653e\u5230\u4e00\u8d77\uff0c\u4f7f\u7528\u89c4\u5219\u4e5f\u7c7b\u4f3c\u3002 \u56fe 2-6 DDD \u5927\u5e73\u5c42\u5206\u5305 DDD \u57fa\u4e8e\u6a21\u5757\u5206\u5305 DDD \u4e5f\u53ef\u4ee5\u57fa\u4e8e\u6a21\u5757\u5206\u5305\uff0c\u5982\u56fe 2-7 \u6240\u793a\uff0c\u8fd9\u91cc\u7684\u6a21\u5757\u5212\u5206\u53ea\u4f1a\u9488\u5bf9\u4e8e\u9886\u57df\u5bf9\u8c61\u548c\u9886\u57df\u670d\u52a1\u8fdb\u884c\uff0c\u5176\u4e2d\u6d89\u53ca\u4e00\u4e2a\u4e13\u95e8\u7684\u672f\u8bed\u2014\u2014\u4e0a\u4e0b\u6587\u3002 \u56fe 2-7 DDD \u57fa\u4e8e\u6a21\u5757\u5206\u5305 \u9700\u8981\u6ce8\u610f\u7684\u662f \uff0cDDD \u57fa\u4e8e\u6a21\u5757\u5206\u5305\u5e76\u4e0d\u662f\u4e00\u80a1\u8111\u5730\u5c06\u6240\u6709\u7684 Controller\u3001Service \u7eb3\u5165\u67d0\u4e2a\u6a21\u5757\u4e2d\uff0c\u8fd9\u79cd\u505a\u6cd5\u4f1a\u9020\u6210\u4e1a\u52a1\u8fdb\u4e00\u6b65\u6df7\u4e71\u3002\u5b83\u662f\u5c06\u5e94\u7528\u548c\u9886\u57df\u5206\u5f00\uff0c\u518d\u6309\u7167\u4e0d\u540c\u7684\u903b\u8f91\u8fdb\u884c\u62c6\u5206\u3002 DDD\u57fa\u4e8e\u6a21\u5757\u5206\u5305\u65f6\uff0c\u9700\u8981\u9075\u5b88\u5982\u4e0b\u89c4\u5219\uff1a \u5e94\u7528\u53ef\u4f9d\u8d56\u4e8e\u9886\u57df\uff0c\u9886\u57df\u4e0d\u5141\u8bb8\u4f9d\u8d56\u4e8e\u5e94\u7528\u3002 \u4e0a\u4e0b\u6587\u4e4b\u95f4\u4e0d\u5141\u8bb8\u5b58\u5728\u5faa\u73af\u4f9d\u8d56\u3002 \u4e0a\u4e0b\u6587\u4e4b\u95f4\u7684\u8bbf\u95ee\u9700\u8981\u901a\u8fc7 Domain Service \u5b8c\u6210\uff0c\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\u5bf9\u65b9\u7684\u6570\u636e\u5c42\u3002 \u4ee5\u4e0a\u56db\u79cd\u5206\u5305\u7684\u65b9\u5f0f\u867d\u7136\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u662f\u76f8\u5dee\u5f97\u4e0d\u591a\u3002\u6211\u4eec\u5e94\u8be5\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u60c5\u51b5\u6765\u9009\u62e9\u5206\u5305\u7684\u65b9\u5f0f\uff0c\u5982\u679c\u7b80\u5355\u7684\u4e1a\u52a1\u4f7f\u7528\u8f83\u4e3a\u590d\u6742\u7684\u5305\u7ed3\u6784\uff0c\u4f1a\u5e26\u6765\u975e\u5e38\u591a\u7684\u6837\u677f\u4ee3\u7801\uff0c\u964d\u4f4e\u5f00\u53d1\u6548\u7387\u3002 \u5206\u5c42\u7684\u672c\u8d28\u662f\u9694\u79bb\u5dee\u5f02\uff0c\u5982\u679c\u5728\u7cfb\u7edf\u53ef\u77e5\u7684\u8fd0\u884c\u65f6\u95f4\u5185\u6ca1\u6709\u5dee\u5f02\u7684\u51fa\u73b0\uff0c\u53ef\u4ee5\u5148\u4e0d\u8003\u8651\u5206\u5c42\uff0c\u8fd9\u79cd\u5206\u5c42\u9664\u4e86\u4eba\u4e3a\u589e\u52a0\u590d\u6742\u5ea6\u4e4b\u5916\u5f80\u5f80\u6ca1\u6709\u4efb\u4f55\u597d\u5904\u3002 \u5f53\u7136\uff0c\u8fd8\u6709\u6d0b\u8471\u67b6\u6784\u3001\u516d\u8fb9\u5f62\u67b6\u6784\u7b49\u5176\u4ed6\u67b6\u6784\u65b9\u5f0f\uff0c\u4f46\u662f\u76f8\u5bf9\u5c0f\u4f17\uff0c\u8fd9\u91cc\u6682\u4e14\u4e0d\u505a\u5206\u6790\u3002 \u8003\u8651\u597d\u5206\u5305\u65b9\u5f0f\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u914d\u7f6eArchUnit\u68c0\u67e5\u6761\u4ef6\u548c\u7ea6\u675f\u89c4\u5219\u4e86\u3002\u540e\u6587\u5c06\u4ee5\"MVC\u5927\u5e73\u5c42\u5206\u5305\"\u65b9\u5f0f\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u4f7f\u7528ArchUnit\u5bf9\u5305\u7ed3\u6784\u8fdb\u884c\u68c0\u67e5\u3002\u5f53\u7136\uff0c\u4e0d\u4f7f\u7528ArchUnit\u4e5f\u53ef\u4ee5\u901a\u8fc7\u56e2\u961f\u5951\u7ea6\u3001\u591a\u6a21\u5757\u7684\u9879\u76ee\u8bbe\u8ba1\u5bf9\u56e2\u961f\u5f00\u53d1\u505a\u4e00\u4e9b\u7ea6\u675f\u3002 2. ArchUnit \u7684\u539f\u7406 ArchUnit\u5229\u7528\u53cd\u5c04\u548c\u5b57\u8282\u7801\u6280\u672f\u83b7\u53d6\u6240\u6709\u7684\u5305\u3001\u7c7b\u3001\u5b57\u6bb5\u7b49\u4fe1\u606f\uff0c\u5e76\u901a\u8fc7\u7279\u5b9a\u7684\u5206\u6790\u6765\u786e\u5b9a\u5bf9\u8c61\u4e4b\u95f4\u7684\u8bbf\u95ee\u5173\u7cfb\u3002ArchUnit\u4f7f\u7528ASM\u4f5c\u4e3a\u5206\u6790\u5b57\u8282\u7801\u7684\u5de5\u5177\uff0c\u4ee3\u4ef7\u662fArchUnit \u4e2d\u5f88\u591a\u89c4\u5219\u7684\u5b9a\u4e49\u4e0d\u662f\u7c7b\u578b\u5b89\u5168\u7684\u3002 ArchUnit \u652f\u6301\u7684\u68c0\u67e5\u7279\u6027\u6709\uff1a \u5305\u4f9d\u8d56\u68c0\u67e5\u3002 \u7c7b\u4f9d\u8d56\u68c0\u67e5\u3002 \u7c7b\u548c\u5305\u7684\u4f4d\u7f6e\u7ea6\u5b9a\u68c0\u67e5\u3002 \u7ee7\u627f\u68c0\u67e5\u3002 \u5206\u5c42\u4f9d\u8d56\u68c0\u67e5\u3002 \u5faa\u73af\u4f9d\u8d56\u68c0\u67e5\uff08Spring \u652f\u6301\u53cc\u5411\u4f9d\u8d56\u5f80\u5f80\u4f1a\u5bfc\u81f4\u5faa\u73af\u73b0\u8c61\uff09\u3002 ArchUnit \u672c\u8eab\u4e5f\u662f\u6309\u7167\u5206\u5c42\u67b6\u6784\u8bbe\u8ba1\u7684\uff0c\u5176 API \u5206\u4e3a\u5982\u4e0b\u4e09\u5c42\u3002 Core\uff1a\u6838\u5fc3\u5c42\uff0c\u5904\u7406\u4e00\u4e9b\u57fa\u672c\u7684\u7c7b\u3001\u5b57\u8282\u7801\u7b49\u64cd\u4f5c\uff0c\u7528\u4e8e\u5bf9\u5bfc\u5165\u7684\u7c7b\u8fdb\u884c\u65ad\u8a00\u3002 Lang\uff1a\u5904\u7406\u5404\u79cd\u89c4\u5219\u7684\u8bed\u6cd5\u548c\u67b6\u6784\u903b\u8f91\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e9b\u57fa\u672c\u7684\u68c0\u67e5\u5668\u3002 Library\uff1a\u5b9a\u4e49\u4e00\u4e9b\u66f4\u4e3a\u590d\u6742\u7684\u9884\u5b9a\u4e49\u89c4\u5219\u3002 3. ArchUnit \u4f7f\u7528\u5165\u95e8 ArchUnit \u7684\u4f7f\u7528\u6bd4\u8f83\u7b80\u5355\uff0c\u53ef\u4ee5\u901a\u8fc7 JUnit \u7684 Runner \u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 Maven\u3001Gradle \u7b49\u6784\u5efa\u5de5\u5177\u6765\u8fd0\u884c\u3002\u4e0b\u9762\u4ee5 JUnit \u4f5c\u4e3a\u793a\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u4f7f\u7528 ArchUnit\u3002 ArchUnit\u652f\u6301\u4e0d\u540c\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662fJUnit 4\uff08\u5173\u4e8eJUnit\uff0c\u5c06\u5728\u4e0b\u4e00\u7ae0\u4ecb\u7ecd\uff09\u3002ArchUnit \u66f4\u50cf\u662f\u8fdb\u884c\u4ee3\u7801\u89c4\u8303\u7684\u68c0\u67e5\u800c\u4e0d\u662f\u6d4b\u8bd5\uff0c\u867d\u7136\u5b83\u4f7f\u7528\u4e86JUnit\u5e73\u53f0\uff0c\u4f46\u5176\u5b9e\u5927\u5bb6\u66f4\u613f\u610f\u628a\u5b83\u5212\u5206\u5230\u9759\u6001\u4ee3\u7801\u5206\u6790\u4e2d\u3002 \u5728Maven\u4e2d\u4f7f\u7528ArchUnit\uff0c\u9996\u5148\u9700\u8981\u6dfb\u52a0\u76f8\u5173\u7684\u4f9d\u8d56\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.13</version> <scope>test</scope> </dependency> <dependency> <groupId>com.tngtech.archunit</groupId> <artifactId>archunit</artifactId> <version>0.14.1</version> <scope>test</scope> </dependency> \u5728\u56fe 2-8 \u4e2d\u51c6\u5907\u4e86\u4e00\u4e2a Demo \u5e94\u7528\uff0c\u5b83\u6709\u4e09\u4e2a\u5305\u548c\u4e09\u4e2a\u4e3b\u8981\u7684\u7c7b\u3002 \u56fe 2-8 \u5206\u5c42\u793a\u4f8b \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u89c4\u5219\u7f16\u5199 ArchUnit \u6d4b\u8bd5\uff1a Controller \u4e2d\u7684\u7c7b\u4e0d\u5141\u8bb8\u88ab Service\u3001Dao \u8bbf\u95ee\u3002 \u6240\u6709\u7684\u7c7b\u540d\u5fc5\u987b\u4f7f\u7528\u5f53\u524d\u7684\u5305\u540d\u7ed3\u5c3e\u3002 \u7136\u540e\u5728\u5bf9\u5e94\u7684\u6d4b\u8bd5\u76ee\u5f55\u4e0b\uff0c\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7c7b ArchUnitTest\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6765\u9650\u5236\u7c7b\u540d\uff0c\u6240\u6709\u7684 Controller \u6587\u4ef6\u5fc5\u987b\u4ee5 Controller \u7ed3\u675f\uff1a @Test public void file_name_should_end_with_package_name() { JavaClasses importedClasses = new ClassFileImporter().importPackages(this.getClass().getPackage().getName()); classes().that().resideInAPackage(\"..controller\") .should().haveSimpleNameEndingWith(\"Controller\") .check(importedClasses); classes().that().resideInAPackage(\"..service\") .should().haveSimpleNameEndingWith(\"Service\") .check(importedClasses); classes().that().resideInAPackage(\"..dao\") .should().haveSimpleNameEndingWith(\"Dao\") .check(importedClasses); } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cimportedClasses \u4e3a\u88ab\u8986\u76d6\u7684\u8303\u56f4\uff0cArchUnit \u53ef\u4ee5\u901a\u8fc7 ClassFileImporter\u3001JavaTypeImporter \u7b49\u65b9\u5f0f\u52a0\u8f7d\u9700\u8981\u88ab\u9a8c\u8bc1\u7684\u7c7b\u3002 \u4e0a\u9762\u8fd9\u6bb5\u6d4b\u8bd5\u4e2d\u5305\u542b\u4e86 3 \u6761\u9a8c\u8bc1\u89c4\u5219\uff0c\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u5c31\u662f\u5176\u4e2d\u4e00\u6761\u3002\u4f7f\u7528 ArchUnit \u53ea\u9700\u8981\u6309\u7167\u7c7b\u4f3c\u7684\u505a\u6cd5\u7f16\u5199\u8fd9\u4e9b\u89c4\u5219\u5373\u53ef\u3002 classes().that().resideInAPackage(\"..controller\") .should().haveSimpleNameEndingWith(\"Controller\") .check(importedClasses); \u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u94fe\u5f0f\u98ce\u683c\u7684API\uff0cclasses()\u65b9\u6cd5\u662fArchUnit lang\u5c42\u7684\u5de5\u5177\u65b9\u6cd5\uff0c\u7528\u4e8e\u58f0\u660e\u57fa\u672c\u7684\u89c4\u5219\uff0c\u5927\u90e8\u5206\u57fa\u672c\u89c4\u5219\u90fd\u53ef\u4ee5\u4f7f\u7528classes()\u65b9\u6cd5\u6765\u521d\u59cb\u5316\u58f0\u660e\u3002that()\u65b9\u6cd5\u540e\u9762\u7684\u5185\u5bb9\u4ee3\u8868\u54ea\u4e9b\u7b26\u5408\u89c4\u5219\u7684\u7c7b\u4f1a\u88ab\u7b5b\u9009\u5230\u3002ArchUnit\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u7b5b\u9009\u5668\uff0c\u6bd4\u5982\u7c7b\u578b\u3001\u662f\u5426\u4f7f\u7528\u4e86\u67d0\u79cd\u6ce8\u89e3\u7b49\u3002should()\u65b9\u6cd5\u540e\u9762\u63a5\u7684\u662f\u65ad\u8a00\u89c4\u5219\uff0c\u6bd4\u5982\u7c7b\u540d\u89c4\u5219\u3001\u4f9d\u8d56\u89c4\u5219\u7b49\u3002 \u63a5\u4e0b\u6765\u5b9e\u73b0MVC\u5206\u5c42\u67b6\u6784\u7684\u4f9d\u8d56\u68c0\u67e5\uff0c\u8fd9\u91cc\u4f1a\u7528\u5230library\u5305\u4e2d\u7684\u9884\u5b9a\u4e49\u89c4\u5219\u65b9\u6cd5layeredArchitecture()\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_obey_MVC_architecture_rule() { JavaClasses importedClasses = new ClassFileImporter().importPackages(this.getClass().getPackage().getName()); layeredArchitecture() .layer(\"Controller\").definedBy(\"..controller..\") .layer(\"Service\").definedBy(\"..service..\") .layer(\"Dao\").definedBy(\"..dao..\") .whereLayer(\"Controller\").mayNotBeAccessedByAnyLayer() .whereLayer(\"Service\").mayOnlyBeAccessedByLayers(\"Controller\") .whereLayer(\"Dao\").mayOnlyBeAccessedByLayers(\"Service\"); layeredArchitecture.check(importedClasses); } \u6267\u884c\u4e0a\u8ff0\u4ee3\u7801\u65f6\uff0c\u5728IDEA\u7f16\u8f91\u5668\u8fb9\u7f18\u4f1a\u51fa\u73b0\u7eff\u8272\u7684\u8fd0\u884c\u6309\u94ae\uff0c\u5355\u51fb\u6b64\u6309\u94ae\u5373\u53ef\u4f5c\u4e3a\u5355\u5143\u6d4b\u8bd5\u8fd0\u884c\u3002\u8fd9\u91cc\u4f7f\u7528layeredArchitecture()\u5c06controller\u3001service\u548cdao\u4e09\u4e2a\u5305\u4e2d\u7684\u7c7b\u5206\u522b\u5b9a\u4e49\u4e3aController\u3001Service\u548cDao\u5c42\uff0c\u5e76\u58f0\u660e\u5176\u7ea6\u675f\u5173\u7cfb\u3002\u5982\u679c\u51fa\u73b0\u9519\u8bef\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u6d4b\u8bd5\u5c31\u4e0d\u4f1a\u901a\u8fc7\u3002 \u5b98\u7f51\u4f7f\u7528\u4e86\u4e00\u5f20\u56fe\u6765\u8bf4\u660e\u4e09\u5c42\u67b6\u6784\u4e0b\u7684\u4f9d\u8d56\u5173\u7cfb\uff08\u5982\u56fe2-9\u6240\u793a\uff09\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u53ea\u5141\u8bb8\u4e0b\u5c42\u7c7b\u88ab\u4e0a\u5c42\u8c03\u7528\uff0c\u4ee5\u6b64\u6765\u5b88\u62a4\u4ee3\u7801\u7684\u67b6\u6784\u3002\u5728\u7f16\u5199\u672c\u4e66\u65f6\uff0c\u5b98\u7f51\u7684\u793a\u4f8b\u4ee3\u7801\u5b58\u5728\u90e8\u5206\u672a\u66f4\u65b0\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6309\u7167\u5b98\u7f51\u7684\u8bf4\u660e\u4e0d\u80fd\u8fd0\u884c\uff0c\u53ef\u4ee5\u53c2\u8003\u672c\u4e66\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801\u3002 \u56fe 2-9 ArchUnit \u7684\u4f9d\u8d56\u793a\u610f\u56fe \uff08\u6ce8\uff1a\u56fe\u7247\u6765\u6e90\u4e8e https://www.archunit.org/\uff09 2.1.4 OWASP Dependency-Check \u67b6\u6784\u7684\u95ee\u9898\u89e3\u51b3\u540e\uff0c\u8fd8\u9700\u8981\u907f\u514d\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u5f00\u6e90\u8f6f\u4ef6\u5e26\u6765\u7684\u5b89\u5168\u95ee\u9898\u3002\u5f00\u653e\u5f0fWeb \u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u9879\u76ee\uff08OWASP\uff09\u662f\u4e00\u4e2a\u975e\u8425\u5229\u7ec4\u7ec7\uff0c\u63d0\u4f9b\u4e86\u5b89\u5168\u6807\u51c6\u3001\u6570\u636e\u5e93\u3001\u793e\u533a\u548c\u57f9\u8bad\u3002\u5176\u4e2d\u4e00\u4e2a\u5de5\u5177OWASP Dependency-Check\u53ef\u4ee5\u5bf9\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5305\u4e2d\u7684\u77e5\u540d\u6f0f\u6d1e\u8fdb\u884c\u68c0\u67e5\uff0c\u626b\u63cf\u7ed3\u679c\u53d7\u6f0f\u6d1e\u6570\u636e\u5e93\u7684\u66f4\u65b0\u5f71\u54cd\u3002 OWASP Dependency-Check\u53ef\u4ee5\u62a5\u544a\u73b0\u6709\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u7684CVE\u3002CVE\u7684\u82f1\u6587\u5168\u79f0\u662fCommon Vulnerabilities & Exposures\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u7406\u89e3\u4e3a\u4e1a\u754c\u5df2\u77e5\u7684\u6f0f\u6d1e\u6279\u6f0f\u3002 OWASP\u7684\u5b89\u5168\u626b\u63cf\u548cfortify\u7b49\u5b89\u5168\u626b\u63cf\u5de5\u5177\u6709\u6240\u4e0d\u540c\uff0c\u5b83\u4f9d\u8d56\u4e8e\u5f00\u653e\u7684\u6f0f\u6d1e\u4fe1\u606f\uff0c\u4e0d\u80fd\u5b8c\u5168\u4ee3\u66ff\u6a21\u5f0f\u5206\u6790\u7c7b\u5b89\u5168\u626b\u63cf\u5de5\u5177\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u57fa\u4e8eOWASP Dependency-Check \u8fdb\u884c\u7684\u4f9d\u8d56\u68c0\u67e5\u4e5f\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u73b0\u4ee3\u9879\u76ee\u4f9d\u8d56\u7684\u7ec4\u4ef6\u8f83\u591a\uff0c\u901a\u8fc7\u4eba\u5de5\u68c0\u67e5\u7684\u65b9\u5f0f\u8f83\u96be\u53ca\u65f6\u53d1\u73b0\u6f0f\u6d1e\u3002 OWASP\u7684\u4f9d\u8d56\u68c0\u67e5\u652f\u6301\u4e3b\u6d41\u7684\u8bed\u8a00\u548c\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u5bf9\u4e8eJava\u8bed\u8a00\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528Maven\u63d2\u4ef6\u6765\u8fd0\u884cOWASP Dependency-Check\u3002\u4e0eCheckstyle\u7c7b\u4f3c\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u6a21\u5757\uff0c\u5728Pom\u6587\u4ef6\u4e2d\u6dfb\u52a0\u76f8\u5173\u4f9d\u8d56\uff1a <plugin> <groupId>org.owasp</groupId> <artifactId>dependency-check-maven</artifactId> <version>6.1.3</version> <executions> <execution> <goals> <goal>check</goal> </goals> </execution> </executions> </plugin> \u5728\u771f\u5b9e\u7684\u9879\u76ee\u4e2d\uff0c\u4f9d\u8d56\u5305\u7684\u53d8\u5316\u6ca1\u6709\u90a3\u4e48\u9891\u7e41\uff0c\u5982\u679c\u6bcf\u6b21\u6784\u5efa\u90fd\u8fd0\u884c\u8fd9\u4e2a\u68c0\u67e5\u4f1a\u8ba9\u6784\u5efa\u53d8\u6162\u3002\u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\u4f7f\u7528CI/CD\u5de5\u5177\uff0c\u6bd4\u5982Jenkins\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u5b9a\u65f6\u7684\u4efb\u52a1\u5728\u591c\u95f4\u8fd0\u884c\u3002\u5173\u4e8eJenkins\u7684\u4f7f\u7528\uff0c\u8bf7\u53c2\u8003\u672c\u4e66\u6d4b\u8bd5\u5de5\u7a0b\u5316\u90e8\u5206\u3002 \u4f7f\u7528 OWASP Dependency-Check \u65f6\u9700\u8981\u610f\u8bc6\u5230\uff0c\u5b83\u5e76\u4e0d\u80fd\u53d6\u4ee3\u5b89\u5168\u6d4b\u8bd5\u3002\u7531\u4e8e\u5b83\u7684\u5b9e\u73b0\u673a\u5236\u662f\u901a\u8fc7CVE\u5e93\u6765\u62a5\u544a\u95ee\u9898\u7684\uff0c\u56e0\u6b64\u53d7\u5236\u4e8e\u8be5\u5e93\u7684\u66f4\u65b0\u60c5\u51b5\uff0c\u5b58\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7684\u6ede\u540e\u95ee\u9898\u3002 2.2 \u4ee3\u7801\u8bc4\u5ba1 \u8fd9\u91cc\u7684\u4ee3\u7801\u8bc4\u5ba1\u662f\u6307\u4eba\u5de5\u67e5\u770b\u4ee3\u7801\u662f\u5426\u5b58\u5728\u95ee\u9898\u6216\u8005\u6539\u8fdb\u70b9\uff0c\u4eba\u5de5\u8fdb\u884c\u4ee3\u7801\u8bc4\u5ba1\u66f4\u52a0\u5173\u6ce8\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u4ee3\u7801\u7684\u8bbe\u8ba1\u5f80\u5f80\u4e0d\u80fd\u88ab\u81ea\u52a8\u5316\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u53d1\u73b0\u3002\u6bd4\u5982\uff0c\u56e2\u961f\u67d0\u4e2a\u6210\u5458\u7f16\u5199\u7684\u4ee3\u7801\u4f7f\u7528\u4e86\u62fc\u97f3\u4f5c\u4e3a\u53d8\u91cf\u540d\uff0c\u867d\u7136\u80fd\u901a\u8fc7\u9759\u6001\u4ee3\u7801\u5206\u6790\uff0c\u4f46\u8fd9\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u8bbe\u8ba1\uff0c\u4e0d\u826f\u7684\u547d\u540d\u65b9\u6cd5\u4f1a\u8ba9\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u5927\u5927\u964d\u4f4e\u3002 2.2.1 \u4ee3\u7801\u8bc4\u5ba1\u7684\u573a\u666f \u4ee3\u7801\u8bc4\u5ba1\u662f\u56fd\u9645\u8f6f\u4ef6\u4e1a\u754c\u516c\u8ba4\u7684\u6700\u6709\u6548\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u4e4b\u4e00\uff0c\u4eba\u5de5\u4ee3\u7801\u8bc4\u5ba1\u548c\u6d4b\u8bd5\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\uff0c\u4eba\u5de5\u4ee3\u7801\u8bc4\u5ba1\u4e0d\u53ea\u662f\u53d1\u73b0\u4ee3\u7801\u4e2d\u7684\u9519\u8bef\uff0c\u5b83\u8fd8\u80fd\u9884\u9632\u4e00\u4e9b\u9519\u8bef\u7684\u53d1\u751f\u3002 \u6211\u4eec\u53ef\u901a\u8fc7\u7ea0\u6b63\u5f00\u53d1\u8005\u7684\u7f16\u7801\u4e60\u60ef\u548c\u98ce\u683c\uff0c\u6765\u63d0\u9ad8\u8f6f\u4ef6\u7684\u8d28\u91cf\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6ca1\u6709\u4e3a\u5173\u952e\u7a0b\u5e8f\u6dfb\u52a0\u4e8b\u52a1\u5904\u7406\u673a\u5236\uff0c\u90a3\u4e48\u6d4b\u8bd5\u4eba\u5458\u5f80\u5f80\u4e0d\u4f1a\u6d4b\u8bd5\u51fa\u95ee\u9898\uff0c\u4f46\u662f\u5728\u9ad8\u5e76\u53d1\u7684\u60c5\u51b5\u4e0b\u4f1a\u6709\u4e00\u5b9a\u7684\u673a\u4f1a\u66b4\u9732\u7f3a\u4e4f\u6b64\u673a\u5236\u7684\u95ee\u9898\u3002\u5728\u4ee3\u7801\u8bc4\u5ba1\u9636\u6bb5\uff0c\u82e5\u80fd\u53ca\u65f6\u53d1\u73b0\u56e2\u961f\u6210\u5458\u6ca1\u6709\u589e\u52a0\u4e8b\u52a1\u76f8\u5173\u7684\u6ce8\u89e3\uff0c\u5c31\u80fd\u907f\u514d\u6f5c\u5728\u95ee\u9898\u7684\u51fa\u73b0\u3002\u4ee3\u7801\u8bc4\u5ba1\u4e5f\u8ba9\u56e2\u961f\u7684\u534f\u4f5c\u98ce\u683c\u8d8b\u4e8e\u7edf\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8bc4\u5ba1\u8fc7\u7a0b\u4e2d\u6574\u7406\u4e00\u4e9b\u4ee3\u7801\u89c4\u8303\uff0c\u8ba9\u56e2\u961f\u6210\u5458\u6309\u7167\u76f8\u4f3c\u7684\u98ce\u683c\u8fdb\u884c\u5f00\u53d1\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4f7f\u7528\u9759\u6001\u4ee3\u7801\u5206\u6790\u6765\u4fdd\u8bc1\u4ee3\u7801\u8d28\u91cf\uff0c\u4f46\u9759\u6001\u4ee3\u7801\u5206\u6790\u65e0\u6cd5\u89e3\u51b3\u6240\u6709\u95ee\u9898\uff0c\u56e0\u6b64\u4e0d\u80fd\u5b8c\u5168\u4f9d\u8d56\u4e8e\u5b83\uff0c\u5728\u4e00\u4e9b\u573a\u666f\u4e2d\u6211\u4eec\u9700\u8981\u8ba9\u56e2\u961f\u6210\u5458\u4e00\u8d77\u6765\u505a\u4ee3\u7801\u8bc4\u5ba1\u3002 \u5728\u56e2\u961f\u65e5\u5e38\u7684\u5f00\u53d1\u5de5\u4f5c\u4e2d\uff0c\u6709\u5982\u4e0b\u51e0\u79cd\u4ee3\u7801\u8bc4\u5ba1\u65b9\u5f0f\u3002 1\uff09 \u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u3002 \u4e00\u822c\u662f\u5728\u6bcf\u5929\u4e0b\u5348\u4e0b\u73ed\u524d\u62ff\u51fa1\u4e2a\u5c0f\u65f6\u6765\u5bf9\u5f53\u5929\u7684\u4ee3\u7801\u505a\u8bc4\u5ba1\u3002\u5982\u679c\u4e00\u4e2a\u56e2\u961f\u5171\u67098\u4e2a\u6210\u5458\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u9700\u8981\u82b1\u8d39\u4e00\u4e2a\u4eba\u5929\u3002\u6709\u4e00\u4e9b\u9879\u76ee\u7ecf\u7406\u7279\u522b\u4e0d\u7406\u89e3\u4e3a\u4ec0\u4e48\u9700\u8981\u82b1\u65f6\u95f4\u6765\u505a\u8fd9\u4ef6\u4e8b\u60c5\u3002\u5b9e\u9645\u4e0a\uff0c\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u975e\u5e38\u91cd\u8981\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u5206\u644a\u9700\u8981\u8bc4\u5ba1\u7684\u4ee3\u7801\u91cf\uff0c\u4e5f\u53ef\u4ee5\u8ba9\u56e2\u961f\u7684\u7f16\u7801\u98ce\u683c\u65e5\u8d8b\u7edf\u4e00\uff0c\u5982\u6b64\u5f80\u590d\u9700\u8981\u6307\u51fa\u7684\u9519\u8bef\u5c31\u4f1a\u8d8a\u6765\u8d8a\u5c11\u3002\u6b64\u5916\uff0c\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u4e5f\u662f\u56e2\u961f\u8fdb\u884c\u6280\u672f\u4ea4\u6d41\u7684\u4e00\u4e2a\u5951\u673a\uff0c\u56e2\u961f\u6210\u5458\u5f7c\u6b64\u4e4b\u95f4\u53ef\u4ee5\u6e05\u6670\u5730\u4e86\u89e3\u5bf9\u65b9\u5728\u505a\u4ec0\u4e48\u3002 2\uff09 \u53d1\u5e03\u524d\u4ee3\u7801\u8bc4\u5ba1\u3002 \u53d1\u5e03\u524d\u8fdb\u884c\u4ee3\u7801\u8bc4\u5ba1\u7684\u76ee\u7684\u662f\u907f\u514d\u4ea7\u54c1\u4e2d\u6709\u660e\u663e\u4e0d\u5408\u9002\u7684\u4ee3\u7801\u3002\u6709\u65f6\u5019\u4e00\u4e9b\u9519\u8bef\u6d4b\u8bd5\u4eba\u5458\u5f88\u6709\u53ef\u80fd\u6ca1\u6709\u8986\u76d6\u4f4f\uff0c\u800c\u901a\u8fc7\u53d1\u5e03\u524d\u4ee3\u7801\u8bc4\u5ba1\u5c31\u80fd\u5feb\u901f\u8bc6\u522b\u3002\u5982\u679c\u56e2\u961f\u7684\u7248\u672c\u7ba1\u7406\u7b56\u7565\u662f\u5728Release\u5206\u652f\u4e0a\u53d1\u5e03\uff0c\u90a3\u4e48\u901a\u8fc7\u4e0e\u53e6\u4e00\u4e2a\u5206\u652f\u4e0a\u4e4b\u524d\u53d1\u5e03\u7684\u7248\u672c\u5bf9\u6bd4\uff0c\u4e5f\u5c31\u53ef\u4ee5\u770b\u51fa\u4e24\u8005\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u53d1\u5e03\u524d\u4ee3\u7801\u8bc4\u5ba1\u7684\u5de5\u4f5c\u91cf\u6bd4\u8f83\u5927\uff0c\u4e00\u4e9b\u521b\u4e1a\u56e2\u961f\u4e0d\u613f\u610f\u505a\u662f\u53ef\u4ee5\u7406\u89e3\u7684\uff0c\u5bf9\u4e8e\u6210\u719f\u7684\u516c\u53f8\uff0c\u5982\u679c\u662f\u6709\u5927\u91cf\u7528\u6237\u7684\u4ea7\u54c1\uff0c\u5219\u9700\u8981\u8ba4\u771f\u8fdb\u884c\u6b64\u8bc4\u5ba1\u3002 3\uff09 Hotfix \u4ee3\u7801\u8bc4\u5ba1\u3002 \u4e00\u4e2a\u65b0\u7248\u672c\u53d1\u5e03\u540e\uff0c\u5f80\u5f80\u4f1a\u6709\u4e00\u4e9b\u95ee\u9898\u9700\u8981\u53ca\u65f6\u4fee\u590d\uff0c\u6211\u4eec\u5c06\u8fd9\u79cd\u4fee\u590d\u53eb\u4f5c Hotfix\u3002Hotfix\u901a\u5e38\u4e0d\u4f1a\u6539\u52a8\u592a\u591a\u5730\u65b9\uff0c\u6d4b\u8bd5\u4eba\u5458\u4e5f\u65e0\u529b\u5168\u90e8\u8fdb\u884c\u56de\u5f52\u6d4b\u8bd5\uff0c\u6240\u4ee5Hotfix\u4e00\u822c\u662f\u901a\u8fc7Pull Request\u6765\u5b8c\u6210\u7684\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u7531\u6709\u7ecf\u9a8c\u7684\u6280\u672f\u7ecf\u7406\u6765\u628a\u5173\u5408\u5165\u7684\u4ee3\u7801\u662f\u5426\u5b58\u5728\u660e\u663e\u7684\u95ee\u9898\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u4e0a\u8ff0\u4e09\u79cd\u4e3b\u8981\u7684\u4ee3\u7801\u8bc4\u5ba1\u65b9\u5f0f\u90fd\u53d1\u751f\u5728\u56e2\u961f\u5185\u90e8\u3002\u5176\u4e2d\uff0c\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u548c\u53d1\u5e03\u524d\u7684\u4ee3\u7801\u8bc4\u5ba1\u901a\u5e38\u9700\u8981\u56e2\u961f\u6210\u5458\u4e00\u8d77\u53c2\u52a0\uff0c\u5bf9\u6b64\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5927\u5c4f\u914d\u5408IDE\u5728\u672c\u5730\u5b8c\u6210\u3002 2.2.2 \u4ee3\u7801\u8bc4\u5ba1\u7684\u5de5\u5177 \u4ee3\u7801\u8bc4\u5ba1\u57fa\u4e8e\u5982\u4e0b\u5de5\u5177\u6765\u8fdb\u884c\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\u3002 \u4ee3\u7801\u7248\u672c\u7ba1\u7406\u5de5\u5177\uff0c\u6bd4\u5982 Git\u3001SVN\u3001Mercurial\u7b49\uff0c\u4e0d\u8fc7\u76ee\u524d\u5927\u90fd\u4f7f\u7528 Git \u3002Git \u7684\u5206\u5e03\u5f0f\u7279\u6027\u5f88\u51fa\u8272\uff0c\u5de5\u5177\u94fe\u4e5f\u5b8c\u5584\uff0c\u5982\u679c\u6ca1\u6709\u522b\u7684\u9650\u5236\u56e0\u7d20\uff0c\u53ef\u4ee5\u9ed8\u8ba4\u4f7f\u7528 Git\u3002 \u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\uff0cGitLab\u3001Github\u4ee5\u53ca\u56fd\u5185\u7684 Gitee \u90fd\u4e0d\u9519\uff0c\u5982\u679c\u5728\u4f01\u4e1a\u5185\u90e8\u4f7f\u7528\uff0c\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u642d\u5efa GitLab\uff0c\u4e0d\u8fc7 GitLab \u6bd4\u8f83\u590d\u6742\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u4f7f\u7528 Gogs \u901a\u8fc7 Docker \u5bb9\u5668\u5feb\u901f\u542f\u52a8\u4e00\u5957 Git \u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u3002 \u4ee3\u7801\u5bf9\u6bd4\u5de5\u5177\u3002\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u4e00\u822c\u4f1a\u63d0\u4f9b\u5185\u7f6e\u7684\u4ee3\u7801\u5bf9\u6bd4\u5de5\u5177\uff0c\u4e0d\u8fc7\u8bbf\u95ee\u6bd4\u8f83\u6162\u3002\u8fd8\u6709\u4e13\u4e1a\u7684\u4ee3\u7801\u5bf9\u6bd4\u5de5\u5177\u8f6f\u4ef6\uff08\u6bd4\u5982 Beyond Compare\uff09\uff0c\u4ee5\u53ca\u96c6\u6210\u5230 IDE Git \u5ba2\u6237\u7aef\u4e2d\u7684\u4ee3\u7801\u5bf9\u6bd4\u5de5\u5177\uff08\u6bd4\u5982 IntelliJ IDEA \u7b49\uff09\u3002IntelliJ IDEA\u5728\u5927\u90e8\u5206\u9879\u76ee\u4e2d\u5b8c\u5168\u591f\u7528\uff0c\u800c\u4e14\u5728\u591a\u4eba\u53c2\u4e0e\u7684\u4ee3\u7801\u8bc4\u5ba1\u6d3b\u52a8\u4e2d\u6548\u7387\u4e5f\u6bd4\u8f83\u9ad8\u3002 \u4e13\u7528\u7684\u4ee3\u7801\u8bc4\u5ba1\u5de5\u5177\u3002\u8fd9\u7c7b\u5de5\u5177\u662f\u4e13\u95e8\u4e3a\u4ee3\u7801\u8bc4\u5ba1\u800c\u8bbe\u8ba1\u7684\uff0c\u6bd4\u5982 Gerrit\u3002Gerrit \u53ef\u4ee5\u5728\u7f51\u9875\u4e2d\u505a\u7c7b\u4f3c\u4e8e GitLab\u3001Github \u7684\u5de5\u4f5c\uff0c\u800c\u4e14\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u5de5\u4f5c\u6d41\u7ba1\u7406\u80fd\u529b\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4e8e\u975e\u5f00\u6e90\u9879\u76ee\uff0cGitLab\u4e0eIntelliJ IDEA\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u5de5\u5177\u7ec4\u5408\uff0c\u914d\u7f6e\u548c\u4f7f\u7528\u7b80\u5355\uff0c\u7ef4\u62a4\u6210\u672c\u4e5f\u6bd4\u8f83\u4f4e\u3002 2.2.3 \u4ee3\u7801\u8bc4\u5ba1\u7684\u6ce8\u610f\u4e8b\u9879 \u4e00\u822c\u6765\u8bf4\uff0c\u4ee3\u7801\u8bc4\u5ba1\u5bf9\u6280\u5de7\u7684\u8981\u6c42\u4e0d\u9ad8\uff0c\u6839\u636e\u56e2\u961f\u7684\u4e60\u60ef\u548c\u98ce\u683c\u5ba1\u6838\u5373\u53ef\u3002\u5386\u53f2\u4e0a\u53ef\u4ee5\u8ffd\u6eaf\u7684\u4ee3\u7801\u8bc4\u5ba1\u65b9\u6cd5\u6709 IBM\u516c\u53f8\u57281972\u5e74\u63d0\u51fa\u7684\u57f9\u6839\u6cd5\u3002\u57f9\u6839\u6cd5\u5c06\u4ee3\u7801\u8bc4\u5ba1\u7684\u53c2\u4e0e\u4eba\u5206\u4e3a\u4ee3\u7801\u4f5c\u8005\u3001\u5ba1\u67e5\u8005\u548c\u4e3b\u6301\u4eba\uff0c\u8fd9\u4e9b\u4eba\u5458\u7ec4\u6210\u8bc4\u5ba1\u59d4\u5458\u4f1a\u3002 \u57f9\u6839\u6cd5\u8981\u6c42\u5148\u7531\u4ee3\u7801\u4f5c\u8005\u8fdb\u884c\u4ee3\u7801\u53d9\u8ff0\uff0c\u7136\u540e\u7531\u5ba1\u67e5\u8005\u63d0\u51fa\u95ee\u9898\u3002\u5ba1\u67e5\u8005\u9700\u8981\u63d0\u524d\u9605\u8bfb\u4ee3\u7801\uff0c\u5e76\u51c6\u5907\u95ee\u9898\u3002\u7531\u4e8e\u57f9\u6839\u6cd5\u8bc4\u5ba1\u7684\u901f\u5ea6\u5b9e\u5728\u592a\u6162\uff0c\u91c7\u7528\u6b64\u65b9\u6cd5\u7684\u56e2\u961f\u5e76\u4e0d\u591a\u3002IBM \u8868\u793a\u4ed6\u4eec\u5728\u4e00\u4e9b\u5173\u952e\u7684\u6a21\u5757\u4e2d\u4f7f\u7528\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6700\u7ec8\u5e26\u6765\u7684\u6536\u76ca\u5e76\u4e0d\u4f4e\u3002\u636e\u7edf\u8ba1\uff0c\u7531\u4e8e\u51cf\u5c11\u4e86\u9879\u76ee\u540e\u671f\u4fee\u6539\u548c\u8fd4\u5de5\u7684\u65f6\u95f4\uff0c\u4ee3\u7801\u8bc4\u5ba1\u4f7f\u5f97\u9879\u76ee\u7684\u5f00\u53d1\u65f6\u95f4\u53cd\u800c\u63d0\u524d\u4e8630%\u3002 \u5bf9\u4e8e\u666e\u901a\u7684\u56e2\u961f\uff0c\u8fd8\u662f\u5efa\u8bae\u6839\u636e\u573a\u666f\u6765\u5236\u5b9a\u5408\u9002\u7684\u8bc4\u5ba1\u7b56\u7565\uff0c\u5728\u6210\u672c\u548c\u6536\u76ca\u4e4b\u95f4\u6743\u8861\u3002\u4e0b\u9762\u662f\u6839\u636e\u4e0d\u540c\u573a\u666f\u63d0\u51fa\u7684\u4ee3\u7801\u8bc4\u5ba1\u6ce8\u610f\u4e8b\u9879\u3002 1. \u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1 \u4e00\u822c\u6211\u4eec\u8ba8\u8bba\u5f97\u6bd4\u8f83\u591a\u7684\u662f\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\uff0c\u56e0\u4e3a\u9700\u8981\u5168\u5458\u53c2\u4e0e\uff0c\u65f6\u95f4\u53c8\u6bd4\u8f83\u6709\u9650\uff0c\u56e0\u6b64\u4e3b\u6301\u4eba\u8981\u6709\u8f83\u5f3a\u7684\u7ec4\u7ec7\u80fd\u529b\uff0c\u800c\u4e14\u4e3a\u4e86\u9ad8\u6548\u5730\u8fdb\u884c\u4ee3\u7801\u8bc4\u5ba1\uff0c\u56e2\u961f\u4e5f\u9700\u8981\u8fbe\u6210\u4e00\u4e9b\u5951\u7ea6\u3002 \uff081\uff09\u5c0f\u6b65\u63d0\u4ea4 \u56e2\u961f\u6210\u5458\u9700\u8981\u4fdd\u6301\u826f\u597d\u7684\u4ee3\u7801\u63d0\u4ea4\u4e60\u60ef\u2014\u2014\u5c0f\u6b65\u63d0\u4ea4\u4ee3\u7801\u3002\u6bcf\u5b8c\u6210\u4e00\u4e2a\u5c0f\u9636\u6bb5\u7684\u5f00\u53d1\u6216\u91cd\u6784\u5de5\u4f5c\u90fd\u9700\u8981\u63d0\u4ea4\u4e00\u6b21\u4ee3\u7801\uff0c\u5728\u907f\u514d\u66f4\u6539\u4e22\u5931\u7684\u540c\u65f6\u4e5f\u53ef\u4e3a\u66f4\u597d\u5730\u8bc4\u5ba1\u4ee3\u7801\u6253\u4e0b\u57fa\u7840\u3002\u6bcf\u4e00\u6b21\u7684\u63d0\u4ea4\u90fd\u9700\u8981\u4f7f\u7528\u6709\u610f\u4e49\u3001\u98ce\u683c\u4e00\u81f4\u7684\u6587\u672c\u63cf\u8ff0\uff0c\u4e5f\u9700\u8981\u9075\u5b88\u76f8\u5e94\u7684\u89c4\u5219\uff0c\u6bd4\u5982\u4f7f\u7528\u770b\u677f\u5361\u7247\u7ba1\u7406\u4efb\u52a1\u7684\u56e2\u961f\u4f1a\u6309\u7167\"# [\u5361\u53f7] [\u63cf\u8ff0]\"\u7684\u6a21\u5f0f\u63d0\u4ea4\u4ee3\u7801\u3002 \uff082\uff09\u63cf\u8ff0\u8981\u5177\u4f53 \u5728\u8fdb\u884c\u4ee3\u7801\u8bc4\u5ba1\u7684\u65f6\u5019\u907f\u514d\u4f7f\u7528\u8bf8\u5982\"\u8fd9\u4e2a\u5730\u65b9\u7684\u5b9e\u73b0\u4e0d\u4f18\u96c5\"\u8fd9\u7c7b\u4f3c\u662f\u800c\u975e\u7684\u7528\u8bed\uff0c\u5e94\u8be5\u4f7f\u7528\u66f4\u4e3a\u5177\u4f53\u7684\u8868\u8ff0\uff0c\u6bd4\u5982\"\u4f7f\u7528\u4e86\u592a\u591a\u7684if\u8bed\u53e5\uff0c\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u7b49\u8bbe\u8ba1\u6a21\u5f0f\u6539\u8fdb\u8bbe\u8ba1\"\u3002\u6b64\u5916\uff0c\u8fd8\u8981\u907f\u514d\u63d0\u51fa\u5e26\u6709\u4e2a\u4eba\u4e60\u60ef\u7684\u610f\u89c1\uff0c\u4f8b\u5982\"\u5e94\u8be5\u4f7f\u7528switch\u8bed\u53e5\u800c\u975e\u591a\u4e2aif\u8bed\u53e5\u201d\u7b49\u3002 \uff083\uff09\u53ca\u65f6\u4fee\u6539 \u4ee3\u7801\u8bc4\u5ba1\u8fc7\u7a0b\u4e2d\u63d0\u51fa\u7684\u95ee\u9898\uff0c\u9700\u8981\u4ee3\u7801\u4f5c\u8005\u81ea\u884c\u8bb0\u5f55\uff0c\u5e76\u4e14\u5c3d\u53ef\u80fd\u5728\u5f53\u5929\u5b8c\u6210\u4fee\u590d\u548c\u5904\u7406\u3002\u4e00\u4e9b\u96f6\u788e\u7684\u5c0f\u4e8b\u653e\u5230\u4ee5\u540e\u505a\u90fd\u662f\u4e0d\u73b0\u5b9e\u7684\u3002 \uff084\uff09\u4e13\u6ce8\u53c2\u4e0e \u5982\u679c\u662f\u7ebf\u4e0b\u8bc4\u5ba1\uff0c\u6700\u597d\u4f7f\u7528\u5927\u5c4f\u6216\u4e13\u95e8\u7684\u4f1a\u8bae\u5ba4\uff0c\u907f\u514d\u5927\u5bb6\u4e00\u8fb9\u8fdb\u884c\u4ee3\u7801\u8bc4\u5ba1\u4e00\u8fb9\u505a\u5176\u4ed6\u7684\u4e8b\u60c5\u3002\u5982\u679c\u662f\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u901a\u8fc7\u89c6\u9891\u4f1a\u8bae\u8bc4\u5ba1\uff0c\u5219\u5efa\u8bae\u6240\u6709\u4eba\u6253\u5f00\u6444\u50cf\u5934\uff0c\u4e3b\u6301\u4eba\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u4e3b\u6301\u6280\u5de7\uff0c\u6bd4\u5982\u4e0d\u5b9a\u65f6\u5bf9\u90e8\u5206\u53c2\u4e0e\u4eba\u5458\u70b9\u540d\uff0c\u5524\u8d77\u5927\u5bb6\u7684\u6ce8\u610f\u529b\u3002 \uff085\uff09\u805a\u7126\u5f53\u4e0b \u6700\u7cdf\u7cd5\u7684\u4ee3\u7801\u8bc4\u5ba1\u5c31\u662f\u7a81\u7136\u5c94\u5f00\u8bdd\u9898\uff0c\u8fdb\u884c\u6280\u672f\u65b9\u6848\u3001\u4e1a\u52a1\u65b9\u6848\u7684\u8ba8\u8bba\uff0c\u8fd9\u4f1a\u6d6a\u8d39\u5927\u5bb6\u7684\u65f6\u95f4\u3002\u5982\u679c\u8bdd\u9898\u88ab\u5c94\u5f00\uff0c\u90a3\u5c06\u4f1a\u662f\u4e00\u4e2a\u65e0\u5e95\u6d1e\uff0c\u5c31\u50cf\u300a\u7231\u4e3d\u4e1d\u68a6\u6e38\u4ed9\u5883\u300b\u4e2d\u5154\u5b50\u6d1e\u7684\u6545\u4e8b\uff08Rabbit Hole\uff09\u6240\u63cf\u8ff0\u7684\u4e00\u6837\u3002\u4ee3\u7801\u8bc4\u5ba1\u5e94\u8be5\u4e13\u6ce8\u4e8e\u5f53\u4e0b\u7684\u4ee3\u7801\u95ee\u9898\uff0c\u907f\u514d\u9677\u5165\u6280\u672f\u548c\u4e1a\u52a1\u7ec6\u8282\uff0c\u5982\u679c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u63d0\u51fa\u5728\u4e13\u95e8\u7684\u6280\u672f\u4f1a\u8bae\u4e2d\u8ba8\u8bba\u3002 \uff086\uff09\u63a7\u5236\u597d\u65f6\u95f4 \u4ee3\u7801\u8bc4\u5ba1\u4e2d\u6700\u96be\u7684\u5c31\u662f\u65f6\u95f4\u63a7\u5236\uff0c\u4e00\u822c\u4e00\u4e2a\u6b63\u5e38\u7684\u5f00\u53d1\u56e2\u961f\u6bcf\u5929\u6bcf\u4eba\u7684\u5de5\u4f5c\u91cf\u81f3\u5c11\u9700\u898110\u5206\u949f\u624d\u80fd\u63cf\u8ff0\u6e05\u695a\uff0c\u56e0\u6b64\uff0c\u9700\u8981\u7ed9\u6bcf\u4e2a\u4eba\u8bbe\u5b9a\u4e00\u4e2a\u65f6\u95f4\u7a97\u53e3\uff0c\u907f\u514d\u8d85\u65f6\u3002\u4e00\u822c\u6765\u8bf4\u53ef\u6839\u636e\u4eba\u6570\u8bbe\u5b9a\u65f6\u95f4\uff0c\u5982\u679c\u8d85\u65f6\u4e86\uff0c\u5c31\u7acb\u9a6c\u505c\u6b62\uff0c\u7b2c\u4e8c\u5929\u7ee7\u7eed\uff0c\u8fd9\u6837\u4f1a\u8d8a\u6765\u8d8a\u5feb\u3002 \uff087\uff09\u5206\u7ec4\u8bc4\u5ba1 \u5982\u679c\u56e2\u961f\u89c4\u6a21\u8fc7\u5927\uff0c\u65e0\u8bba\u5982\u4f55\u4e5f\u65e0\u6cd5\u57281\u4e2a\u5c0f\u65f6\u5185\u5b8c\u6210\u8bc4\u5ba1\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u5206\u7ec4\u3002\u4e3a\u4e86\u8ba9\u6240\u6709\u7684\u5f00\u53d1\u8005\u90fd\u80fd\u4e86\u89e3\u5168\u5c40\uff0c\u4ee5\u53ca\u4fdd\u6301\u77e5\u8bc6\u4f20\u9012\uff0c\u53ef\u4ee5\u6309\u5468\u3001\u8fed\u4ee3\u9891\u7387\u7b49\u91cd\u65b0\u5206\u7ec4\u3002 \uff088\uff09\u77e5\u8bc6\u6574\u7406 \u91cd\u590d\u51fa\u73b0\u7684\u95ee\u9898\u4e0d\u5e94\u8be5\u88ab\u91cd\u590d\u63d0\u51fa\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5e38\u89c1\u7684\u95ee\u9898\uff0c\u56e2\u961f\u53ef\u4ee5\u6574\u7406\u4e00\u4efd\u8bc4\u5ba1\u6e05\u5355\uff0c\u5f53\u6709\u65b0\u4eba\u53c2\u4e0e\u9879\u76ee\u65f6\uff0c\u8bc4\u5ba1\u6e05\u5355\u6709\u5229\u4e8e\u5176\u66f4\u5feb\u5730\u9002\u5e94\u56e2\u961f\u98ce\u683c\uff0c\u4e5f\u53ef\u4ee5\u964d\u4f4e\u53d1\u73b0\u95ee\u9898\u7684\u6210\u672c\u548c\u5076\u7136\u6027\uff0c\u540c\u65f6\u5f00\u53d1\u8005\u5728\u63d0\u4ea4\u4ee3\u7801\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u53c2\u8003\u6e05\u5355\u81ea\u5df1\u5148\u8bc4\u5ba1\u4e00\u904d\u3002 2. \u53d1\u5e03\u524d\u7684\u4ee3\u7801\u8bc4\u5ba1 \u53d1\u5e03\u524d\u7684\u4ee3\u7801\u8bc4\u5ba1\u4e0d\u7528\u5168\u5458\u53c2\u4e0e\uff0c\u53ef\u4ee5\u7531\u6280\u672f\u7ecf\u7406\u6311\u9009\u51e0\u4e2a\u5173\u952e\u4eba\u5458\u53c2\u52a0\uff0c\u5982\u679c\u9047\u5230\u65e0\u6cd5\u7406\u89e3\u7684\u90e8\u5206\uff0c\u53ef\u4ee5\u9080\u8bf7\u63d0\u4ea4\u4eba\u6765\u8fdb\u4e00\u6b65\u89e3\u91ca\u3002\u53d1\u5e03\u524d\u7684\u4ee3\u7801\u8bc4\u5ba1\u7740\u91cd\u4e8e\u5904\u7406\u5bf9\u7ebf\u4e0a\u5177\u6709\u7834\u574f\u6027\u7684\u4fee\u6539\uff0c\u4ece\u800c\u907f\u514d\u4e00\u4e9b\u5371\u5bb3\u3002 \u6b64\u5916\uff0c\u5b83\u8fd8\u53ef\u4ee5\u53d1\u73b0\u56e0\u7ba1\u7406\u95ee\u9898\u5e26\u6765\u7684\u7ebf\u4e0a\u6e38\u79bb\u53d8\u66f4\uff0c\u6bd4\u5982\u524d\u4e00\u4e2a\u8fed\u4ee3\u8fdb\u884c\u4e86Hotfix\uff0c\u4f46\u662f\u6ca1\u6709\u53ca\u65f6\u5408\u5e76\u5230\u4e3b\u5e72\u4e0a\uff0c\u5bfc\u81f4\u751f\u4ea7\u4e0a\u6709\u76f8\u5173\u4ee3\u7801\u4f46\u662f\u5f53\u524d\u53d1\u5e03\u7684\u7248\u672c\u4e2d\u5374\u6ca1\u6709\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u53d1\u5e03\u5b8c\u6210\u540e\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002 3. Hotfix \u4ee3\u7801\u8bc4\u5ba1 Hotfix\u4ee3\u7801\u8bc4\u5ba1\u6bd4\u8f83\u7b80\u5355\uff0c\u4e00\u822c\u5728\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u4e2d\u5bf9Pull Request\u8fdb\u884c\u8bbe\u5b9a\u5373\u53ef\uff0c\u6bd4\u5982\uff0c\u5fc5\u987b\u6709\u591a\u5c11\u4eba\u901a\u8fc7\u624d\u5141\u8bb8\u5408\u5e76\u7b49\u3002\u6b64\u5916\uff0c\u901a\u8fc7Pull Request\u4e5f\u53ef\u4ee5\u8ffd\u6eafHotfix\u7684\u53d8\u66f4\u8bb0\u5f55\u3002 \u5728\u4e00\u4e9b\u7ba1\u7406\u4e25\u683c\u7684\u516c\u53f8\u4e2d\uff0cHotfix\u8fd8\u9700\u8981\u7ecf\u8fc7\u591a\u7ea7\u5ba1\u6838\u624d\u53d1\u5e03\uff0c\u6bd5\u7adf\u5bf9\u4e8eHotfix\u6765\u8bf4\uff0c\u5168\u91cf\u6267\u884c\u624b\u52a8\u7684\u56de\u5f52\u6d4b\u8bd5\u4e0d\u592a\u73b0\u5b9e\uff0c\u6240\u4ee5\u6298\u4e2d\u7684\u65b9\u6cd5\u662f\u5bf9\u53d8\u66f4\u7684\u4ee3\u7801\u8fdb\u884c\u4e25\u683c\u8bc4\u5ba1\u3002 2.2.4 Java \u4ee3\u7801\u8bc4\u5ba1\u6e05\u5355 \u8fd9\u91cc\u4e3aJava\u5f00\u53d1\u8005\u6574\u7406\u4e86\u4e00\u4efd\u57fa\u672c\u7684\u8bc4\u5ba1\u6e05\u5355\uff0c\u4e3a\u4e86\u907f\u514d\u6e05\u5355\u5197\u957f\uff0c\u91cc\u9762\u4e0d\u5305\u542b\u9759\u6001\u626b\u63cf\u80fd\u53d1\u73b0\u7684\u95ee\u9898\uff0c\u5177\u4f53\u5982\u4e0b\uff1a \u6709\u6ca1\u6709IntelliJ IDEA \u7684\u9ec4\u8272\u8b66\u544a\u3002\u82e5\u5b58\u5728\u9ec4\u8272\u8b66\u544a\uff0c\u5f80\u5f80\u610f\u5473\u7740\u4ee3\u7801\u53ef\u4ee5\u88ab\u4f18\u5316\u6216\u8005\u5b58\u5728\u6f5c\u5728\u7684\u95ee\u9898\u3002 \u6570\u636e\u7684\u8f93\u5165\u662f\u5426\u8fdb\u884c\u4e86\u9a8c\u8bc1\uff0c\u6bd4\u5982\u7c7b\u578b\u3001\u957f\u5ea6\u3001\u683c\u5f0f\u3001\u8303\u56f4\u7b49\u3002 \u63d0\u4f9b\u7684 API \u662f\u5426\u505a\u4e86\u9274\u6743\uff0c\u5c24\u5176\u662f\u6570\u636e\u7684\u9274\u6743\u3002 \u9700\u8981\u914d\u7f6e\u7684\u503c\u662f\u5426\u662f\u786c\u7f16\u7801\uff0c\u9700\u8981\u4f7f\u7528\u5e38\u91cf\u6216\u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u914d\u7f6e\u3002 \u6ce8\u91ca\u548c\u65b9\u6cd5\u7684\u547d\u540d\u662f\u5426\u4e0e\u4ee3\u7801\u8bed\u4e49\u4e00\u81f4\u5e76\u5bb9\u6613\u7406\u89e3\u3002 \u662f\u5426\u4f7f\u7528\u4e86\u8db3\u591f\u4fbf\u6377\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982\u5e93\u51fd\u6570\u5df2\u63d0\u4f9b\u7684\u903b\u8f91\u5c31\u4e0d\u9700\u8981\u81ea\u5df1\u518d\u5199\u4e00\u904d\u4e86\u3002 \u662f\u5426\u4f7f\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982\u5408\u7406\u9009\u62e9 HashMap\u3001ArrayList \u7b49\u3002 \u662f\u5426\u505a\u4e86\u5408\u7406\u7684\u5f02\u5e38\u5904\u7406\u3002 API \u7684\u8bbe\u8ba1\u662f\u5426\u7b26\u5408\u89c4\u8303\u548c\u8bed\u4e49\u3002 \u662f\u5426\u6709\u8db3\u591f\u591a\u4e14\u5408\u7406\u7684\u6d4b\u8bd5\u3002 2.3 Git \u5de5\u4f5c\u6d41\u548c\u4fdd\u62a4 Git\u4f5c\u4e3a\u4e00\u6b3e\u51fa\u8272\u7684\u5206\u5e03\u5f0f\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u5de5\u5177\uff0c\u7531Linux\u7684\u4f5c\u8005Linus\u5f00\u53d1\uff0c\u76ee\u524d\uff0c\u5b83\u5df2\u7ecf\u6210\u4e3a\u6211\u4eec\u65e5\u5e38\u5f00\u53d1\u79bb\u4e0d\u5f00\u7684\u5de5\u5177\u3002\u7528\u597dGit\uff0c\u5e76\u4e14\u91c7\u7528\u9002\u5f53\u7684\u5de5\u4f5c\u6d41\uff0c\u53ef\u4ee5\u8ba9\u4ee3\u7801\u8bc4\u5ba1\u5de5\u4f5c\u4e8b\u534a\u529f\u500d\u3002 2.3.1 Git \u5de5\u4f5c\u6d41 \u5728\u56e2\u961f\u534f\u4f5c\u4e2d\uff0c\u4ee3\u7801\u8bc4\u5ba1\u7684\u65b9\u5f0f\u548c\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u6709\u4e00\u5b9a\u5173\u7cfb\uff0c\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u7684\u5de5\u4f5c\u6d41\u548c\u5206\u652f\u7b56\u7565\u662f\u4e00\u4e2a\u8ba8\u8bba\u6bd4\u8f83\u591a\u7684\u8bdd\u9898\u3002Git\u5de5\u4f5c\u6d41\u8bf4\u660e\u4e86\u56e2\u961f\u5982\u4f55\u4f7f\u7528Git\u5206\u652f\uff0c\u5e76\u6309\u7167\u4e00\u5b9a\u7ea6\u5b9a\u8fdb\u884c\u534f\u4f5c\u3002Git\u5de5\u4f5c\u6d41\u6709\u5f88\u591a\u6d3e\u522b\uff0c\u6bd4\u5982Git Flow\u3001GitHub Flow\u3001GitLab Flow\u7b49\u3002 Git Flow\uff1a\u9879\u76ee\u5b58\u5728\u4e24\u4e2a\u957f\u671f\u5206\u652f\uff0c\u5373\u4e00\u4e2a\u4e3b\u5e72\u5206\u652f\uff0c\u4e00\u4e2a\u5f00\u53d1\u5206\u652f\uff0c\u5f00\u53d1\u8005\u4e00\u8d77\u5de5\u4f5c\u5728\u5f00\u53d1\u5206\u652f\u4e2d\uff0c\u53d1\u5e03\u65f6\u5408\u5e76\u5230\u4e3b\u5e72\u5206\u652f\u4e2d\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u77ed\u671f\u5b58\u5728\u7684\u5206\u652f\uff0c\u6bd4\u5982\u7279\u6027\u5206\u652f\u3001\u9884\u53d1\u5206\u652f\u7b49\u3002 GitHub Flow\uff1a\u9879\u76ee\u4ee5\u4e00\u4e2a\u4e3b\u5e72\u5206\u652f\u4f5c\u4e3a\u957f\u671f\u5206\u652f\uff0c\u6bcf\u4e2a\u5f00\u53d1\u8005\u5728\u81ea\u5df1\u7684\u5f00\u53d1\u5206\u652f\u4e2d\u5de5\u4f5c\uff0c\u7136\u540e\u901a\u8fc7 Pull Request \u5408\u5e76\u5230\u4e3b\u5e72\u5206\u652f\u3002 GitLab Flow\uff1a \u9879\u76ee\u9075\u5b88\u4e0a\u6e38\u4f18\u5148\u539f\u5219\uff0c\u53ea\u4ee5\u4e00\u4e2a\u4e3b\u5206\u652f\u4f5c\u4e3a\u957f\u671f\u5206\u652f\u3002\u5f00\u53d1\u8005\u5728\u4e3b\u5e72\u5206\u652f\u4e0a\u5f00\u53d1\uff0c\u5f85\u6d4b\u8bd5\u7a33\u5b9a\u540e\uff0c\u4f7f\u7528\u53d1\u5e03\u5206\u652f\u53d1\u5e03\u3002\u540e\u7eed\u7684 Hotfix \u90fd\u9700\u8981\u5408\u5e76\u5230\u53d1\u5e03\u5206\u652f\u548c\u4e3b\u5206\u652f\u4e0a\u3002 \u4ece\u5b9e\u7528\u548c\u7ecf\u6d4e\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u4e2a\u4eba\u6bd4\u8f83\u63a8\u8350GitLab Flow\uff0c\u5f53\u7136\uff0c\u5177\u4f53\u5e94\u8be5\u89c6\u56e2\u961f\u60c5\u51b5\u800c\u5b9a\uff0c\u6bd4\u5982\u56e2\u961f\u4eba\u6570\u3001\u662f\u5426\u9700\u8981\u548c\u5176\u4ed6\u56e2\u961f\u8054\u8c03\uff08\u8fd9\u662f\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u56e0\u7d20\uff0c\u82e5\u4f7f\u7528\u5206\u652f\u5f00\u53d1\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff09\u7b49\u3002 \u5982\u56fe2-10\u6240\u793a\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u4f7f\u7528\u654f\u6377\u5de5\u4f5c\u65b9\u5f0f\u7684\u56e2\u961f\u6765\u8bf4\uff0c\u6bd4\u8f83\u597d\u7684\u5206\u652f\u7b56\u7565\u53ef\u4ee5\u7528\u4e00\u53e5\u8bdd\u6982\u62ec\uff1a \u4e3b\u5e72\u5f00\u53d1\uff0c\u5206\u652f\u53d1\u5e03 \u3002\u8fd9\u79cd\u7b56\u7565\u5c24\u5176\u9002\u5408\u4e00\u4e2a\u8fed\u4ee3\u4e00\u4e2a\u7248\u672c\u7684\u5f00\u53d1\u8282\u594f\uff0c\u4f46\u5982\u679c\u91c7\u7528\u7684\u662f\u6301\u7eed\u53d1\u5e03\u65b9\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u79cd\u65b9\u5f0f\u6ca1\u6709\u56fa\u5b9a\u7684\u7248\u672c\u5468\u671f\uff0c\u6240\u4ee5\u6b64\u7b56\u7565\u672a\u5fc5\u5408\u9002\u3002 \u56fe 2-10 \u4e00\u79cd\u5206\u652f\u7b56\u7565 \"\u4e3b\u5e72\u5f00\u53d1\uff0c\u5206\u652f\u53d1\u5e03\"\u7684\u5206\u652f\u7b56\u7565\u6709\u4ee5\u4e0b\u51e0\u4e2a\u89c4\u5219\u9700\u8981\u56e2\u961f\u9075\u5b88\uff1a \u56e2\u961f\u5e94\u4f7f\u7528 Git rebase \u547d\u4ee4\u800c\u4e0d\u662fmerge \u547d\u4ee4\u62c9\u53d6\u4ee3\u7801\uff0c\u4ee5\u907f\u514d\u63d0\u4ea4\u65e5\u5fd7\u6df7\u4e71\u3002 \u56e2\u961f\u5728\u4e3b\u5e72\u5f00\u53d1\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u7ed3\u675f\u7684\u524d\u51e0\u5929\u521b\u5efaRelease\u5206\u652f\uff0c\u6bcf\u4e00\u6b21\u53d1\u5e03\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u5206\u652f\uff0c\u5e94\u4f7f\u7528\u8bed\u4e49\u5316\u7248\u672c\u53f7\uff08Semantic Versioning\uff09[^1]\u6765\u547d\u540d\uff0c\u6bd4\u5982v2.1\u5206\u652f\u3002\u521b\u5efaRelease\u5206\u652f\u65f6\u53ef\u4ee5\u540c\u6b65\u521b\u5efa\u6807\u7b7e\uff0c\u4ee5\u4fbf\u65e9\u671f\u53d1\u5e03\u7684Release\u5206\u652f\u53ef\u4ee5\u88ab\u5220\u9664\u3002 Release\u5206\u652f\u53ef\u4ee5\u90e8\u7f72\u5230\u9884\u53d1\u73af\u5883\u4e2d\uff0c\u4e3b\u5e72\u53ea\u80fd\u90e8\u7f72\u5230\u5f00\u53d1\u548c\u6d4b\u8bd5\u73af\u5883\u3002 \u5728\u5c06Release\u5206\u652f\u53d1\u5e03\u5230\u4ea7\u54c1\u73af\u5883\u4e4b\u524d\uff0c\u8981\u57fa\u4e8e\u4e0a\u4e00\u6b21\u7684Release\u5206\u652f\u505a\u53d1\u5e03\u524d\u7684\u4ee3\u7801\u8bc4\u5ba1\u3002 \u5982\u679c\u9884\u53d1\u73af\u5883\u51fa\u73b0\u95ee\u9898\u9700\u8981\u4fee\u590d\uff0c\u4ee5Release\u5206\u652f\u4e3a\u57fa\u7ebf\u521b\u5efaHotfix\u5206\u652f\uff0c\u5e76\u63d0\u4ea4Pull Request\uff0c\u56e2\u961f\u6279\u51c6\u540e\u53ef\u4ee5\u5148\u90e8\u7f72\u5230\u9884\u53d1\u73af\u5883\u4e2d\uff0c\u518d\u90e8\u7f72\u5230\u4ea7\u54c1\u73af\u5883\u4e2d\u3002 \u90e8\u7f72\u5230\u4ea7\u54c1\u73af\u5883\u540e\uff0c\u9700\u8981\u5c06Release\u5206\u652f\u7684\u53d8\u66f4\u540c\u6b65\u5230\u4e3b\u5e72\uff0c\u907f\u514d\u4e0b\u6b21\u4e0a\u7ebf\u4e22\u5931\u66f4\u65b0\u3002 2.3.2 Git Hooks \u9759\u6001\u4ee3\u7801\u5206\u6790\u548c\u4ee3\u7801\u8bc4\u5ba1\u9700\u8981\u4e0e\u4ee3\u7801\u7684\u5206\u652f\u63a7\u5236\u76f8\u7ed3\u5408\u624d\u80fd\u8d77\u5230\u597d\u7684\u6548\u679c\uff0c\u5982\u679cCheckstyle\u7b49\u68c0\u67e5\u6ca1\u6709\u901a\u8fc7\uff0c\u4ee3\u7801\u4e0d\u5e94\u88ab\u63a8\u9001\u5230Git\u670d\u52a1\u5668\u4e0a\u3002 Git Hooks\u662f\u7531Shell\u811a\u672c\u6784\u6210\u7684\u3002Hook\uff08\u94a9\u5b50\uff09\u8fd9\u4e2a\u6982\u5ff5\u5728\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e26\u6709\u63d2\u4ef6\u7cfb\u7edf\u7684\u8f6f\u4ef6\u4e2d\u5e7f\u6cdb\u5b58\u5728\uff0c\u8fd9\u91cc\u5c06\u5176\u7528\u4e8eGit\u7684\u67d0\u4e2a\u751f\u547d\u5468\u671f\u3002\u6240\u6709\u9ed8\u8ba4\u6709\u6548\u7684\u94a9\u5b50\u90fd\u53ef\u4ee5\u5728.git/hooks/\u76ee\u5f55\u4e2d\u627e\u5230\u3002\u94a9\u5b50\u7528\u4e8e\u63a7\u5236Git\u5de5\u4f5c\u7684\u6d41\u7a0b\u65f6\uff0c\u53c8\u5206\u4e3a\u5ba2\u6237\u7aef\u94a9\u5b50\u548c\u670d\u52a1\u5668\u94a9\u5b50\uff0c\u5ba2\u6237\u7aef\u94a9\u5b50\u4f1a\u5728\u6267\u884cpush\u547d\u4ee4\u4e4b\u524d\u8fd0\u884c\u5728\u5f00\u53d1\u8005\u7684\u672c\u5730\u673a\u5668\u4e0a\uff0c\u670d\u52a1\u5668\u94a9\u5b50\u4f1a\u5728\u63a8\u9001\u540e\u8fd0\u884c\u5728Git\u670d\u52a1\u5668\u4e0a\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u94a9\u5b50\u3002\u5ba2\u6237\u7aef\u94a9\u5b50\uff1a pre-commit prepare-commit-msg commit-msg post-commit \u670d\u52a1\u5668\u7aef\u94a9\u5b50\uff1a pre-receive post-receive update \u4e00\u822c\u6211\u4eec\u4f1a\u901a\u8fc7\u914d\u7f6epre-commit\u5230\u9879\u76ee\u4e2d\uff0c\u6765\u4fc3\u4f7f\u56e2\u961f\u6210\u5458\u5728\u63d0\u4ea4\u4ee3\u7801\u65f6\u8fdb\u884c\u4e00\u4e9b\u68c0\u67e5\uff0c\u6240\u8fdb\u884c\u7684\u68c0\u67e5\u5305\u62ec\uff1a \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u3002 \u8fd0\u884c\u4ee3\u7801\u68c0\u67e5\uff08\u6bd4\u5982 Checkstyle\uff09\u3002 \u63d0\u4ea4\u7684\u4fe1\u606f\u68c0\u67e5\u3002 \u5982\u679c\u6709Git\u670d\u52a1\u5668\u7684\u914d\u7f6e\u6743\u9650\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6epre-receive\u5728\u670d\u52a1\u5668\u7aef\u8fd0\u884c\u68c0\u67e5\u3002\u672c\u5730\u68c0\u67e5\u65e0\u7591\u662f\u6700\u9ad8\u6548\u4e14\u65b9\u4fbf\u7684\u624b\u6bb5\u4e4b\u4e00\uff0c\u4f46\u662f\u7ec4\u7ec7\u4e00\u7fa4\u4eba\u6765\u624b\u52a8\u5b89\u88c5\u8fd9\u7c7b\u811a\u672c\u660e\u663e\u662f\u4e00\u4ef6\u8d39\u529b\u4e0d\u8ba8\u597d\u7684\u4e8b\u3002\u4e3a\u4e86\u9632\u6b62\u56e2\u961f\u6210\u5458\u5fd8\u8bb0\u8bbe\u7f6e\u672c\u5730\u94a9\u5b50\u811a\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6784\u5efa\u5de5\u5177\u4e2d\u6dfb\u52a0\u5b89\u88c5\u94a9\u5b50\u811a\u672c\u7684\u4efb\u52a1\uff0c\u8ba9\u5f00\u53d1\u8005\u5728\u7b2c\u4e00\u6b21\u542f\u52a8\u9879\u76ee\u65f6\u81ea\u52a8\u6dfb\u52a0\u76f8\u5173\u94a9\u5b50\u3002 \u7531\u4e8e\u51e0\u4e4e\u6240\u6709\u7684Maven\u4f7f\u7528\u8005\u90fd\u4f1a\u6267\u884cmvn install \u547d\u4ee4\u6765\u521d\u59cb\u5316\u9879\u76ee\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u63d2\u4ef6 git-build-hook\u6765\u5b89\u88c5Hook\u811a\u672c\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <build> <plugins> <plugin> <groupId>com.rudikershaw.gitbuildhook</groupId> <artifactId>git-build-hook-maven-plugin</artifactId> <version>3.1.0</version> <configuration> <gitConfig> <!-- \u6307\u5b9a\u4ee3\u7801\u5e93\u4e2d\u7684 Hook \u811a\u672c\u4f4d\u7f6e\uff0c\u63d2\u4ef6\u4f1a\u5e2e\u52a9\u5b89\u88c5\u5230 gitconfig \u4e2d --> <core.hooksPath>hooks-directory/</core.hooksPath> <custom.configuration>true</custom.configuration> </gitConfig> </configuration> <executions> <execution> <goals> <!-- \u914d\u7f6e\u6267\u884c Hook \u5b89\u88c5\u7684\u751f\u547d\u4e2d\u5468\u671f --> <goal>install</goal> </goals> </execution> </executions> </plugin> </plugins> </build> \u5c06\u4e0a\u9762\u7684\u914d\u7f6e\u653e\u7f6e\u5230\u76f8\u5e94\u7684Pom\u6587\u4ef6\u4e2d\uff0c\u56e2\u961f\u6210\u5458\u6267\u884c\u4e86mvn install\u547d\u4ee4\u540e\uff0c\u94a9\u5b50\u811a\u672c\u5c31\u4f1a\u81ea\u52a8\u5b89\u88c5\u3002\u5982\u679c\u4e0b\u4e00\u6b21\u56e2\u961f\u6210\u5458\u4f7f\u7528Git\u76f8\u5e94\u547d\u4ee4\u63d0\u4ea4\u548c\u63a8\u9001\u4ee3\u7801\uff0c\u5c31\u4f1a\u89e6\u53d1\u76f8\u5e94\u7684\u94a9\u5b50\u811a\u672c\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u89e6\u53d1\u94a9\u5b50\u811a\u672c\u7684\u793a\u4f8b\uff0c\u628a\u8fd9\u4e2a\u6587\u4ef6\u4fdd\u5b58\u4e3apre-commit\u5e76\u653e\u5230hooks-directory \u76ee\u5f55\u4e2d\uff0c\u9879\u76ee\u521d\u59cb\u5316\u540e\uff0c\u5728\u63d0\u4ea4\u4ee3\u7801\u65f6\u6b64\u811a\u672c\u5c31\u4f1a\u88ab\u6267\u884c\u3002 #!/bin/sh # \u9700\u8981\u8fd0\u884c\u7684\u547d\u4ee4 mvn clean build # \u83b7\u53d6\u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c RESULT=$? # \u4f7f\u7528\u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c\u6765\u9000\u51fa\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u4e2d\u65ad\u6784\u5efa exit $RESULT Gradle\u53ef\u4ee5\u66f4\u7075\u6d3b\u5730\u7f16\u5199\u3001\u6784\u5efa\u811a\u672c\u548c\u4efb\u52a1\uff0c\u4e0b\u9762\u662fJava Gradle\u7684\u4e00\u4e2apre-commit\u811a\u672c\u793a\u4f8b\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e2d\u6dfb\u52a0pre-commit\u6587\u4ef6\uff0c\u901a\u8fc7\u914d\u7f6eGradle\u811a\u672c\u53ef\u4ee5\u4f7f\u9879\u76ee\u521d\u59cb\u5316\u65f6\u81ea\u52a8\u5b89\u88c5\u8be5\u94a9\u5b50\u3002 task installGitHooks(type: Copy) { from new File(rootProject.rootDir, 'pre-commit') into { new File(rootProject.rootDir, '.git/hooks') } fileMode 0755 } build.dependsOn installGitHooks 2.3.3 \u5206\u652f\u4fdd\u62a4 \u5728\u6ca1\u6709Pull Request\u548c\u4ee3\u7801\u8bc4\u5ba1\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5e94\u8be5\u628a\u4ee3\u7801\u76f4\u63a5\u63a8\u9001\u5230Release\u5206\u652f\u3002\u56e0\u4e3aGit\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u6709\u5206\u652f\u4fdd\u62a4\u529f\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u57fa\u4e8e\u524d\u9762\u7684\u5206\u652f\u7b56\u7565\u8bbe\u5b9a\u51e0\u4e2a\u7b80\u5355\u7684\u89c4\u5219\u3002 \u53d7\u4fdd\u62a4\u7684\u5206\u652f\u5747\u4e0d\u53ef\u5220\u9664\u3001\u5f3a\u5236\u63a8\u9001\uff0c\u907f\u514d\u4ee3\u7801\u5e93\u53d7\u635f\u3002 Release\u5206\u652f\u4e0d\u63a5\u53d7\u76f4\u63a5\u63a8\u9001\uff0c\u5fc5\u987b\u4f7f\u7528Pull Request\u7684\u65b9\u5f0f\u63d0\u4ea4\u8865\u4e01\u5408\u5e76\uff0c\u5e76\u9700\u8981\u57282\u4eba\u4ee5\u4e0a\u7684\u56e2\u961f\u6210\u5458\u6279\u51c6\u540e\u624d\u80fd\u5408\u5e76\u3002 \u5982\u679c\u6761\u4ef6\u5141\u8bb8\uff0c\u5408\u5e76\u5230Release\u5206\u652f\u7684\u4e34\u65f6\u5206\u652f\u53ef\u4ee5\u81ea\u52a8\u5220\u9664\u3002 \u56fe2-11\u662fGitLab\u7684\u5206\u652f\u4fdd\u62a4\u754c\u9762\uff0c\u914d\u7f6e\u597d\u5206\u652f\u4fdd\u62a4\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u907f\u514d\u56e0\u4e3a\u8bef\u64cd\u4f5c\u6216\u8005\u6076\u610f\u64cd\u4f5c\u5bfc\u81f4\u56e2\u961f\u7684\u4ee3\u7801\u5e93\u4e22\u5931\u3002 \u56fe 2-11 GitLab \u7684\u5206\u652f\u4fdd\u62a4\u8bbe\u7f6e 2.4 \u5c0f\u7ed3 \u672c\u7ae0\u4ecb\u7ecd\u4e86\u4ee3\u7801\u8bc4\u5ba1\u7684\u51e0\u79cd\u5f62\u5f0f\uff0c\u5305\u62ec\u9759\u6001\u4ee3\u7801\u5206\u6790\u548c\u4eba\u5de5\u4ee3\u7801\u8bc4\u5ba1\u3002\u57fa\u4e8e\u9759\u6001\u4ee3\u7801\u5206\u6790\u7684\u5404\u79cd\u5de5\u5177\uff0c\u53ef\u4ee5\u4f4e\u6210\u672c\u5730\u63d0\u9ad8\u9759\u6001\u4ee3\u7801\u5206\u6790\u7684\u80fd\u529b\u548c\u6548\u679c\u3002 \u4e3a\u4e86\u5f25\u8865\u9759\u6001\u4ee3\u7801\u5206\u6790\u7684\u4e0d\u8db3\uff0c\u53ef\u4ee5\u6839\u636e\u573a\u666f\u5bf9\u4ee3\u7801\u8fdb\u884c\u8bc4\u5ba1\uff0c\u8bc4\u5ba1\u4e5f\u662f\u56e2\u961f\u6574\u4f53\u5b66\u4e60\u7684\u5951\u673a\u3002\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u3001\u4e92\u76f8\u5b66\u4e60\u3001\u77e5\u8bc6\u5171\u4eab\u662f\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u7684\u52a8\u529b\uff0c\u4fdd\u6301\u8282\u594f\u611f\u548c\u575a\u6301\u662f\u4ece\u4e2d\u83b7\u76ca\u7684\u5fc5\u8981\u6761\u4ef6\u3002 \u6700\u540e\uff0c\u4e3a\u4e86\u66f4\u9ad8\u6548\u5730\u5b9e\u73b0\u9759\u6001\u4ee3\u7801\u5206\u6790\u548c\u4ee3\u7801\u8bc4\u5ba1\uff0c\u6211\u4eec\u9700\u8981\u57fa\u4e8e\u9002\u5408\u56e2\u961f\u7684\u7248\u672c\u7ba1\u7406\u5de5\u4f5c\u6d41\u6765\u5b9e\u73b0\u66f4\u597d\u5730\u56e2\u961f\u534f\u4f5c\u3002\u4e3b\u6d41\u7684\u7248\u672c\u7ba1\u7406\u65b9\u5f0f\u6709Git Flow\u3001GitHub Flow\u3001GitLab Flow \u7b49\uff0c\u5177\u4f53\u9700\u8981\u6839\u636e\u4ea7\u54c1\u7c7b\u578b\u548c\u89c4\u6a21\u8fdb\u884c\u9009\u62e9\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u5236\u9002\u5408\u81ea\u5df1\u7684\u7248\u672c\u7ba1\u7406\u5de5\u4f5c\u6d41\u3002\u6b64\u5916\uff0c\u901a\u8fc7Git Hooks\u548c\u5206\u652f\u4fdd\u62a4\u53ef\u4ee5\u5145\u5206\u5730\u6316\u6398Git\u7684\u6f5c\u529b\uff0c\u8ba9\u56e2\u961f\u534f\u4f5c\u66f4\u5b89\u5168\u548c\u6d41\u7545\u3002 [^1]: \u53c2\u8003\u7f51\u7ad9 https://semver.org/","title":"\u7b2c 2 \u7ae0 \u4ee3\u7801\u8bc4\u5ba1"},{"location":"02-code-review/#2","text":"\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u9664\u4e86\u53ef\u4ee5\u4ece\u529f\u80fd\u89d2\u5ea6\u53d1\u73b0\u95ee\u9898\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u68c0\u89c6\u53d1\u73b0\u4e00\u4e9b\u663e\u800c\u6613\u89c1\u7684\u95ee\u9898\uff0c\u505a\u597d\u8fd9\u90e8\u5206\u5de5\u4f5c\u5e26\u6765\u7684\u6536\u76ca\u751a\u81f3\u6bd4\u6d4b\u8bd5\u4eba\u5458\u624b\u52a8\u6d4b\u8bd5\u8fd8\u9ad8\u3002 \u5728\u5b9e\u8df5\u4e2d\uff0c\u5bf9\u4ee3\u7801\u8fdb\u884c\u8bc4\u5ba1\u53ef\u4ee5\u4ece\u5982\u4e0b\u4e09\u4e2a\u5c42\u9762\u628a\u63a7\uff1a \u9759\u6001\u4ee3\u7801\u5206\u6790\u3002 \u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u3002 \u4ee3\u7801\u5408\u5165\u8bf7\u6c42\u3002 \u9759\u6001\u4ee3\u7801\u5206\u6790 \u662f\u6307\u5728\u4ee3\u7801\u63d0\u4ea4\u65f6\u4f7f\u7528\u5de5\u5177\u81ea\u52a8\u626b\u63cf\uff0c\u6216\u8005\u5728\u6d41\u6c34\u7ebf\u4e2d\u8ba9\u6784\u5efa\u670d\u52a1\u5668\u4ee3\u4e3a\u626b\u63cf\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5927\u7684\u516c\u53f8\u4f1a\u6709\u4e13\u95e8\u7684\u90e8\u95e8\u91c7\u8d2d\u5404\u79cd\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4ee3\u7801\u98ce\u683c\u3001\u6f5c\u5728\u7684\u7f3a\u9677\u3001\u5408\u89c4\u548c\u5b89\u5168\u7b49\u65b9\u9762\u7cfb\u7edf\u5730\u68c0\u67e5\u4ee3\u7801\u4e2d\u5b58\u5728\u7684\u95ee\u9898\u3002\u626b\u63cf\u4e0d\u5408\u683c\u7684\u4ee3\u7801\u4e0d\u4e88\u53d1\u5e03\uff0c\u907f\u514d\u4e3a\u4ea7\u54c1\u5e26\u6765\u6f5c\u5728\u7684\u98ce\u9669\u3002 \u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1 \u662f\u6307\u56e2\u961f\u6bcf\u65e5\u4e00\u8d77\u8bc4\u5ba1\u5f53\u65e5\u6216\u4e0a\u4e00\u65e5\u7684\u4ee3\u7801\uff0c\u4e00\u822c\u5728\u4e0b\u5348\u4e0b\u73ed\u524d\u8fdb\u884c\uff0c\u65f6\u95f4\u9700\u8981\u63a7\u5236\u572830\uff5e60\u5206\u949f\u3002\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u9664\u4e86\u53ef\u4ee5\u7528\u4e8e\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u4ee5\u5916\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u56e2\u961f\u7684\u6280\u672f\u4ea4\u6d41\u548c\u95ee\u9898\u6c9f\u901a\uff0c\u6bd5\u7adf\u5927\u5bb6\u5de5\u4f5c\u5728\u540c\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u91cc\u3002 \u4ee3\u7801\u8bc4\u5ba1\u4e00\u822c\u7531\u4eba\u5de5\u5b8c\u6210\uff0c\u53ef\u4f7f\u7528Git\u3001GitLab\u3001IntelliJ IDEA\u7b49\u5de5\u5177\u3002\u4ee3\u7801\u8bc4\u5ba1\u4f5c\u4e3a\u9759\u6001\u4ee3\u7801\u5206\u6790\u7684\u8865\u5145\u65b9\u6cd5\uff0c\u4e00\u822c\u4e0d\u4f1a\u6d89\u53ca\u5df2\u7ecf\u88ab\u9759\u6001\u4ee3\u7801\u5206\u6790\u6240\u8986\u76d6\u7684\u5185\u5bb9\u3002 \u4ee3\u7801\u5408\u5165\u8bf7\u6c42 \u662f\u6307\u5728\u5fc5\u8981\u65f6\u901a\u8fc7\u5408\u5165\u8bf7\u6c42\u6765\u5408\u5165\u4ee3\u7801\u3002\u5177\u4f53\u5408\u5165\u65b9\u5f0f\u53d6\u51b3\u4e8e\u56e2\u961f\u4f7f\u7528\u7684Git\u5de5\u4f5c\u6d41\uff0c\u4e00\u822c\u654f\u6377\u56e2\u961f\u4f1a\u4f7f\u7528\u4e3b\u5e72\u5f00\u53d1\u7684\u65b9\u5f0f\u3002\u5728\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5f00\u542f\u540e\uff0c\u56e2\u961f\u4f1a\u5728\u4e3b\u5e72\u4e0a\u5f00\u53d1\u3001\u63d0\u4ea4\u4ee3\u7801\uff0c\u5e76\u4e14\u4f1a\u5728\u9700\u8981\u53d1\u5e03\u7684\u65f6\u5019\u521b\u5efa\u4e00\u4e2aRelease\u5206\u652f\u6765\u51bb\u7ed3\u4ee3\u7801\u3002\u4ee3\u7801\u51bb\u7ed3\u540e\uff0c\u5982\u679c\u8fd8\u6709\u7f3a\u9677\u9700\u8981\u4fee\u590d\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6d4b\u8bd5\u7684\u53ef\u9760\u6027\uff0c\u907f\u514d\u591a\u6b21\u5168\u91cf\u56de\u5f52\uff0c\u5c31\u9700\u8981\u901a\u8fc7\u5408\u5165\u8bf7\u6c42\u6765\u5408\u5165\u3002 \u4e0a\u8ff0\u6bcf\u4e00\u4e2a\u5c42\u9762\u90fd\u6709\u4e0d\u540c\u7684\u4ef7\u503c\uff0c\u5b83\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u5408\u7406\u7ba1\u7406\u4ee3\u7801\u8d28\u91cf\uff0c\u8fd8\u80fd\u505a\u5230\u4e0d\u6253\u6270\u5f00\u53d1\u4eba\u5458\u7684\u65e5\u5e38\u5de5\u4f5c\uff0c\u4e0d\u589e\u52a0\u989d\u5916\u7684\u8d1f\u62c5\u3002 \u672c\u7ae0\u5c06\u56f4\u7ed5\u8fd9\u4e09\u4e2a\u5c42\u9762\u5c55\u5f00\uff0c\u76ee\u6807\u662f\u57fa\u4e8e\u5bf9\u4ee3\u7801\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u3001\u4eba\u5de5\u68c0\u67e5\u7b49\u65b9\u6cd5\u6765\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\uff0c\u6db5\u76d6\u7684\u5185\u5bb9\u5982\u4e0b\uff1a \u9759\u6001\u4ee3\u7801\u5206\u6790\u3002 \u4eba\u5de5\u4ee3\u7801\u8bc4\u5ba1\u7684\u65b9\u6cd5\u548c\u5b9e\u8df5\u3002 Git\u5de5\u4f5c\u6d41\u3002","title":"\u7b2c 2 \u7ae0 \u4ee3\u7801\u8bc4\u5ba1"},{"location":"02-code-review/#21","text":"\u4e00\u4e9b\u5927\u7684\u516c\u53f8\u90fd\u4f1a\u8fdb\u884c\u9759\u6001\u4ee3\u7801\u5206\u6790\uff0c\u4ed6\u4eec\u4e00\u822c\u4f1a\u901a\u8fc7\u4e00\u4e9b\u5b9a\u5236\u5316\u7684\u5de5\u5177\u6216\u8005\u5e73\u53f0\u6765\u5b8c\u6210\u6b64\u9879\u5de5\u4f5c\u3002\u5bf9\u4e8e\u4e2d\u5c0f\u56e2\u961f\u6765\u8bf4\uff0c\u53ef\u4ee5\u9009\u7528\u4e0b\u9762\u51e0\u79cd\u5f00\u6e90\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\u3002 Checkstyle\uff0c\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\uff0c\u4f8b\u5982\u4ee3\u7801\u7684\u7f29\u8fdb\u3001\u6bcf\u884c\u7684\u6700\u5927\u957f\u5ea6\u3001\u6362\u884c\u7b49\u89c4\u8303\u95ee\u9898\u3002 ArchUnit\uff0c\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u4ee3\u7801\u7684\u5206\u5c42\u5173\u7cfb\uff0c\u907f\u514d\u4e0d\u5408\u7406\u7684\u4ee3\u7801\u4f9d\u8d56\u5173\u7cfb\u51fa\u73b0\uff0c\u6bd4\u5982\u5faa\u73af\u5f15\u7528\u7b49\u3002 FindBugs\uff0c\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u6f5c\u5728\u7684\u7f3a\u9677\uff0c\u4f8b\u5982\u6253\u5f00\u7684\u6587\u4ef6\u6ca1\u6709\u5173\u95ed\u3001\u6f5c\u5728\u7684\u5185\u5b58\u6cc4\u6f0f\u7b49\u3002 OWASP Dependency-Check\uff0c\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u5f15\u5165\u7684\u7b2c\u4e09\u65b9\u4ee3\u7801\u5305\u662f\u5426\u6709\u516c\u5f00\u7684\u6f0f\u6d1e\u7b49\u3002 \u8fd9\u4e9b\u5de5\u5177\u57fa\u672c\u90fd\u6709IDE\u63d2\u4ef6\uff0c\u76f8\u5173\u63d2\u4ef6\u7684\u4f7f\u7528\u6bd4\u8f83\u7b80\u5355\uff0c\u4e0d\u9700\u8981\u8fc7\u591a\u4ecb\u7ecd\uff0c\u5982\u679c\u5e0c\u671b\u5c06\u5176\u96c6\u6210\u5230\u6784\u5efa\u8fc7\u7a0b\u4e2d\uff0c\u5219\u9700\u8981\u4f7f\u7528\u76f8\u5e94\u7684\u914d\u7f6e\u3002\u6d77\u5916\u7684Java\u9879\u76ee\u4e00\u822c\u4f7f\u7528Gradle\uff08\u4e00\u79cd\u6784\u5efa\u5de5\u5177\uff0c\u4e0eMaven\u7c7b\u4f3c\uff09\uff0c\u56fd\u5185\u7684 Java\u9879\u76ee\u5219\u4f7f\u7528Maven\u8f83\u591a\u3002 \u4e0b\u9762\u4ee5\u4f7f\u7528Maven\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u914d\u7f6e\u8fd9\u51e0\u79cd\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u5e76\u7ed9\u51fa\u5404\u4e2a\u914d\u7f6e\u9879\u7684\u542b\u4e49\u3002\u672c\u7ae0\u7684\u4ee3\u7801\u793a\u4f8b\u90fd\u662fMaven\u591a\u6a21\u5757\u5b9e\u73b0\u7684\uff0c\u8fd9\u91cc\u4e5f\u63a8\u8350\u4f7f\u7528IntelliJ IDEA\u4f5c\u4e3a\u5f00\u53d1\u5de5\u5177\uff0c \u5b83\u662f\u4e1a\u754c\u516c\u8ba4\u7684\u4f18\u79c0 Java \u5f00\u53d1\u5de5\u5177\u3002 \u672c\u8282\u7684\u793a\u4f8b\u4ee3\u7801\u53ef\u4ee5\u5728Git\u4ed3\u5e93 https://github.com/java-self-testing/java-self-testing-example \u4e2d\u4e0b\u8f7d\u3002","title":"2.1 \u5e38\u7528\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177"},{"location":"02-code-review/#211-checkstyle","text":"Checkstyle\u662f\u4e00\u6b3eJava\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u53ef\u5e2e\u52a9\u7a0b\u5e8f\u5458\u7f16\u5199\u7b26\u5408\u7f16\u7801\u89c4\u8303\u7684Java\u4ee3\u7801\u3002\u5b83\u4f1a\u81ea\u52a8\u5b8c\u6210\u68c0\u67e5\uff0c\u80fd\u8ba9\u7a0b\u5e8f\u5458\u907f\u514d\u624b\u5de5\u505a\u8fd9\u4e9b\u7410\u788e\u7684\u4e8b\u60c5\u3002 Checkstyle\u81ea\u5e26\u4e86Sun\u516c\u53f8\u548c\u8c37\u6b4c\u516c\u53f8\u7684Java\u4ee3\u7801\u98ce\u683c\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u57fa\u4e8e\u6b64\u5b9a\u4e49\u9002\u5408\u81ea\u5df1\u56e2\u961f\u7684\u4ee3\u7801\u89c4\u8303\u3002\u53ef\u4ee5\u901a\u8fc7IDEA\u63d2\u4ef6\u3001Maven\u3001Gradle\u7b49\u4e0d\u540c\u7684\u5de5\u5177\u548c\u5e73\u53f0\u6765\u8fd0\u884cCheckstyle\uff0c\u5982\u679c\u6709\u9519\u8bef\u63d0\u793a\uff0cCheckstyle \u4f1a\u4e2d\u65ad\u6784\u5efa\u5e76\u63d0\u4f9b\u53cb\u597d\u7684\u62a5\u544a\u3002","title":"2.1.1 Checkstyle"},{"location":"02-code-review/#1-maven-checkstyle","text":"\u521b\u5efa\u4e00\u4e2aMaven\u6a21\u5757\uff0c\u5728Pom\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4ee3\u7801\u6e05\u53552-1\u6240\u793a\u7684\u914d\u7f6e\u3002 \u4ee3\u7801\u6e05\u53552-1 Checkstyle\u4e2d\u7684Pom\u914d\u7f6e <properties> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> </properties> <build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> <version>3.1.2</version> <dependencies> <!-- Checkstyle plugin \u4f7f\u7528\u7684 Checkstyle \u5e93\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7248\u672c --> <dependency> <groupId>com.puppycrawl.tools</groupId> <artifactId>checkstyle</artifactId> <version>8.40</version> </dependency> </dependencies> <executions> <!-- \u52a0\u5165\u5230 maven \u7684\u6784\u5efa\u751f\u547d\u5468\u671f\u4e2d\u53bb --> <execution> <id>checkstyle</id> <phase>validate</phase> <goals> <goal>check</goal> </goals> <configuration> <failOnViolation>true</failOnViolation> </configuration> </execution> </executions> </plugin> </plugins> </build> \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 Maven \u547d\u4ee4\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\uff1a mvn checkstyle:check","title":"1. \u5728 Maven \u4e2d\u4f7f\u7528 Checkstyle"},{"location":"02-code-review/#2_1","text":"Checkstyle\u9ed8\u8ba4\u7684\u98ce\u683c\u53ef\u80fd\u4f1a\u4e0e\u6211\u4eec\u65e5\u5e38\u5f00\u53d1\u7684\u4e60\u60ef\u4e0d\u76f8\u7b26\uff0c\u76f4\u63a5\u4f7f\u7528\u6709\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5728\u65e5\u5e38\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2dIDE\u683c\u5f0f\u5316\u7684\u7ed3\u679c\u548cCheckstyle\u51b2\u7a81\u3001\u9ed8\u8ba4\u7684\u53c2\u6570\u8fc7\u4e8e\u82db\u523b\u7b49\u95ee\u9898\u3002\u867d\u7136\u53ef\u4ee5\u5c06Checkstyle\u7684\u914d\u7f6e\u6587\u4ef6\u5bfc\u5165IDE\u683c\u5f0f\u5316\u5668\u7684\u76f8\u5173\u914d\u7f6e\u4e2d\uff0c\u4f46\u5982\u679c\u6709\u65b0\u540c\u4e8b\u52a0\u5165\uff0c\u5219\u53c8\u9700\u8981\u989d\u5916\u914d\u7f6e\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4e00\u822c\u90fd\u4f1a\u5bf9 Checkstyle \u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u505a\u4e00\u4e9b\u4fee\u6539\uff0c\u5c06\u5176\u8c03\u6574\u4e3a\u9002\u5408\u81ea\u5df1\u56e2\u961f\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5c3d\u91cf\u6309\u7167IDE\u7684\u9ed8\u8ba4\u683c\u5f0f\u5316\u98ce\u683c\u6765\u64cd\u4f5c\u3002 \u5728Maven\u7684Pom\u6587\u4ef6\u4e2d\u901a\u8fc7checkstyle.config.location\u5c5e\u6027\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2aXML\u6587\u4ef6\u6765\u5b9a\u5236Checkstyle\u89c4\u5219\uff0c\u5177\u4f53\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff1a <properties> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <!-- \u81ea\u5b9a\u4e49\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u76f8\u5bf9\u4e8e Pom \u6587\u4ef6\u7684\u8def\u5f84 --> <checkstyle.config.location>checkstyle/checkstyle.xml</checkstyle.config.location> </properties> \u6211\u4eec\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u901a\u5e38\u90fd\u9700\u8981\u5b9a\u5236\u4e0a\u8ff0\u89c4\u5219\uff0c\u4ee3\u7801\u6e05\u53552-2\u57fa\u4e8eGoogle Java \u4ee3\u7801\u89c4\u5219\u5bf9\u914d\u7f6e\u505a\u4e86\u8c03\u6574\uff0c\u5e76\u7ed9\u51fa\u4e86\u5177\u4f53\u8bf4\u660e\u3002 \u4ee3\u7801\u6e05\u53552-2 \u81ea\u5b9a\u4e49 Checkstyle \u89c4\u5219\u7684\u914d\u7f6e\u6587\u4ef6 <?xml version=\"1.0\"?> <!DOCTYPE module PUBLIC \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\" \"https://checkstyle.org/dtds/configuration_1_3.dtd\"> <module name = \"Checker\"> <property name=\"charset\" value=\"UTF-8\"/> <!--\u8fdd\u89c4\u7ea7\u522b\uff0c\u7528\u4e8e\u63d0\u793a\u7ed9\u6784\u5efa\u5de5\u5177\uff0c\u5982\u679c\u662f error \u7ea7\u522b\u4f1a\u8ba9\u6784\u5efa\u5931\u8d25--> <property name=\"severity\" value=\"warning\"/> <!--\u626b\u63cf\u7684\u6587\u4ef6\u7c7b\u578b--> <property name=\"fileExtensions\" value=\"java, properties, xml\"/> <!-- Excludes all 'module-info.java' files --> <!-- See https://checkstyle.org/config_filefilters.html --> <!-- \u6392\u9664 'module-info.java' \u6a21\u5757\u63cf\u8ff0\u6587\u4ef6 --> <module name=\"BeforeExecutionExclusionFileFilter\"> <property name=\"fileNamePattern\" value=\"module\\-info\\.java$\"/> </module> <!-- https://checkstyle.org/config_filters.html#SuppressionFilter --> <!--\u5b9a\u4e49\u5ffd\u7565\u89c4\u5219\u6587\u4ef6\u4f4d\u7f6e--> <module name=\"SuppressionFilter\"> <property name=\"file\" value=\"${org.checkstyle.google.suppressionfilter.config}\" default=\"checkstyle-suppressions.xml\" /> <property name=\"optional\" value=\"true\"/> </module> <!-- Checks for whitespace --> <!-- See http://checkstyle.org/config_whitespace.html --> <!--\u68c0\u67e5\u6587\u4ef6\u7a7a\u767d\u5236\u8868\u5b57\u7b26--> <module name=\"FileTabCharacter\"> <property name=\"eachLine\" value=\"true\"/> </module> <!--\u68c0\u67e5\u5355\u884c\u957f\u5ea6\uff0c\u539f\u89c4\u5219\u662f 100\uff0c\u4f46\u662f\u5f80\u5f80\u4e0d\u591f\u7528\uff0c\u6240\u4ee5\u4f1a\u8bbe\u7f6e\u957f\u4e00\u70b9--> <module name=\"LineLength\"> <property name=\"fileExtensions\" value=\"java\"/> <property name=\"max\" value=\"160\"/> <property name=\"ignorePattern\" value=\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/> </module> <!--\u68c0\u67e5 Java \u6e90\u4ee3\u7801\u8bed\u6cd5\u6811--> <module name=\"TreeWalker\"> <!--\u68c0\u67e5\u7c7b\u578b\u548c\u6587\u4ef6\u540d\u662f\u5426\u5339\u914d\uff0c\u7c7b\u540d\u548c\u6587\u4ef6\u540d\u9700\u8981\u5bf9\u5e94--> <module name=\"OuterTypeFilename\"/> <!--\u68c0\u67e5\u4e0d\u5408\u89c4\u7684\u6587\u672c\uff0c\u8003\u8651\u4f7f\u7528\u7279\u6b8a\u8f6c\u4e49\u5e8f\u5217\u6765\u4ee3\u66ff\u516b\u8fdb\u5236\u503c\u6216 Unicode \u503c\u3002--> <module name=\"IllegalTokenText\"> <property name=\"tokens\" value=\"STRING_LITERAL, CHAR_LITERAL\"/> <property name=\"format\" value=\"\\\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\"/> <property name=\"message\" value=\"Consider using special escape sequence instead of octal value or Unicode escaped value.\"/> </module> <!--\u907f\u514d\u4f7f\u7528 Unicode \u8f6c\u4e49--> <module name=\"AvoidEscapedUnicodeCharacters\"> <property name=\"allowEscapesForControlCharacters\" value=\"true\"/> <property name=\"allowByTailComment\" value=\"true\"/> <property name=\"allowNonPrintableEscapes\" value=\"true\"/> </module> <!--\u907f\u514d\u5728 import \u8bed\u53e5\u4e2d\u4f7f\u7528 * --> <module name=\"AvoidStarImport\"/> <!--\u6bcf\u4e2a\u6587\u4ef6\u4e2d\u53ea\u5141\u8bb8\u6709\u4e00\u4e2a\u9876\u7ea7\u7c7b--> <module name=\"OneTopLevelClass\"/> <!--\u8be5\u7c7b\u8bed\u53e5\u4e0d\u5141\u8bb8\u6362\u884c--> <module name=\"NoLineWrap\"> <property name=\"tokens\" value=\"PACKAGE_DEF, IMPORT, STATIC_IMPORT\"/> </module> <!--\u68c0\u67e5\u7a7a\u5757--> <module name=\"EmptyBlock\"> <property name=\"option\" value=\"TEXT\"/> <property name=\"tokens\" value=\"LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH\"/> </module> <!--\u68c0\u67e5\u4ee3\u7801\u5757\u5468\u56f4\u7684\u5927\u62ec\u53f7\uff0c\u8fd9\u4e9b\u5927\u62ec\u53f7\u4e0d\u5141\u8bb8\u7701\u7565--> <module name=\"NeedBraces\"> <property name=\"tokens\" value=\"LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE\"/> </module> <!--\u68c0\u67e5\u4ee3\u7801\u5757\u7684\u5de6\u82b1\u62ec\u53f7\u7684\u4f4d\u7f6e--> <module name=\"LeftCurly\"> <property name=\"tokens\" value=\"ANNOTATION_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, INTERFACE_DEF, LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF, OBJBLOCK, STATIC_INIT, RECORD_DEF, COMPACT_CTOR_DEF\"/> </module> <!--\u68c0\u67e5\u4ee3\u7801\u5757\u7684\u53f3\u82b1\u62ec\u53f7\u7684\u4f4d\u7f6e--> <module name=\"RightCurly\"> <property name=\"id\" value=\"RightCurlySame\"/> <property name=\"tokens\" value=\"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO\"/> </module> <!--\u68c0\u67e5\u4ee3\u7801\u5757\u7684\u53f3\u82b1\u62ec\u53f7\u7684\u4f4d\u7f6e\uff0c\u5fc5\u987b\u5355\u72ec\u4e00\u884c--> <module name=\"RightCurly\"> <property name=\"id\" value=\"RightCurlyAlone\"/> <property name=\"option\" value=\"alone\"/> <property name=\"tokens\" value=\"CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF, RECORD_DEF, COMPACT_CTOR_DEF\"/> </module> <module name=\"SuppressionXpathSingleFilter\"> <!-- suppresion is required till https://github.com/checkstyle/checkstyle/issues/7541 --> <property name=\"id\" value=\"RightCurlyAlone\"/> <property name=\"query\" value=\"//RCURLY[parent::SLIST[count(./*)=1] or preceding-sibling::*[last()][self::LCURLY]]\"/> </module> <!--\u68c0\u67e5\u5173\u952e\u5b57\u540e\u9762\u7684\u7a7a\u683c--> <module name=\"WhitespaceAfter\"> <property name=\"tokens\" value=\"COMMA, SEMI, TYPECAST, LITERAL_IF, LITERAL_ELSE, LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, DO_WHILE\"/> </module> <!--\u68c0\u67e5\u5173\u952e\u5b57\u662f\u5426\u88ab\u7a7a\u683c\u5305\u56f4\uff0c\u4e00\u822c\u662f\u8bed\u53e5\uff0c\u6bd4\u5982\u7a7a\u6784\u9020\u51fd\u6570--> <module name=\"WhitespaceAround\"> <property name=\"allowEmptyConstructors\" value=\"true\"/> <property name=\"allowEmptyLambdas\" value=\"true\"/> <property name=\"allowEmptyMethods\" value=\"true\"/> <property name=\"allowEmptyTypes\" value=\"true\"/> <property name=\"allowEmptyLoops\" value=\"true\"/> <property name=\"ignoreEnhancedForColon\" value=\"false\"/> <property name=\"tokens\" value=\"ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND\"/> <message key=\"ws.notFollowed\" value=\"WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)\"/> <message key=\"ws.notPreceded\" value=\"WhitespaceAround: ''{0}'' is not preceded with whitespace.\"/> </module> <!--\u68c0\u67e5\u6bcf\u884c\u53ea\u6709\u4e00\u4e2a\u8bed\u53e5--> <module name=\"OneStatementPerLine\"/> <!--\u907f\u514d\u53d8\u91cf\u8fde\u7eed\u5b9a\u4e49\u548c\u6362\u884c\u5b9a\u4e49\uff0c\u6bcf\u4e2a\u53d8\u91cf\u90fd\u9700\u8981\u5728\u81ea\u5df1\u7684\u884c\u4e2d\u5355\u72ec\u5b9a\u4e49--> <module name=\"MultipleVariableDeclarations\"/> <!--\u68c0\u67e5\u6570\u7ec4\u7c7b\u578b\u5b9a\u4e49\u7684\u98ce\u683c--> <module name=\"ArrayTypeStyle\"/> <!--\u68c0\u67e5 switch \u5fc5\u987b\u5177\u6709 default \u5b50\u53e5--> <module name=\"MissingSwitchDefault\"/> <!--\u68c0\u67e5 switch \u8bed\u53e5\uff0ccase \u5b50\u53e5\u5982\u679c\u6709\u4ee3\u7801\uff0c\u5fc5\u987b\u4f7f\u7528 break \u8bed\u53e5\u6216\u629b\u51fa\u5f02\u5e38--> <module name=\"FallThrough\"/> <!--\u68c0\u67e5\u5e38\u91cf\u662f\u5426\u7528\u5927\u5199\u5b9a\u4e49--> <module name=\"UpperEll\"/> <!--\u68c0\u67e5\u4fee\u9970\u7b26\u662f\u5426\u7b26\u5408\u987a\u5e8f--> <module name=\"ModifierOrder\"/> <!--\u68c0\u67e5\u7a7a\u884c\uff0c\u5728\u5fc5\u8981\u7684\u5730\u65b9\u9700\u8981\u7a7a\u884c--> <module name=\"EmptyLineSeparator\"> <property name=\"tokens\" value=\"PACKAGE_DEF, IMPORT, STATIC_IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, RECORD_DEF, COMPACT_CTOR_DEF\"/> <property name=\"allowNoEmptyLineBetweenFields\" value=\"true\"/> </module> <!--\u5b9a\u4e49\u4e00\u4e9b\u4e0d\u5141\u8bb8\u6362\u884c\u7684\u5173\u952e\u5b57\uff0c\u6bd4\u5982\u70b9\u3001\u9017\u53f7\u7b49--> <module name=\"SeparatorWrap\"> <property name=\"id\" value=\"SeparatorWrapDot\"/> <property name=\"tokens\" value=\"DOT\"/> <property name=\"option\" value=\"nl\"/> </module> <module name=\"SeparatorWrap\"> <property name=\"id\" value=\"SeparatorWrapComma\"/> <property name=\"tokens\" value=\"COMMA\"/> <property name=\"option\" value=\"EOL\"/> </module> <module name=\"SeparatorWrap\"> <!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/259 --> <property name=\"id\" value=\"SeparatorWrapEllipsis\"/> <property name=\"tokens\" value=\"ELLIPSIS\"/> <property name=\"option\" value=\"EOL\"/> </module> <module name=\"SeparatorWrap\"> <!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/258 --> <property name=\"id\" value=\"SeparatorWrapArrayDeclarator\"/> <property name=\"tokens\" value=\"ARRAY_DECLARATOR\"/> <property name=\"option\" value=\"EOL\"/> </module> <module name=\"SeparatorWrap\"> <property name=\"id\" value=\"SeparatorWrapMethodRef\"/> <property name=\"tokens\" value=\"METHOD_REF\"/> <property name=\"option\" value=\"nl\"/> </module> <!--\u68c0\u67e5\u5305\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"PackageName\"> <property name=\"format\" value=\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/> <message key=\"name.invalidPattern\" value=\"Package name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u7c7b\u578b\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"TypeName\"> <property name=\"tokens\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF\"/> <message key=\"name.invalidPattern\" value=\"Type name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u5b9e\u4f8b\u6210\u5458\u53d8\u91cf\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"MemberName\"> <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/> <message key=\"name.invalidPattern\" value=\"Member name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u53c2\u6570\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"ParameterName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Parameter name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5 Lambda \u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"LambdaParameterName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Lambda parameter name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5 catch \u53c2\u6570\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"CatchParameterName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Catch parameter name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u672c\u5730\u53d8\u91cf\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"LocalVariableName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Local variable name ''{0}'' must match pattern ''{1}''.\"/> </module> <module name=\"PatternVariableName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Pattern variable name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u7c7b\u7c7b\u578b\u53c2\u6570(\u6cdb\u578b)\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"ClassTypeParameterName\"> <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/> <message key=\"name.invalidPattern\" value=\"Class type name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u5b57\u6bb5\uff08record \u4e3a Java \u65b0\u7279\u6027\uff09\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"RecordComponentName\"> <property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/> <message key=\"name.invalidPattern\" value=\"Record component name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u5b57\u6bb5\uff08record \u4e3a Java \u65b0\u7279\u6027\uff09\u7c7b\u578b\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"RecordTypeParameterName\"> <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/> <message key=\"name.invalidPattern\" value=\"Record type name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u65b9\u6cd5\u7c7b\u578b\u53c2\u6570\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"MethodTypeParameterName\"> <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/> <message key=\"name.invalidPattern\" value=\"Method type name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u68c0\u67e5\u63a5\u53e3\u7c7b\u578b\u53c2\u6570\u540d\u79f0\u662f\u5426\u7b26\u5408\u89c4\u5219--> <module name=\"InterfaceTypeParameterName\"> <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/> <message key=\"name.invalidPattern\" value=\"Interface type name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u4e0d\u5141\u8bb8\u5b9a\u4e49\u65e0\u53c2\u7684 finalize \u65b9\u6cd5--> <module name=\"NoFinalizer\"/> <!--\u68c0\u67e5\u5c16\u62ec\u53f7\u7684\u7a7a\u767d\u5b57\u7b26\u89c4\u5219--> <module name=\"GenericWhitespace\"> <message key=\"ws.followed\" value=\"GenericWhitespace ''{0}'' is followed by whitespace.\"/> <message key=\"ws.preceded\" value=\"GenericWhitespace ''{0}'' is preceded with whitespace.\"/> <message key=\"ws.illegalFollow\" value=\"GenericWhitespace ''{0}'' should followed by whitespace.\"/> <message key=\"ws.notPreceded\" value=\"GenericWhitespace ''{0}'' is not preceded with whitespace.\"/> </module> <!--\u68c0\u67e5\u7f29\u8fdb\u89c4\u5219--> <module name=\"Indentation\"> <property name=\"basicOffset\" value=\"2\"/> <property name=\"braceAdjustment\" value=\"2\"/> <property name=\"caseIndent\" value=\"2\"/> <property name=\"throwsIndent\" value=\"4\"/> <property name=\"lineWrappingIndentation\" value=\"4\"/> <property name=\"arrayInitIndent\" value=\"2\"/> </module> <!--\u68c0\u67e5\u662f\u5426\u4ee5\u5927\u5199\u5b57\u6bcd\u4f5c\u4e3a\u7f29\u5199\u7684\u957f\u5ea6--> <module name=\"AbbreviationAsWordInName\"> <property name=\"ignoreFinal\" value=\"false\"/> <property name=\"allowedAbbreviationLength\" value=\"0\"/> <property name=\"tokens\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF, PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF, PATTERN_VARIABLE_DEF, RECORD_DEF, RECORD_COMPONENT_DEF\"/> </module> <!--\u68c0\u67e5\u8986\u5199\u65b9\u6cd5\u5728\u7c7b\u4e2d\u7684\u987a\u5e8f--> <module name=\"OverloadMethodsDeclarationOrder\"/> <!--\u68c0\u67e5\u53d8\u91cf\u58f0\u660e\u4e0e\u7b2c\u4e00\u88ab\u4f7f\u7528\u4e4b\u95f4\u7684\u8ddd\u79bb--> <module name=\"VariableDeclarationUsageDistance\"/> <!--\u68c0\u67e5 import \u8bed\u53e5\u7684\u987a\u5e8f--> <module name=\"CustomImportOrder\"> <property name=\"sortImportsInGroupAlphabetically\" value=\"true\"/> <property name=\"separateLineBetweenGroups\" value=\"true\"/> <property name=\"customImportOrderRules\" value=\"STATIC###THIRD_PARTY_PACKAGE\"/> <property name=\"tokens\" value=\"IMPORT, STATIC_IMPORT, PACKAGE_DEF\"/> </module> <!--\u68c0\u67e5\u65b9\u6cd5\u540d\u79f0\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u7684\u7a7a\u683c--> <module name=\"MethodParamPad\"> <property name=\"tokens\" value=\"CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF, SUPER_CTOR_CALL, ENUM_CONSTANT_DEF, RECORD_DEF\"/> </module> <!--\u68c0\u67e5\u5173\u952e\u5b57\u524d\u9762\u7684\u7a7a\u683c--> <module name=\"NoWhitespaceBefore\"> <property name=\"tokens\" value=\"COMMA, SEMI, POST_INC, POST_DEC, DOT, LABELED_STAT, METHOD_REF\"/> <property name=\"allowLineBreaks\" value=\"true\"/> </module> <!--\u68c0\u67e5\u62ec\u53f7\u524d\u540e\u662f\u5426\u9700\u8981\u7a7a\u683c--> <module name=\"ParenPad\"> <property name=\"tokens\" value=\"ANNOTATION, ANNOTATION_FIELD_DEF, CTOR_CALL, CTOR_DEF, DOT, ENUM_CONSTANT_DEF, EXPR, LITERAL_CATCH, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_NEW, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_WHILE, METHOD_CALL, METHOD_DEF, QUESTION, RESOURCE_SPECIFICATION, SUPER_CTOR_CALL, LAMBDA, RECORD_DEF\"/> </module> <!--\u68c0\u67e5\u8fd0\u7b97\u7b26\u6362\u884c\u7684\u89c4\u5219--> <module name=\"OperatorWrap\"> <!-- \u64cd\u4f5c\u7b26\u9700\u8981\u5728\u65b0\u884c--> <property name=\"option\" value=\"NL\"/> <property name=\"tokens\" value=\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF \"/> </module> <!--\u68c0\u67e5\u6ce8\u89e3\u4f4d\u7f6e\u89c4\u5219\uff0c\u6bd4\u5982\u7c7b\u7684\u5b9a\u4e49\u4e2d\u6ce8\u91ca\u9700\u8981\u5355\u72ec\u4e00\u884c--> <module name=\"AnnotationLocation\"> <property name=\"id\" value=\"AnnotationLocationMostCases\"/> <property name=\"tokens\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, RECORD_DEF, COMPACT_CTOR_DEF\"/> </module> <!--\u68c0\u67e5\u6ce8\u89e3\u4f4d\u7f6e\u89c4\u5219\uff0c\u53d8\u91cf\u5b9a\u4e49\u6ce8\u91ca\u53ef\u4ee5\u4e00\u884c\u5b9a\u4e49\u591a\u4e2a--> <module name=\"AnnotationLocation\"> <property name=\"id\" value=\"AnnotationLocationVariables\"/> <property name=\"tokens\" value=\"VARIABLE_DEF\"/> <property name=\"allowSamelineMultipleAnnotations\" value=\"true\"/> </module> <!--\u8fd9\u90e8\u5206\u662f\u6ce8\u91ca\u76f8\u5173\u7684\u914d\u7f6e--> <!--\u5757\u6ce8\u91ca\u4e2d @ \u5b50\u53e5\u540e\u9762\u4e0d\u80fd\u4e3a\u7a7a--> <module name=\"NonEmptyAtclauseDescription\"/> <!--\u68c0\u67e5\u6ce8\u91ca\u4f4d\u7f6e\uff0c\u5757\u6ce8\u91ca\u5fc5\u987b\u5728\u6240\u6709\u6ce8\u89e3\u524d\u9762--> <module name=\"InvalidJavadocPosition\"/> <!--\u68c0\u67e5\u6ce8\u91ca\u5fc5\u987b\u7edf\u4e00\u7f29\u8fdb--> <module name=\"JavadocTagContinuationIndentation\"/> <!--\u68c0\u67e5\u63cf\u8ff0\u6027\u6ce8\u91ca\uff0c\u65b9\u6cd5\u7684\u5757\u6ce8\u91ca\u7b2c\u4e00\u884c\u5fc5\u987b\u603b\u7ed3\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4e00\u822c\u6211\u4eec\u4e0d\u8981\u6c42\uff0c\u4f1a\u5173\u95ed\u6b64\u884c--> <!-- <module name=\"SummaryJavadoc\">--> <!-- <property name=\"forbiddenSummaryFragments\"--> <!-- value=\"^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )\"/>--> <!-- </module>--> <!--\u68c0\u67e5\u6ce8\u91ca\u6bb5\u843d\uff0c\u6bb5\u843d\u4e4b\u95f4\u9700\u8981\u6362\u884c\uff0c\u53e6\u5916\u4f7f\u7528\u4e86 <p> \u6807\u7b7e\u4e0d\u80fd\u6709\u7a7a\u683c--> <module name=\"JavadocParagraph\"/> <!--\u68c0\u67e5\u6ce8\u91ca\u6bb5\u843d\uff0c\u5757\u6807\u7b7e\u4e4b\u524d\u9700\u8981\u4e00\u4e2a\u7a7a\u683c\uff0c\u6bd4\u5982 @return --> <module name=\"RequireEmptyLineBeforeBlockTagGroup\"/> <!--\u68c0\u67e5\u6ce8\u91ca\u6bb5\u843d\u5757\u6807\u7b7e\u987a\u5e8f --> <module name=\"AtclauseOrder\"> <property name=\"tagOrder\" value=\"@param, @return, @throws, @deprecated\"/> <property name=\"target\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF\"/> </module> <!--\u68c0\u67e5 public \u65b9\u6cd5\u7684\u6ce8\u91ca\u89c4\u5219 --> <module name=\"JavadocMethod\"> <property name=\"scope\" value=\"public\"/> <property name=\"allowMissingParamTags\" value=\"true\"/> <property name=\"allowMissingReturnTag\" value=\"true\"/> <property name=\"allowedAnnotations\" value=\"Override, Test\"/> <property name=\"tokens\" value=\"METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF\"/> </module> <!--\u5bf9\u4e8e\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u5ffd\u7565\u65b9\u6cd5\u7684\u6ce8\u91ca\u89c4\u5219\u3002\u4f8b\u5982\uff0c\u5e26\u6709Override \u6ce8\u89e3\u7684\u65b9\u6cd5--> <module name=\"MissingJavadocMethod\"> <property name=\"scope\" value=\"public\"/> <property name=\"minLineCount\" value=\"2\"/> <property name=\"allowedAnnotations\" value=\"Override, Test\"/> <property name=\"tokens\" value=\"METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF\"/> </module> <!--\u68c0\u67e5\u65b9\u6cd5\u5fc5\u987b\u63d0\u4f9b\u6ce8\u91ca\u7684\u89c4\u5219 --> <module name=\"MissingJavadocType\"> <property name=\"scope\" value=\"protected\"/> <property name=\"tokens\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, RECORD_DEF, ANNOTATION_DEF\"/> <property name=\"excludeScope\" value=\"nothing\"/> </module> <!--\u68c0\u67e5\u65b9\u6cd5\u540d\u662f\u5426\u7b26\u5408\u89c4\u5219 --> <module name=\"MethodName\"> <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9_]*$\"/> <message key=\"name.invalidPattern\" value=\"Method name ''{0}'' must match pattern ''{1}''.\"/> </module> <!--\u5355\u884c\u6ce8\u91ca\u89c4\u5219,\u5355\u884c\u6ce8\u91ca\u4e0d\u5141\u8bb8\u4f7f\u7528\u5757\u4e2d\u7684\u6807\u7b7e --> <module name=\"SingleLineJavadoc\"/> <!--\u68c0\u67e5\u7a7a\u7684 catch \u5757--> <module name=\"EmptyCatchBlock\"> <property name=\"exceptionVariableName\" value=\"expected\"/> </module> <!--\u68c0\u67e5\u6ce8\u91ca\u4ee3\u7801\u4e4b\u95f4\u7684\u7f29\u8fdb--> <module name=\"CommentsIndentation\"> <property name=\"tokens\" value=\"SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN\"/> </module> <!-- https://checkstyle.org/config_filters.html#SuppressionXpathFilter --> <module name=\"SuppressionXpathFilter\"> <property name=\"file\" value=\"${org.checkstyle.google.suppressionxpathfilter.config}\" default=\"checkstyle-xpath-suppressions.xml\" /> <property name=\"optional\" value=\"true\"/> </module> </module> </module>","title":"2. \u81ea\u5b9a\u4e49\u4ee3\u7801\u98ce\u683c\u68c0\u67e5\u89c4\u5219"},{"location":"02-code-review/#212-findbugs","text":"FindBugs\u662f\u4e00\u4e2a\u5f00\u6e90\u5de5\u5177\uff0c\u53ef\u7528\u4e8e\u5bf9Java\u4ee3\u7801\u6267\u884c\u9759\u6001\u4ee3\u7801\u5206\u6790\uff0c\u5176\u7531\u9a6c\u91cc\u5170\u5927\u5b66Bill Pugh \u9886\u5bfc\u7684\u56e2\u961f\u7814\u53d1\uff0c\u5b9e\u73b0\u539f\u7406\u662f\u5bf9\u5b57\u8282\u7801\u8fdb\u884c\u626b\u63cf\u5e76\u8fdb\u884c\u6a21\u5f0f\u8bc6\u522b\u3002\u548cCheckstyle \u4e0d\u4e00\u6837\u7684\u662f\uff0cFindBugs\u4f1a\u901a\u8fc7\u5bf9\u4ee3\u7801\u7684\u6a21\u5f0f\u8fdb\u884c\u5206\u6790\u6765\u53d1\u73b0\u6f5c\u5728\u7684Bug\u548c\u5b89\u5168\u95ee\u9898\uff0c\u800cCheckstyle\u53ea\u80fd\u4f5c\u4e3a\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\u7684\u5de5\u5177\u3002\u867d\u7136FindBugs\u548cCheckstyle\u7684\u90e8\u5206\u529f\u80fd\u91cd\u53e0\uff0c\u4f46\u4e24\u8005\u7684\u5b9a\u4f4d\u660e\u663e\u4e0d\u540c\u3002 FindBugs\u4e2d\u5305\u542b\u4e0b\u9762\u51e0\u79cd\u95ee\u9898\u7c7b\u578b\u3002 Correctness\uff1a\u7531\u5f00\u53d1\u4eba\u5458\u758f\u5ffd\u9020\u6210\u7684\u6b63\u786e\u6027\u95ee\u9898\uff0c\u6bd4\u5982\u65e0\u9650\u9012\u5f52\u8c03\u7528\u3002 Bad practice\uff1a\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u574f\u4e60\u60ef\uff0c\u6bd4\u5982\u4f7f\u7528==\u5bf9String\u505a\u5224\u5b9a\u3002 Dodgy code\uff1a\u7cdf\u7cd5\u7684\u4ee3\u7801\uff0c\u80fd\u5de5\u4f5c\u4f46\u4e0d\u662f\u597d\u7684\u5b9e\u73b0\uff0c\u6bd4\u5982\u5197\u4f59\u7684\u6d41\u7a0b\u63a7\u5236\u3002 Multithreaded Correctness\uff1a\u591a\u7ebf\u7a0b\u548c\u5e76\u53d1\u95ee\u9898\u3002 Malicious Code Vulnerability\uff1a\u6076\u610f\u4ee3\u7801\u6f0f\u6d1e\u3002 Security\uff1a\u5b89\u5168\u95ee\u9898\u3002 Experimental\uff1a\u7ecf\u9a8c\u6027\u95ee\u9898\u3002 Internationalization\uff1a\u56fd\u9645\u5316\u95ee\u9898\u3002 \u9759\u6001\u4ee3\u7801\u5206\u6790\u5728\u4e00\u4e9b\u516c\u53f8\u7684\u7814\u53d1\u8fc7\u7a0b\u4e2d\u662f\u975e\u5e38\u91cd\u8981\u7684\u73af\u8282\uff0c\u901a\u5e38\u7528\u4e8e\u63d0\u4ea4\u4ee3\u7801\u540e\u7684\u7b2c\u4e00\u8f6e\u68c0\u67e5\uff0c\u5982\u679c\u5b58\u5728\u95ee\u9898\uff0c\u5c31\u4e0d\u4f1a\u8d70\u540e\u9762\u7684\u53d1\u5e03\u6d41\u7a0b\u3002\u53ef\u89c1\uff0c\u9759\u6001\u4ee3\u7801\u5206\u6790\u662f\u8d28\u91cf\u95e8\u7981\u7684\u4e00\u90e8\u5206\u3002 \u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u4f7f\u7528FindBugs\u68c0\u67e5\u5e76\u4fee\u590d\u4ee3\u7801\u95ee\u9898\u5bf9\u4e2a\u4eba\u6280\u80fd\u7684\u63d0\u5347\u4e5f\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\uff0c\u80fd\u9a71\u4f7f\u5f00\u53d1\u8005\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u6709\u610f\u8bc6\u5730\u89c4\u907f\u4e00\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\u3002 FindBugs\u6709\u4e24\u79cd\u5e38\u7528\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u4f7f\u7528IntelliJ IDEA \u7684\u63d2\u4ef6\u505a\u672c\u5730\u5206\u6790\uff0c\u6216\u8005\u4f5c\u4e3aMaven\u3001Gradle\u7684\u4efb\u52a1\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u8fd0\u884c\u3002","title":"2.1.2 FindBugs"},{"location":"02-code-review/#1intellij-ideafindbugs","text":"FindBugs\u63d2\u4ef6\u5728IntelliJ IDEA \u65e9\u671f\u7684\u7248\u672c\u4e2d\u662f\u72ec\u7acb\u63d0\u4f9b\u7684\uff0c\u540e\u6765\u9700\u8981\u5148\u5b89\u88c5QAPlug \u8fd9\u4e2a\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u5e76\u4f5c\u4e3aQAPlug\u7684\u4e00\u4e2a\u6a21\u5757\u63d0\u4f9b\u3002 QAPlug\u63d0\u4f9b\u4e86\u4ee3\u7801\u5206\u6790\u548c\u626b\u63cf\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u80fd\u96c6\u6210PMD\u7b49\u8bf8\u591a\u6a21\u5757\u3002\u4e0d\u8fc7\uff0c\u4f7f\u7528\u5b83\u4eec\u9700\u8981\u540c\u65f6\u5b89\u88c5QAPlug\u548cFindBugs\u8fd9\u4e24\u4e2a\u63d2\u4ef6\uff0c\u5e76\u4e14\u8981\u5728\u5b89\u88c5\u540e\u91cd\u542f\u3002 \u901a\u8fc7IDEA\u9996\u9009\u9879\u7684\u63d2\u4ef6\u5e02\u573a\u5373\u53ef\u5b89\u88c5QAPlug\u548cFindBugs\uff0c\u5982\u56fe2-1\u6240\u793a\u3002 \u56fe 2-1 \u63d2\u4ef6\u5b89\u88c5 \u8fd9\u4e24\u4e2a\u63d2\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u6bd4\u8f83\u7b80\u5355\uff0c\u53c2\u8003\u56fe2-2\uff0c\u76f4\u63a5\u5728\u9700\u8981\u626b\u63cf\u7684\u76ee\u5f55\u6216\u8005\u6a21\u5757\u4e0a\u70b9\u51fb\u53f3\u952e\uff0c\u5c31\u4f1a\u5f39\u51fa\u4ee3\u7801\u5206\u6790\u83dc\u5355\u3002 \u56fe 2-2 \u4ee3\u7801\u5206\u6790 \u5206\u6790\u5b8c\u6210\u540e\uff0c\u5728\u5e95\u90e8\u9762\u677f\u4e2d\u4f1a\u5f39\u51fa\u5206\u6790\u7ed3\u679c\uff0c\u5982\u56fe2-3\u6240\u793a\u3002 \u56fe 2-3 \u5206\u6790\u7ed3\u679c \u4ece\u56fe2-3\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u91cc\u626b\u63cf\u51fa\u4ee3\u7801\u4e2d\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u5728\u67d0\u4e00\u4e2a\u65b9\u6cd5\u4e2d\u4f7f\u7528\u4e86\u6d6e\u70b9\u7c7b\u578b\u505a\u6570\u5b66\u8fd0\u7b97\uff0c\u5b58\u5728\u6f5c\u5728\u7684\u7cbe\u5ea6\u95ee\u9898\u3002","title":"1.\u4f7f\u7528IntelliJ IDEA\u7684\u63d2\u4ef6FindBugs"},{"location":"02-code-review/#2-maven-findbugs","text":"\u60f3\u8981\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u4f7f\u7528FindBugs\uff08\u5982\u679c\u5b58\u5728\u95ee\u9898\u53ef\u4ee5\u8ba9\u6784\u5efa\u5931\u8d25\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528Maven\u7684\u63d2\u4ef6\u6765\u8fd0\u884c\u3002 \u521b\u5efaMaven\u9879\u76ee\u540e\uff0c\u5728Pom\u6587\u4ef6\u7684build\u5757\u4e2d\u6dfb\u52a0Maven\u63d2\u4ef6\u5373\u53ef\u5f00\u542fFindBugs \u529f\u80fd\uff1a <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>findbugs-maven-plugin</artifactId> <version>3.0.4</version> <configuration> <effort>Max</effort> </configuration> <executions> <execution> <goals> <goal>check</goal> </goals> </execution> </executions> </plugin> \u5728configuration\u5c5e\u6027\u7684\u914d\u7f6e\u4e2d\uff0ceffort\u53c2\u6570\u6bd4\u8f83\u5e38\u7528\uff0c\u5176\u542b\u4e49\u662f\u4f7f\u7528\u4e0d\u540c\u7a0b\u5ea6\u7684\u7b97\u529b\u8fdb\u884c\u5206\u6790\u3002Effort\u53c2\u6570\u6709max\u548cmin\u8fd9\u4e24\u4e2a\u503c\uff0c\u4f7f\u7528max\u610f\u5473\u7740\u9700\u8981\u82b1\u8d39\u66f4\u591a\u7684\u5185\u5b58\u548c\u65f6\u95f4\u6765\u627e\u51fa\u66f4\u591a\u7684\u7f3a\u9677\uff1b\u4f7f\u7528min\u5219\u4f1a\u5173\u95ed\u4e00\u4e9b\u9700\u8981\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\u548c\u5185\u5b58\u7684\u5206\u6790\u9879\u3002\u5982\u679c\u53d1\u73b0\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u8017\u65f6\u4e25\u91cd\uff0c\u53ef\u4ee5\u8c03\u6574\u8fd9\u4e2a\u503c\u3002 \u5176\u4ed6\u53c2\u6570\u53ca\u5176\u914d\u7f6e\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003FindBugs\u548cFindBugs Maven\u63d2\u4ef6\u7684\u76f8\u5173\u6587\u6863\u3002","title":"2. \u5728 Maven \u4e2d\u4f7f\u7528 FindBugs"},{"location":"02-code-review/#3-findbugs","text":"\u5728\u793a\u4f8b\u9879\u76ee\u4e2d\uff0c\u53ef\u80fd\u6709\u8bfb\u8005\u5df2\u7ecf\u627e\u5230\u4e86FindBugs\u6a21\u5757\uff0c\u8fd9\u4e2a\u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5178\u578b\u7684\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u5728\u65e5\u5e38\u4fee\u590dFindBugs\u65f6\u51fa\u73b0\u7684\u9891\u7387\u8f83\u9ad8\u3002\u5373\u4fbf\u4f60\u4e0d\u4f7f\u7528FindBugs\uff0c\u4e5f\u9700\u8981\u4e86\u89e3\u8fd9\u4e9b\u5e38\u89c1\u7684\u95ee\u9898\u6a21\u5f0f\uff0c\u867d\u7136\u8fd9\u4e9b\u95ee\u9898IDE\u5f80\u5f80\u4e5f\u90fd\u4f1a\u63d0\u793a\u3002 \u7cbe\u5ea6\u95ee\u9898 \u7531\u4e8e\u8ba1\u7b97\u673a\u901a\u8fc7\u4e8c\u8fdb\u5236\u65e0\u6cd5\u5b8c\u5168\u8868\u8fbe\u67d0\u4e9b\u5c0f\u6570\uff0c\u56e0\u6b64\u4f1a\u5bf9\u7cbe\u5ea6\u8fdb\u884c\u53d6\u820d\uff0c\u6545\u800c\u6211\u4eec\u5728\u4f7f\u7528\u5c0f\u6570\u8fdb\u884c\u6570\u5b66\u8fd0\u7b97\u65f6\u9700\u8981\u6ce8\u610f\u7cbe\u5ea6\u95ee\u9898\u3002\u793a\u4f8b\u5982\u4e0b\uff1a private static void mathCalculate() { double number1 = 0.1; double number2 = 0.2; double number3 = 0.3; if (number1 + number2 == number3) { System.out.println(\"\u7cbe\u5ea6\u95ee\u9898\u793a\u4f8b\"); } } \u65e0\u9650\u9012\u5f52\u8c03\u7528 \u9012\u5f52\u7a0b\u5e8f\u9700\u8981\u8bbe\u5b9a\u57fa\u672c\u7684\u7ed3\u675f\u6761\u4ef6\uff0c\u5426\u5219\u4f1a\u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u6808\u6ea2\u51fa\u3002\u793a\u4f8b\u5982\u4e0b\uff1a public class Person { private String name; public Person(String name) { this.name = name; } public String name() { return name(); } } Person testPerson = new Person(\"test\"); testPerson.name(); \u7a7a\u6307\u9488\u95ee\u9898 Java\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u4f7f\u7528\u5bf9\u8c61\u4e2d\u7684\u6210\u5458\u65f6\u9700\u8981\u6ce8\u610f\u5bf9\u8c61\u662f\u5426\u5b58\u5728\u3002\u793a\u4f8b\u5982\u4e0b\uff1a private static void nullIssue() { String test = null; if (test != null || test.length() > 0) { System.out.println(\"\u7a7a\u6307\u9488\u5f02\u5e38\"); } if (test == null && test.length() > 0) { System.out.println(\"\u76f8\u53cd\u7684\u60c5\u51b5\uff0c\u5bfc\u81f4\u7a7a\u6307\u9488\u5f02\u5e38\"); } } \u6f5c\u5728\u6b7b\u9501\u95ee\u9898 synchronized \u662f\u5bf9\u8c61\u6392\u4ed6\u9501\uff0c\u800c\u5b57\u7b26\u4e32\u7684\u5b57\u9762\u91cf\u662f\u6574\u4e2a JVM \u5171\u4eab\u7684\uff0c\u56e0\u6b64\u5bb9\u6613\u9020\u6210\u6b7b\u9501\uff0c\u6211\u4eec\u5f80\u5f80\u4e5f\u5bb9\u6613\u758f\u5ffd\u3002\u793a\u4f8b\u5982\u4e0b\uff1a private static final String lockField = \"LOCK_PLACE_HOLDER\"; private static void deadLock() { synchronized (lockField) { System.out.println(\"\u6b7b\u9501\u95ee\u9898\"); } } \u52a8\u6001\u7684\u6b7b\u9501\u6bd4\u8f83\u96be\u626b\u63cf\u51fa\u6765\uff0c\u5728\u540e\u9762\u7684\u5185\u5bb9\u4e2d\u4f1a\u4e13\u95e8\u8ba8\u8bba\u8fd9\u4e2a\u8bdd\u9898\u3002 \u5fd8\u8bb0\u4f7f\u7528throw \u8bed\u53e5\u629b\u51fa\u5f02\u5e38 \u5f02\u5e38\u88ab\u521b\u5efa\u540e\u4e0d\u4f7f\u7528throw \u8bed\u53e5\u629b\u51fa\uff0c\u7f16\u8bd1\u5668\u5e76\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f46\u662f\u5e94\u8be5\u629b\u51fa\u7684\u5f02\u5e38\u6ca1\u6709\u88ab\u629b\u51fa\uff0c\u5219\u53ef\u80fd\u5b58\u5728\u6f5c\u5728\u7684\u4e1a\u52a1\u903b\u8f91\u95ee\u9898\u3002\u793a\u4f8b\u5982\u4e0b\uff1a private static void noThrow() { boolean condition = false; if (condition) { // \u5fd8\u8bb0 throw \u4e00\u4e2a\u5f02\u5e38\uff0c\u4ec5\u4ec5\u521b\u5efa\u4e86 new RuntimeException(\"Dissatisfied condition\"); } } \u76f8\u7b49\u5224\u5b9a\u95ee\u9898 \u5bf9\u8c61\u662f\u5426\u76f8\u7b49\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u903b\u8f91\u6765\u5224\u65ad\uff0c\u50cf\u57fa\u672c\u7c7b\u578b\u4e00\u6837\u7b80\u5355\u6839\u636e\u8fd0\u7b97\u7b26==\u6765\u8fdb\u884c\u5224\u5b9a\u5e76\u4e0d\u53ef\u9760\u3002\u793a\u4f8b\u5982\u4e0b\uff1a private static void equalsString() { String sting1 = \"test\"; String sting2 = \"test\"; if (sting1 == sting2) { System.out.println(\"\u4e0d\u5b89\u5168\u7684\u76f8\u7b49\u5224\u5b9a\"); } } \u5b57\u7b26\u4e32\u5faa\u73af\u62fc\u63a5 \u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u91c7\u7528\u5b57\u7b26\u4e32\u5faa\u73af\u62fc\u63a5\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u4ee3\u7801\u6027\u80fd\u4f4e\u4e0b\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a private static void stringConcat() { String sting = \"test\"; // \u5e94\u8be5\u4f7f\u7528 String Builder for (int i = 0; i < 1000; i++) { sting += sting; } } \u5fd8\u8bb0\u4f7f\u7528\u8fd4\u56de\u503c \u5728\u4e00\u4e9b\u65b9\u6cd5\u4e2d\uff0c\u65b9\u6cd5\u4e0d\u4f1a\u5bf9\u53c2\u6570\u672c\u8eab\u505a\u4fee\u6539\uff0c\u56e0\u6b64\u9700\u8981\u63a5\u6536\u8fd4\u56de\u503c\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\uff0c\u8fd9\u90e8\u5206\u5f80\u5f80\u4f1a\u51fa\u73b0 Bug\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a private static void forgotReturnValue() { List<String> list = Arrays.asList(\"hello\"); // map \u9700\u8981\u4f7f\u7528\u8fd4\u56de\u503c list.stream().map(String::toUpperCase); String hello = \"hello \"; // \u5b57\u7b26\u4e32\u64cd\u4f5c\u4e5f\u9700\u8981\u8fd4\u56de\u503c hello.trim(); } \u6570\u7ec4\u4e0d\u4f7f\u7528\u8fed\u4ee3\u5668\u5220\u9664\u5143\u7d20 \u5982\u679c\u6570\u7ec4\u4e0d\u4f7f\u7528\u8fed\u4ee3\u5668\u5220\u9664\u5143\u7d20\uff0c\u800c\u662f\u76f4\u63a5\u5728for\u5faa\u73af\u4e2d\u5220\u9664\uff0c\u90a3\u4e48\u4f1a\u89e6\u53d1 Concurrent-ModificationException\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a private static void arrayListRemoveException() { ArrayList<String> list = new ArrayList<>(); // \u76f4\u63a5\u5728 for \u5faa\u73af\u4e2d\u5220\u9664\u4e86\u5143\u7d20 for (String item : list) { list.remove(item); } } \u8d44\u6e90\u5fd8\u8bb0\u5173\u95ed Java \u7684\u5783\u573e\u56de\u6536\u5668\u53ea\u8d1f\u8d23\u5904\u7406\u5185\u5b58\u56de\u6536\uff0c\u5b57\u8282\u6d41\u3001\u7f51\u7edc\u3001\u6587\u4ef6\u3001\u8fdb\u7a0b\u7b49\u76f8\u5173\u8d44\u6e90\u90fd\u9700\u8981\u624b\u52a8\u5173\u95ed\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u5b57\u8282\u6d41\uff1a private static void forgotCloseStream() { ByteArrayOutputStream out = new ByteArrayOutputStream(); ObjectOutputStream s = null; // \u9700\u8981\u5173\u95ed\u6d41 try { s = new ObjectOutputStream(out); s.writeObject(1); } catch (IOException e) { e.printStackTrace(); } } \u6570\u636e\u622a\u65ad \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e5f\u4f1a\u5b58\u5728\u6f5c\u5728\u7684 Bug\uff0c\u5b83\u4f1a\u5bfc\u81f4\u6570\u636e\u88ab\u622a\u65ad\u3002 private static void objectCastIssue() { long number = 1000L; // \u6570\u636e\u4f1a\u88ab\u622a\u65ad int number2 = (int) number; } \u8fd9\u4e9b\u95ee\u9898\u90fd\u975e\u5e38\u5e38\u89c1\uff0c\u901a\u8fc7 FindBugs \u57fa\u672c\u90fd\u53ef\u4ee5\u627e\u51fa\u6765\uff0c\u5982\u6b64\u4e00\u6765\uff0c\u5373\u53ef\u6709\u6548\u5730\u51cf\u5c11\u4ee3\u7801\u8bc4\u5ba1\u7684\u538b\u529b\u3002","title":"3. FindBugs \u7684\u9ad8\u9891\u9519\u8bef\u96c6\u5408"},{"location":"02-code-review/#213-archunit","text":"\u901a\u8fc7Checkstyle\u89e3\u51b3\u4e86\u4ee3\u7801\u7684\u98ce\u683c\u95ee\u9898\uff0c\u53c8\u4f7f\u7528FindBugs\u89e3\u51b3\u4e86\u57fa\u672c\u7684\u4ee3\u7801\u8d28\u91cf\u95ee\u9898\uff0c\u73b0\u5728\u8fd8\u9700\u8981\u89e3\u51b3\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u67b6\u6784\u89c4\u8303\u95ee\u9898\u3002 \u6709\u8db3\u591f\u7ecf\u9a8c\u7684\u5f00\u53d1\u8005\u90fd\u77e5\u9053\uff0c\u8f6f\u4ef6\u9879\u76ee\u548c\u67b6\u6784\u6781\u5176\u5bb9\u6613\u8150\u5316\u3002\u5982\u679c\u6ca1\u6709\u5f88\u597d\u5730\u7ba1\u63a7\uff0c\u65e0\u8bba\u662f\u91c7\u7528MVC\u7684\u4e09\u5c42\u67b6\u6784\u8fd8\u662fDDD\u7684\u56db\u5c42\u67b6\u6784\uff0c\u4ee3\u7801\u7684\u7ed3\u6784\u90fd\u4f1a\u5728\u51e0\u4e2a\u6708\u5185\u53d8\u5f97\u6df7\u4e71\u4e0d\u582a\u3002 \u6211\u66fe\u7ecf\u63a5\u624b\u8fc7\u4e00\u4e2a\u9879\u76ee\uff0c\u5b83\u7684\u4f9d\u8d56\u5173\u7cfb\u975e\u5e38\u6df7\u4e71\u3002\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0c\u5f00\u53d1\u8005\u5e38\u5e38\u5c06API \u63a5\u53e3\u53c2\u6570\u7684Request\u3001Response\u7b49\u5bf9\u8c61\u7528\u4e8e\u6570\u636e\u5e93\u3001Redis\u5b58\u50a8\uff0c\u8fd9\u5bfc\u81f4\u67b6\u6784\u7684\u4e0b\u5c42\u5b8c\u5168\u4f9d\u8d56\u4e8e\u4e0a\u5c42\u7ed3\u6784\u3002\u6211\u4e0d\u5f97\u4e0d\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u8fdb\u884c\u91cd\u6784\uff0c\u5e76\u4e14\u5728\u6bcf\u65e5\u8fdb\u884cCode Review\u65f6\u4e0d\u505c\u5730\u5411\u9879\u76ee\u6210\u5458\u5f3a\u8c03\u5305\u7ed3\u6784\u7684\u91cd\u8981\u6027\uff0c\u4ee5\u514d\u9879\u76ee\u7684\u65b0\u4eba\u56e0\u4e3a\u4e0d\u719f\u6089\u60c5\u51b5\u800c\u968f\u610f\u653e\u7f6e\u4ee3\u7801\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5\u8ba9\u5305\u7ed3\u6784\u68c0\u67e5\u6210\u4e3a\u81ea\u52a8\u5316\u68c0\u67e5\u7684\u4e00\u90e8\u5206\uff0c\u4ece\u800c\u8282\u7701\u56e2\u961f\u6280\u672f\u7ecf\u7406\u7684\u7ba1\u7406\u7cbe\u529b\u3002ArchUnit\u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u578b\u3001\u7b80\u5355\u3001\u53ef\u6269\u5c55\u7684\u5f00\u6e90Java\u6d4b\u8bd5\u5e93\uff0c\u53ef\u7528\u4e8e\u9a8c\u8bc1\u9884\u5b9a\u4e49\u7684\u5e94\u7528\u7a0b\u5e8f\u4f53\u7cfb\u7ed3\u6784\u548c\u7ea6\u675f\u5173\u7cfb\u3002 \u5728\u4f7f\u7528ArchUnit\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u8ba8\u8bba\u4e00\u4e0b\u5e38\u89c1\u7684\u4ee3\u7801\u5212\u5206\u5305\u7ed3\u6784\u7684\u65b9\u5f0f\u3002\u56e0\u5fae\u670d\u52a1\u548c\u5355\u4f53\u7cfb\u7edf\u4e0b\u4ee3\u7801\u7684\u80cc\u666f\u4e0d\u540c\uff0c\u6545\u800c\u4e0d\u540c\u9879\u76ee\u7684\u5305\u7ed3\u6784\u5212\u5206\u7b56\u7565\u4e5f\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u8fd9\u91cc\u6309\u7167\u5355\u4f53\u7cfb\u7edf\u4e0b\u7684\u7ed3\u6784\u6765\u8bf4\u660e\u3002","title":"2.1.3 ArchUnit"},{"location":"02-code-review/#1-java","text":"Java\u5e94\u7528\u9879\u76ee\u4e2d\u4e00\u822c\u6709\u4e24\u79cd\u7ec4\u7ec7\u4ee3\u7801\u7684\u65b9\u5f0f\u3002\u4e00\u79cd\u662f\u6309\u7167\"\u5927\u5e73\u5c42\"\u7684\u98ce\u683c\u7ec4\u7ec7\uff0c\u5373\u5c06\u540c\u4e00\u7c7b\u4ee3\u7801\u653e\u5230\u4e00\u4e2a\u5305\u4e2d\uff0c\u6bd4\u5982Service\u3001Dao\uff1b\u8fd8\u6709\u4e00\u79cd\u662f\u6309\u7167\u4e1a\u52a1\u6a21\u5757\u6765\u5212\u5206\uff0c\u6bcf\u4e2a\u6a21\u5757\u4e0b\u6709\u81ea\u5df1\u7684\"\u5927\u5e73\u5c42\"\u3002 \u53e6\u5916\uff0c\u4e0d\u540c\u7684\u4ee3\u7801\u4e5f\u4f1a\u6709\u4e0d\u540c\u7684\u5c42\u6b21\u5212\u5206\u65b9\u5f0f\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4e24\u79cd\uff0c\u4e00\u79cd\u662fMVC\u98ce\u683c\u7684\u4e09\u5c42\u7ed3\u6784\uff0c\u5373Controller\u3001Service\u548cDao\uff1b\u53e6\u5916\u4e00\u79cd\u662fDDD\u7684\u56db\u5c42\u7ed3\u6784\uff0c\u5373Interface\u3001Application\u3001Domain\u548cInfrastructure\u3002 \u63d0\u793a\uff1aDDD \u662f\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\uff08Domain-driven design\uff09\u7684\u82f1\u6587\u7f29\u5199\uff0c\u4e5f\u6307 Eric Evans \u5728 2003 \u5e74\u6240\u51fa\u7248\u7684\u56fe\u4e66\u300a\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\uff1a\u8f6f\u4ef6\u6838\u5fc3\u590d\u6742\u5ea6\u7684\u89e3\u51b3\u65b9\u6cd5\u300b\uff0c\u8be5\u4e66\u63d0\u51fa\u4e86\u4e00\u79cd\u56db\u5c42\u7684\u8f6f\u4ef6\u5206\u5c42\u7ed3\u6784\u3002 \u4e0a\u8ff0\u4e24\u4e2a\u7ef4\u5ea6\u5305\u542b\u4ee5\u4e0b 4 \u79cd\u5305\u7ec4\u7ec7\u7684\u65b9\u5f0f\uff0c\u4e0b\u9762\u4e00\u4e00\u8bf4\u660e\u3002 MVC \u5927\u5e73\u5c42\u5206\u5305 \u8fd9\u662f\u4e00\u79cd\u6700\u7b80\u5355\u7684\u5206\u5305\u65b9\u5f0f\uff0c\u5982\u56fe2-4\u6240\u793a\uff0c\u6309\u7167\u6700\u521dMVC\u6a21\u5f0f\u7684\u903b\u8f91\uff0c\u4e1a\u52a1\u5e94\u8be5\u5199\u5728Controller \u4e2d\u3002\u4f46\u662f\u968f\u7740\u524d\u540e\u7aef\u5206\u79bb\u7684\u53d1\u5c55\uff0cView\u5c42\u6d88\u5931\u4e86\u3002\u5728Spring Boot\u7b49\u6846\u67b6\u4e2d\uff0cController\u901a\u8fc7RESTful\u7684\u6ce8\u89e3\u4ee3\u66ff\u4e86View\u5c42\uff0c\u4e3b\u6d41\u7684\u505a\u6cd5\u6f14\u5316\u6210\u5c06\u4e1a\u52a1\u903b\u8f91\u5199\u5728Service\u4e2d\u3002 \u56fe 2-4 MVC \u5927\u5e73\u5c42\u5206\u5305 \u4e3a\u4e86\u4fdd\u6301\u67b6\u6784\u6574\u6d01\uff0c\u8fd9\u79cd\u5206\u5305\u7ed3\u6784\u4e0b\u9700\u8981\u6709\u5982\u4e0b\u7b80\u5355\u89c4\u5219\uff1a \u76f8\u540c\u7c7b\u578b\u7684\u6587\u4ef6\u653e\u5230\u76f8\u540c\u7684\u5305\u4e2d\u3002 \u4e0a\u5c42\u5bf9\u8c61\u53ef\u4ee5\u4f9d\u8d56\u4e0b\u5c42\u5bf9\u8c61\uff0c\u7981\u6b62\u53cd\u5411\u4f9d\u8d56\u3002 Request \u5bf9\u8c61\u53ea\u80fd\u5728 Controller \u4e2d\u4f7f\u7528\uff0c\u4e3a\u4e86\u4fdd\u6301 Service \u5c42\u7684\u590d\u7528\u6027\uff0c\u4e0d\u5141\u8bb8\u5728 Service \u4e2d\u5f15\u7528 Controller \u5c42\u7684\u4efb\u4f55\u7c7b\u3002 \u4e0d\u5efa\u8bae\u5c06 Model \u76f4\u63a5\u7528\u4e8e\u63a5\u53e3\u7684\u6570\u636e\u8f93\u51fa\uff0c\u800c\u5e94\u8be5\u8f6c\u6362\u4e3a\u7279\u5b9a\u7684 Response \u7c7b\u3002 \u6240\u6709\u6587\u4ef6\u9700\u8981\u4f7f\u7528\u5305\u540d\u4f5c\u4e3a\u7ed3\u5c3e\uff0c\u4f8b\u5982 UserController\u3001UserService\u3001UserModel\u3001UserDao\u7b49\u3002 \u8fd9\u662f\u4e00\u79cd\u6700\u7b80\u5355\u3001\u6e05\u6670\u7684\u5305\u7ed3\u6784\u5212\u5206\uff0c\u8fd9\u91cc\u8fd8\u6ca1\u6709\u6d89\u53ca\u679a\u4e3e\u3001\u8fdc\u7a0b\u8c03\u7528\u3001\u5de5\u5382\u7b49\u66f4\u4e3a\u7ec6\u8282\u7684\u5305\u7ed3\u6784\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u7ee7\u7eed\u6309\u7167\u9700\u8981\u62d3\u5c55\u3002 MVC \u6309\u7167\u6a21\u5757\u5206\u5305 \u5927\u5e73\u5c42\u7684\u5206\u5305\u65b9\u5f0f\u5728\u5927\u591a\u6570\u9879\u76ee\u4e2d\u5df2\u7ecf\u591f\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e9b\u590d\u6742\u7684\u9879\u76ee\uff0c\u8fd9\u79cd\u5305\u7ed3\u6784\u4f1a\u53d7\u5230\u56e2\u961f\u7684\u8d28\u7591\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e1a\u52a1\u5f88\u590d\u6742\u65f6\uff0c\u6bcf\u4e00\u4e2a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u90fd\u4f1a\u975e\u5e38\u591a\u3002\u8fd9\u65f6\uff0c\u53ef\u6839\u636e\u4e1a\u52a1\u5212\u5206\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u4e0b\u518d\u8bbe\u7f6e\u5355\u72ec\u7684\u5927\u5e73\u5c42\u7ed3\u6784\uff0c\u5982\u56fe 2-5 \u6240\u793a\u3002 \u56fe 2-5 MVC \u6309\u6a21\u5757\u5206\u5305 \u5728\u89c4\u6a21\u8f83\u5927\u3001\u590d\u6742\u7684\u5e94\u7528\u4e2d\u6309\u7167\u6a21\u5757\u5206\u5305\uff0c\u53ef\u4ee5\u5c06\u5355\u4e2a\u5f00\u53d1\u8005\u7684\u8ba4\u77e5\u8d1f\u8f7d\u964d\u4f4e\u3002\u867d\u7136\u6309\u7167\u8fd9\u79cd\u65b9\u5f0f\u5206\u5305\u53ef\u4ee5\u5c06\u5404\u4e2a\u4e1a\u52a1\u6a21\u5757\u5206\u5f00\uff0c\u7b80\u5316\u5355\u4e2a\u6a21\u5757\u7684\u5f00\u53d1\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u4f1a\u8ba9\u7cfb\u7edf\u6574\u4f53\u53d8\u5f97\u590d\u6742\u3002\u6211\u4eec\u5728\u4eab\u53d7\u8fd9\u79cd\u5206\u5305\u597d\u5904\u7684\u540c\u65f6\uff0c\u9700\u8981\u989d\u5916\u6ce8\u610f\u5b83\u5e26\u6765\u7684\u95ee\u9898\u3002\u4f8b\u5982\u7528\u6237\u6a21\u5757\u7684Controller\u53ef\u4ee5\u8bbf\u95ee\u5546\u54c1\u6a21\u5757\u7684Service\uff0c\u5546\u54c1\u6a21\u5757\u7684Service\u53c8\u53ef\u4ee5\u8f6c\u800c\u8bbf\u95ee\u7528\u6237\u6a21\u5757\u7684Dao\uff0c\u968f\u7740\u65f6\u95f4\u7684\u6d41\u901d\uff0c\u867d\u7136\u5404\u4e2a\u6a21\u5757\u7684\u6587\u4ef6\u770b\u8d77\u6765\u90fd\u662f\u5206\u5f00\u7684\uff0c\u4f46\u662f\u4e1a\u52a1\u4f9d\u7136\u4f1a\u6df7\u4e71\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u4f7f\u7528\u8fd9\u79cd\u5206\u5305\u65b9\u5f0f\u65f6\uff0c\u9664\u4e86\u9700\u8981\u9075\u5b88\u4e0a\u9762\u7684\u89c4\u5219\u4ee5\u5916\uff0c\u8fd8\u9700\u8981\u989d\u5916\u589e\u52a0\u5982\u4e0b\u89c4\u5219\uff1a \u8de8\u6a21\u5757\u8bbf\u95ee\u65f6\uff0c\u4e0d\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee Dao\uff0c\u800c\u662f\u5e94\u8bbf\u95ee\u5bf9\u65b9\u7684 Service\u3002 \u6a21\u5757\u4e4b\u95f4\u5e94\u8be5\u901a\u8fc7 Service \u4e92\u76f8\u8bbf\u95ee\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u8868\u5173\u8054\u3002 \u6a21\u5757\u4e4b\u95f4\u4e0d\u5141\u8bb8\u5b58\u5728\u5faa\u73af\u4f9d\u8d56\uff0c\u5982\u679c\u4ea7\u751f\u5faa\u73af\u4f9d\u8d56\uff0c\u5e94\u8be5\u91cd\u65b0\u8bbe\u8ba1\u3002 DDD \u5927\u5e73\u5c42\u5206\u5305 MVC\u5206\u5305\u65b9\u5f0f\u867d\u7136\u80fd\u6ee1\u8db3\u5927\u90e8\u5206\u9879\u76ee\u7684\u9700\u6c42\uff0c\u4f46\u662f\u5bf9\u4e8e\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u89c4\u6a21\u5316\u5e94\u7528\u6765\u8bf4\uff0c\u4e5f\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53\u6211\u4eec\u7684\u5e94\u7528\u9700\u8981\u652f\u6301\u591a\u4e2a\u89d2\u8272\u7684\u64cd\u4f5c\u65f6\uff0cMVC\u5c31\u4f1a\u5e26\u6765\u4e00\u5b9a\u7684\u6df7\u4e71\u3002\u8fd9\u91cc\u7684\u89d2\u8272\u4e0d\u662f\u6307\u7ba1\u7406\u5458\u548c\u8d85\u7ea7\u7ba1\u7406\u5458\u90a3\u79cd\u4ec5\u4ec5\u662f\u6743\u9650\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u800c\u662f\u6307\u7ba1\u7406\u5458\u3001\u7528\u6237\u3001\u4ee3\u7406\u5546\u7b49\u5b8c\u5168\u4e0d\u540c\u7684\u64cd\u4f5c\u903b\u8f91\u548c\u4ea4\u4e92\u884c\u4e3a\u3002\u8fd9\u79cd\u601d\u60f3\u548cDDD\u7684\u5206\u5c42\u601d\u60f3\u4e0d\u8c0b\u800c\u5408\u3002 \u5982\u56fe 2-6 \u6240\u793a\uff0cDDD\u7684\u56db\u5c42\u7ed3\u6784\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u6982\u5ff5\u3002 Interface \u5c42\uff1a\u7528\u4e8e\u9694\u79bb\u63a5\u53e3\u5dee\u5f02\uff0c\u5373\u6bd4\u5982 XML\u3001WebSocket\u3001JSON \u7b49\u3002 Application \u5c42\uff1a\u7528\u4e8e\u9694\u79bb\u5e94\u7528\u5dee\u5f02\uff0c\u5373\u5c06\u7528\u6237\u7684\u64cd\u4f5c\u548c\u7ba1\u7406\u5458\u7684\u64cd\u4f5c\u533a\u5206\u5f00\u3002 Domain \u5c42\uff1a\u7528\u4e8e\u590d\u7528\u4e1a\u52a1\u903b\u8f91\u3002 Infrastructure \u5c42\uff1a\u4e00\u4e9b\u57fa\u7840\u8bbe\u65bd\uff0c\u4f8b\u5982\u6570\u636e\u5e93\u3001Redis\u3001\u8fdc\u7a0b\u8bbf\u95ee\u7b49\u3002 \u53ef\u4ee5\u770b\u5230\uff0c DDD \u5927\u5e73\u5c42\u5206\u5305\u65b9\u5f0f\u5212\u5206\u7684\u5305\u7ed3\u6784\u548c MVC \u533a\u522b\u4e0d\u7b97\u5927\uff0c\u4e3b\u8981\u662f\u5c06\u5e94\u7528\u5c42\u9694\u79bb\uff0c\u800c\u5c06\u9886\u57df\u5c42\u7684\u540c\u7c7b\u578b\u4ee3\u7801\u653e\u5230\u4e00\u8d77\uff0c\u4f7f\u7528\u89c4\u5219\u4e5f\u7c7b\u4f3c\u3002 \u56fe 2-6 DDD \u5927\u5e73\u5c42\u5206\u5305 DDD \u57fa\u4e8e\u6a21\u5757\u5206\u5305 DDD \u4e5f\u53ef\u4ee5\u57fa\u4e8e\u6a21\u5757\u5206\u5305\uff0c\u5982\u56fe 2-7 \u6240\u793a\uff0c\u8fd9\u91cc\u7684\u6a21\u5757\u5212\u5206\u53ea\u4f1a\u9488\u5bf9\u4e8e\u9886\u57df\u5bf9\u8c61\u548c\u9886\u57df\u670d\u52a1\u8fdb\u884c\uff0c\u5176\u4e2d\u6d89\u53ca\u4e00\u4e2a\u4e13\u95e8\u7684\u672f\u8bed\u2014\u2014\u4e0a\u4e0b\u6587\u3002 \u56fe 2-7 DDD \u57fa\u4e8e\u6a21\u5757\u5206\u5305 \u9700\u8981\u6ce8\u610f\u7684\u662f \uff0cDDD \u57fa\u4e8e\u6a21\u5757\u5206\u5305\u5e76\u4e0d\u662f\u4e00\u80a1\u8111\u5730\u5c06\u6240\u6709\u7684 Controller\u3001Service \u7eb3\u5165\u67d0\u4e2a\u6a21\u5757\u4e2d\uff0c\u8fd9\u79cd\u505a\u6cd5\u4f1a\u9020\u6210\u4e1a\u52a1\u8fdb\u4e00\u6b65\u6df7\u4e71\u3002\u5b83\u662f\u5c06\u5e94\u7528\u548c\u9886\u57df\u5206\u5f00\uff0c\u518d\u6309\u7167\u4e0d\u540c\u7684\u903b\u8f91\u8fdb\u884c\u62c6\u5206\u3002 DDD\u57fa\u4e8e\u6a21\u5757\u5206\u5305\u65f6\uff0c\u9700\u8981\u9075\u5b88\u5982\u4e0b\u89c4\u5219\uff1a \u5e94\u7528\u53ef\u4f9d\u8d56\u4e8e\u9886\u57df\uff0c\u9886\u57df\u4e0d\u5141\u8bb8\u4f9d\u8d56\u4e8e\u5e94\u7528\u3002 \u4e0a\u4e0b\u6587\u4e4b\u95f4\u4e0d\u5141\u8bb8\u5b58\u5728\u5faa\u73af\u4f9d\u8d56\u3002 \u4e0a\u4e0b\u6587\u4e4b\u95f4\u7684\u8bbf\u95ee\u9700\u8981\u901a\u8fc7 Domain Service \u5b8c\u6210\uff0c\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\u5bf9\u65b9\u7684\u6570\u636e\u5c42\u3002 \u4ee5\u4e0a\u56db\u79cd\u5206\u5305\u7684\u65b9\u5f0f\u867d\u7136\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u662f\u76f8\u5dee\u5f97\u4e0d\u591a\u3002\u6211\u4eec\u5e94\u8be5\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u60c5\u51b5\u6765\u9009\u62e9\u5206\u5305\u7684\u65b9\u5f0f\uff0c\u5982\u679c\u7b80\u5355\u7684\u4e1a\u52a1\u4f7f\u7528\u8f83\u4e3a\u590d\u6742\u7684\u5305\u7ed3\u6784\uff0c\u4f1a\u5e26\u6765\u975e\u5e38\u591a\u7684\u6837\u677f\u4ee3\u7801\uff0c\u964d\u4f4e\u5f00\u53d1\u6548\u7387\u3002 \u5206\u5c42\u7684\u672c\u8d28\u662f\u9694\u79bb\u5dee\u5f02\uff0c\u5982\u679c\u5728\u7cfb\u7edf\u53ef\u77e5\u7684\u8fd0\u884c\u65f6\u95f4\u5185\u6ca1\u6709\u5dee\u5f02\u7684\u51fa\u73b0\uff0c\u53ef\u4ee5\u5148\u4e0d\u8003\u8651\u5206\u5c42\uff0c\u8fd9\u79cd\u5206\u5c42\u9664\u4e86\u4eba\u4e3a\u589e\u52a0\u590d\u6742\u5ea6\u4e4b\u5916\u5f80\u5f80\u6ca1\u6709\u4efb\u4f55\u597d\u5904\u3002 \u5f53\u7136\uff0c\u8fd8\u6709\u6d0b\u8471\u67b6\u6784\u3001\u516d\u8fb9\u5f62\u67b6\u6784\u7b49\u5176\u4ed6\u67b6\u6784\u65b9\u5f0f\uff0c\u4f46\u662f\u76f8\u5bf9\u5c0f\u4f17\uff0c\u8fd9\u91cc\u6682\u4e14\u4e0d\u505a\u5206\u6790\u3002 \u8003\u8651\u597d\u5206\u5305\u65b9\u5f0f\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u914d\u7f6eArchUnit\u68c0\u67e5\u6761\u4ef6\u548c\u7ea6\u675f\u89c4\u5219\u4e86\u3002\u540e\u6587\u5c06\u4ee5\"MVC\u5927\u5e73\u5c42\u5206\u5305\"\u65b9\u5f0f\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u4f7f\u7528ArchUnit\u5bf9\u5305\u7ed3\u6784\u8fdb\u884c\u68c0\u67e5\u3002\u5f53\u7136\uff0c\u4e0d\u4f7f\u7528ArchUnit\u4e5f\u53ef\u4ee5\u901a\u8fc7\u56e2\u961f\u5951\u7ea6\u3001\u591a\u6a21\u5757\u7684\u9879\u76ee\u8bbe\u8ba1\u5bf9\u56e2\u961f\u5f00\u53d1\u505a\u4e00\u4e9b\u7ea6\u675f\u3002","title":"1. \u5e38\u89c1 \u7684Java \u5de5\u7a0b\u7684\u5305\u7ed3\u6784"},{"location":"02-code-review/#2-archunit","text":"ArchUnit\u5229\u7528\u53cd\u5c04\u548c\u5b57\u8282\u7801\u6280\u672f\u83b7\u53d6\u6240\u6709\u7684\u5305\u3001\u7c7b\u3001\u5b57\u6bb5\u7b49\u4fe1\u606f\uff0c\u5e76\u901a\u8fc7\u7279\u5b9a\u7684\u5206\u6790\u6765\u786e\u5b9a\u5bf9\u8c61\u4e4b\u95f4\u7684\u8bbf\u95ee\u5173\u7cfb\u3002ArchUnit\u4f7f\u7528ASM\u4f5c\u4e3a\u5206\u6790\u5b57\u8282\u7801\u7684\u5de5\u5177\uff0c\u4ee3\u4ef7\u662fArchUnit \u4e2d\u5f88\u591a\u89c4\u5219\u7684\u5b9a\u4e49\u4e0d\u662f\u7c7b\u578b\u5b89\u5168\u7684\u3002 ArchUnit \u652f\u6301\u7684\u68c0\u67e5\u7279\u6027\u6709\uff1a \u5305\u4f9d\u8d56\u68c0\u67e5\u3002 \u7c7b\u4f9d\u8d56\u68c0\u67e5\u3002 \u7c7b\u548c\u5305\u7684\u4f4d\u7f6e\u7ea6\u5b9a\u68c0\u67e5\u3002 \u7ee7\u627f\u68c0\u67e5\u3002 \u5206\u5c42\u4f9d\u8d56\u68c0\u67e5\u3002 \u5faa\u73af\u4f9d\u8d56\u68c0\u67e5\uff08Spring \u652f\u6301\u53cc\u5411\u4f9d\u8d56\u5f80\u5f80\u4f1a\u5bfc\u81f4\u5faa\u73af\u73b0\u8c61\uff09\u3002 ArchUnit \u672c\u8eab\u4e5f\u662f\u6309\u7167\u5206\u5c42\u67b6\u6784\u8bbe\u8ba1\u7684\uff0c\u5176 API \u5206\u4e3a\u5982\u4e0b\u4e09\u5c42\u3002 Core\uff1a\u6838\u5fc3\u5c42\uff0c\u5904\u7406\u4e00\u4e9b\u57fa\u672c\u7684\u7c7b\u3001\u5b57\u8282\u7801\u7b49\u64cd\u4f5c\uff0c\u7528\u4e8e\u5bf9\u5bfc\u5165\u7684\u7c7b\u8fdb\u884c\u65ad\u8a00\u3002 Lang\uff1a\u5904\u7406\u5404\u79cd\u89c4\u5219\u7684\u8bed\u6cd5\u548c\u67b6\u6784\u903b\u8f91\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e9b\u57fa\u672c\u7684\u68c0\u67e5\u5668\u3002 Library\uff1a\u5b9a\u4e49\u4e00\u4e9b\u66f4\u4e3a\u590d\u6742\u7684\u9884\u5b9a\u4e49\u89c4\u5219\u3002","title":"2. ArchUnit \u7684\u539f\u7406"},{"location":"02-code-review/#3-archunit","text":"ArchUnit \u7684\u4f7f\u7528\u6bd4\u8f83\u7b80\u5355\uff0c\u53ef\u4ee5\u901a\u8fc7 JUnit \u7684 Runner \u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 Maven\u3001Gradle \u7b49\u6784\u5efa\u5de5\u5177\u6765\u8fd0\u884c\u3002\u4e0b\u9762\u4ee5 JUnit \u4f5c\u4e3a\u793a\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u4f7f\u7528 ArchUnit\u3002 ArchUnit\u652f\u6301\u4e0d\u540c\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662fJUnit 4\uff08\u5173\u4e8eJUnit\uff0c\u5c06\u5728\u4e0b\u4e00\u7ae0\u4ecb\u7ecd\uff09\u3002ArchUnit \u66f4\u50cf\u662f\u8fdb\u884c\u4ee3\u7801\u89c4\u8303\u7684\u68c0\u67e5\u800c\u4e0d\u662f\u6d4b\u8bd5\uff0c\u867d\u7136\u5b83\u4f7f\u7528\u4e86JUnit\u5e73\u53f0\uff0c\u4f46\u5176\u5b9e\u5927\u5bb6\u66f4\u613f\u610f\u628a\u5b83\u5212\u5206\u5230\u9759\u6001\u4ee3\u7801\u5206\u6790\u4e2d\u3002 \u5728Maven\u4e2d\u4f7f\u7528ArchUnit\uff0c\u9996\u5148\u9700\u8981\u6dfb\u52a0\u76f8\u5173\u7684\u4f9d\u8d56\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.13</version> <scope>test</scope> </dependency> <dependency> <groupId>com.tngtech.archunit</groupId> <artifactId>archunit</artifactId> <version>0.14.1</version> <scope>test</scope> </dependency> \u5728\u56fe 2-8 \u4e2d\u51c6\u5907\u4e86\u4e00\u4e2a Demo \u5e94\u7528\uff0c\u5b83\u6709\u4e09\u4e2a\u5305\u548c\u4e09\u4e2a\u4e3b\u8981\u7684\u7c7b\u3002 \u56fe 2-8 \u5206\u5c42\u793a\u4f8b \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u89c4\u5219\u7f16\u5199 ArchUnit \u6d4b\u8bd5\uff1a Controller \u4e2d\u7684\u7c7b\u4e0d\u5141\u8bb8\u88ab Service\u3001Dao \u8bbf\u95ee\u3002 \u6240\u6709\u7684\u7c7b\u540d\u5fc5\u987b\u4f7f\u7528\u5f53\u524d\u7684\u5305\u540d\u7ed3\u5c3e\u3002 \u7136\u540e\u5728\u5bf9\u5e94\u7684\u6d4b\u8bd5\u76ee\u5f55\u4e0b\uff0c\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7c7b ArchUnitTest\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6765\u9650\u5236\u7c7b\u540d\uff0c\u6240\u6709\u7684 Controller \u6587\u4ef6\u5fc5\u987b\u4ee5 Controller \u7ed3\u675f\uff1a @Test public void file_name_should_end_with_package_name() { JavaClasses importedClasses = new ClassFileImporter().importPackages(this.getClass().getPackage().getName()); classes().that().resideInAPackage(\"..controller\") .should().haveSimpleNameEndingWith(\"Controller\") .check(importedClasses); classes().that().resideInAPackage(\"..service\") .should().haveSimpleNameEndingWith(\"Service\") .check(importedClasses); classes().that().resideInAPackage(\"..dao\") .should().haveSimpleNameEndingWith(\"Dao\") .check(importedClasses); } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cimportedClasses \u4e3a\u88ab\u8986\u76d6\u7684\u8303\u56f4\uff0cArchUnit \u53ef\u4ee5\u901a\u8fc7 ClassFileImporter\u3001JavaTypeImporter \u7b49\u65b9\u5f0f\u52a0\u8f7d\u9700\u8981\u88ab\u9a8c\u8bc1\u7684\u7c7b\u3002 \u4e0a\u9762\u8fd9\u6bb5\u6d4b\u8bd5\u4e2d\u5305\u542b\u4e86 3 \u6761\u9a8c\u8bc1\u89c4\u5219\uff0c\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u5c31\u662f\u5176\u4e2d\u4e00\u6761\u3002\u4f7f\u7528 ArchUnit \u53ea\u9700\u8981\u6309\u7167\u7c7b\u4f3c\u7684\u505a\u6cd5\u7f16\u5199\u8fd9\u4e9b\u89c4\u5219\u5373\u53ef\u3002 classes().that().resideInAPackage(\"..controller\") .should().haveSimpleNameEndingWith(\"Controller\") .check(importedClasses); \u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u94fe\u5f0f\u98ce\u683c\u7684API\uff0cclasses()\u65b9\u6cd5\u662fArchUnit lang\u5c42\u7684\u5de5\u5177\u65b9\u6cd5\uff0c\u7528\u4e8e\u58f0\u660e\u57fa\u672c\u7684\u89c4\u5219\uff0c\u5927\u90e8\u5206\u57fa\u672c\u89c4\u5219\u90fd\u53ef\u4ee5\u4f7f\u7528classes()\u65b9\u6cd5\u6765\u521d\u59cb\u5316\u58f0\u660e\u3002that()\u65b9\u6cd5\u540e\u9762\u7684\u5185\u5bb9\u4ee3\u8868\u54ea\u4e9b\u7b26\u5408\u89c4\u5219\u7684\u7c7b\u4f1a\u88ab\u7b5b\u9009\u5230\u3002ArchUnit\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u7b5b\u9009\u5668\uff0c\u6bd4\u5982\u7c7b\u578b\u3001\u662f\u5426\u4f7f\u7528\u4e86\u67d0\u79cd\u6ce8\u89e3\u7b49\u3002should()\u65b9\u6cd5\u540e\u9762\u63a5\u7684\u662f\u65ad\u8a00\u89c4\u5219\uff0c\u6bd4\u5982\u7c7b\u540d\u89c4\u5219\u3001\u4f9d\u8d56\u89c4\u5219\u7b49\u3002 \u63a5\u4e0b\u6765\u5b9e\u73b0MVC\u5206\u5c42\u67b6\u6784\u7684\u4f9d\u8d56\u68c0\u67e5\uff0c\u8fd9\u91cc\u4f1a\u7528\u5230library\u5305\u4e2d\u7684\u9884\u5b9a\u4e49\u89c4\u5219\u65b9\u6cd5layeredArchitecture()\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_obey_MVC_architecture_rule() { JavaClasses importedClasses = new ClassFileImporter().importPackages(this.getClass().getPackage().getName()); layeredArchitecture() .layer(\"Controller\").definedBy(\"..controller..\") .layer(\"Service\").definedBy(\"..service..\") .layer(\"Dao\").definedBy(\"..dao..\") .whereLayer(\"Controller\").mayNotBeAccessedByAnyLayer() .whereLayer(\"Service\").mayOnlyBeAccessedByLayers(\"Controller\") .whereLayer(\"Dao\").mayOnlyBeAccessedByLayers(\"Service\"); layeredArchitecture.check(importedClasses); } \u6267\u884c\u4e0a\u8ff0\u4ee3\u7801\u65f6\uff0c\u5728IDEA\u7f16\u8f91\u5668\u8fb9\u7f18\u4f1a\u51fa\u73b0\u7eff\u8272\u7684\u8fd0\u884c\u6309\u94ae\uff0c\u5355\u51fb\u6b64\u6309\u94ae\u5373\u53ef\u4f5c\u4e3a\u5355\u5143\u6d4b\u8bd5\u8fd0\u884c\u3002\u8fd9\u91cc\u4f7f\u7528layeredArchitecture()\u5c06controller\u3001service\u548cdao\u4e09\u4e2a\u5305\u4e2d\u7684\u7c7b\u5206\u522b\u5b9a\u4e49\u4e3aController\u3001Service\u548cDao\u5c42\uff0c\u5e76\u58f0\u660e\u5176\u7ea6\u675f\u5173\u7cfb\u3002\u5982\u679c\u51fa\u73b0\u9519\u8bef\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u6d4b\u8bd5\u5c31\u4e0d\u4f1a\u901a\u8fc7\u3002 \u5b98\u7f51\u4f7f\u7528\u4e86\u4e00\u5f20\u56fe\u6765\u8bf4\u660e\u4e09\u5c42\u67b6\u6784\u4e0b\u7684\u4f9d\u8d56\u5173\u7cfb\uff08\u5982\u56fe2-9\u6240\u793a\uff09\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u53ea\u5141\u8bb8\u4e0b\u5c42\u7c7b\u88ab\u4e0a\u5c42\u8c03\u7528\uff0c\u4ee5\u6b64\u6765\u5b88\u62a4\u4ee3\u7801\u7684\u67b6\u6784\u3002\u5728\u7f16\u5199\u672c\u4e66\u65f6\uff0c\u5b98\u7f51\u7684\u793a\u4f8b\u4ee3\u7801\u5b58\u5728\u90e8\u5206\u672a\u66f4\u65b0\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6309\u7167\u5b98\u7f51\u7684\u8bf4\u660e\u4e0d\u80fd\u8fd0\u884c\uff0c\u53ef\u4ee5\u53c2\u8003\u672c\u4e66\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801\u3002 \u56fe 2-9 ArchUnit \u7684\u4f9d\u8d56\u793a\u610f\u56fe \uff08\u6ce8\uff1a\u56fe\u7247\u6765\u6e90\u4e8e https://www.archunit.org/\uff09","title":"3. ArchUnit \u4f7f\u7528\u5165\u95e8"},{"location":"02-code-review/#214-owasp-dependency-check","text":"\u67b6\u6784\u7684\u95ee\u9898\u89e3\u51b3\u540e\uff0c\u8fd8\u9700\u8981\u907f\u514d\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u5f00\u6e90\u8f6f\u4ef6\u5e26\u6765\u7684\u5b89\u5168\u95ee\u9898\u3002\u5f00\u653e\u5f0fWeb \u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u9879\u76ee\uff08OWASP\uff09\u662f\u4e00\u4e2a\u975e\u8425\u5229\u7ec4\u7ec7\uff0c\u63d0\u4f9b\u4e86\u5b89\u5168\u6807\u51c6\u3001\u6570\u636e\u5e93\u3001\u793e\u533a\u548c\u57f9\u8bad\u3002\u5176\u4e2d\u4e00\u4e2a\u5de5\u5177OWASP Dependency-Check\u53ef\u4ee5\u5bf9\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5305\u4e2d\u7684\u77e5\u540d\u6f0f\u6d1e\u8fdb\u884c\u68c0\u67e5\uff0c\u626b\u63cf\u7ed3\u679c\u53d7\u6f0f\u6d1e\u6570\u636e\u5e93\u7684\u66f4\u65b0\u5f71\u54cd\u3002 OWASP Dependency-Check\u53ef\u4ee5\u62a5\u544a\u73b0\u6709\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u7684CVE\u3002CVE\u7684\u82f1\u6587\u5168\u79f0\u662fCommon Vulnerabilities & Exposures\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u7406\u89e3\u4e3a\u4e1a\u754c\u5df2\u77e5\u7684\u6f0f\u6d1e\u6279\u6f0f\u3002 OWASP\u7684\u5b89\u5168\u626b\u63cf\u548cfortify\u7b49\u5b89\u5168\u626b\u63cf\u5de5\u5177\u6709\u6240\u4e0d\u540c\uff0c\u5b83\u4f9d\u8d56\u4e8e\u5f00\u653e\u7684\u6f0f\u6d1e\u4fe1\u606f\uff0c\u4e0d\u80fd\u5b8c\u5168\u4ee3\u66ff\u6a21\u5f0f\u5206\u6790\u7c7b\u5b89\u5168\u626b\u63cf\u5de5\u5177\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u57fa\u4e8eOWASP Dependency-Check \u8fdb\u884c\u7684\u4f9d\u8d56\u68c0\u67e5\u4e5f\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u73b0\u4ee3\u9879\u76ee\u4f9d\u8d56\u7684\u7ec4\u4ef6\u8f83\u591a\uff0c\u901a\u8fc7\u4eba\u5de5\u68c0\u67e5\u7684\u65b9\u5f0f\u8f83\u96be\u53ca\u65f6\u53d1\u73b0\u6f0f\u6d1e\u3002 OWASP\u7684\u4f9d\u8d56\u68c0\u67e5\u652f\u6301\u4e3b\u6d41\u7684\u8bed\u8a00\u548c\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u5bf9\u4e8eJava\u8bed\u8a00\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528Maven\u63d2\u4ef6\u6765\u8fd0\u884cOWASP Dependency-Check\u3002\u4e0eCheckstyle\u7c7b\u4f3c\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u6a21\u5757\uff0c\u5728Pom\u6587\u4ef6\u4e2d\u6dfb\u52a0\u76f8\u5173\u4f9d\u8d56\uff1a <plugin> <groupId>org.owasp</groupId> <artifactId>dependency-check-maven</artifactId> <version>6.1.3</version> <executions> <execution> <goals> <goal>check</goal> </goals> </execution> </executions> </plugin> \u5728\u771f\u5b9e\u7684\u9879\u76ee\u4e2d\uff0c\u4f9d\u8d56\u5305\u7684\u53d8\u5316\u6ca1\u6709\u90a3\u4e48\u9891\u7e41\uff0c\u5982\u679c\u6bcf\u6b21\u6784\u5efa\u90fd\u8fd0\u884c\u8fd9\u4e2a\u68c0\u67e5\u4f1a\u8ba9\u6784\u5efa\u53d8\u6162\u3002\u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\u4f7f\u7528CI/CD\u5de5\u5177\uff0c\u6bd4\u5982Jenkins\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u5b9a\u65f6\u7684\u4efb\u52a1\u5728\u591c\u95f4\u8fd0\u884c\u3002\u5173\u4e8eJenkins\u7684\u4f7f\u7528\uff0c\u8bf7\u53c2\u8003\u672c\u4e66\u6d4b\u8bd5\u5de5\u7a0b\u5316\u90e8\u5206\u3002 \u4f7f\u7528 OWASP Dependency-Check \u65f6\u9700\u8981\u610f\u8bc6\u5230\uff0c\u5b83\u5e76\u4e0d\u80fd\u53d6\u4ee3\u5b89\u5168\u6d4b\u8bd5\u3002\u7531\u4e8e\u5b83\u7684\u5b9e\u73b0\u673a\u5236\u662f\u901a\u8fc7CVE\u5e93\u6765\u62a5\u544a\u95ee\u9898\u7684\uff0c\u56e0\u6b64\u53d7\u5236\u4e8e\u8be5\u5e93\u7684\u66f4\u65b0\u60c5\u51b5\uff0c\u5b58\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7684\u6ede\u540e\u95ee\u9898\u3002","title":"2.1.4 OWASP Dependency-Check"},{"location":"02-code-review/#22","text":"\u8fd9\u91cc\u7684\u4ee3\u7801\u8bc4\u5ba1\u662f\u6307\u4eba\u5de5\u67e5\u770b\u4ee3\u7801\u662f\u5426\u5b58\u5728\u95ee\u9898\u6216\u8005\u6539\u8fdb\u70b9\uff0c\u4eba\u5de5\u8fdb\u884c\u4ee3\u7801\u8bc4\u5ba1\u66f4\u52a0\u5173\u6ce8\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u4ee3\u7801\u7684\u8bbe\u8ba1\u5f80\u5f80\u4e0d\u80fd\u88ab\u81ea\u52a8\u5316\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u53d1\u73b0\u3002\u6bd4\u5982\uff0c\u56e2\u961f\u67d0\u4e2a\u6210\u5458\u7f16\u5199\u7684\u4ee3\u7801\u4f7f\u7528\u4e86\u62fc\u97f3\u4f5c\u4e3a\u53d8\u91cf\u540d\uff0c\u867d\u7136\u80fd\u901a\u8fc7\u9759\u6001\u4ee3\u7801\u5206\u6790\uff0c\u4f46\u8fd9\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u8bbe\u8ba1\uff0c\u4e0d\u826f\u7684\u547d\u540d\u65b9\u6cd5\u4f1a\u8ba9\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u5927\u5927\u964d\u4f4e\u3002","title":"2.2 \u4ee3\u7801\u8bc4\u5ba1"},{"location":"02-code-review/#221","text":"\u4ee3\u7801\u8bc4\u5ba1\u662f\u56fd\u9645\u8f6f\u4ef6\u4e1a\u754c\u516c\u8ba4\u7684\u6700\u6709\u6548\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u4e4b\u4e00\uff0c\u4eba\u5de5\u4ee3\u7801\u8bc4\u5ba1\u548c\u6d4b\u8bd5\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\uff0c\u4eba\u5de5\u4ee3\u7801\u8bc4\u5ba1\u4e0d\u53ea\u662f\u53d1\u73b0\u4ee3\u7801\u4e2d\u7684\u9519\u8bef\uff0c\u5b83\u8fd8\u80fd\u9884\u9632\u4e00\u4e9b\u9519\u8bef\u7684\u53d1\u751f\u3002 \u6211\u4eec\u53ef\u901a\u8fc7\u7ea0\u6b63\u5f00\u53d1\u8005\u7684\u7f16\u7801\u4e60\u60ef\u548c\u98ce\u683c\uff0c\u6765\u63d0\u9ad8\u8f6f\u4ef6\u7684\u8d28\u91cf\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6ca1\u6709\u4e3a\u5173\u952e\u7a0b\u5e8f\u6dfb\u52a0\u4e8b\u52a1\u5904\u7406\u673a\u5236\uff0c\u90a3\u4e48\u6d4b\u8bd5\u4eba\u5458\u5f80\u5f80\u4e0d\u4f1a\u6d4b\u8bd5\u51fa\u95ee\u9898\uff0c\u4f46\u662f\u5728\u9ad8\u5e76\u53d1\u7684\u60c5\u51b5\u4e0b\u4f1a\u6709\u4e00\u5b9a\u7684\u673a\u4f1a\u66b4\u9732\u7f3a\u4e4f\u6b64\u673a\u5236\u7684\u95ee\u9898\u3002\u5728\u4ee3\u7801\u8bc4\u5ba1\u9636\u6bb5\uff0c\u82e5\u80fd\u53ca\u65f6\u53d1\u73b0\u56e2\u961f\u6210\u5458\u6ca1\u6709\u589e\u52a0\u4e8b\u52a1\u76f8\u5173\u7684\u6ce8\u89e3\uff0c\u5c31\u80fd\u907f\u514d\u6f5c\u5728\u95ee\u9898\u7684\u51fa\u73b0\u3002\u4ee3\u7801\u8bc4\u5ba1\u4e5f\u8ba9\u56e2\u961f\u7684\u534f\u4f5c\u98ce\u683c\u8d8b\u4e8e\u7edf\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8bc4\u5ba1\u8fc7\u7a0b\u4e2d\u6574\u7406\u4e00\u4e9b\u4ee3\u7801\u89c4\u8303\uff0c\u8ba9\u56e2\u961f\u6210\u5458\u6309\u7167\u76f8\u4f3c\u7684\u98ce\u683c\u8fdb\u884c\u5f00\u53d1\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4f7f\u7528\u9759\u6001\u4ee3\u7801\u5206\u6790\u6765\u4fdd\u8bc1\u4ee3\u7801\u8d28\u91cf\uff0c\u4f46\u9759\u6001\u4ee3\u7801\u5206\u6790\u65e0\u6cd5\u89e3\u51b3\u6240\u6709\u95ee\u9898\uff0c\u56e0\u6b64\u4e0d\u80fd\u5b8c\u5168\u4f9d\u8d56\u4e8e\u5b83\uff0c\u5728\u4e00\u4e9b\u573a\u666f\u4e2d\u6211\u4eec\u9700\u8981\u8ba9\u56e2\u961f\u6210\u5458\u4e00\u8d77\u6765\u505a\u4ee3\u7801\u8bc4\u5ba1\u3002 \u5728\u56e2\u961f\u65e5\u5e38\u7684\u5f00\u53d1\u5de5\u4f5c\u4e2d\uff0c\u6709\u5982\u4e0b\u51e0\u79cd\u4ee3\u7801\u8bc4\u5ba1\u65b9\u5f0f\u3002 1\uff09 \u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u3002 \u4e00\u822c\u662f\u5728\u6bcf\u5929\u4e0b\u5348\u4e0b\u73ed\u524d\u62ff\u51fa1\u4e2a\u5c0f\u65f6\u6765\u5bf9\u5f53\u5929\u7684\u4ee3\u7801\u505a\u8bc4\u5ba1\u3002\u5982\u679c\u4e00\u4e2a\u56e2\u961f\u5171\u67098\u4e2a\u6210\u5458\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u9700\u8981\u82b1\u8d39\u4e00\u4e2a\u4eba\u5929\u3002\u6709\u4e00\u4e9b\u9879\u76ee\u7ecf\u7406\u7279\u522b\u4e0d\u7406\u89e3\u4e3a\u4ec0\u4e48\u9700\u8981\u82b1\u65f6\u95f4\u6765\u505a\u8fd9\u4ef6\u4e8b\u60c5\u3002\u5b9e\u9645\u4e0a\uff0c\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u975e\u5e38\u91cd\u8981\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u5206\u644a\u9700\u8981\u8bc4\u5ba1\u7684\u4ee3\u7801\u91cf\uff0c\u4e5f\u53ef\u4ee5\u8ba9\u56e2\u961f\u7684\u7f16\u7801\u98ce\u683c\u65e5\u8d8b\u7edf\u4e00\uff0c\u5982\u6b64\u5f80\u590d\u9700\u8981\u6307\u51fa\u7684\u9519\u8bef\u5c31\u4f1a\u8d8a\u6765\u8d8a\u5c11\u3002\u6b64\u5916\uff0c\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u4e5f\u662f\u56e2\u961f\u8fdb\u884c\u6280\u672f\u4ea4\u6d41\u7684\u4e00\u4e2a\u5951\u673a\uff0c\u56e2\u961f\u6210\u5458\u5f7c\u6b64\u4e4b\u95f4\u53ef\u4ee5\u6e05\u6670\u5730\u4e86\u89e3\u5bf9\u65b9\u5728\u505a\u4ec0\u4e48\u3002 2\uff09 \u53d1\u5e03\u524d\u4ee3\u7801\u8bc4\u5ba1\u3002 \u53d1\u5e03\u524d\u8fdb\u884c\u4ee3\u7801\u8bc4\u5ba1\u7684\u76ee\u7684\u662f\u907f\u514d\u4ea7\u54c1\u4e2d\u6709\u660e\u663e\u4e0d\u5408\u9002\u7684\u4ee3\u7801\u3002\u6709\u65f6\u5019\u4e00\u4e9b\u9519\u8bef\u6d4b\u8bd5\u4eba\u5458\u5f88\u6709\u53ef\u80fd\u6ca1\u6709\u8986\u76d6\u4f4f\uff0c\u800c\u901a\u8fc7\u53d1\u5e03\u524d\u4ee3\u7801\u8bc4\u5ba1\u5c31\u80fd\u5feb\u901f\u8bc6\u522b\u3002\u5982\u679c\u56e2\u961f\u7684\u7248\u672c\u7ba1\u7406\u7b56\u7565\u662f\u5728Release\u5206\u652f\u4e0a\u53d1\u5e03\uff0c\u90a3\u4e48\u901a\u8fc7\u4e0e\u53e6\u4e00\u4e2a\u5206\u652f\u4e0a\u4e4b\u524d\u53d1\u5e03\u7684\u7248\u672c\u5bf9\u6bd4\uff0c\u4e5f\u5c31\u53ef\u4ee5\u770b\u51fa\u4e24\u8005\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u53d1\u5e03\u524d\u4ee3\u7801\u8bc4\u5ba1\u7684\u5de5\u4f5c\u91cf\u6bd4\u8f83\u5927\uff0c\u4e00\u4e9b\u521b\u4e1a\u56e2\u961f\u4e0d\u613f\u610f\u505a\u662f\u53ef\u4ee5\u7406\u89e3\u7684\uff0c\u5bf9\u4e8e\u6210\u719f\u7684\u516c\u53f8\uff0c\u5982\u679c\u662f\u6709\u5927\u91cf\u7528\u6237\u7684\u4ea7\u54c1\uff0c\u5219\u9700\u8981\u8ba4\u771f\u8fdb\u884c\u6b64\u8bc4\u5ba1\u3002 3\uff09 Hotfix \u4ee3\u7801\u8bc4\u5ba1\u3002 \u4e00\u4e2a\u65b0\u7248\u672c\u53d1\u5e03\u540e\uff0c\u5f80\u5f80\u4f1a\u6709\u4e00\u4e9b\u95ee\u9898\u9700\u8981\u53ca\u65f6\u4fee\u590d\uff0c\u6211\u4eec\u5c06\u8fd9\u79cd\u4fee\u590d\u53eb\u4f5c Hotfix\u3002Hotfix\u901a\u5e38\u4e0d\u4f1a\u6539\u52a8\u592a\u591a\u5730\u65b9\uff0c\u6d4b\u8bd5\u4eba\u5458\u4e5f\u65e0\u529b\u5168\u90e8\u8fdb\u884c\u56de\u5f52\u6d4b\u8bd5\uff0c\u6240\u4ee5Hotfix\u4e00\u822c\u662f\u901a\u8fc7Pull Request\u6765\u5b8c\u6210\u7684\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u7531\u6709\u7ecf\u9a8c\u7684\u6280\u672f\u7ecf\u7406\u6765\u628a\u5173\u5408\u5165\u7684\u4ee3\u7801\u662f\u5426\u5b58\u5728\u660e\u663e\u7684\u95ee\u9898\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u4e0a\u8ff0\u4e09\u79cd\u4e3b\u8981\u7684\u4ee3\u7801\u8bc4\u5ba1\u65b9\u5f0f\u90fd\u53d1\u751f\u5728\u56e2\u961f\u5185\u90e8\u3002\u5176\u4e2d\uff0c\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u548c\u53d1\u5e03\u524d\u7684\u4ee3\u7801\u8bc4\u5ba1\u901a\u5e38\u9700\u8981\u56e2\u961f\u6210\u5458\u4e00\u8d77\u53c2\u52a0\uff0c\u5bf9\u6b64\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5927\u5c4f\u914d\u5408IDE\u5728\u672c\u5730\u5b8c\u6210\u3002","title":"2.2.1 \u4ee3\u7801\u8bc4\u5ba1\u7684\u573a\u666f"},{"location":"02-code-review/#222","text":"\u4ee3\u7801\u8bc4\u5ba1\u57fa\u4e8e\u5982\u4e0b\u5de5\u5177\u6765\u8fdb\u884c\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\u3002 \u4ee3\u7801\u7248\u672c\u7ba1\u7406\u5de5\u5177\uff0c\u6bd4\u5982 Git\u3001SVN\u3001Mercurial\u7b49\uff0c\u4e0d\u8fc7\u76ee\u524d\u5927\u90fd\u4f7f\u7528 Git \u3002Git \u7684\u5206\u5e03\u5f0f\u7279\u6027\u5f88\u51fa\u8272\uff0c\u5de5\u5177\u94fe\u4e5f\u5b8c\u5584\uff0c\u5982\u679c\u6ca1\u6709\u522b\u7684\u9650\u5236\u56e0\u7d20\uff0c\u53ef\u4ee5\u9ed8\u8ba4\u4f7f\u7528 Git\u3002 \u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\uff0cGitLab\u3001Github\u4ee5\u53ca\u56fd\u5185\u7684 Gitee \u90fd\u4e0d\u9519\uff0c\u5982\u679c\u5728\u4f01\u4e1a\u5185\u90e8\u4f7f\u7528\uff0c\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u642d\u5efa GitLab\uff0c\u4e0d\u8fc7 GitLab \u6bd4\u8f83\u590d\u6742\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u4f7f\u7528 Gogs \u901a\u8fc7 Docker \u5bb9\u5668\u5feb\u901f\u542f\u52a8\u4e00\u5957 Git \u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u3002 \u4ee3\u7801\u5bf9\u6bd4\u5de5\u5177\u3002\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u4e00\u822c\u4f1a\u63d0\u4f9b\u5185\u7f6e\u7684\u4ee3\u7801\u5bf9\u6bd4\u5de5\u5177\uff0c\u4e0d\u8fc7\u8bbf\u95ee\u6bd4\u8f83\u6162\u3002\u8fd8\u6709\u4e13\u4e1a\u7684\u4ee3\u7801\u5bf9\u6bd4\u5de5\u5177\u8f6f\u4ef6\uff08\u6bd4\u5982 Beyond Compare\uff09\uff0c\u4ee5\u53ca\u96c6\u6210\u5230 IDE Git \u5ba2\u6237\u7aef\u4e2d\u7684\u4ee3\u7801\u5bf9\u6bd4\u5de5\u5177\uff08\u6bd4\u5982 IntelliJ IDEA \u7b49\uff09\u3002IntelliJ IDEA\u5728\u5927\u90e8\u5206\u9879\u76ee\u4e2d\u5b8c\u5168\u591f\u7528\uff0c\u800c\u4e14\u5728\u591a\u4eba\u53c2\u4e0e\u7684\u4ee3\u7801\u8bc4\u5ba1\u6d3b\u52a8\u4e2d\u6548\u7387\u4e5f\u6bd4\u8f83\u9ad8\u3002 \u4e13\u7528\u7684\u4ee3\u7801\u8bc4\u5ba1\u5de5\u5177\u3002\u8fd9\u7c7b\u5de5\u5177\u662f\u4e13\u95e8\u4e3a\u4ee3\u7801\u8bc4\u5ba1\u800c\u8bbe\u8ba1\u7684\uff0c\u6bd4\u5982 Gerrit\u3002Gerrit \u53ef\u4ee5\u5728\u7f51\u9875\u4e2d\u505a\u7c7b\u4f3c\u4e8e GitLab\u3001Github \u7684\u5de5\u4f5c\uff0c\u800c\u4e14\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u5de5\u4f5c\u6d41\u7ba1\u7406\u80fd\u529b\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4e8e\u975e\u5f00\u6e90\u9879\u76ee\uff0cGitLab\u4e0eIntelliJ IDEA\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u5de5\u5177\u7ec4\u5408\uff0c\u914d\u7f6e\u548c\u4f7f\u7528\u7b80\u5355\uff0c\u7ef4\u62a4\u6210\u672c\u4e5f\u6bd4\u8f83\u4f4e\u3002","title":"2.2.2 \u4ee3\u7801\u8bc4\u5ba1\u7684\u5de5\u5177"},{"location":"02-code-review/#223","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u4ee3\u7801\u8bc4\u5ba1\u5bf9\u6280\u5de7\u7684\u8981\u6c42\u4e0d\u9ad8\uff0c\u6839\u636e\u56e2\u961f\u7684\u4e60\u60ef\u548c\u98ce\u683c\u5ba1\u6838\u5373\u53ef\u3002\u5386\u53f2\u4e0a\u53ef\u4ee5\u8ffd\u6eaf\u7684\u4ee3\u7801\u8bc4\u5ba1\u65b9\u6cd5\u6709 IBM\u516c\u53f8\u57281972\u5e74\u63d0\u51fa\u7684\u57f9\u6839\u6cd5\u3002\u57f9\u6839\u6cd5\u5c06\u4ee3\u7801\u8bc4\u5ba1\u7684\u53c2\u4e0e\u4eba\u5206\u4e3a\u4ee3\u7801\u4f5c\u8005\u3001\u5ba1\u67e5\u8005\u548c\u4e3b\u6301\u4eba\uff0c\u8fd9\u4e9b\u4eba\u5458\u7ec4\u6210\u8bc4\u5ba1\u59d4\u5458\u4f1a\u3002 \u57f9\u6839\u6cd5\u8981\u6c42\u5148\u7531\u4ee3\u7801\u4f5c\u8005\u8fdb\u884c\u4ee3\u7801\u53d9\u8ff0\uff0c\u7136\u540e\u7531\u5ba1\u67e5\u8005\u63d0\u51fa\u95ee\u9898\u3002\u5ba1\u67e5\u8005\u9700\u8981\u63d0\u524d\u9605\u8bfb\u4ee3\u7801\uff0c\u5e76\u51c6\u5907\u95ee\u9898\u3002\u7531\u4e8e\u57f9\u6839\u6cd5\u8bc4\u5ba1\u7684\u901f\u5ea6\u5b9e\u5728\u592a\u6162\uff0c\u91c7\u7528\u6b64\u65b9\u6cd5\u7684\u56e2\u961f\u5e76\u4e0d\u591a\u3002IBM \u8868\u793a\u4ed6\u4eec\u5728\u4e00\u4e9b\u5173\u952e\u7684\u6a21\u5757\u4e2d\u4f7f\u7528\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6700\u7ec8\u5e26\u6765\u7684\u6536\u76ca\u5e76\u4e0d\u4f4e\u3002\u636e\u7edf\u8ba1\uff0c\u7531\u4e8e\u51cf\u5c11\u4e86\u9879\u76ee\u540e\u671f\u4fee\u6539\u548c\u8fd4\u5de5\u7684\u65f6\u95f4\uff0c\u4ee3\u7801\u8bc4\u5ba1\u4f7f\u5f97\u9879\u76ee\u7684\u5f00\u53d1\u65f6\u95f4\u53cd\u800c\u63d0\u524d\u4e8630%\u3002 \u5bf9\u4e8e\u666e\u901a\u7684\u56e2\u961f\uff0c\u8fd8\u662f\u5efa\u8bae\u6839\u636e\u573a\u666f\u6765\u5236\u5b9a\u5408\u9002\u7684\u8bc4\u5ba1\u7b56\u7565\uff0c\u5728\u6210\u672c\u548c\u6536\u76ca\u4e4b\u95f4\u6743\u8861\u3002\u4e0b\u9762\u662f\u6839\u636e\u4e0d\u540c\u573a\u666f\u63d0\u51fa\u7684\u4ee3\u7801\u8bc4\u5ba1\u6ce8\u610f\u4e8b\u9879\u3002","title":"2.2.3 \u4ee3\u7801\u8bc4\u5ba1\u7684\u6ce8\u610f\u4e8b\u9879"},{"location":"02-code-review/#1","text":"\u4e00\u822c\u6211\u4eec\u8ba8\u8bba\u5f97\u6bd4\u8f83\u591a\u7684\u662f\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\uff0c\u56e0\u4e3a\u9700\u8981\u5168\u5458\u53c2\u4e0e\uff0c\u65f6\u95f4\u53c8\u6bd4\u8f83\u6709\u9650\uff0c\u56e0\u6b64\u4e3b\u6301\u4eba\u8981\u6709\u8f83\u5f3a\u7684\u7ec4\u7ec7\u80fd\u529b\uff0c\u800c\u4e14\u4e3a\u4e86\u9ad8\u6548\u5730\u8fdb\u884c\u4ee3\u7801\u8bc4\u5ba1\uff0c\u56e2\u961f\u4e5f\u9700\u8981\u8fbe\u6210\u4e00\u4e9b\u5951\u7ea6\u3002 \uff081\uff09\u5c0f\u6b65\u63d0\u4ea4 \u56e2\u961f\u6210\u5458\u9700\u8981\u4fdd\u6301\u826f\u597d\u7684\u4ee3\u7801\u63d0\u4ea4\u4e60\u60ef\u2014\u2014\u5c0f\u6b65\u63d0\u4ea4\u4ee3\u7801\u3002\u6bcf\u5b8c\u6210\u4e00\u4e2a\u5c0f\u9636\u6bb5\u7684\u5f00\u53d1\u6216\u91cd\u6784\u5de5\u4f5c\u90fd\u9700\u8981\u63d0\u4ea4\u4e00\u6b21\u4ee3\u7801\uff0c\u5728\u907f\u514d\u66f4\u6539\u4e22\u5931\u7684\u540c\u65f6\u4e5f\u53ef\u4e3a\u66f4\u597d\u5730\u8bc4\u5ba1\u4ee3\u7801\u6253\u4e0b\u57fa\u7840\u3002\u6bcf\u4e00\u6b21\u7684\u63d0\u4ea4\u90fd\u9700\u8981\u4f7f\u7528\u6709\u610f\u4e49\u3001\u98ce\u683c\u4e00\u81f4\u7684\u6587\u672c\u63cf\u8ff0\uff0c\u4e5f\u9700\u8981\u9075\u5b88\u76f8\u5e94\u7684\u89c4\u5219\uff0c\u6bd4\u5982\u4f7f\u7528\u770b\u677f\u5361\u7247\u7ba1\u7406\u4efb\u52a1\u7684\u56e2\u961f\u4f1a\u6309\u7167\"# [\u5361\u53f7] [\u63cf\u8ff0]\"\u7684\u6a21\u5f0f\u63d0\u4ea4\u4ee3\u7801\u3002 \uff082\uff09\u63cf\u8ff0\u8981\u5177\u4f53 \u5728\u8fdb\u884c\u4ee3\u7801\u8bc4\u5ba1\u7684\u65f6\u5019\u907f\u514d\u4f7f\u7528\u8bf8\u5982\"\u8fd9\u4e2a\u5730\u65b9\u7684\u5b9e\u73b0\u4e0d\u4f18\u96c5\"\u8fd9\u7c7b\u4f3c\u662f\u800c\u975e\u7684\u7528\u8bed\uff0c\u5e94\u8be5\u4f7f\u7528\u66f4\u4e3a\u5177\u4f53\u7684\u8868\u8ff0\uff0c\u6bd4\u5982\"\u4f7f\u7528\u4e86\u592a\u591a\u7684if\u8bed\u53e5\uff0c\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u7b49\u8bbe\u8ba1\u6a21\u5f0f\u6539\u8fdb\u8bbe\u8ba1\"\u3002\u6b64\u5916\uff0c\u8fd8\u8981\u907f\u514d\u63d0\u51fa\u5e26\u6709\u4e2a\u4eba\u4e60\u60ef\u7684\u610f\u89c1\uff0c\u4f8b\u5982\"\u5e94\u8be5\u4f7f\u7528switch\u8bed\u53e5\u800c\u975e\u591a\u4e2aif\u8bed\u53e5\u201d\u7b49\u3002 \uff083\uff09\u53ca\u65f6\u4fee\u6539 \u4ee3\u7801\u8bc4\u5ba1\u8fc7\u7a0b\u4e2d\u63d0\u51fa\u7684\u95ee\u9898\uff0c\u9700\u8981\u4ee3\u7801\u4f5c\u8005\u81ea\u884c\u8bb0\u5f55\uff0c\u5e76\u4e14\u5c3d\u53ef\u80fd\u5728\u5f53\u5929\u5b8c\u6210\u4fee\u590d\u548c\u5904\u7406\u3002\u4e00\u4e9b\u96f6\u788e\u7684\u5c0f\u4e8b\u653e\u5230\u4ee5\u540e\u505a\u90fd\u662f\u4e0d\u73b0\u5b9e\u7684\u3002 \uff084\uff09\u4e13\u6ce8\u53c2\u4e0e \u5982\u679c\u662f\u7ebf\u4e0b\u8bc4\u5ba1\uff0c\u6700\u597d\u4f7f\u7528\u5927\u5c4f\u6216\u4e13\u95e8\u7684\u4f1a\u8bae\u5ba4\uff0c\u907f\u514d\u5927\u5bb6\u4e00\u8fb9\u8fdb\u884c\u4ee3\u7801\u8bc4\u5ba1\u4e00\u8fb9\u505a\u5176\u4ed6\u7684\u4e8b\u60c5\u3002\u5982\u679c\u662f\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u901a\u8fc7\u89c6\u9891\u4f1a\u8bae\u8bc4\u5ba1\uff0c\u5219\u5efa\u8bae\u6240\u6709\u4eba\u6253\u5f00\u6444\u50cf\u5934\uff0c\u4e3b\u6301\u4eba\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u4e3b\u6301\u6280\u5de7\uff0c\u6bd4\u5982\u4e0d\u5b9a\u65f6\u5bf9\u90e8\u5206\u53c2\u4e0e\u4eba\u5458\u70b9\u540d\uff0c\u5524\u8d77\u5927\u5bb6\u7684\u6ce8\u610f\u529b\u3002 \uff085\uff09\u805a\u7126\u5f53\u4e0b \u6700\u7cdf\u7cd5\u7684\u4ee3\u7801\u8bc4\u5ba1\u5c31\u662f\u7a81\u7136\u5c94\u5f00\u8bdd\u9898\uff0c\u8fdb\u884c\u6280\u672f\u65b9\u6848\u3001\u4e1a\u52a1\u65b9\u6848\u7684\u8ba8\u8bba\uff0c\u8fd9\u4f1a\u6d6a\u8d39\u5927\u5bb6\u7684\u65f6\u95f4\u3002\u5982\u679c\u8bdd\u9898\u88ab\u5c94\u5f00\uff0c\u90a3\u5c06\u4f1a\u662f\u4e00\u4e2a\u65e0\u5e95\u6d1e\uff0c\u5c31\u50cf\u300a\u7231\u4e3d\u4e1d\u68a6\u6e38\u4ed9\u5883\u300b\u4e2d\u5154\u5b50\u6d1e\u7684\u6545\u4e8b\uff08Rabbit Hole\uff09\u6240\u63cf\u8ff0\u7684\u4e00\u6837\u3002\u4ee3\u7801\u8bc4\u5ba1\u5e94\u8be5\u4e13\u6ce8\u4e8e\u5f53\u4e0b\u7684\u4ee3\u7801\u95ee\u9898\uff0c\u907f\u514d\u9677\u5165\u6280\u672f\u548c\u4e1a\u52a1\u7ec6\u8282\uff0c\u5982\u679c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u63d0\u51fa\u5728\u4e13\u95e8\u7684\u6280\u672f\u4f1a\u8bae\u4e2d\u8ba8\u8bba\u3002 \uff086\uff09\u63a7\u5236\u597d\u65f6\u95f4 \u4ee3\u7801\u8bc4\u5ba1\u4e2d\u6700\u96be\u7684\u5c31\u662f\u65f6\u95f4\u63a7\u5236\uff0c\u4e00\u822c\u4e00\u4e2a\u6b63\u5e38\u7684\u5f00\u53d1\u56e2\u961f\u6bcf\u5929\u6bcf\u4eba\u7684\u5de5\u4f5c\u91cf\u81f3\u5c11\u9700\u898110\u5206\u949f\u624d\u80fd\u63cf\u8ff0\u6e05\u695a\uff0c\u56e0\u6b64\uff0c\u9700\u8981\u7ed9\u6bcf\u4e2a\u4eba\u8bbe\u5b9a\u4e00\u4e2a\u65f6\u95f4\u7a97\u53e3\uff0c\u907f\u514d\u8d85\u65f6\u3002\u4e00\u822c\u6765\u8bf4\u53ef\u6839\u636e\u4eba\u6570\u8bbe\u5b9a\u65f6\u95f4\uff0c\u5982\u679c\u8d85\u65f6\u4e86\uff0c\u5c31\u7acb\u9a6c\u505c\u6b62\uff0c\u7b2c\u4e8c\u5929\u7ee7\u7eed\uff0c\u8fd9\u6837\u4f1a\u8d8a\u6765\u8d8a\u5feb\u3002 \uff087\uff09\u5206\u7ec4\u8bc4\u5ba1 \u5982\u679c\u56e2\u961f\u89c4\u6a21\u8fc7\u5927\uff0c\u65e0\u8bba\u5982\u4f55\u4e5f\u65e0\u6cd5\u57281\u4e2a\u5c0f\u65f6\u5185\u5b8c\u6210\u8bc4\u5ba1\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u5206\u7ec4\u3002\u4e3a\u4e86\u8ba9\u6240\u6709\u7684\u5f00\u53d1\u8005\u90fd\u80fd\u4e86\u89e3\u5168\u5c40\uff0c\u4ee5\u53ca\u4fdd\u6301\u77e5\u8bc6\u4f20\u9012\uff0c\u53ef\u4ee5\u6309\u5468\u3001\u8fed\u4ee3\u9891\u7387\u7b49\u91cd\u65b0\u5206\u7ec4\u3002 \uff088\uff09\u77e5\u8bc6\u6574\u7406 \u91cd\u590d\u51fa\u73b0\u7684\u95ee\u9898\u4e0d\u5e94\u8be5\u88ab\u91cd\u590d\u63d0\u51fa\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5e38\u89c1\u7684\u95ee\u9898\uff0c\u56e2\u961f\u53ef\u4ee5\u6574\u7406\u4e00\u4efd\u8bc4\u5ba1\u6e05\u5355\uff0c\u5f53\u6709\u65b0\u4eba\u53c2\u4e0e\u9879\u76ee\u65f6\uff0c\u8bc4\u5ba1\u6e05\u5355\u6709\u5229\u4e8e\u5176\u66f4\u5feb\u5730\u9002\u5e94\u56e2\u961f\u98ce\u683c\uff0c\u4e5f\u53ef\u4ee5\u964d\u4f4e\u53d1\u73b0\u95ee\u9898\u7684\u6210\u672c\u548c\u5076\u7136\u6027\uff0c\u540c\u65f6\u5f00\u53d1\u8005\u5728\u63d0\u4ea4\u4ee3\u7801\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u53c2\u8003\u6e05\u5355\u81ea\u5df1\u5148\u8bc4\u5ba1\u4e00\u904d\u3002","title":"1. \u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1"},{"location":"02-code-review/#2_2","text":"\u53d1\u5e03\u524d\u7684\u4ee3\u7801\u8bc4\u5ba1\u4e0d\u7528\u5168\u5458\u53c2\u4e0e\uff0c\u53ef\u4ee5\u7531\u6280\u672f\u7ecf\u7406\u6311\u9009\u51e0\u4e2a\u5173\u952e\u4eba\u5458\u53c2\u52a0\uff0c\u5982\u679c\u9047\u5230\u65e0\u6cd5\u7406\u89e3\u7684\u90e8\u5206\uff0c\u53ef\u4ee5\u9080\u8bf7\u63d0\u4ea4\u4eba\u6765\u8fdb\u4e00\u6b65\u89e3\u91ca\u3002\u53d1\u5e03\u524d\u7684\u4ee3\u7801\u8bc4\u5ba1\u7740\u91cd\u4e8e\u5904\u7406\u5bf9\u7ebf\u4e0a\u5177\u6709\u7834\u574f\u6027\u7684\u4fee\u6539\uff0c\u4ece\u800c\u907f\u514d\u4e00\u4e9b\u5371\u5bb3\u3002 \u6b64\u5916\uff0c\u5b83\u8fd8\u53ef\u4ee5\u53d1\u73b0\u56e0\u7ba1\u7406\u95ee\u9898\u5e26\u6765\u7684\u7ebf\u4e0a\u6e38\u79bb\u53d8\u66f4\uff0c\u6bd4\u5982\u524d\u4e00\u4e2a\u8fed\u4ee3\u8fdb\u884c\u4e86Hotfix\uff0c\u4f46\u662f\u6ca1\u6709\u53ca\u65f6\u5408\u5e76\u5230\u4e3b\u5e72\u4e0a\uff0c\u5bfc\u81f4\u751f\u4ea7\u4e0a\u6709\u76f8\u5173\u4ee3\u7801\u4f46\u662f\u5f53\u524d\u53d1\u5e03\u7684\u7248\u672c\u4e2d\u5374\u6ca1\u6709\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u53d1\u5e03\u5b8c\u6210\u540e\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002","title":"2. \u53d1\u5e03\u524d\u7684\u4ee3\u7801\u8bc4\u5ba1"},{"location":"02-code-review/#3-hotfix","text":"Hotfix\u4ee3\u7801\u8bc4\u5ba1\u6bd4\u8f83\u7b80\u5355\uff0c\u4e00\u822c\u5728\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u4e2d\u5bf9Pull Request\u8fdb\u884c\u8bbe\u5b9a\u5373\u53ef\uff0c\u6bd4\u5982\uff0c\u5fc5\u987b\u6709\u591a\u5c11\u4eba\u901a\u8fc7\u624d\u5141\u8bb8\u5408\u5e76\u7b49\u3002\u6b64\u5916\uff0c\u901a\u8fc7Pull Request\u4e5f\u53ef\u4ee5\u8ffd\u6eafHotfix\u7684\u53d8\u66f4\u8bb0\u5f55\u3002 \u5728\u4e00\u4e9b\u7ba1\u7406\u4e25\u683c\u7684\u516c\u53f8\u4e2d\uff0cHotfix\u8fd8\u9700\u8981\u7ecf\u8fc7\u591a\u7ea7\u5ba1\u6838\u624d\u53d1\u5e03\uff0c\u6bd5\u7adf\u5bf9\u4e8eHotfix\u6765\u8bf4\uff0c\u5168\u91cf\u6267\u884c\u624b\u52a8\u7684\u56de\u5f52\u6d4b\u8bd5\u4e0d\u592a\u73b0\u5b9e\uff0c\u6240\u4ee5\u6298\u4e2d\u7684\u65b9\u6cd5\u662f\u5bf9\u53d8\u66f4\u7684\u4ee3\u7801\u8fdb\u884c\u4e25\u683c\u8bc4\u5ba1\u3002","title":"3. Hotfix \u4ee3\u7801\u8bc4\u5ba1"},{"location":"02-code-review/#224-java","text":"\u8fd9\u91cc\u4e3aJava\u5f00\u53d1\u8005\u6574\u7406\u4e86\u4e00\u4efd\u57fa\u672c\u7684\u8bc4\u5ba1\u6e05\u5355\uff0c\u4e3a\u4e86\u907f\u514d\u6e05\u5355\u5197\u957f\uff0c\u91cc\u9762\u4e0d\u5305\u542b\u9759\u6001\u626b\u63cf\u80fd\u53d1\u73b0\u7684\u95ee\u9898\uff0c\u5177\u4f53\u5982\u4e0b\uff1a \u6709\u6ca1\u6709IntelliJ IDEA \u7684\u9ec4\u8272\u8b66\u544a\u3002\u82e5\u5b58\u5728\u9ec4\u8272\u8b66\u544a\uff0c\u5f80\u5f80\u610f\u5473\u7740\u4ee3\u7801\u53ef\u4ee5\u88ab\u4f18\u5316\u6216\u8005\u5b58\u5728\u6f5c\u5728\u7684\u95ee\u9898\u3002 \u6570\u636e\u7684\u8f93\u5165\u662f\u5426\u8fdb\u884c\u4e86\u9a8c\u8bc1\uff0c\u6bd4\u5982\u7c7b\u578b\u3001\u957f\u5ea6\u3001\u683c\u5f0f\u3001\u8303\u56f4\u7b49\u3002 \u63d0\u4f9b\u7684 API \u662f\u5426\u505a\u4e86\u9274\u6743\uff0c\u5c24\u5176\u662f\u6570\u636e\u7684\u9274\u6743\u3002 \u9700\u8981\u914d\u7f6e\u7684\u503c\u662f\u5426\u662f\u786c\u7f16\u7801\uff0c\u9700\u8981\u4f7f\u7528\u5e38\u91cf\u6216\u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u914d\u7f6e\u3002 \u6ce8\u91ca\u548c\u65b9\u6cd5\u7684\u547d\u540d\u662f\u5426\u4e0e\u4ee3\u7801\u8bed\u4e49\u4e00\u81f4\u5e76\u5bb9\u6613\u7406\u89e3\u3002 \u662f\u5426\u4f7f\u7528\u4e86\u8db3\u591f\u4fbf\u6377\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982\u5e93\u51fd\u6570\u5df2\u63d0\u4f9b\u7684\u903b\u8f91\u5c31\u4e0d\u9700\u8981\u81ea\u5df1\u518d\u5199\u4e00\u904d\u4e86\u3002 \u662f\u5426\u4f7f\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982\u5408\u7406\u9009\u62e9 HashMap\u3001ArrayList \u7b49\u3002 \u662f\u5426\u505a\u4e86\u5408\u7406\u7684\u5f02\u5e38\u5904\u7406\u3002 API \u7684\u8bbe\u8ba1\u662f\u5426\u7b26\u5408\u89c4\u8303\u548c\u8bed\u4e49\u3002 \u662f\u5426\u6709\u8db3\u591f\u591a\u4e14\u5408\u7406\u7684\u6d4b\u8bd5\u3002","title":"2.2.4 Java \u4ee3\u7801\u8bc4\u5ba1\u6e05\u5355"},{"location":"02-code-review/#23-git","text":"Git\u4f5c\u4e3a\u4e00\u6b3e\u51fa\u8272\u7684\u5206\u5e03\u5f0f\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u5de5\u5177\uff0c\u7531Linux\u7684\u4f5c\u8005Linus\u5f00\u53d1\uff0c\u76ee\u524d\uff0c\u5b83\u5df2\u7ecf\u6210\u4e3a\u6211\u4eec\u65e5\u5e38\u5f00\u53d1\u79bb\u4e0d\u5f00\u7684\u5de5\u5177\u3002\u7528\u597dGit\uff0c\u5e76\u4e14\u91c7\u7528\u9002\u5f53\u7684\u5de5\u4f5c\u6d41\uff0c\u53ef\u4ee5\u8ba9\u4ee3\u7801\u8bc4\u5ba1\u5de5\u4f5c\u4e8b\u534a\u529f\u500d\u3002","title":"2.3 Git \u5de5\u4f5c\u6d41\u548c\u4fdd\u62a4"},{"location":"02-code-review/#231-git","text":"\u5728\u56e2\u961f\u534f\u4f5c\u4e2d\uff0c\u4ee3\u7801\u8bc4\u5ba1\u7684\u65b9\u5f0f\u548c\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u6709\u4e00\u5b9a\u5173\u7cfb\uff0c\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u7684\u5de5\u4f5c\u6d41\u548c\u5206\u652f\u7b56\u7565\u662f\u4e00\u4e2a\u8ba8\u8bba\u6bd4\u8f83\u591a\u7684\u8bdd\u9898\u3002Git\u5de5\u4f5c\u6d41\u8bf4\u660e\u4e86\u56e2\u961f\u5982\u4f55\u4f7f\u7528Git\u5206\u652f\uff0c\u5e76\u6309\u7167\u4e00\u5b9a\u7ea6\u5b9a\u8fdb\u884c\u534f\u4f5c\u3002Git\u5de5\u4f5c\u6d41\u6709\u5f88\u591a\u6d3e\u522b\uff0c\u6bd4\u5982Git Flow\u3001GitHub Flow\u3001GitLab Flow\u7b49\u3002 Git Flow\uff1a\u9879\u76ee\u5b58\u5728\u4e24\u4e2a\u957f\u671f\u5206\u652f\uff0c\u5373\u4e00\u4e2a\u4e3b\u5e72\u5206\u652f\uff0c\u4e00\u4e2a\u5f00\u53d1\u5206\u652f\uff0c\u5f00\u53d1\u8005\u4e00\u8d77\u5de5\u4f5c\u5728\u5f00\u53d1\u5206\u652f\u4e2d\uff0c\u53d1\u5e03\u65f6\u5408\u5e76\u5230\u4e3b\u5e72\u5206\u652f\u4e2d\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u77ed\u671f\u5b58\u5728\u7684\u5206\u652f\uff0c\u6bd4\u5982\u7279\u6027\u5206\u652f\u3001\u9884\u53d1\u5206\u652f\u7b49\u3002 GitHub Flow\uff1a\u9879\u76ee\u4ee5\u4e00\u4e2a\u4e3b\u5e72\u5206\u652f\u4f5c\u4e3a\u957f\u671f\u5206\u652f\uff0c\u6bcf\u4e2a\u5f00\u53d1\u8005\u5728\u81ea\u5df1\u7684\u5f00\u53d1\u5206\u652f\u4e2d\u5de5\u4f5c\uff0c\u7136\u540e\u901a\u8fc7 Pull Request \u5408\u5e76\u5230\u4e3b\u5e72\u5206\u652f\u3002 GitLab Flow\uff1a \u9879\u76ee\u9075\u5b88\u4e0a\u6e38\u4f18\u5148\u539f\u5219\uff0c\u53ea\u4ee5\u4e00\u4e2a\u4e3b\u5206\u652f\u4f5c\u4e3a\u957f\u671f\u5206\u652f\u3002\u5f00\u53d1\u8005\u5728\u4e3b\u5e72\u5206\u652f\u4e0a\u5f00\u53d1\uff0c\u5f85\u6d4b\u8bd5\u7a33\u5b9a\u540e\uff0c\u4f7f\u7528\u53d1\u5e03\u5206\u652f\u53d1\u5e03\u3002\u540e\u7eed\u7684 Hotfix \u90fd\u9700\u8981\u5408\u5e76\u5230\u53d1\u5e03\u5206\u652f\u548c\u4e3b\u5206\u652f\u4e0a\u3002 \u4ece\u5b9e\u7528\u548c\u7ecf\u6d4e\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u4e2a\u4eba\u6bd4\u8f83\u63a8\u8350GitLab Flow\uff0c\u5f53\u7136\uff0c\u5177\u4f53\u5e94\u8be5\u89c6\u56e2\u961f\u60c5\u51b5\u800c\u5b9a\uff0c\u6bd4\u5982\u56e2\u961f\u4eba\u6570\u3001\u662f\u5426\u9700\u8981\u548c\u5176\u4ed6\u56e2\u961f\u8054\u8c03\uff08\u8fd9\u662f\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u56e0\u7d20\uff0c\u82e5\u4f7f\u7528\u5206\u652f\u5f00\u53d1\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff09\u7b49\u3002 \u5982\u56fe2-10\u6240\u793a\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u4f7f\u7528\u654f\u6377\u5de5\u4f5c\u65b9\u5f0f\u7684\u56e2\u961f\u6765\u8bf4\uff0c\u6bd4\u8f83\u597d\u7684\u5206\u652f\u7b56\u7565\u53ef\u4ee5\u7528\u4e00\u53e5\u8bdd\u6982\u62ec\uff1a \u4e3b\u5e72\u5f00\u53d1\uff0c\u5206\u652f\u53d1\u5e03 \u3002\u8fd9\u79cd\u7b56\u7565\u5c24\u5176\u9002\u5408\u4e00\u4e2a\u8fed\u4ee3\u4e00\u4e2a\u7248\u672c\u7684\u5f00\u53d1\u8282\u594f\uff0c\u4f46\u5982\u679c\u91c7\u7528\u7684\u662f\u6301\u7eed\u53d1\u5e03\u65b9\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u79cd\u65b9\u5f0f\u6ca1\u6709\u56fa\u5b9a\u7684\u7248\u672c\u5468\u671f\uff0c\u6240\u4ee5\u6b64\u7b56\u7565\u672a\u5fc5\u5408\u9002\u3002 \u56fe 2-10 \u4e00\u79cd\u5206\u652f\u7b56\u7565 \"\u4e3b\u5e72\u5f00\u53d1\uff0c\u5206\u652f\u53d1\u5e03\"\u7684\u5206\u652f\u7b56\u7565\u6709\u4ee5\u4e0b\u51e0\u4e2a\u89c4\u5219\u9700\u8981\u56e2\u961f\u9075\u5b88\uff1a \u56e2\u961f\u5e94\u4f7f\u7528 Git rebase \u547d\u4ee4\u800c\u4e0d\u662fmerge \u547d\u4ee4\u62c9\u53d6\u4ee3\u7801\uff0c\u4ee5\u907f\u514d\u63d0\u4ea4\u65e5\u5fd7\u6df7\u4e71\u3002 \u56e2\u961f\u5728\u4e3b\u5e72\u5f00\u53d1\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u7ed3\u675f\u7684\u524d\u51e0\u5929\u521b\u5efaRelease\u5206\u652f\uff0c\u6bcf\u4e00\u6b21\u53d1\u5e03\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u5206\u652f\uff0c\u5e94\u4f7f\u7528\u8bed\u4e49\u5316\u7248\u672c\u53f7\uff08Semantic Versioning\uff09[^1]\u6765\u547d\u540d\uff0c\u6bd4\u5982v2.1\u5206\u652f\u3002\u521b\u5efaRelease\u5206\u652f\u65f6\u53ef\u4ee5\u540c\u6b65\u521b\u5efa\u6807\u7b7e\uff0c\u4ee5\u4fbf\u65e9\u671f\u53d1\u5e03\u7684Release\u5206\u652f\u53ef\u4ee5\u88ab\u5220\u9664\u3002 Release\u5206\u652f\u53ef\u4ee5\u90e8\u7f72\u5230\u9884\u53d1\u73af\u5883\u4e2d\uff0c\u4e3b\u5e72\u53ea\u80fd\u90e8\u7f72\u5230\u5f00\u53d1\u548c\u6d4b\u8bd5\u73af\u5883\u3002 \u5728\u5c06Release\u5206\u652f\u53d1\u5e03\u5230\u4ea7\u54c1\u73af\u5883\u4e4b\u524d\uff0c\u8981\u57fa\u4e8e\u4e0a\u4e00\u6b21\u7684Release\u5206\u652f\u505a\u53d1\u5e03\u524d\u7684\u4ee3\u7801\u8bc4\u5ba1\u3002 \u5982\u679c\u9884\u53d1\u73af\u5883\u51fa\u73b0\u95ee\u9898\u9700\u8981\u4fee\u590d\uff0c\u4ee5Release\u5206\u652f\u4e3a\u57fa\u7ebf\u521b\u5efaHotfix\u5206\u652f\uff0c\u5e76\u63d0\u4ea4Pull Request\uff0c\u56e2\u961f\u6279\u51c6\u540e\u53ef\u4ee5\u5148\u90e8\u7f72\u5230\u9884\u53d1\u73af\u5883\u4e2d\uff0c\u518d\u90e8\u7f72\u5230\u4ea7\u54c1\u73af\u5883\u4e2d\u3002 \u90e8\u7f72\u5230\u4ea7\u54c1\u73af\u5883\u540e\uff0c\u9700\u8981\u5c06Release\u5206\u652f\u7684\u53d8\u66f4\u540c\u6b65\u5230\u4e3b\u5e72\uff0c\u907f\u514d\u4e0b\u6b21\u4e0a\u7ebf\u4e22\u5931\u66f4\u65b0\u3002","title":"2.3.1 Git \u5de5\u4f5c\u6d41"},{"location":"02-code-review/#232-git-hooks","text":"\u9759\u6001\u4ee3\u7801\u5206\u6790\u548c\u4ee3\u7801\u8bc4\u5ba1\u9700\u8981\u4e0e\u4ee3\u7801\u7684\u5206\u652f\u63a7\u5236\u76f8\u7ed3\u5408\u624d\u80fd\u8d77\u5230\u597d\u7684\u6548\u679c\uff0c\u5982\u679cCheckstyle\u7b49\u68c0\u67e5\u6ca1\u6709\u901a\u8fc7\uff0c\u4ee3\u7801\u4e0d\u5e94\u88ab\u63a8\u9001\u5230Git\u670d\u52a1\u5668\u4e0a\u3002 Git Hooks\u662f\u7531Shell\u811a\u672c\u6784\u6210\u7684\u3002Hook\uff08\u94a9\u5b50\uff09\u8fd9\u4e2a\u6982\u5ff5\u5728\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e26\u6709\u63d2\u4ef6\u7cfb\u7edf\u7684\u8f6f\u4ef6\u4e2d\u5e7f\u6cdb\u5b58\u5728\uff0c\u8fd9\u91cc\u5c06\u5176\u7528\u4e8eGit\u7684\u67d0\u4e2a\u751f\u547d\u5468\u671f\u3002\u6240\u6709\u9ed8\u8ba4\u6709\u6548\u7684\u94a9\u5b50\u90fd\u53ef\u4ee5\u5728.git/hooks/\u76ee\u5f55\u4e2d\u627e\u5230\u3002\u94a9\u5b50\u7528\u4e8e\u63a7\u5236Git\u5de5\u4f5c\u7684\u6d41\u7a0b\u65f6\uff0c\u53c8\u5206\u4e3a\u5ba2\u6237\u7aef\u94a9\u5b50\u548c\u670d\u52a1\u5668\u94a9\u5b50\uff0c\u5ba2\u6237\u7aef\u94a9\u5b50\u4f1a\u5728\u6267\u884cpush\u547d\u4ee4\u4e4b\u524d\u8fd0\u884c\u5728\u5f00\u53d1\u8005\u7684\u672c\u5730\u673a\u5668\u4e0a\uff0c\u670d\u52a1\u5668\u94a9\u5b50\u4f1a\u5728\u63a8\u9001\u540e\u8fd0\u884c\u5728Git\u670d\u52a1\u5668\u4e0a\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u94a9\u5b50\u3002\u5ba2\u6237\u7aef\u94a9\u5b50\uff1a pre-commit prepare-commit-msg commit-msg post-commit \u670d\u52a1\u5668\u7aef\u94a9\u5b50\uff1a pre-receive post-receive update \u4e00\u822c\u6211\u4eec\u4f1a\u901a\u8fc7\u914d\u7f6epre-commit\u5230\u9879\u76ee\u4e2d\uff0c\u6765\u4fc3\u4f7f\u56e2\u961f\u6210\u5458\u5728\u63d0\u4ea4\u4ee3\u7801\u65f6\u8fdb\u884c\u4e00\u4e9b\u68c0\u67e5\uff0c\u6240\u8fdb\u884c\u7684\u68c0\u67e5\u5305\u62ec\uff1a \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u3002 \u8fd0\u884c\u4ee3\u7801\u68c0\u67e5\uff08\u6bd4\u5982 Checkstyle\uff09\u3002 \u63d0\u4ea4\u7684\u4fe1\u606f\u68c0\u67e5\u3002 \u5982\u679c\u6709Git\u670d\u52a1\u5668\u7684\u914d\u7f6e\u6743\u9650\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6epre-receive\u5728\u670d\u52a1\u5668\u7aef\u8fd0\u884c\u68c0\u67e5\u3002\u672c\u5730\u68c0\u67e5\u65e0\u7591\u662f\u6700\u9ad8\u6548\u4e14\u65b9\u4fbf\u7684\u624b\u6bb5\u4e4b\u4e00\uff0c\u4f46\u662f\u7ec4\u7ec7\u4e00\u7fa4\u4eba\u6765\u624b\u52a8\u5b89\u88c5\u8fd9\u7c7b\u811a\u672c\u660e\u663e\u662f\u4e00\u4ef6\u8d39\u529b\u4e0d\u8ba8\u597d\u7684\u4e8b\u3002\u4e3a\u4e86\u9632\u6b62\u56e2\u961f\u6210\u5458\u5fd8\u8bb0\u8bbe\u7f6e\u672c\u5730\u94a9\u5b50\u811a\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6784\u5efa\u5de5\u5177\u4e2d\u6dfb\u52a0\u5b89\u88c5\u94a9\u5b50\u811a\u672c\u7684\u4efb\u52a1\uff0c\u8ba9\u5f00\u53d1\u8005\u5728\u7b2c\u4e00\u6b21\u542f\u52a8\u9879\u76ee\u65f6\u81ea\u52a8\u6dfb\u52a0\u76f8\u5173\u94a9\u5b50\u3002 \u7531\u4e8e\u51e0\u4e4e\u6240\u6709\u7684Maven\u4f7f\u7528\u8005\u90fd\u4f1a\u6267\u884cmvn install \u547d\u4ee4\u6765\u521d\u59cb\u5316\u9879\u76ee\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u63d2\u4ef6 git-build-hook\u6765\u5b89\u88c5Hook\u811a\u672c\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <build> <plugins> <plugin> <groupId>com.rudikershaw.gitbuildhook</groupId> <artifactId>git-build-hook-maven-plugin</artifactId> <version>3.1.0</version> <configuration> <gitConfig> <!-- \u6307\u5b9a\u4ee3\u7801\u5e93\u4e2d\u7684 Hook \u811a\u672c\u4f4d\u7f6e\uff0c\u63d2\u4ef6\u4f1a\u5e2e\u52a9\u5b89\u88c5\u5230 gitconfig \u4e2d --> <core.hooksPath>hooks-directory/</core.hooksPath> <custom.configuration>true</custom.configuration> </gitConfig> </configuration> <executions> <execution> <goals> <!-- \u914d\u7f6e\u6267\u884c Hook \u5b89\u88c5\u7684\u751f\u547d\u4e2d\u5468\u671f --> <goal>install</goal> </goals> </execution> </executions> </plugin> </plugins> </build> \u5c06\u4e0a\u9762\u7684\u914d\u7f6e\u653e\u7f6e\u5230\u76f8\u5e94\u7684Pom\u6587\u4ef6\u4e2d\uff0c\u56e2\u961f\u6210\u5458\u6267\u884c\u4e86mvn install\u547d\u4ee4\u540e\uff0c\u94a9\u5b50\u811a\u672c\u5c31\u4f1a\u81ea\u52a8\u5b89\u88c5\u3002\u5982\u679c\u4e0b\u4e00\u6b21\u56e2\u961f\u6210\u5458\u4f7f\u7528Git\u76f8\u5e94\u547d\u4ee4\u63d0\u4ea4\u548c\u63a8\u9001\u4ee3\u7801\uff0c\u5c31\u4f1a\u89e6\u53d1\u76f8\u5e94\u7684\u94a9\u5b50\u811a\u672c\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u89e6\u53d1\u94a9\u5b50\u811a\u672c\u7684\u793a\u4f8b\uff0c\u628a\u8fd9\u4e2a\u6587\u4ef6\u4fdd\u5b58\u4e3apre-commit\u5e76\u653e\u5230hooks-directory \u76ee\u5f55\u4e2d\uff0c\u9879\u76ee\u521d\u59cb\u5316\u540e\uff0c\u5728\u63d0\u4ea4\u4ee3\u7801\u65f6\u6b64\u811a\u672c\u5c31\u4f1a\u88ab\u6267\u884c\u3002 #!/bin/sh # \u9700\u8981\u8fd0\u884c\u7684\u547d\u4ee4 mvn clean build # \u83b7\u53d6\u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c RESULT=$? # \u4f7f\u7528\u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c\u6765\u9000\u51fa\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u4e2d\u65ad\u6784\u5efa exit $RESULT Gradle\u53ef\u4ee5\u66f4\u7075\u6d3b\u5730\u7f16\u5199\u3001\u6784\u5efa\u811a\u672c\u548c\u4efb\u52a1\uff0c\u4e0b\u9762\u662fJava Gradle\u7684\u4e00\u4e2apre-commit\u811a\u672c\u793a\u4f8b\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e2d\u6dfb\u52a0pre-commit\u6587\u4ef6\uff0c\u901a\u8fc7\u914d\u7f6eGradle\u811a\u672c\u53ef\u4ee5\u4f7f\u9879\u76ee\u521d\u59cb\u5316\u65f6\u81ea\u52a8\u5b89\u88c5\u8be5\u94a9\u5b50\u3002 task installGitHooks(type: Copy) { from new File(rootProject.rootDir, 'pre-commit') into { new File(rootProject.rootDir, '.git/hooks') } fileMode 0755 } build.dependsOn installGitHooks","title":"2.3.2 Git Hooks"},{"location":"02-code-review/#233","text":"\u5728\u6ca1\u6709Pull Request\u548c\u4ee3\u7801\u8bc4\u5ba1\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5e94\u8be5\u628a\u4ee3\u7801\u76f4\u63a5\u63a8\u9001\u5230Release\u5206\u652f\u3002\u56e0\u4e3aGit\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u6709\u5206\u652f\u4fdd\u62a4\u529f\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u57fa\u4e8e\u524d\u9762\u7684\u5206\u652f\u7b56\u7565\u8bbe\u5b9a\u51e0\u4e2a\u7b80\u5355\u7684\u89c4\u5219\u3002 \u53d7\u4fdd\u62a4\u7684\u5206\u652f\u5747\u4e0d\u53ef\u5220\u9664\u3001\u5f3a\u5236\u63a8\u9001\uff0c\u907f\u514d\u4ee3\u7801\u5e93\u53d7\u635f\u3002 Release\u5206\u652f\u4e0d\u63a5\u53d7\u76f4\u63a5\u63a8\u9001\uff0c\u5fc5\u987b\u4f7f\u7528Pull Request\u7684\u65b9\u5f0f\u63d0\u4ea4\u8865\u4e01\u5408\u5e76\uff0c\u5e76\u9700\u8981\u57282\u4eba\u4ee5\u4e0a\u7684\u56e2\u961f\u6210\u5458\u6279\u51c6\u540e\u624d\u80fd\u5408\u5e76\u3002 \u5982\u679c\u6761\u4ef6\u5141\u8bb8\uff0c\u5408\u5e76\u5230Release\u5206\u652f\u7684\u4e34\u65f6\u5206\u652f\u53ef\u4ee5\u81ea\u52a8\u5220\u9664\u3002 \u56fe2-11\u662fGitLab\u7684\u5206\u652f\u4fdd\u62a4\u754c\u9762\uff0c\u914d\u7f6e\u597d\u5206\u652f\u4fdd\u62a4\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u907f\u514d\u56e0\u4e3a\u8bef\u64cd\u4f5c\u6216\u8005\u6076\u610f\u64cd\u4f5c\u5bfc\u81f4\u56e2\u961f\u7684\u4ee3\u7801\u5e93\u4e22\u5931\u3002 \u56fe 2-11 GitLab \u7684\u5206\u652f\u4fdd\u62a4\u8bbe\u7f6e","title":"2.3.3 \u5206\u652f\u4fdd\u62a4"},{"location":"02-code-review/#24","text":"\u672c\u7ae0\u4ecb\u7ecd\u4e86\u4ee3\u7801\u8bc4\u5ba1\u7684\u51e0\u79cd\u5f62\u5f0f\uff0c\u5305\u62ec\u9759\u6001\u4ee3\u7801\u5206\u6790\u548c\u4eba\u5de5\u4ee3\u7801\u8bc4\u5ba1\u3002\u57fa\u4e8e\u9759\u6001\u4ee3\u7801\u5206\u6790\u7684\u5404\u79cd\u5de5\u5177\uff0c\u53ef\u4ee5\u4f4e\u6210\u672c\u5730\u63d0\u9ad8\u9759\u6001\u4ee3\u7801\u5206\u6790\u7684\u80fd\u529b\u548c\u6548\u679c\u3002 \u4e3a\u4e86\u5f25\u8865\u9759\u6001\u4ee3\u7801\u5206\u6790\u7684\u4e0d\u8db3\uff0c\u53ef\u4ee5\u6839\u636e\u573a\u666f\u5bf9\u4ee3\u7801\u8fdb\u884c\u8bc4\u5ba1\uff0c\u8bc4\u5ba1\u4e5f\u662f\u56e2\u961f\u6574\u4f53\u5b66\u4e60\u7684\u5951\u673a\u3002\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u3001\u4e92\u76f8\u5b66\u4e60\u3001\u77e5\u8bc6\u5171\u4eab\u662f\u6bcf\u65e5\u4ee3\u7801\u8bc4\u5ba1\u7684\u52a8\u529b\uff0c\u4fdd\u6301\u8282\u594f\u611f\u548c\u575a\u6301\u662f\u4ece\u4e2d\u83b7\u76ca\u7684\u5fc5\u8981\u6761\u4ef6\u3002 \u6700\u540e\uff0c\u4e3a\u4e86\u66f4\u9ad8\u6548\u5730\u5b9e\u73b0\u9759\u6001\u4ee3\u7801\u5206\u6790\u548c\u4ee3\u7801\u8bc4\u5ba1\uff0c\u6211\u4eec\u9700\u8981\u57fa\u4e8e\u9002\u5408\u56e2\u961f\u7684\u7248\u672c\u7ba1\u7406\u5de5\u4f5c\u6d41\u6765\u5b9e\u73b0\u66f4\u597d\u5730\u56e2\u961f\u534f\u4f5c\u3002\u4e3b\u6d41\u7684\u7248\u672c\u7ba1\u7406\u65b9\u5f0f\u6709Git Flow\u3001GitHub Flow\u3001GitLab Flow \u7b49\uff0c\u5177\u4f53\u9700\u8981\u6839\u636e\u4ea7\u54c1\u7c7b\u578b\u548c\u89c4\u6a21\u8fdb\u884c\u9009\u62e9\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u5236\u9002\u5408\u81ea\u5df1\u7684\u7248\u672c\u7ba1\u7406\u5de5\u4f5c\u6d41\u3002\u6b64\u5916\uff0c\u901a\u8fc7Git Hooks\u548c\u5206\u652f\u4fdd\u62a4\u53ef\u4ee5\u5145\u5206\u5730\u6316\u6398Git\u7684\u6f5c\u529b\uff0c\u8ba9\u56e2\u961f\u534f\u4f5c\u66f4\u5b89\u5168\u548c\u6d41\u7545\u3002 [^1]: \u53c2\u8003\u7f51\u7ad9 https://semver.org/","title":"2.4 \u5c0f\u7ed3"},{"location":"03-unit-testing-fundamentals/","text":"\u7b2c 3 \u7ae0 \u5355\u5143\u6d4b\u8bd5\u57fa\u7840 \u5355\u5143\u6d4b\u8bd5\u662f\u7814\u53d1\u4eba\u5458\u5fc5\u987b\u638c\u63e1\u7684\u4e00\u9879\u6280\u80fd\uff0c\u4f46\u4e0d\u662f\u7814\u53d1\u81ea\u6d4b\u7684\u5168\u90e8\u5185\u5bb9\u3002\u4e00\u4e9b\u5927\u7684\u516c\u53f8\u5728\u9762\u8bd5\u65f6\uff0c\u751a\u81f3\u8981\u8003\u5bdf\u5e94\u8058\u4eba\u5458\u7684\u5355\u5143\u6d4b\u8bd5\u80fd\u529b\u548c\u6240\u5199\u4ee3\u7801\u7684\u8d28\u91cf\u3002\u5355\u5143\u6d4b\u8bd5\u662f\u5f00\u542f\u7814\u53d1\u81ea\u6d4b\u7684\u4e00\u628a\u94a5\u5319\u3002 \u672c\u7ae0\u6db5\u76d6\u7684\u5185\u5bb9\u6709\uff1a \u5355\u5143\u6d4b\u8bd5\u57fa\u7840\u3002 \u65ad\u8a00\u3002 JUnit \u7684\u4f7f\u7528\u3002 JUnit 5 \u7684\u65b0\u7279\u6027\u3002 \u672c\u7ae0\u7684\u76ee\u6807\u662f\u901a\u8fc7\u5b66\u4e60\u5355\u5143\u6d4b\u8bd5\u76f8\u5173\u77e5\u8bc6\uff0c\u4ee5\u6700\u5177\u6027\u4ef7\u6bd4\u7684\u65b9\u5f0f\u5f00\u542f\u5f00\u53d1\u4eba\u5458\u7684\u81ea\u6d4b\u4e4b\u65c5\u3002 \u672c\u7ae0\u7684\u793a\u4f8b\u4ee3\u7801\u53ef\u4ee5\u5728Git\u4ed3\u5e93\uff08https://github.com/java-self-testing/java-self-testing-example/blob/main/single\uff09\u4e2d\u4e0b\u8f7d\u3002 3.1 \u5355\u5143\u6d4b\u8bd5 \u5728\u4ecb\u7ecd\u7e41\u6742\u7684\u6982\u5ff5\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u5355\u5143\u6d4b\u8bd5\u7684\u610f\u4e49\u548c\u5b66\u4e60\u65b9\u6cd5\u3002 3.1.1 \u4ec0\u4e48\u662f\u5355\u5143\u6d4b\u8bd5 \u5728\u8ba1\u7b97\u673a\u7f16\u7a0b\u4e2d\uff0c\u5355\u5143\u6d4b\u8bd5\u53c8\u79f0\u4e3a\u6a21\u5757\u6d4b\u8bd5\uff0c\u662f\u9488\u5bf9\u7a0b\u5e8f\u6a21\u5757\uff08\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u6700\u5c0f\u5355\u4f4d\uff09\u6765\u8fdb\u884c\u6b63\u786e\u6027\u68c0\u9a8c\u7684\u6d4b\u8bd5\u5de5\u4f5c\u3002 \u2014\u2014\u2014\u2014 \u7ef4\u57fa\u767e\u79d1 \u4ec0\u4e48\u662f\u4e00\u4e2a\u5355\u5143\uff1f \u5728\u8fc7\u7a0b\u5316\u7f16\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u5355\u5143\u5c31\u662f\u5355\u4e2a\u7684\u7a0b\u5e8f\u3001\u51fd\u6570\u548c\u8fc7\u7a0b\u7b49\u3002\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u65f6\uff0c\u6700\u5c0f\u7684\u5355\u5143\u5c31\u662f\u65b9\u6cd5\uff0c\u5305\u62ec\u57fa\u7c7b\uff08\u8d85\u7c7b\uff09\u3001\u62bd\u8c61\u7c7b\u6216\u8005\u6d3e\u751f\u7c7b\uff08\u5b50\u7c7b\uff09\u4e2d\u7684\u65b9\u6cd5\u3002 \u5355\u5143\u662f\u4e00\u4e2a\u76f8\u5bf9\u6982\u5ff5\uff0c\u9488\u5bf9\u65b9\u6cd5\u3001\u7c7b\u3001\u6a21\u5757\u548c\u5e94\u7528\u6240\u8fdb\u884c\u7684\u6d4b\u8bd5\u90fd\u53ef\u4ee5\u79f0\u4f5c\u5355\u5143\u6d4b\u8bd5\u7b80\u5355\u6765\u8bf4\uff0c\u5355\u5143\u6d4b\u8bd5\u7684\u521d\u8877\u662f\u5bf9\u5e94\u7528\u7684\u4e00\u5c0f\u90e8\u5206\u53ca\u65f6\u8fdb\u884c\u6d4b\u8bd5\uff0c\u800c\u975e\u7b49\u5230\u6240\u6709\u7684\u4ee3\u7801\u7f16\u5199\u5b8c\u4e4b\u540e\u518d\u9488\u5bf9\u6574\u4e2a\u5e94\u7528\u8fdb\u884c\u6d4b\u8bd5\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u5355\u5143\u6d4b\u8bd5\u662f\u57fa\u4e8e\u7c7b\u3001\u65b9\u6cd5\u5c42\u9762\u7684\uff0c\u4e0e\u4e4b\u76f8\u5bf9\u7684\u662f\u96c6\u6210\u6d4b\u8bd5\u3001E2E\u6d4b\u8bd5\u3002 3.1.2 \u4e3a\u4ec0\u4e48\u9700\u8981\u5199\u5355\u5143\u6d4b\u8bd5 \u5728\u6ca1\u6709\u63a5\u89e6\u5355\u5143\u6d4b\u8bd5\u4e4b\u524d\u6211\u4eec\u662f\u600e\u4e48\u505a\u6d4b\u8bd5\u7684\uff1f\u4e00\u822c\u6709\u4e24\u4e2a\u65b9\u6cd5\uff1a 1\uff09\u542f\u52a8\u6574\u4e2a\u5e94\u7528\uff0c\u50cf\u7528\u6237\u6b63\u5e38\u64cd\u4f5c\u4e00\u6837\uff0c\u5148\u5355\u51fb\u754c\u9762\u4e0a\u7684\u6309\u94ae\uff0c\u7136\u540e\u67e5\u770b\u7a0b\u5e8f\u7684\u53cd\u5e94\u3002\u8fd9\u79cd\u624b\u52a8\u6d4b\u8bd5\u7684\u5f0a\u7aef\u662f\u6bcf\u6b21\u6d4b\u8bd5\u90fd\u5f97\u542f\u52a8\u6574\u4e2a\u5e94\u7528\uff0c\u9879\u76ee\u7a0d\u5fae\u5927\u4e00\u70b9\u54cd\u5e94\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u6162\uff0c\u5982\u679c\u9762\u5bf9\u7684\u662fPHP\u3001Node.js \u7b49\u811a\u672c\u8bed\u8a00\u8fd8\u597d\uff0c\u5982\u679c\u662fJava\u3001C++\u8fd9\u7c7b\u7f16\u8bd1\u578b\u8bed\u8a00\u5219\u4f1a\u975e\u5e38\u75db\u82e6\u3002 2\uff09\u5728\u4ee3\u7801\u7684\u67d0\u4e2a\u5730\u65b9\u5199\u4e00\u4e2a\u4e34\u65f6\u4eba\u53e3\uff0c\u4f8b\u5982\u5728Java\u7684main\u65b9\u6cd5\u4e2d\u6d4b\u8bd5\u67d0\u4e2a\u65b9\u6cd5\u6216\u8005\u67d0\u4e2a\u7c7b\uff0c\u7528\u5b8c\u7559\u5728\u9879\u76ee\u4e2d\u6216\u5220\u9664\u3002\u4f46\u662f\uff0c\u4e0d\u5220\u9664\u4f1a\u8ba9\u9879\u76ee\u53d8\u5f97\u5f88\u4e71\uff0c\u5220\u9664\u7684\u8bdd\u4e0b\u6b21\u60f3\u6d4b\u8bd5\u53c8\u5f97\u518d\u6b21\u7f16\u5199\u3002 \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u6709\u4e00\u4e2a\u5171\u540c\u7684\u95ee\u9898\uff0c\u6ca1\u6cd5\u4fdd\u7559\u6d4b\u8bd5\u6570\u636e\u7684\u521b\u5efa\u8fc7\u7a0b\uff0c\u4e14\u573a\u666f\u3001\u8fb9\u754c\u7684\u8986\u76d6\u57fa\u672c\u968f\u7f18\u3002\u5355\u5143\u6d4b\u8bd5\u672c\u8d28\u4e0a\u5c31\u662f\u65b9\u6cd52\uff0c\u5373\u628a\u7c7b\u4f3cmain\u65b9\u6cd5\u7684\u6d4b\u8bd5\u4ee3\u7801\u7edf\u4e00\u653e\u5230\u4e00\u4e2a\u5730\u65b9\uff0c\u7136\u540e\u6839\u636e\u4e00\u4e9b\u7ea6\u5b9a\u8ba9\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u4f46\u4e0d\u4f1a\u5f3a\u5236\u8981\u6c42\u4f60\u628a\u6d4b\u8bd5\u4ee3\u7801\u653e\u5230\u67d0\u4e2a\u5730\u65b9\u3002 \u5728Java\u9879\u76ee\u4e2d\uff0c\u6839\u636eMaven\u9879\u76ee\u7ed3\u6784\u6709\u5982\u4e0b\u7ea6\u5b9a\uff1a \u6d4b\u8bd5\u4ee3\u7801\u5355\u72ec\u653e\u5230src/test\u76ee\u5f55\u4e0b\uff0c\u4e0esrc/main\u4e2d\u7684\u4e1a\u52a1\u4ee3\u7801\u4e00\u4e00\u5bf9\u5e94\u3002 \u6d4b\u8bd5\u7c7b\u548c\u4e1a\u52a1\u7c7b\u540c\u540d\uff0c\u4e14\u5747\u91c7\u7528Test\u4f5c\u4e3a\u7ed3\u5c3e\u3002 \u7406\u8bba\u4e0a\u4e0d\u4f7f\u7528\u4efb\u4f55\u6d4b\u8bd5\u6846\u67b6\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5355\u5143\u6d4b\u8bd5\uff0c\u6700\u521d\u7684\u5355\u5143\u6d4b\u8bd5\u5c31\u662f\u8fd9\u6837\u5b9e\u73b0\u7684\u3002\u4e0d\u8fc7\u73b0\u5728\u5229\u7528xUnit\u7b49\u6846\u67b6\u53ef\u4ee5\u66f4\u65b9\u4fbf\u5730\u8fd0\u884c\u6d4b\u8bd5\u3002\u4f7f\u7528\u6846\u67b6\u7684\u5355\u5143\u6d4b\u8bd5\u6709\u4ee5\u4e0b\u597d\u5904\uff1a \u65b9\u4fbf\u6279\u91cf\u8fd0\u884c\u548c\u7ba1\u7406\u6d4b\u8bd5\u3002 \u53ef\u4f7f\u7528 @Before \u7b49\u94a9\u5b50\u5b9e\u73b0\u6570\u636e\u51c6\u5907\u3001\u6570\u636e\u6e05\u7406\u3002 \u53ef\u901a\u8fc7\u65ad\u8a00\u9a8c\u8bc1\u7ed3\u679c\uff0c\u907f\u514d\u4eba\u5de5\u5224\u5b9a\u7ed3\u679c\u3002 \u53ef\u901a\u8fc7\u8986\u76d6\u7387\u7edf\u8ba1\u5de5\u5177\u6765\u7edf\u8ba1\u4ee3\u7801\u6d4b\u8bd5\u7684\u8986\u76d6\u7387\u3002 \u53ef\u901a\u8fc7\u6a21\u62df\u89e3\u51b3\u4ee3\u7801\u4e4b\u95f4\u76f8\u4e92\u4f9d\u8d56\u7684\u95ee\u9898\u3002 \u5f53\u7136\uff0c\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u7684\u76ee\u7684\u9664\u4e86\u6d4b\u8bd5\u65b9\u4fbf\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u7528\u9014\uff1a\u91cd\u6784\u3002 \u91cd\u6784\u662f\u5355\u5143\u6d4b\u8bd5\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u7528\u9014\u3002\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u6539\u9020\u4e00\u4e9b\u9057\u7559\u4ee3\u7801\uff0c\u5e76\u4e14\u8981\u8ba9\u5176\u8fd1\u4e4e100%\u5730\u4fdd\u6301\u539f\u6765\u7684\u903b\u8f91\u3002\u4f46\u662f\uff0c\u5982\u679c\u6ca1\u6709\u5355\u5143\u6d4b\u8bd5\u7684\u4fdd\u62a4\uff0c\u5f00\u53d1\u4eba\u5458\u57fa\u672c\u4e0d\u6562\u91cd\u6784\uff0c\u53ea\u80fd\u901a\u8fc7\u6dfb\u52a0\u4ee3\u7801\u6765\u5b9e\u73b0\u4e1a\u52a1\u76ee\u6807\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4ee3\u7801\u8d8a\u6765\u8d8a\u6df7\u4e71\u3002\u5982\u679c\u5728\u91cd\u6784\u524d\uff0c\u5df2\u901a\u8fc7\u5355\u5143\u6d4b\u8bd5\u5c06\u539f\u6765\u7684\u4e1a\u52a1\u903b\u8f91\u8986\u76d6\uff0c\u5728\u6709\u4fdd\u62a4\u7684\u60c5\u51b5\u5f00\u59cb\u91cd\u6784\uff0c\u91cd\u6784\u5b8c\u6210\u540e\u518d\u6b21\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u4e5f\u80fd\u901a\u8fc7\uff0c\u5219\u8bf4\u660e\u8fd9\u6b21\u91cd\u6784\u57fa\u672c\u4e0a\u6ca1\u6709\u7834\u574f\u6027\u3002 \u5728Java\u4e2dJUnit\u662f\u5355\u5143\u6d4b\u8bd5\u5957\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6700\u7b80\u5355\u7684\u5355\u5143\u6d4b\u8bd5\u5f00\u59cb\u5bf9\u5e94\u7528\u7684\u4e00\u4e2a\u65b9\u6cd5\u8fdb\u884c\u9a8c\u8bc1\uff0c\u800c\u4e0d\u5fc5\u542f\u52a8\u6574\u4e2a\u5e94\u7528\u3002 3.1.3 \u600e\u4e48\u5b66\u4e60\u5355\u5143\u6d4b\u8bd5 \u8f6f\u4ef6\u7684\u8d28\u91cf\u662f\u7531\u6bcf\u4e00\u884c\u4ee3\u7801\u7684\u8d28\u91cf\u51b3\u5b9a\u7684\uff0c\u7ec6\u5fae\u5904\u7684Bug\u79ef\u7d2f\u8d77\u6765\u7ec8\u5c06\u5bfc\u81f4\u5927\u95ee\u9898\uff0c\u6240\u4ee5\uff0c\u5728\u7ec6\u5fae\u5904\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u80fd\u5f88\u597d\u5730\u907f\u514d\u5927\u95ee\u9898\u7684\u4ea7\u751f\u3002 \u6211\u521a\u63a5\u89e6\u5355\u5143\u6d4b\u8bd5\u65f6\uff0c\u9879\u76ee\u6b63\u5904\u4e8e\u4e00\u4e2aBug\u4e1b\u751f\u3001\u5f00\u53d1\u4eba\u5458\u6c38\u8fdc\u5728\u5f53\u6551\u706b\u961f\u5458\u7684\u72b6\u6001\u3002\u5728\u719f\u6089\u4e86\u4e00\u4e9b\u6d4b\u8bd5\u6846\u67b6\u540e\uff0c\u6211\u5c06\u5176\u5927\u91cf\u5e94\u7528\u4e8e\u9879\u76ee\u4e2d\uff0c\u4f46\u662f\u7ed3\u679c\u5e76\u4e0d\u7406\u60f3\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u7406\u5ff5\u9700\u8981\u9010\u6b65\u57f9\u517b\uff0c\u4e00\u5f00\u59cb\u5c31\u4f7f\u7528\u975e\u5e38\u590d\u6742\u7684\u5de5\u5177\u3001\u5e93\uff0c\u6216\u8fdb\u884cTDD\u7b49\u9ad8\u96be\u5ea6\u7684\u5b9e\u8df5\uff0c\u4f1a\u5bfc\u81f4\u5b66\u4e60\u66f2\u7ebf\u592a\u8fc7\u9661\u5ced\uff0c\u5728\u9879\u76ee\u4e2d\u5f88\u96be\u575a\u6301\u3002 \u56e0\u6b64\uff0c\u8fd9\u91cc\u7ed9\u5355\u5143\u6d4b\u8bd5\u7684\u521d\u5b66\u8005\u4e00\u4e9b\u5efa\u8bae\uff1a \u5b66\u4e60\u4e00\u4e9b\u7b80\u5355\u7684\u5355\u5143\u6d4b\u8bd5\u65b9\u6cd5\u540e\uff0c\u9a6c\u4e0a\u5e94\u7528\u5230\u9879\u76ee\u4e2d\uff0c\u518d\u6309\u7167\u9700\u8981\u5b66\u4e60\u5176\u4ed6\u6280\u5de7\u3002 \u521a\u5f00\u59cb\u5c3d\u91cf\u4f7f\u7528\u4e3b\u6d41\u6216\u8005\u5e73\u53f0\u5185\u7f6e\u7684\u6846\u67b6\u6216\u5e93\uff0c\u4f8b\u5982IntelliJIDEA\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5f15\u5165JUnit\u3002\u9009\u7528JUnit\u662f\u975e\u5e38\u5212\u7b97\u7684\u4e8b\u60c5\uff0c\u5b83\u81ea\u5e26\u4e86Hamcrest \u65ad\u8a00\u5e93\uff0c\u56e0\u6b64\u6ca1\u6709\u5fc5\u8981\u4e00\u5f00\u59cb\u5c31\u4f7f\u7528AssertJ\u7b49\u66f4\u590d\u6742\u7684\u65ad\u8a00\u5e93\u3002 \u6839\u636e\u4e8c\u516b\u539f\u5219\uff0c80%\u7684\u4ee3\u7801\u90fd\u662f\u5f88\u597d\u6d4b\u8bd5\u4e14\u6027\u4ef7\u6bd4\u9ad8\u7684\uff0c\u53ef\u4f18\u5148\u9009\u62e9\u4e3a\u5b83\u4eec\u7f16\u5199\u6d4b\u8bd5\u3002 \u4e0d\u5fc5\u82db\u6c42\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u6709\u4e00\u4e9b\u4ee3\u7801\u6d4b\u8bd5\u8986\u76d6\u7387\u5f88\u96be\u63d0\u5347\uff0c\u8ffd\u6c42100%\u7684\u4ee3\u7801\u6d4b\u8bd5\u8986\u76d6\u7387\u6027\u4ef7\u6bd4\u975e\u5e38\u4f4e\u3002 \u672c\u4e66\u7684\u7f16\u5199\u601d\u8def\u4e5f\u662f\u5982\u6b64\u3002\u5b66\u5b8c\u672c\u7ae0\u5185\u5bb9\u4ee5\u540e\uff0c\u8bfb\u8005\u5e94\u8be5\u5c31\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u5e94\u7528JUnit\u4e86\uff0c\u5e76\u4e14\u53ef\u4ee5\u9488\u5bf9\u4e00\u4e9b\u4f7f\u7528\u6b21\u6570\u591a\u7684\u516c\u5171\u65b9\u6cd5\uff08\u4e00\u822c\u662f\u9759\u6001\u65b9\u6cd5\uff09\u7f16\u5199\u6d4b\u8bd5\u3002\u540e\u7eed\u7ae0\u8282\u5219\u4f1a\u4ecb\u7ecd\u5982\u4f55\u4e3aSpring\u7684Bean\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u5982\u4f55\u4f7f\u7528\u5404\u79cd\u79c1\u6709\u65b9\u6cd5\u4ee5\u53ca\u9700\u8981\u63d2\u6869\u5904\u7406\u7684\u65b9\u6cd5\uff0c\u6700\u540e\u624d\u7ed9\u51fa\u5404\u79cd\u9ad8\u7ea7\u7684\u7406\u5ff5\uff0c\u6bd4\u5982BDD\u3001JMH\u3001\u5e76\u53d1\u6d4b\u8bd5\u7b49\u3002 \u53e6\u5916\uff0c\u53ef\u9009\u62e9\u7684\u5355\u5143\u6d4b\u8bd5\u76f8\u5173\u6280\u672f\u975e\u5e38\u591a\uff0c\u9650\u4e8e\u7bc7\u5e45\uff0c\u672c\u4e66\u65e0\u6cd5\u5c06\u6240\u6709\u6280\u672f\u548c\u6846\u67b6\u90fd\u4ecb\u7ecd\u5230\uff0c\u6240\u4ee5\u9009\u62e9\u4e86\u4e00\u5957\u6700\u4e3b\u6d41\u7684\u6280\u672f\u6808\u8fdb\u884c\u8bb2\u89e3\u3002\u638c\u63e1\u4e86\u8fd9\u5957\u6280\u672f\u6808\u540e\uff0c\u81ea\u7136\u4e5f\u80fd\u62d3\u5c55\u4f7f\u7528\u5176\u4ed6\u7684\u6280\u672f\u6808\u3002 \u672c\u4e66\u7684\u6280\u672f\u6808\u4e3b\u8981\u5305\u62ecJava\u3001Maven\u3001JUnit\u3001Mockito\u4ee5\u53ca\u76f8\u5173\u7684\u5f00\u6e90\u5de5\u5177\uff08\u5728\u9644\u5f55\u4e2d\u53ef\u4ee5\u627e\u5230\u5f00\u6e90\u5de5\u5177\u6e05\u5355\uff09\u3002 3.1.4 \u642d\u5efa JUnit \u73af\u5883 Java\u751f\u6001\u7684\u6d4b\u8bd5\u6846\u67b6\u6bd4\u8f83\u591a\uff0cJUnit 4\u662f\u76ee\u524d\u6700\u4e3b\u6d41\u4e5f\u662f\u642d\u5efa\u6700\u4e3a\u7b80\u5355\u7684\u6d4b\u8bd5\u6846\u67b6\u4e4b\u4e00\u3002\u4e0b\u9762\u7684\u5185\u5bb9\u5c06\u57fa\u4e8eJUnit 4\u8fdb\u884c\u8bb2\u89e3\uff0c\u8fd9\u91cc\u5047\u5b9a\u4f60\u5df2\u7ecf\u6709Java\u5f00\u53d1\u7ecf\u9a8c\uff0c\u5e76\u80fd\u719f\u7ec3\u4f7f\u7528JDK\u3001IntelliJIDEA\u3001Maven\u7b49\u5de5\u5177\u3002\u5982\u679c\u4f60\u4e60\u60ef\u4f7f\u7528Eclipse\u3001Gradle\uff0c\u4e5f\u53ef\u4ee5\u82b1\u4e00\u70b9\u65f6\u95f4\u4e86\u89e3\u4e00\u4e0bIntelliJIDEA\u3001Maven \u8fd9\u4e24\u4e2a\u5de5\u5177\uff0c\u5b83\u4eec\u90fd\u975e\u5e38\u7b80\u5355\u6613\u7528\u3002 \u642d\u5efa\u597dJava\u5f00\u53d1\u73af\u5883\u540e\uff0c\u4f9d\u6b21\u9009\u62e9\u83dc\u5355File\u2192New\u2192Project\uff0c\u7136\u540e\u9009\u62e9Maven\u6807\u7b7e\u9875\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\uff0c\u5982\u56fe3-1\u6240\u793a\u3002 \u56fe 3-1 \u521b\u5efa\u4e00\u4e2a\u9879\u76ee \u521b\u5efa\u5b8cMaven\u9879\u76ee\u540e\u53ef\u4ee5\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e2d\u627e\u5230 pom.xml\u6587\u4ef6\uff0c\u4f7f\u7528JUnit\u53ea\u9700\u8981\u5728pom.xml\u6587\u4ef6\u4e2d\u7684dependency\u8282\u70b9\u6dfb\u52a0\u4f9d\u8d56\u5373\u53ef\uff1a <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.13</version> <scope>test</scope> </dependency> \u6ce8\u610f\uff0c\u5c06dependency\u4e2d\u7684scope\u5c5e\u6027\u8bbe\u7f6e\u4e3atest\uff0c\u8fd9\u6837\u5728\u6784\u5efa\u4ea7\u751f\u7684\u8f6f\u4ef6\u5305\u4e2d\u4f1a\u81ea\u52a8\u6392\u9664JUnit\u7684Jar\u5305\u3002\u5982\u679c\u5728\u521b\u5efaMaven\u9879\u76ee\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u56f0\u96be\uff0c\u53ef\u4ee5\u53c2\u8003\u968f\u4e66\u793a\u4f8b\u4ee3\u7801\u3002 3.1.5 \u7ed9 \"Hello, world! \"\u5199\u4e00\u4e2a\u5355\u5143\u6d4b\u8bd5 \u5927\u90e8\u5206\u4eba\u5b66\u4e60\u7f16\u5199\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u5c31\u662f\"Hello\uff0cworld\uff01\"\uff0c\u901a\u8fc7\u7f16\u7a0b\u8bed\u8a00\u7b80\u5355\u8f93\u51fa\u5b57\u7b26\u4e32\"Hello\uff0cworld\uff01\"\u4ee3\u8868\u5b66\u4f1a\u4e86\u7f16\u5199\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u4e5f\u6807\u5fd7\u7740\u7f16\u7a0b\u73af\u5883\u642d\u5efa\u6210\u529f\u3002\u90a3\u6211\u4eec\u5c31\u6765\u7ed9\"Hello\uff0cworld\uff01\"\u5199\u4e00\u4e2a\u5355\u5143\u6d4b\u8bd5\u3002 \u5148\u7f16\u5199\u4e00\u4e2a\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u65b9\u6cd5\u88ab\u6267\u884c\u540e\u8f93\u51fa\u5b57\u7b26\u4e32\"Hello\uff0cworld\uff01\"\uff1a public class HelloWorld { public static String hello() { return \"Hello, world!\"; } } \u9759\u6001\u65b9\u6cd5\u4e00\u822c\u662f\u4e00\u4e9b\u5de5\u5177\u65b9\u6cd5\uff0c\u5b83\u4e5f\u662f\u6700\u5bb9\u6613\u6d4b\u8bd5\u7684\u65b9\u6cd5\u4e4b\u4e00\u3002\u5de5\u4f5c\u4e2d\uff0c\u6211\u7ecf\u5e38\u770b\u5230\u6709\u4eba\u5728\u9759\u6001\u65b9\u6cd5\u9644\u8fd1\u7f16\u5199\u4e00\u4e2amain\u51fd\u6570\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u6d4b\u8bd5\u3002\u793a\u4f8b\u5982\u4e0b\uff1a public static void main(String[] args){ System.out.println(hello()); } \u5c31\u50cf\u524d\u9762\u6240\u8bf4\u7684\uff0c\u8fd9\u91cc\u91c7\u7528\u7684\u662f\u4e00\u79cd\u6734\u7d20\u7684\u5355\u5143\u6d4b\u8bd5\u601d\u60f3\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\u548c @Test \u6ce8\u89e3\u4ee3\u66ffmain\u51fd\u6570\u4f5c\u4e3a\u542f\u52a8\u5165\u53e3\u3002\u5148\u521b\u5efa\u4e00\u4e2a\u7c7bHelloWorldTest\uff0c\u5e76\u4e3a\u5176\u6dfb\u52a0\u4e00\u4e2apublic\u65b9\u6cd5\uff0c\u7136\u540e\u6dfb\u52a0 @Test \u6ce8\u89e3\uff0c\u8fd9\u65f6\uff0cIDEA\u4f1a\u81ea\u52a8\u8bc6\u522b\u8fd9\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u7684\u6d4b\u8bd5\uff0c\u6211\u4eec\u53ef\u5728\u8fd9\u4e2a\u65b9\u6cd5\u5185\u8c03\u7528\u88ab\u6d4b\u8bd5\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u5e76\u6253\u5370\u51fa\u6765\u3002 \u5728\u56fe3-2\u4e2d\uff0c\u70b9\u51fb\u5de6\u4fa7\u5708\u51fa\u6765\u7684\u6267\u884c\u6309\u94ae\uff0c\u53ef\u4ee5\u50cfmain\u51fd\u6570\u4e00\u6837\u6267\u884c\u53f3\u4fa7\u7684\u4ee3\u7801\uff0c\u5e76\u5f97\u5230\u540c\u6837\u7684\u8f93\u51fa\u7ed3\u679c\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ed9\u4e88\u8fd9\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u4e00\u4e2a\u6709\u8bed\u4e49\u7684\u540d\u5b57\uff0c\u4f7f\u5355\u5143\u6d4b\u8bd5\u66f4\u6574\u6d01\uff0c\u5e76\u62e5\u6709\u66f4\u5f3a\u7684\u63cf\u8ff0\u6027\u3002 \u56fe 3-2 \u8fd0\u884c\u6d4b\u8bd5 \u8fd9\u6837\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5355\u5143\u6d4b\u8bd5\u5c31\u5199\u597d\u4e86\u3002\u4e0d\u8fc7\u8fd9\u65f6\u6211\u4eec\u662f\u901a\u8fc7\u8089\u773c\u6765\u5224\u65ad\u7a0b\u5e8f\u6bcf\u6b21\u7684\u8f93\u51fa\u662f\u5426\u6b63\u786e\u7684\uff0c\u5f53\u6709\u51e0\u5341\u3001\u4e0a\u767e\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u65f6\uff0c\u518d\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u663e\u7136\u4e0d\u73b0\u5b9e\u3002 \u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u6d4b\u8bd5\u7684\u4ee3\u7801\u4e2d\u5b9a\u4e49\u51fa\u4ec0\u4e48\u662f\u5bf9\u7684\uff0c\u4ec0\u4e48\u662f\u9519\u7684\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u7528\u5230\u65ad\u8a00\u4e86\uff0c\u5b83\u53ef\u4ee5\u81ea\u52a8\u62a5\u544a\u4e0d\u80fd\u901a\u8fc7\u7684\u6d4b\u8bd5\u3002 3.2 \u65ad\u8a00 \u8ba1\u7b97\u673a\u662f\u4e00\u79cd\u7279\u522b\u8bb2\u7a76\u51c6\u786e\u6027\u7684\u673a\u5668\uff0c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5bf9\u51c6\u786e\u6027\u7684\u8981\u6c42\u66f4\u9ad8\uff0c\u5c11\u4e86\u4e00\u4e2a\u7b26\u53f7\u6216\u8005\u5355\u8bcd\u62fc\u5199\u9519\u8bef\u5f80\u5f80\u5c31\u4f1a\u8ba9\u7a0b\u5e8f\u51fa\u73b0\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\uff0c\u6211\u76f8\u4fe1\u4e0d\u5c11\u4eba\u6709\u8fc7\u56e0\u4e00\u4e2a\u5355\u8bcd\u62fc\u5199\u9519\u8bef\u5c31Debug\u4e00\u6574\u5929\u7684\u7ecf\u5386\u3002 \u6211\u5728\u521d\u5b66C/C++\u65f6\u4e5f\u66fe\u9762\u5bf9\u8fc7\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u90a3\u65f6\u6211\u603b\u662f\u5fd8\u8bb0\u8f93\u5165\u884c\u672b\u7684\u5206\u53f7\uff0c\u76f4\u5230\u7f16\u8bd1\u65f6\u624d\u53d1\u73b0\u9519\u8bef\u63d0\u793a\uff0c\u6211\u7684\u7f51\u7edcID\"\u5c11\u4e2a\u5206\u53f7\"\u5c31\u662f\u8fd9\u6837\u800c\u6765\u7684\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u5e2e\u6211\u4eec\u68c0\u67e5\u7a0b\u5e8f\u7684\u8f93\u5165\u662f\u5426\u6b63\u786e\uff0c\u5e76\u91cd\u590d\u8fd0\u884c\uff0c\u53ea \u9700\u8981\u544a\u8bc9\u5355\u5143\u6d4b\u8bd5\u4ec0\u4e48\u662f\u5bf9\u7684\uff0c\u4ec0\u4e48\u662f\u9519\u8bef\u7684\u5373\u53ef\uff0c\u8fd9\u5c31\u662f\u65ad\u8a00 \u3002 \u5728\u4e00\u4e9b\"\u8bb2\u7a76\"\u7684\u7a0b\u5e8f\u5458\u773c\u91cc\uff0c\"Hello\uff0cworld\uff01\"\u662f\u795e\u5723\u7684\uff0c\u5047\u8bbe\u5728\u6807\u51c6\u5199\u6cd5\u4e2d\"H\"\u9700\u8981\u5927\u5199\uff0c\u53e5\u5b50\u4e2d\u95f4\u8981\u7528\u534a\u89d2\u9017\u53f7\u9694\u5f00\uff0c\u5e76\u4e14\u8981\u4ee5\u611f\u53f9\u53f7\u7ed3\u675f\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u65ad\u8a00\u6765\u68c0\u6d4b\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8f93\u51fa\u662f\u5426\u5b8c\u5168\u65e0\u8bef\u3002\u4e0b\u9762\u7f16\u5199\u7b2c\u4e00\u4e2a\u65ad\u8a00\uff0c\u5c06\u524d\u9762\u4ee3\u7801\u4e2d\u7684System.out. println\u8bed\u53e5\u66ff\u6362\u4e3aassertEquals\u8bed\u53e5\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_return_world_as_string() { Assert.assertEquals(\"Hello,world!\", HelloWorld.hello()); } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cassertEquals\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u671f\u671b\u7684\u503c\uff0c\u7b2c\u4e8c\u53c2\u6570\u662f\u771f\u5b9e\u7684\u503c\u3002\u5982\u679c\u8fd9\u4e24\u4e2a\u503c\u76f8\u7b49\uff0c\u6d4b\u8bd5\u901a\u8fc7\uff0c\u63a7\u5236\u53f0\u4e3a\u7eff\u8272\u3002\u5982\u679c\u628a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6362\u6210\u4e86\u53e6\u5916\u4e00\u4e2a\u5b57\u7b26\u4e32\"Hello\uff0cworld\uff01\"\uff0c\u8089\u773c\u770b\u53ef\u80fd\u89c9\u5f97\u5e76\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u4f46\u662f\u8fd0\u884c\u6d4b\u8bd5\u65f6\u4f1a\u5931\u8d25\u3002\u539f\u56e0\u4ec5\u4ec5\u662f\u8fd9\u91cc\u628a\u4e2d\u95f4\u7684\u82f1\u6587\u534a\u89d2\u9017\u53f7\u6362\u6210\u4e86\u4e2d\u6587\u7684\u5168\u89d2\u9017\u53f7\uff0c\u5b83\u4eec\u867d\u7136\u770b\u8d77\u6765\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u503c\u5374\u662f\u4e0d\u540c\u7684\u3002\u5355\u5143\u6d4b\u8bd5\u6ca1\u6709\u901a\u8fc7\uff0c\u610f\u5473\u7740\u5b83\u6210\u529f\u5730\u5e2e\u52a9\u6211\u4eec\u4fdd\u62a4\u4e86\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u3002\u4ec5\u4ec5\u4f7f\u7528System.out.println\u662f\u8d77\u4e0d\u5230\u8fd9\u4e2a\u4f5c\u7528\u7684\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u65ad\u8a00\u5c31\u662f\u7528\u6765\u62a5\u9519\u7684\uff0c\u5b83\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e00\u90e8\u5206\u3002 3.2.1 \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u65ad\u8a00\u5e93 \u5982\u679c\u6211\u4eec\u5728\u505a\u7f16\u7a0b\u7ec3\u4e60\u65f6\u624b\u4e0a\u6ca1\u6709\u73b0\u6210\u7684\u65ad\u8a00\u5de5\u5177\uff0c\u6bd4\u5982\u5728\u6d4f\u89c8\u5668\u4e0a\u7f16\u5199JavaScript\u7684\u4ee3\u7801\u65f6\u5f88\u96be\u5feb\u901f\u627e\u5230\u4e00\u4e2a\u6d4b\u8bd5\u6846\u67b6\uff0c\u90a3\u4e48\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\u6765\u8fdb\u884c\u6d4b\u8bd5\uff1a function assertEquals(description, expected, actual) { if (expected !== actual) { throw new Error(\"ComparisonFailure, Expected:\" + expected + \",Actual:\" + actual); } else { console.log(description + \" : %c passs\", \"color:#0f0;\") } } \u8fd9\u5c31\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u65ad\u8a00\u5e93\uff0c\u8fd9\u4e2a\u5e93\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5b83\u4f1a\u5224\u65ad\u671f\u671b\u7684\u503c\u548c\u5b9e\u9645\u7684\u503c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u5c31\u629b\u51fa\u5f02\u5e38\uff0c\u5426\u5219\u5728\u63a7\u5236\u53f0\u4e0a\u6253\u5370\u51fa\u7eff\u8272\u7684\u6210\u529f\u4e86\u7684\u4fe1\u606f\u3002 \u4e0b\u9762\u6839\u636e\u8fd9\u4e2a\u7b80\u5355\u7684\u65ad\u8a00\u65b9\u6cd5\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\uff1a function should_return_hello_world(){ assertEquals(\"test hello world\", \"Hello\", \"Hello\"); } \u53ef\u4ee5\u770b\u5230\uff0c\u5355\u5143\u6d4b\u8bd5\u7684\u903b\u8f91\u5b9e\u9645\u4e0a\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u5728\u51e0\u5206\u949f\u5185\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u5355\u5143\u6d4b\u8bd5\u65ad\u8a00\u5e93\u3002\u65e9\u671f\u6709\u90e8\u5206\u5f00\u6e90\u8f6f\u4ef6\u6ca1\u6709\u7279\u5b9a\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\uff0c\u4f1a\u5185\u7f6e\u4e00\u4e2a\u5fae\u5c0f\u7684\u65ad\u8a00\u5e93\u3002 3.2.2 JUnit \u5185\u7f6e\u7684\u65ad\u8a00\u65b9\u6cd5 \u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u53ea\u6709\"\u76f8\u7b49\"\u8fd9\u79cd\u65ad\u8a00\u65b9\u6cd5\u662f\u8fdc\u8fdc\u4e0d\u591f\u7684\u3002\u6709\u7684\u5bf9\u8c61\u5e76\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528assertEquals\u8fdb\u884c\u6bd4\u8f83\uff0c\u800c\u662f\u8981\u7528\u5230\u5c5e\u6027\u7684\u503c\uff0c\u56e0\u6b64\u4e5f\u5c31\u884d\u751f\u51fa\u66f4\u591a\u7684\u65ad\u8a00\u65b9\u6cd5\uff0c\u6bd4\u5982\uff1a \u7a7a\u6216\u8005\u975e\u7a7a\u65ad\u8a00\u3002 \u5f15\u7528\u76f8\u7b49\u65ad\u8a00\u3002 \u6570\u7ec4\u76f8\u7b49\u65ad\u8a00\u3002 \u5bf9\u8c61\u7684\u5d4c\u5957\u76f8\u7b49\u65ad\u8a00\u3002 \u6839\u636e\u7c7b\u578b\u65ad\u8a00\u3002 \u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u65ad\u8a00\u903b\u8f91\u5199\u5230\u5355\u5143\u6d4b\u8bd5\u7684\u65b9\u6cd5\u4e2d\uff0c\u7136\u540e\u901a\u8fc7assenTrue\u6765\u9a8c\u8bc1\u7ed3\u679c\u3002assertTrue\u662fJUnit\u4e2d\u7684\u4e07\u80fd\u65ad\u8a00\u65b9\u6cd5\uff0c\u5b83\u901a\u8fc7\u4f20\u5165true\u6216\u8005false\u6765\u51b3\u5b9a\u6d4b\u8bd5\u662f\u5426\u901a\u8fc7\u3002\u8fd9\u770b\u8d77\u6765\u5e76\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5728\u90e8\u5206\u60c5\u51b5\u4e0b\u65ad\u8a00\u903b\u8f91\u90fd\u662f\u91cd\u590d\u7684\uff0c\u800c\u4e14\u5355\u5143\u6d4b\u8bd5\u5199\u4e86\u4e00\u5927\u5806\u7684\u903b\u8f91\uff0c\u8fd9\u4e9b\u903b\u8f91\u662f\u5426\u53c8\u9700\u8981\u7f16\u5199\u65b0\u7684\u6d4b\u8bd5\u6765\u4fdd\u62a4\u5462\uff1f\u5982\u679c\u6211\u4eec\u4e0d\u4f7f\u7528\u73b0\u6210\u7684\u65ad\u8a00\u5e93\uff0c\u5c31\u4e0d\u80fd\u786e\u4fdd\u65ad\u8a00\u672c\u8eab\u7684\u903b\u8f91\u662f\u5426\u53ef\u9760\u3002\u56e0\u6b64\u5bf9\u4e8e\u65ad\u8a00\u7684\u8fd9\u90e8\u5206\u903b\u8f91\u6765\u8bf4\uff0c\u5e94\u8be5\u4f7f\u7528JUnit\u63d0\u4f9b\u7684\u65ad\u8a00\u65b9\u6cd5\u63d0\u9ad8\u5355\u5143\u6d4b\u8bd5\u7684\u6709\u6548\u6027\uff0c\u8fd9\u4e48\u505a\u4e5f\u80fd\u51cf\u5c11\u6837\u677f\u4ee3\u7801\u3002 \u5982\u679c\u6211\u4eec\u7f16\u5199\u4e86\u4e00\u4e2a\u6392\u5e8f\u65b9\u6cd5\uff0c\u60f3\u901a\u8fc7\u65ad\u8a00\u6765\u5bf9\u7ed3\u679c\u8fdb\u884c\u5224\u5b9a\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528assert\u7cfb\u5217\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65ad\u8a00\u65b9\u6cd5\u53ef\u9488\u5bf9\u4e0d\u540c\u60c5\u51b5\u8fdb\u884c\u6d4b\u8bd5\uff0c\u80fd\u6ee1\u8db3\u4e0d\u540c\u7684\u9700\u6c42\u3002 assertArrayEquals\u53ef\u4ee5\u7528\u4e8e\u65ad\u8a00\u6570\u7ec4\uff0c\u5b83\u4f1a\u4f9d\u6b21\u6bd4\u8f83\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void assert_array_equals() { int[] input = {1, 2, 5, 7, 0}; Arrays.sort(input); int[] expected = {0, 1, 2, 5, 7}; assertArrayEquals(\"expected array should be sorted\", expected, input); } assertNotNull \u975e\u5e38\u5b9e\u7528\uff0c\u5e38\u7528\u4e8e\u6570\u636e\u5e93\u63d2\u5165\u3001\u679a\u4e3e\u89e3\u6790\u7b49\u4e1a\u52a1\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void assert_not_null() { assertNotNull(\"should not be null\", Integer.valueOf(\"10\")); } assertSame \u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u5bf9\u8c61\u5f15\u7528\u662f\u5426\u76f8\u540c\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_be_same() { assertSame(Runtime.getRuntime\uff08\uff09\uff0cRuntime.getRuntime\uff08\uff09); } assertTrue \u8981\u6c42\u4f20\u5165\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684\u771f\uff0c\u5982\u679c\u662f\u771f\u503c\u5219\u65ad\u8a00\u901a\u8fc7\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_be_true() { String hello = \"Hello\"; assertTrue(hello.isEmpty()); } assertArrayEquals\u3001assertNotNull\u3001assertSame\u3001assertTrue \u8fd9\u51e0\u4e2a\u65b9\u6cd5\u90fd\u6709\u53cd\u5411\u65ad\u8a00\u65b9\u6cd5\u3002\u88683-1\u7ed9\u51fa\u4e86\u5e38\u7528\u7684\u65ad\u8a00\u65b9\u6cd5\u4ee5\u53ca\u5b83\u4eec\u7684\u53cd\u5411\u65ad\u8a00\u65b9\u6cd5\u3002 \u8868 3-1 \u5e38\u7528\u7684\u65ad\u8a00\u65b9\u6cd5 \u65ad\u8a00 \u7528\u9014 \u53cd\u5411\u65ad\u8a00 assertEquals \u503c\u76f8\u7b49\u65ad\u8a00 assertNotEquals assertTrue \u771f\u503c\u65ad\u8a00 assertFalse assertNull \u6821\u9a8c\u7a7a assertNotNull assertSame \u6821\u9a8c\u5f15\u7528\u76f8\u540c assertNotSame assertArrayEquals \u6821\u9a8c\u6570\u7ec4\u5143\u7d20\u76f8\u540c - assertThat \u4f7f\u7528 Matcher \u8fdb\u884c\u65ad\u8a00 - 3.2.3 \u4f7f\u7528 assertThat \u548c Matcher \u524d\u9762\u7ed9\u51fa\u7684\u65ad\u8a00\u65b9\u6cd5\u867d\u7136\u5e38\u7528\uff0c\u5374\u96be\u4ee5\u8986\u76d6\u6240\u6709\u7684\u573a\u666f\u3002\u4e3a\u4e86\u8ba9\u65ad\u8a00\u66f4\u4e3a\u4e30\u5bcc\uff0cJUnit\u4f7f\u7528\u4e86\u66f4\u4e3a\u9ad8\u660e\u7684\u65b9\u6cd5\u2014\u2014\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2aassertThat\u65b9\u6cd5\uff08\u5b9e\u9645\u4e0a\u662fHamcrest\u63d0\u4f9b\u7684\uff09\u3002assertThat\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u9700\u8981\u68c0\u67e5\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u7528\u6765\u8ba1\u7b97\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\u3002\u7528\u6765\u8ba1\u7b97\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\u7684\u51fd\u6570\u53eb\u4f5cMatcher\uff0cMatcher\u53ef\u4ee5\u7531\u7b2c\u4e09\u65b9\u5e93\u63d0\u4f9b\u3002 Java\u4e2d\u6bd4\u8f83\u77e5\u540d\u7684Matcher\u5e93\u662fHamcrest\u548cAssertJ\uff0cHamcrest\u4e3aJUnit\u5185\u7f6e\u7684\u5e93\uff0c\u5b83\u9002\u7528\u4e8e\u5927\u90e8\u5206\u573a\u666f\u3002 \u4f8b\u5982\uff0c\u60f3\u8981\u7f16\u5199\u4e00\u4e2ahelloAndNow\u65b9\u6cd5\u8fd4\u56de\"Hello\uff0cworld\uff01\"\u5e76\u9644\u52a0\u5f53\u524d\u7684\u65f6\u95f4\uff0c\u7531\u4e8e\u65f6\u95f4\u662f\u52a8\u6001\u751f\u6210\u7684\uff0c\u56e0\u6b64\u73b0\u5728\u6ca1\u6709\u529e\u6cd5\u4f7f\u7528assertEquals\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528assertThat\u548cstartsWith Matcher\u6765\u5b9e\u73b0\u4e0a\u8ff0\u65b9\u6cd5\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public static String helloAndNow() { return \"Hello, world!\" + System.currentTimeMillis(); } @Test public void should_start_with_hello() { assertThat(helloAndNow(), startsWith(\"Hello\")); } \u8868 3-2 \u662f\u4e00\u4e9b\u5e38\u7528\u7684 Matcher\uff0c\u4f7f\u7528\u597d Matcher\u53ef\u4ee5\u5927\u5e45\u51cf\u5c11\u6d4b\u8bd5\u7684\u4ee3\u7801\u91cf\u3002 \u8868 3-2 \u5e38\u7528\u7684 Matcher Matcher \u793a\u4f8b \u7528\u9014 anything assertThat(\u201chamcrest\u201d,anything()); \u4efb\u4f55\u5185\u5bb9\uff0c\u4e00\u822c\u53ea\u7528\u6765\u5360\u4f4d describedAs assertThat(\u201chamcrest\u201d, describedAs(\u201ca description\u201d, anything())); \u7528\u6765\u5305\u88c5\u4e00\u4e2a\u63cf\u4fe1\u606f is assertThat(\u201chamcrest\u201d, is((anything())); \u5176\u5b9e\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u5305\u88c5\u4e00\u4e2a\u8bed\u4e49\u4fe1\u606f allOf assertThat(\u201chamcrest\u201d, allOf(anything(), anything(), anything())); \u4e32\u8054\u591a\u4e2a\u65ad\u8a00 anyOf assertThat(\u201chamcrest\u201d, anyOf(anything(), anything(), anything())); \u5e76\u8054\u591a\u4e2a\u65ad\u8a00 not assertThat(\u201chamcrest\u201d, not(not(anything()))); \u53d6\u53cd\u65ad\u8a00 equalTo assertThat(\u201chamcrest\u201d, equalTo(\u201chamcrest\u201d)); \u6d4b\u8bd5\u5bf9\u8c61 equals \u76f8\u7b49 instanceOf assertThat(\u201chamcrest\u201d, instanceOf(String.class)); \u6d4b\u8bd5\u5bf9\u8c61\u7c7b\u578b notNullValue,nullValue assertThat(null,nullValue()); \u6d4b\u8bd5\u7a7a\u3001\u975e\u7a7a\u503c sameInstance assertThat(Runtime.getRuntime(), sameInstance(Runtime.getRuntime())); \u6d4b\u8bd5\u5bf9\u8c61\u5f15\u7528\u662f\u5426\u4e00\u81f4 hasItems assertThat(Arrays.asList(1,2,3), hasItems(1, 2)); \u65ad\u8a00\u5217\u8868\u5185\u5bb9 \u65e2\u7136\u4f7f\u7528\u5408\u9002\u7684Matcher\u5c31\u53ef\u4ee5\u5b8c\u6210assertSame\u7b49\u65ad\u8a00\u65b9\u6cd5\u7684\u5de5\u4f5c\uff0c\u90a3\u4e3a\u4ec0\u4e48\u8981\u91cd\u590d\u9020\u4e00\u4e2a\u8f6e\u5b50\u5462\uff1f \u8fd9\u662f\u56e0\u4e3a\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u548c\u65ad\u8a00\u5e93\u505a\u7684\u662f\u4e24\u4ef6\u4e0d\u540c\u7684\u4e8b\u60c5\u3002\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u66f4\u591a\u7684\u662f\u7ba1\u7406\u3001\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u53ca\u7edf\u8ba1\u901a\u8fc7\u7387\u7b49\uff0cMatcher\u5219\u7528\u6765\u5b8c\u6210\u6761\u4ef6\u5224\u65ad\u7684\u4efb\u52a1\u3002Matcher\u4e00\u822c\u88ab\u8bbe\u8ba1\u4e3a\u517c\u5bb9\u591a\u4e2a\u6d4b\u8bd5\u6846\u67b6\uff0c\u5982\u679c\u8003\u8651\u6362\u6d4b\u8bd5\u6846\u67b6\uff0c\u5efa\u8bae\u5c3d\u91cf\u4f7f\u7528Matcher\u5b8c\u6210\u65ad\u8a00\u4efb\u52a1\uff0c\u65b9\u4fbf\u8fc1\u79fb\u3002 3.2.4 \u7f16\u5199\u81ea\u5df1\u7684 Matcher \u5982\u679c\u4e0a\u8ff0l\u65ad\u8a00\u4ecd\u7136\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u7f16\u5199\u4e00\u4e2aMatcher\u3002\u6bd4\u5982\uff0c\u4e00\u6bb5\u7a0b\u5e8f\u4f7f\u7528\u7cfb\u7edf\u5f53\u524d\u65f6\u95f4\u65f6\uff0c\u7531\u4e8e\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u65f6\u95f4\uff0c\u65ad\u8a00\u65f6\u53d6\u5230\u7684\u7cfb\u7edf\u65f6\u95f4\u53ef\u80fd\u5df2\u7ecf\u4e0d\u540c\uff0c\u56e0\u6b64\u65e0\u6cd5\u51c6\u786e\u5730\u65ad\u8a00\u76f8\u5e94\u7684\u65f6\u95f4\uff0c\u90a3\u8be5\u600e\u4e48\u529e\uff1f\u5176\u5b9e\u53ea\u8981\u8fd9\u4e2a\u65f6\u95f4\u6233\u5728\u4e00\u5b9a\u7684\u8303\u56f4\u5185\uff0c\u5c31\u53ef\u4ee5\u7b97\u4f5c\u901a\u8fc7\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684Matcher\u6765\u8fdb\u884c\u5224\u65ad\uff1a public class CurrentSystemTimeMatcher extends TypeSafeMatcher<Long> { private final long timeWindow; public CurrentSystemTimeMatcher(long timeWindow) { this.timeWindow = timeWindow; } protected boolean matchesSafely(Long time) { System.out.println(System.currentTimeMillis()); if (System.currentTimeMillis() <= (time + timeWindow)) { return true; } else { return false; } } public void describeTo(Description description) { description.appendText(\" current time not in range \" + timeWindow); } /** * @param \u901a\u8fc7\u4e00\u4e2a\u65f6\u95f4\u7a97\u6765\u5224\u5b9a\u7ed3\u679c * @return */ public static CurrentSystemTimeMatcher currentTimeEquals(long timeWindow) { return new CurrentSystemTimeMatcher(timeWindow); } } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u5982\u679cTypeSafeMatcher\u5f15\u7528\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u53ef\u4ee5\u67e5\u770b\u4e00\u4e0bCurrentSystem-TimeMatcher\u662f\u5426\u653e\u5230\u4e86\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\u4e0b\uff0c\u800c\u975etest\u7684\u76ee\u5f55\u4e0b\u3002\u6211\u4eec\u4e00\u822c\u4f1a\u5c06\u6d4b\u8bd5\u7684\u4f9d\u8d56scope\u8bbe\u7f6e\u4e3atest\uff0c\u8fd9\u4e9b\u7c7b\u5728\u6e90\u4ee3\u7801\u6a21\u5757\u4e2d\u65e0\u6cd5\u88ab\u5f15\u7528\u3002 \u81ea\u5b9a\u4e49\u7684Matcher\u4f7f\u7528\u8d77\u6765\u548c\u5176\u4ed6Matcher\u662f\u4e00\u6837\u7684\uff0ccurrentTimeEquals\u65b9\u6cd5\u53ef\u63a5\u53d7\u4e00\u4e2a\u65f6\u95f4\u7a97\u53e3\uff0c\u53ea\u8981\u8fd0\u884c\u65f6\u95f4\u5728\u8fd9\u4e2a\u65f6\u95f4\u7a97\u53e3\u5185\uff0c\u5c31\u90fd\u53ef\u4ee5\u7b97\u4f5c\u65ad\u8a00\u901a\u8fc7\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_assert_time_with_time_window() throws InterruptedException { long now = System.currentTimeMillis(); assertThat(now, currentTimeEquals(10)); } 3.2.5 \u65ad\u8a00\u5e76\u4e0d\u53ea\u662f\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u6982\u5ff5 \u65ad\u8a00\u5e76\u4e0d\u53ea\u662f\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u6982\u5ff5\uff0c\u5728\u7f16\u5199\u5b9e\u9645\u7684\u4e1a\u52a1\u4ee3\u7801\u65f6\u4e5f\u53ef\u4ee5\u5927\u91cf\u4f7f\u7528\u65ad\u8a00\u3002Java 1.4\u4e2d\u5c31\u589e\u52a0\u4e86assert\u5173\u952e\u5b57\uff0c\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65ad\u8a00\uff0c\u6b64\u65ad\u8a00\u5e38\u7528\u4e8e\u68c0\u67e5\u8f93\u5165\uff0c\u5982\u679c\u65ad\u8a00\u672a\u901a\u8fc7\uff0c\u5219\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002 \u5982\u679c\u6211\u4eec\u8981\u7f16\u5199\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u65b9\u6cd5\uff0c\u9010\u4e2a\u5224\u65ad\u8f93\u5165\u53c2\u6570\u662f\u5426\u4e3a\u7a7a\uff0c\u8fd9\u5176\u4e2d\u9700\u8981\u7528\u5230\u5f88\u591a\u7684\u6837\u677f\u4ee3\u7801\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u65ad\u8a00\u8fdb\u884c\u68c0\u67e5\uff0c\u5728\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\u629b\u51faAssertionError\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6837\u677f\u4ee3\u7801\u7684\u6570\u91cf\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public static String contactString(String first, String second) { assert first != null; assert second != null; return first + second; } \u5bf9\u4e8e\u4e0a\u8ff0\u4ee3\u7801\u8981\u8bf4\u660e\u7684\u662f\uff0cassert\u5173\u952e\u5b57\u5e38\u7528\u4e8e\u5404\u79cd\u6846\u67b6\uff0c\u4f46\u662f\u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u5f88\u5c11\u770b\u5230\uff0c\u56e0\u4e3a\u8d85\u51fa\u4e86\u672c\u4e66\u7684\u8303\u56f4\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 3.2.6 \u601d\u8003\u9898 \u6211\u4eec\u77e5\u9053\u8ba1\u7b97\u673a\u5728\u6bd4\u8f83\u6d6e\u70b9\u6570\u5b57\u65f6\u4f1a\u6709\u7cbe\u5ea6\u95ee\u9898\uff0c\u90a3\u4e48\u4e0b\u9762\u54ea\u4e00\u4e2a\u65ad\u8a00\u4f1a\u901a\u8fc7\u5462\uff1f Assert.assertEquals(0.0012f, 0.0014f); Assert.assertEquals(0.0012f, 0.0014f, 0.0002); Assert.assertEquals(0.0012f, 0.0014f, 0.0001); \u7cbe\u5ea6\u95ee\u9898\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u5e38\u5e38\u51fa\u73b0\uff0c\u4f8b\u5982\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u4ef7\u683c\uff0c\u7ed3\u679c\u53ef\u80fd\u662f\u4e00\u4e2a\u65e0\u9650\u5c0f\u6570\uff1a public static float calculateAA(float totalPrice, float counts) { return totalPrice / counts; } \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0b\u9762\u7684\u65ad\u8a00\u5c31\u4e0d\u4f1a\u901a\u8fc7\uff1a @Test public void should_assert_with_float_delta() { assertEquals(3.3333F, calculateAA(10F, 3F)); } \u8fd9\u65f6\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u51fa\u4e00\u4e2a delta \u53c2\u6570\uff0c\u7528\u4e8e\u8868\u793a\u80fd\u5bb9\u5fcd\u7684\u771f\u5b9e\u503c\u548c\u671f\u671b\u503c\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4e5f\u5c31\u662f\u7cbe\u786e\u7684\u4f4d\u6570\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_assert_with_float_delta() { assertEquals(3.3333F, calculateAA(10F, 3F), 0.1); } \u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3 delta \u53c2\u6570\uff0c\u53ef\u4ee5\u67e5\u770b assertEquals \u7684\u6e90\u7801\u3002 3.3 \u5355\u5143\u6d4b\u8bd5\u7684\u7ed3\u6784 \u4e00\u4e2a\u4f18\u79c0\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u9664\u4e86\u5177\u5907\u524d\u9762\u4ecb\u7ecd\u7684\u65ad\u8a00\u5916\uff0c\u8fd8\u9700\u8981\u51c6\u5907\u6e05\u6670\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u5e76\u6e05\u7406\u6d4b\u8bd5\u6570\u636e\u76f8\u5173\u7684\u903b\u8f91\uff0c\u8fd9\u4e9b\u903b\u8f91\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002\u4e0b\u9762\u5c06\u4ecb\u7ecd\u4e00\u4e2a\u5b8c\u6574\u7684\u5355\u5143\u6d4b\u8bd5\u6709\u54ea\u4e9b\u5185\u5bb9\u3002 3.3.1 \u51c6\u5907\u6570\u636e\u548c\u6e05\u7406\u6570\u636e \u524d\u9762\u7684\u793a\u4f8b\u4f7f\u7528\u7684\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u4f46\u662f\u5728Java\u4e2d\u8fd9\u79cd\u7b80\u5355\u7684\u4f7f\u7528\u573a\u666f\u6bd4\u8f83\u5c11\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u9700\u8981\u5b9e\u4f8b\u5316\u7c7b\u3001\u51c6\u5907\u521d\u59cb\u6570\u636e\uff0c\u5e76\u4e14\u8981\u7528\u5230\u6a21\u62df\u6280\u672f\uff08\u540e\u9762\u4f1a\u4ecb\u7ecd\uff09\u3002 JUnit\u9488\u5bf9\u51c6\u5907\u3001\u6e05\u7406\u6709\u72b6\u6001\u7684\u6570\u636e\u7b49\u64cd\u4f5c\u63d0\u4f9b\u4e86\u51e0\u4e2a\u975e\u5e38\u6709\u7528\u7684\u6ce8\u89e3\uff0c\u4e0b\u9762\u4ee5\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u62fc\u88c5\u5668\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7@Before\u6ce8\u89e3\u6765\u4e3a\u6bcf\u6b21\u7684\u6d4b\u8bd5\u51c6\u5907\u6570\u636e\uff1a class StringAppender { private String value = \"\"; public void append(String appendText) { value = value + appendText; } public String getValue() { return value; } } StringAppender stringAppender; @Before public void setup() { stringAppender = new StringAppender(); } @Test public void should_get_text_from_object() { stringAppender.append(\"Hello\"); stringAppender.append(\",world\"); assertEquals(\"Hello,world\", stringAppender.getValue()); } JUnit 4 \u4e2d\u6709\u5982\u4e0b\u56db\u4e2a\u6267\u884c\u8fc7\u7a0b\uff08\u94a9\u5b50\uff09\u6ce8\u89e3\u3002 @BeforeClass \uff1a\u7528\u4e8e\u7c7b\u52a0\u8f7d\u9996\u6b21\u6267\u884c\uff0c\u5fc5\u987b\u7528\u5728\u9759\u6001\u65b9\u6cd5\u4e0a\u3002 @Before \uff1a\u7528\u5728\u5b9e\u4f8b\u65b9\u6cd5\u4e2d\uff0c\u5728\u6267\u884c\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u524d\u6267\u884c\u3002 @After\uff1a \u7528\u5728\u5b9e\u4f8b\u65b9\u6cd5\u4e2d\uff0c\u5728\u6267\u884c\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u540e\u6267\u884c\u3002 @AfterClass\uff1a\u5728@After\u7c7b\u4f3c\uff0c\u533a\u522b\u5728\u4e8e@AfterClass\u662f\u4ee5\u7c7b\u7684\u7ef4\u5ea6\u751f\u6548\u7684\uff0c\u5373\u88ab\u8be5\u6ce8\u89e3\u4fee\u9970\u7684\u65b9\u6cd5\u4f1a\u5728\u8be5\u7c7b\u5305\u542b\u7684\u5168\u90e8\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u5b8c\u4e4b\u540e\u88ab\u6267\u884c\uff0c\u5fc5\u987b\u7528\u5728\u9759\u6001\u65b9\u6cd5\u4e0a\u3002 \u5728 @Before \u548c @After \u65b9\u6cd5\u4e4b\u95f4\u4f1a\u6267\u884c\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5b83\u4eec\u7684\u6267\u884c\u987a\u5e8f\u662f\uff1a @BeforeClass \u2192 @Before \u2192 @Test \u2192 @After \u2192 @AfterClass \u5982\u679c\u6709\u7236\u7c7b\u7684\u65b9\u6cd5\u51fa\u73b0 @Before\u3001@BeforeClass \u7b49\u6ce8\u89e3\uff0c\u7236\u7c7b\u4f1a\u4f18\u5148\u6267\u884c\u3002\u53ef\u4ee5\u5c1d\u8bd5\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\uff0c\u5305\u542b\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5e76\u6267\u884c\u4e00\u4e2a\u6d4b\u8bd5\u3002 @BeforeClass public static void beforeClass() { System.out.println(\"@BeforeClass\"); } @Before public void setup() { System.out.println(\"@Before\"); } @After public void tearDown() { System.out.println(\"@After\"); } @AfterClass public static void afterClass() throws Exception { System.out.println(\"@AfterClass\"); } \u53ef\u4ee5\u770b\u5230\u7ed3\u679c\u5982\u4e0b\uff1a @BeforeClass @Before @After @AfterClass 3.3.2 \u8bbe\u8ba1\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b JUnit\u672c\u8eab\u6bd4\u8f83\u7b80\u5355\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5176\u5185\u7f6e\u7684\u7279\u6027\u8db3\u591f\u7f16\u5199\u5927\u90e8\u5206\u4f9d\u8d56\u7b80\u5355\u7684\u6d4b\u8bd5\u4ee3\u7801\u3002\u7b2c1\u7ae0\u66fe\u4ecb\u7ecd\u8fc7\u4ec0\u4e48\u662f\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e9b\u5b9e\u4f8b\u6765\u8bf4\u660e\u6d4b\u8bd5\u7528\u4f8b\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u5e94\u7528\u3002 \u5355\u5143\u6d4b\u8bd5\u7684\u5bf9\u8c61\u4e00\u822c\u662f\u65b9\u6cd5\u548c\u7ec4\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5355\u5143\u6d4b\u8bd5\u662f\u5bf9\"\u8f6e\u5b50\"\u7684\u8d28\u91cf\u8fdb\u884c\u9a8c\u8bc1\uff0c\u53ef\u60f3\u800c\u77e5\uff0c\u76f8\u8f83\u4e8eQA\u4f7f\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5b83\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u7565\u6709\u4e0d\u540c\u3002\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u5b83\u7684\u7c92\u5ea6\u66f4\u5c0f\uff0c\u6ca1\u6709\u592a\u591a\u573a\u666f\u548c\u6d41\u7a0b\uff0c\u4e3b\u8981\u5173\u6ce8\u7b49\u4ef7\u5212\u5206\u548c\u8fb9\u754c\u503c\u7684\u9009\u62e9\uff0c\u4e14\u8981\u8003\u8651\u8986\u76d6\u66f4\u591a\u7684\u5206\u652f\u3002 JUnit\u4e2d@Test\u4fee\u9970\u7684\u65b9\u6cd5\u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002\u9664\u4e86\u51c6\u5907\u6570\u636e\u4e4b\u5916\uff0c \u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u53ea\u4f1a\u5bf9\u7ec4\u4ef6\u7684\u4e00\u4e2a\u7279\u6027\u8fdb\u884c\u9a8c\u8bc1 \uff0c\u8fd9\u4e2a\u9a8c\u8bc1\u53ef\u80fd\u5305\u62ec\u591a\u6b21\u65ad\u8a00\uff0c\u4ee5\u786e\u4fdd\u7ed3\u679c\u6b63\u786e\u3002 \u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u901a\u5e38\u5305\u542b\u4ee5\u4e0b\u90e8\u5206\uff1a \u8f93\u5165\u6570\u636e \uff0c\u6709\u65f6\u5019\u53ef\u80fd\u6ca1\u6709\u3002 \u4e0e\u88ab\u6d4b\u8bd5\u7684\u65b9\u6cd5\u4ea4\u4e92\u3002 \u65ad\u8a00\u3002 \u53ef\u9009\u7684\u90e8\u5206\u6709\uff1a \u6570\u636e\u51c6\u5907\u3002 \u6570\u636e\u6e05\u7406\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u4ee5\u56de\u6587\u6570\u4f5c\u4e3a\u793a\u4f8b\uff0c\u6765\u9a8c\u8bc1\u4e00\u4e2a\u65b9\u6cd5\u662f\u5426\u53ef\u9760\u3002 1. \u7b49\u4ef7\u5212\u5206\u548c\u8fb9\u754c\u5206\u6790 \u56de\u6587\u6570\u662f\u6307\u6b63\u5e8f\uff08\u4ece\u5de6\u5411\u53f3\uff09\u8bfb\u548c\u5012\u5e8f\uff08\u4ece\u53f3\u5411\u5de6\uff09\u8bfb\u90fd\u662f\u4e00\u6837\u7684\u6574\u6570\u3002\u56de\u6587\u5b57\u7b26\u4e32\u5f88\u597d\u5224\u65ad\uff0c\u4f46\u662f\u56de\u6587\u6570\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u6211\u5199\u4e86\u4e00\u4e2a\u5b9e\u73b0\uff0c\u7136\u540e\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6765\u4fdd\u8bc1\u5b83\u7684\u53ef\u9760\u6027\u3002\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5305\u542b\u4e86\u987a\u5e8f\u3001\u5206\u652f\u3001\u5faa\u73af\u4e09\u79cd\u7a0b\u5e8f\u7ed3\u6784\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a public static boolean isPalindrome(int inputValue) { if (inputValue < 0) { return false; } int reverseValue = 0; int intermediateValue = inputValue; while (intermediateValue != 0) { reverseValue = reverseValue * 10 + intermediateValue % 10; intermediateValue /= 10; } return reverseValue == inputValue; } \u4e0b\u9762\u5148\u8bbe\u8ba1\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u6d4b\u8bd5\uff0c\u8f93\u5165\u4e00\u4e2a\u666e\u901a\u7684\u503c\uff0c\u6bd4\u59828\u3002\u8fd9\u4e2a\u6d4b\u8bd5\u5f88\u5bb9\u6613\u4f1a\u901a\u8fc7\uff0c\u56e0\u4e3a\u5355\u4e2a\u6570\u5b57\u90fd\u6ee1\u8db3\u6761\u4ef6\u3002\u8fd9\u7c7b\u7b80\u5355\u901a\u8fc7\u7684\u6b63\u5411\u6d4b\u8bd5\u53eb\u505a\"Happy Path\"\uff08\u7b2c1\u7ae0\u5df2\u4ecb\u7ecd\uff09\u3002 @Test public void should_be_true_if_value_is_eight() { // Given int inputValue = 8; // When boolean palindrome = isPalindrome(inputValue); // Then assertTrue(palindrome); } \u5982\u679c\u8fd9\u4e2a\u65b9\u6cd5\u88ab\u5f88\u591a\u4eba\u4f7f\u7528\uff0c\u4f1a\u9047\u5230\u5404\u79cd\u5404\u6837\u7684\u573a\u666f\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u5230\u5404\u79cd\u8fb9\u754c\u60c5\u51b5\uff0c\u8ba9\u7a0b\u5e8f\u66f4\u4e3a\u5065\u58ee\u3002\u5c1d\u8bd5\u95ee\u81ea\u5df1\u4e0b\u9762\u7684\u95ee\u9898\uff1a \u5982\u679c\u8fd9\u4e2a\u503c\u662f\u8d1f\u6570\uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u8fd9\u4e2a\u503c\u662f 0 \uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u8fd9\u4e2a\u503c\u662f 7 \uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u8fd9\u4e2a\u503c\u662f\u4e00\u4e2a\u4e24\u4f4d\u6570\uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u8fd9\u4e2a\u503c\u662f Java int \u7c7b\u578b\u6700\u5927\u503c\uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u8fd9\u4e2a\u503c\u662f Java int \u7c7b\u578b\u7684\u6700\u5c0f\u503c\uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5e78\u597d\u6211\u4eec\u4f7f\u7528\u7684\u662f\u7c7b\u578b\u7cfb\u7edf\u5b8c\u5584\u7684 Java\uff0c\u5982\u679c\u4f7f\u7528\u7684\u662f\u5f31\u7c7b\u578b\u8bed\u8a00\uff0c\u4f8b\u5982 JavaScript \uff0c\u90a3\u4e48\u95ee\u9898\u4f1a\u66f4\u591a\u3002 \u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u7684\u65f6\u5019\uff0c\u6700\u57fa\u7840\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528\u8fb9\u754c\u503c\u5206\u6790\u548c\u7b49\u4ef7\u7c7b\u5212\u5206\u3002\u5728\u4e0a\u8ff0\u5b9e\u73b0\u4e2d\uff0c0 \u548c 10 \u975e\u5e38\u7279\u6b8a\uff0c\u601d\u8003\u4e00\u4e0b\uff0c\u8fd9\u4e24\u4e2a\u6570\u5b57\u4f1a\u5c06\u6570\u8f74\u5212\u5206\u4e3a\u54ea\u4e9b\u8fb9\u754c\uff1a \u6700\u5c0f\u503c\u5230 0 \u662f\u4e24\u4e2a\u8fb9\u754c\u3002 0 \u5230 10 \u662f\u4e00\u4e2a\u8fb9\u754c\u3002 10 \u5230\u6700\u5927\u503c\u662f\u4e00\u4e2a\u8fb9\u754c\u3002 \u8fb9\u754c\u4e0a\u7684\u8f93\u5165\u4f5c\u4e3a\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f8b\u5982 0\u300110\u3002\u8fb9\u754c\u4e2d\u95f4\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u6bd4\u59827 \u548c 8\uff0c \u53ef\u4ee5\u770b\u4f5c\u662f\u7b49\u4ef7\u7684\uff0c\u53d6\u5176\u4e2d\u4e00\u4e2a\u503c\u5373\u53ef\u3002\u4e0b\u9762\u4f7f\u7528\u8868 3-3 \u8fdb\u884c\u63cf\u8ff0\uff1a \u8868 3-3 \u8fb9\u754c\u503c\u5206\u6790 \u8fb9\u754c\u503c \u8f93\u5165\u503c \u671f\u671b\u7684\u7ed3\u679c Integer.MIN_VALUE Integer.MIN_VALUE False 0 0 True 5 5 True 10 10 False 11 11 True Integer.MAX_VALUE Integer.MAX_VALUE False \u88683-3\u4e00\u5171\u67096\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u80fd\u6bd4\u8f83\u5145\u5206\u5730\u8003\u8651\u5230\u5404\u79cd\u60c5\u51b5\u3002\u7531\u4e8e\u5199\u5b8c\u8fd96\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u9700\u8981\u5360\u7528\u5927\u91cf\u7bc7\u5e45\uff0c\u56e0\u6b64\u8fd9\u91cc\u5c31\u4e0d\u518d\u7ed9\u51fa\u793a\u4f8b\u3002\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u9047\u5230\u8fd9\u79cd\u6709\u56fa\u5b9a\u8f93\u5165\u6a21\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u53ef\u4ee5\u60f3\u529e\u6cd5\u51cf\u5c11\u6837\u677f\u4ee3\u7801\uff0c\u5728\u540e\u9762\u4ecb\u7ecdJUnit\u7684\u53e6\u5916\u4e00\u4e2a\u7279\u6027\u65f6\u4f1a\u8fdb\u4e00\u6b65\u8bb2\u89e3\u3002 \u6839\u636e\u53ef\u8fbe\u8def\u5f84\u8bbe\u8ba1\u7528\u4f8b \u53e6\u5916\u4e00\u79cd\u66f4\u5e38\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u65b9\u6cd5\u662f\u6839\u636e\u53ef\u8fbe\u8def\u5f84\u8bbe\u8ba1\u3002\u53ef\u8fbe\u8def\u5f84\u662f\u6307\u7a0b\u5e8f\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u6d41\u52a8\u8def\u5f84\uff0c\u8fd9\u4e9b\u8def\u5f84\u662f\u57fa\u4e8e\u4ee3\u7801\u4e2d\u5206\u652f\u8bed\u53e5\u7684\u6570\u91cf\u6765\u5b9e\u73b0\u7684\uff0c\u5355\u5143\u6d4b\u8bd5\u5e94\u8be5\u4fdd\u8bc1\u6bcf\u6761\u8def\u5f84\u90fd\u80fd\u8986\u76d6\u3002 \u4e0b\u9762\u4ee5\u7b80\u5316\u7248\u7684Fizz Buzz\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff0cFizz Buzz\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u7f16\u7a0b\u7ec3\u4e60\u9898\uff0c\u4e3b\u8981\u8003\u5bdf\u4ee3\u7801\u7684\u8bbe\u8ba1\u601d\u8def\u3002 \u7ed9\u4e88\u4e00\u4e2a\u6574\u6570 n\u3002\u5982\u679c\u8fd9\u4e2a\u6570\u80fd\u88ab3\u6574\u9664\uff0c\u8fd4\u56de fizz\u3002\u5982\u679c\u8fd9\u4e2a\u6570\u80fd\u88ab 5 \u6574\u9664\uff0c\u8fd4\u56de buzz\u3002\u5982\u679c\u8fd9\u4e2a\u6570\u80fd\u540c\u65f6\u88ab 3 \u548c 5 \u6574\u9664\uff0c\u8fd4\u56de fizz buzz\u3002\u5982\u679c\u90fd\u4e0d\u6ee1\u8db3\uff0c\u8fd4\u56de null\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u5b9e\u73b0\uff1a public static String simpleFizzBuzz(int n) { if (n % 3 == 0 && n % 5 == 0) { return \"fizz buzz\"; } else if (n % 3 == 0) { return \"fizz\"; } else if (n % 5 == 0) { return \"buzz\"; } return null; } \u5982\u8868 3-4 \u6240\u793a\uff0csimpleFizzBuzz \u65b9\u6cd5\u6709 4 \u6761\u8def\u5f84\uff0c\u6ee1\u8db3\u5404\u4e2a\u6761\u4ef6\u5219\u8fd4\u56de\u5355\u8bcd\uff0c\u4e0d\u6ee1\u8db3\u5219\u8fd4\u56de null\u3002 \u8868 3-4 \u8def\u5f84\u5206\u6790 \u8def\u5f84 \u7528\u4f8b\u8f93\u5165 \u671f\u671b\u7ed3\u679c n % 3 == 0 && n % 5 == 0 15 fizz buzz n % 3 == 0 3 fizz n % 5 == 0 5 buzz \u5176\u4ed6 10 Null \u4e00\u4e2a\u65b9\u6cd5\u7684\u53ef\u8fbe\u8def\u5f84\u7684\u6570\u91cf\u8fd8\u53ef\u4ee5\u8861\u91cf\u4e00\u6bb5\u4ee3\u7801\u7684\u590d\u6742\u5ea6\u3002\u53ef\u8fbe\u6570\u91cf\u975e\u5e38\u591a\u8bf4\u660e\u8fd9\u4e2a\u65b9\u6cd5\u975e\u5e38\u590d\u6742\uff0c\u9700\u8981\u76f8\u5e94\u5730\u589e\u52a0\u6d4b\u8bd5\u7528\u4f8b\u7684\u6570\u91cf\uff0c\u4ee5\u4fdd\u8bc1\u5b83\u7684\u53ef\u9760\u6027\u3002\u53ef\u8fbe\u8def\u5f84\u975e\u5e38\u591a\u800c\u5e26\u6765\u7684\u590d\u6742\u5ea6\u53eb\u4f5c\u5708\u590d\u6742\u5ea6\u3002 \u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u5305\u542b\u7684\u4ee3\u7801\u6bd4\u8f83\u957f\uff0c\u5708\u590d\u6742\u5ea6\u5219\u76f8\u5bf9\u9ad8\uff0c\u5982\u679c\u5404\u79cd\u6761\u4ef6\u8bed\u53e5\u518d\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u4f1a\u5448\u6307\u6570\u7ea7\u4e0a\u5347\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5708\u590d\u6742\u5ea6\u572820\u4ee5\u5185\u6bd4\u8f83\u5408\u9002\uff0c\u8d85\u51fa40\u5219\u6d4b\u8bd5\u7684\u6210\u672c\u4f1a\u975e\u5e38\u9ad8\u3002 \u5355\u5143\u6d4b\u8bd5\u4ee5\u5c0f\u7684\u9897\u7c92\u5ea6\u51c6\u5907\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7ec4\u5408\u8981\u5c11\u4e00\u4e9b\uff0c\u5982\u679c\u5c06\u591a\u4e2a\u65b9\u6cd5\u5408\u5e76\u6d4b\u8bd5\uff0c\u90a3\u4e48\u9700\u8981\u7ec4\u5408\u7684\u6761\u4ef6\u5c31\u975e\u5e38\u591a\u4e86\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u4f1a\u53e0\u52a0\u3002\u8fd9\u4e5f\u662f\u5355\u5143\u6d4b\u8bd5\u7684\u6210\u672c\u8981\u8fdc\u8fdc\u4f4e\u4e8e\u96c6\u6210\u6d4b\u8bd5\u548c UI\u6d4b\u8bd5\u7684\u539f\u56e0\u3002 3.3.3 \u53c2\u6570\u5316\u6d4b\u8bd5\u7528\u4f8b \u5982\u679c\u6309\u7167\u524d\u9762\u4ecb\u7ecd\u7684\u65b9\u6cd5\u8fdb\u884c\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\uff0c\u8bbe\u8ba1\u51fa\u7684\u6d4b\u8bd5\u7528\u4f8b\u5f80\u5f80\u4f1a\u975e\u5e38\u591a\u3002\u4ee5\u56de\u6587\u6570\uff08\u89c1\u88683-3\uff09\u4e3a\u4f8b\uff0c\u5171\u67096\u79cd\u8f93\u5165\u6570\u636e\uff0c\u5982\u679c\u6bcf\u4e00\u884c\u5bf9\u5e94\u4e00\u4e2a\u5355\u5143\u6d4b\u8bd5\uff0c\u90a3\u4e48\u6d4b\u8bd5\u4ee3\u7801\u4f1a\u65e0\u6bd4\u5197\u957f\u3002 \u5bf9\u4e8e\u4e0a\u8ff0\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528Parameterized\u8f93\u5165\u4e00\u7ec4\u4e8c\u7ef4\u6570\u7ec4\u6765\u8fdb\u884c\u6539\u5584\uff1a @RunWith(Parameterized.class) public class ParameterizedPractiseTest { @Parameterized.Parameters public static Collection<Object[]> data() { return Arrays.asList(new Object[][]{ {Integer.MIN_VALUE, false}, {0, true}, {5, true}, {10, false}, {11, true}, {Integer.MAX_VALUE, false} }); } private int input; private boolean expected; public ParameterizedPractiseTest(int input, boolean expected) { this.input = input; this.expected = expected; } @Test public void test() { assertEquals(expected, isPalindrome(input)); } } \u5b9e\u9645\u4e0a\u8fd9\u91cc\u53ea\u662f\u4f7f\u7528\u4e86\u4e00\u79cd\u8bed\u6cd5\u7cd6\uff0c\u901a\u8fc7@RunWith\u6ce8\u89e3\u8f93\u5165 Parameterized Runner\uff0c\u5e2e\u52a9\u751f\u62106\u4e2a\u72ec\u7acb\u7684\u6d4b\u8bd5\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u9700\u8981\u7528\u5230Runner\uff0cRunner\u662fJUnit\u7684\u4e00\u79cd\u62d3\u5c55\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u5176\u770b\u4f5c\u6d4b\u8bd5\u7528\u4f8b\u7684\u7ba1\u7406\u5668\u3002\u5728\u540e\u7eed\u7684\u90e8\u5206\u6211\u4eec\u4f1a\u5207\u6362\u5404\u79cd\u5404\u6837\u7684Runner\u6765\u6ee1\u8db3\u7279\u5b9a\u7684\u9700\u6c42\uff0c\u6e90\u7801\u5206\u6790\u90e8\u5206\u5219\u4f1a\u4ecb\u7ecd\u5b83\u7684\u5b9e\u73b0\u7ec6\u8282\u3002@Parameterized.Parameters\u5b9a\u4e49\u4e866\u6761\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u3001\u8f93\u51fa\u4fe1\u606f\u3002\u8fd9\u4e2a\u6ce8\u89e3\u5141\u8bb8\u4f20\u5165\u4e00\u4e2a\u6a21\u677f\u7ed96\u4e2a\u72ec\u7acb\u7684\u6d4b\u8bd5\u8f93\u51fa\u76f8\u5e94\u7684\u540d\u79f0\uff0c\u4fbf\u4e8e\u8bc6\u522b\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u53c2\u6570\u7ec4\u5408\u5230\u6d4b\u8bd5\u7528\u4f8b\u7684\u540d\u5b57\u4e2d\uff0c\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u7528\u4e8e\u5b9a\u4e49\u751f\u6210\u7684\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0\uff1a @Parameterized.Parameters(name = \"{index}_input_({0})_should_be_{1}\") \u73b0\u5728\u6211\u4eec\u5728\u63a7\u5236\u53f0\u5c31\u53ef\u4ee5\u770b\u52306\u4e2a\u72ec\u7acb\u7684\u6d4b\u8bd5\u4e86\uff0c\u8fd0\u884c\u7ed3\u679c\u5982\u56fe3-3\u6240\u793a\u3002 \u56fe 3-3 \u53c2\u6570\u5316\u6d4b\u8bd5\u8fd0\u884c\u7ed3\u679c Runner\u662fJUnit\u4e2d\u6bd4\u8f83\u9ad8\u7ea7\u7684\u6280\u672f\u3002\u53e6\u5916\u4e00\u4e2a\u7b2c\u4e09\u65b9JUnitParamsRunner\u53ef\u4ee5\u76f4\u63a5\u5c06Parameters \u6ce8\u89e3\u7ec4\u5408\u5e94\u7528\u4e8e\u6d4b\u8bd5\u65b9\u6cd5\u4e0a\uff0c\u8fd9\u6837\u663e\u5f97\u66f4\u4e3a\u7b80\u6d01\u3002 \u8981\u4f7f\u7528JUnitParamsRunner\u9700\u8981\u901a\u8fc7Maven\u81ea\u884c\u5bfc\u5165\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a @RunWith(JUnitParamsRunner.class) public class PersonTest { @Test @Parameters({\"17, false\", \"22, true\" }) public void person_is_adult(int age, boolean valid) throws Exception { assertThat(new Person(age).isAdult(), is(valid)); } } 3.4 JUnit \u7684\u5176\u4ed6\u4f7f\u7528\u6280\u5de7 \u7531\u4e8e\u5728\u7f16\u5199\u6d4b\u8bd5\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u51fa\u73b0\u4e00\u4e9b\u989d\u5916\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u53d1\u751f\u5f02\u5e38\u8be5\u5982\u4f55\u5904\u7406\u7b49\uff0c\u56e0\u6b64\u4e0b\u9762\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u65b9\u6cd5\u6765\u5e94\u5bf9\u3002 3.4.1 \u6d4b\u8bd5\u5f02\u5e38 \u5f02\u5e38\u662f\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\u65f6\u5e38\u7528\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\uff0c\u5355\u5143\u6d4b\u8bd5\u5f80\u5f80\u9700\u8981\u8986\u76d6\u5404\u79cd\u5f02\u5e38\u60c5\u51b5\uff0c\u5426\u5219\u6d4b\u8bd5\u7684\u610f\u4e49\u4f1a\u5927\u6253\u6298\u6263\u3002\u5bf9\u5f02\u5e38\u65ad\u8a00\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a\u4f7f\u7528@Test\u6ce8\u89e3\u4e2d\u7684expected\u3001\u4f7f\u7528assertThrows \u65ad\u8a00\u5de5\u5177\u6216Rule\u7b49\u3002 \u4e0b\u9762\u4ee5LeetCode\u4e2d\u7684\u9898\u76ee\"\u4e24\u6570\u76f8\u9664\"\u4e3a\u4f8b\u6765\u7ec3\u4e60\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002 \u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\uff0c\u88ab\u9664\u6570dividend\u548c\u9664\u6570divisor\u3002\u5c06\u4e24\u6570\u76f8\u9664\uff0c\u8981\u6c42\u4e0d\u4f7f\u7528\u4e58\u6cd5\u3001\u9664\u6cd5\u548c mod \u8fd0\u7b97\u7b26\u3002\u8fd4\u56de\u88ab\u9664\u6570dividend \u9664\u4ee5\u9664\u6570divisor\u5f97\u5230\u7684\u5546\u3002 \u8fd9\u91cc\u7528\u4e86\u4e00\u4e2a\u6700\u5bb9\u6613\u7406\u89e3\u7684\u7b97\u6cd5\uff0c\u5373\u901a\u8fc7\u5faa\u73af\u505a\u51cf\u6cd5\u6765\u5b9e\u73b0\u9664\u6cd5\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public static int divide(int dividend, int divisor) { int result = 0; float remainder = dividend; while (remainder >= divisor) { result++; remainder = remainder - divisor; } return result; } \u4e0d\u8fc7\u8fd9\u6bb5\u4ee3\u7801\u6709\u4e00\u4e2a\u81f4\u547d\u7684\u6f0f\u6d1e\uff0c\u5982\u679c\u4f20\u5165\u7684divisor\u4e3a0\u5c31\u4f1a\u51fa\u73b0\u6b7b\u5faa\u73af\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u589e\u52a0\u5904\u7406\u8fd9\u79cd\u573a\u666f\u7684\u5f02\u5e38\uff0c\u5373\u4e0d\u5141\u8bb8\u88ab\u9664\u6570\u4e3a0\uff0c\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0cDivideByZeroException \u662f\u4e00\u4e2a\u7a7a\u7684\u5f02\u5e38\uff0c\u7ee7\u627f\u81eaRuntimeException\u3002 if (dividend == 0) { throw new DivideByZeroException(); } \u63a5\u4e0b\u6765\u7f16\u5199\u6d4b\u8bd5\u8fdb\u884c\u9a8c\u8bc1\uff0c\u786e\u4fdd\u4ee3\u7801\u5b89\u5168\u3002 1. \u4f7f\u7528 @Test \u6ce8\u89e3\u4e2d\u7684 expected \u53c2\u6570 @Test\u63d0\u4f9b\u7684\u53ef\u9009\u53c2\u6570expected\u53ef\u4ee5\u975e\u5e38\u7b80\u5355\u5730\u5b9e\u73b0\u5bf9\u5f02\u5e38\u7684\u65ad\u8a00\uff0c\u8fd9\u4e2a\u53c2\u6570\u53ea\u80fd\u4f20\u5165Throwable\u7684\u5b50\u7c7b\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test(expected = DivideByZeroException.class) public void should_get_error_when_divisor_is_zero() { assertEquals(3, divide(9, 0)); } \u8fd9\u662f\u4e00\u79cd\u5077\u61d2\u7684\u65b9\u6cd5\uff0cexpected\u65e0\u6cd5\u65ad\u8a00\u8be5\u5f02\u5e38\u7684\u5177\u4f53\u503c\u548c\u6d88\u606f\uff0c\u5982\u679c\u65b9\u6cd5\u5185\u90e8\u4e0d\u6b62\u4e00\u4e2a\u5730\u65b9\u629b\u51fa\u4e86\u76f8\u540c\u7684\u5f02\u5e38\uff0c\u5219\u65e0\u6cd5\u51c6\u786e\u5730\u65ad\u8a00\u671f\u671b\u7684\u5f02\u5e38\u3002\u56e0\u6b64\u5efa\u8bae\u5c3d\u91cf\u8003\u8651\u5176\u4ed6\u7684\u65b9\u5f0f\u6765\u6d4b\u8bd5\u5f02\u5e38\u3002 2. \u901a\u8fc7try/catch \u6d4b\u8bd5\u5f02\u5e38 \u5982\u679c\u4f60\u7684 JUnit \u7248\u672c\u8fc7\u4f4e\uff0c\u6216\u8005\u6761\u4ef6\u53d7\u9650\uff0c\u4e00\u4e2a\u7528\u4e8e\u6d4b\u8bd5\u5f02\u5e38\u7684\u5c0f\u6280\u5de7\u5c31\u662f\u4f7f\u7528 try/catch + fail() \u65b9\u6cd5\u3002 \u4e3a\u4e86\u8ba9\u65ad\u8a00\u51c6\u786e\u5904\u7406\u5f02\u5e38\u4fe1\u606f\uff0c\u9996\u5148\u6539\u9020 DivideByZeroException\uff0c\u589e\u52a0\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u6d88\u606f\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class DivideByZeroException extends RuntimeException { public DivideByZeroException(String message) { super(message); } } \u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u4f1a\u7ed9\u4e22\u51fa\u5f02\u5e38\u7684\u5730\u65b9\u52a0\u4e0a\u6d88\u606f\u3002 throw new DivideByZeroException(\"divisor is zero\"); \u4f7f\u7528 try/catch\u8bed\u6cd5\u53ef\u4ee5\u83b7\u5f97\u5b8c\u6574\u7684\u5f02\u5e38\u5b9e\u4f8b\uff0c\u8fdb\u800c\u5b9e\u73b0\u5f02\u5e38\u7684\u65ad\u8a00\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void test_exception_by_try_catch() { try { divide(9, 0); fail(\"Expected DivideByZeroException be thrown\"); } catch (DivideByZeroException divideByZeroException) { assertThat(divideByZeroException.getMessage(), is(\"divisor is zero\")); } } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u671f\u671bdivide\uff089\uff0c0\uff09\u629b\u51fa\u5f02\u5e38\uff0c\u8ba9\u6d4b\u8bd5\u901a\u8fc7\u3002\u5982\u679c\u6ca1\u6709\u629b\u51fa\u5f02\u5e38\uff0c\u5c31\u4f1a\u8d70\u5230\u540e\u9762\u7684fail\u65b9\u6cd5\u4e2d\uff0cfail\u65b9\u6cd5\u7684\u4f5c\u7528\u662f\u544a\u8bc9JUnit\u6d4b\u8bd5\u672a\u901a\u8fc7\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cfail\u975e\u5e38\u91cd\u8981\uff0c\u6ca1\u6709\u5b83\u5c31\u8d77\u4e0d\u5230\u65ad\u8a00\u7684\u4f5c\u7528\u3002 3. \u4f7f\u7528 Rule \u6d4b\u8bd5\u5f02\u5e38 @Rule\u662f\u4e00\u79cd\u63d0\u524d\u58f0\u660e\u7684\u673a\u5236\uff0c\u5b83\u53ef\u4ee5\u5148\u58f0\u660e\u4e00\u4e9b\u671f\u671b\uff0c\u7136\u540e\u518d\u6267\u884c\u4e1a\u52a1\u4ee3\u7801\uff0c\u4e00\u822c\u7528\u4e8e\u4e00\u4e9b\u7279\u6b8a\u573a\u666f\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Rule public ExpectedException thrown = ExpectedException.none(); @Test public void test_exception_by_rule() throws IndexOutOfBoundsException { thrown.expect(DivideByZeroException.class); thrown.expectMessage(\"divisor is zero\"); divide(9, 0); } \u8fd9\u4e2a\u673a\u5236\u53ef\u4ee5\u7528\u6765\u6d4b\u8bd5\u5f02\u5e38\uff0c\u7531\u4e8e\u5b83\u88ab\u5b9a\u4e49\u4e3a\u7c7b\u7ea7\u522b\uff0c\u4f7f\u7528\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\uff0c\u56e0\u6b64\u5df2\u7ecf\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u66f4\u63a8\u8350\u4f7f\u7528assertThrows\u6765\u6d4b\u8bd5\u5f02\u5e38\u3002 \u4f7f\u7528 JUnit 5 \u7684\u65b0\u7279\u6027 JUnit 5 \u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b0\u7684\u65ad\u8a00\u80fd\u529b\uff0c\u53ef\u4ee5\u7ed3\u5408 Java 8 \u7684 Lambda \u8868\u8fbe\u5f0f\u6765\u5b9e\u73b0\u66f4\u4e3a\u65b9\u4fbf\u7684\u65ad\u8a00\uff0c\u5177\u4f53\u5c06\u5728\u540e\u9762\u4ecb\u7ecd\u3002 3.4.2 \u6d4b\u8bd5\u8986\u76d6\u7387 \u5982\u679c\u6211\u4eec\u7684\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u5f97\u4e0d\u597d\uff0c\u6216\u8005\u4e0d\u591f\u591a\uff0c\u5fc5\u7136\u4f1a\u6709\u5f88\u591a\u5206\u652f\u548c\u60c5\u51b5\u6ca1\u6709\u8003\u8651\u5230\u3002\u5bf9\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7edf\u8ba1\u6d4b\u8bd5\u8986\u76d6\u7387\u548c\u8986\u76d6\u60c5\u51b5\u6765\u68c0\u9a8c\u6d4b\u8bd5\u7528\u4f8b\u7684\u8bbe\u8ba1\uff0c\u4ece\u800c\u8fdb\u884c\u6539\u5584\u3002 IDE \u5185\u7f6e\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u7edf\u8ba1\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7edf\u8ba1\uff0c\u53ea\u9700\u8981\u4f7f\u7528Run xx with Coverage \u5373\u53ef\u5b8c\u6210\u3002\u4f8b\u5982\uff0cIntelliJ IDEA\u4e0d\u4ec5\u53ef\u4ee5\u9488\u5bf9\u7c7b\u7edf\u8ba1\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u8fd8\u53ef\u4ee5\u9009\u4e2d\u9488\u5bf9\u7684\u5305\u7edf\u8ba1\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u5982\u56fe3-4\u6240\u793a\u3002 \u56fe 3-4 \u901a\u8fc7\u6d4b\u8bd5\u8986\u76d6\u7387\u542f\u52a8\u5668\u8fd0\u884c \u6d4b\u8bd5\u8986\u76d6\u7387\u7edf\u8ba1\u5de5\u5177\u8fd0\u884c\u5b8c\u4ee5\u540e\uff0cIntelliJ IDEA\u4f1a\u5f39\u51fa\u4e00\u4e2a\u7edf\u8ba1\u7a97\u53e3\uff0c\u540c\u65f6\u4ee3\u7801\u7f16\u8f91\u5668\u4e5f\u4f1a\u663e\u793a\u51fa\u54ea\u4e9b\u4ee3\u7801\u5df2\u88ab\u8986\u76d6\uff0c\u5982\u56fe3-5\u6240\u793a\u3002 \u56fe 3-5 \u6d4b\u8bd5\u8986\u76d6\u7387\u7edf\u8ba1 \u8986\u76d6\u7387\u5206\u4e3a\u7c7b\u3001\u65b9\u6cd5\u3001\u5206\u652f\u8986\u76d6\u7387\u548c\u884c\u8986\u76d6\u7387\uff0c\u4e00\u822c\u9879\u76ee\u4f1a\u8981\u6c42\u7c7b\u548c\u65b9\u6cd5\u7684\u8986\u76d6\u7387\u8fbe\u5230100%\uff0c\u884c\u548c\u5206\u652f\u7684\u8986\u76d6\u7387\u523080%\u3002\u5176\u5b9e\u8986\u76d6\u7387\u7684\u4e3b\u8981\u6307\u6807\u5e94\u8be5\u662f\u5206\u652f\u8986\u76d6\u7387\uff0c\u4e86\u89e3\u5206\u652f\u8986\u76d6\u7387\u53ef\u5e2e\u52a9\u6211\u4eec\u8fdb\u4e00\u6b65\u5b8c\u5584\u6d4b\u8bd5\u7528\u4f8b\u3002 \u5728\u5de5\u7a0b\u5316\u65b9\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Maven Surefire\u63d2\u4ef6\u548cJaCoCo\u6765\u8fd0\u884c\u6d4b\u8bd5\u5e76\u83b7\u53d6\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u540c\u65f6\u4e0a\u4f20\u62a5\u544a\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5728\u5de5\u7a0b\u5316\u90e8\u5206\u4f1a\u8bf4\u660e\u3002 3.4.3 JUnit Rule \u4f7f\u7528 JUnit Rule\u63d0\u4f9b\u4e86\u2192\u79cd\u7c7b\u4f3c\u62e6\u622a\u5668\u7684\u673a\u5236\uff0c\u7528\u4e8e\u62d3\u5c55JUnit\u7684\u529f\u80fd\uff0c\u5b83\u53ef\u7ed9\u6bcf\u4e2a\u6d4b\u8bd5\u6dfb\u52a0\u4e00\u4e9b\u901a\u7528\u7684\u884c\u4e3a\u3002\u5176\u5e38\u89c1\u7684\u7528\u9014\u6709\u5168\u5c40\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u3001\u83b7\u53d6\u5f53\u524d\u7684\u6d4b\u8bd5\u540d\u79f0\u3001\u6253\u5370\u65e5\u5fd7\u7b49\u3002 JUnit \u5b98\u65b9\u7f51\u7ad9\u4e0a\u7ed9\u51fa\u7684\u90e8\u5206\u793a\u4f8b\u4e0d\u662f\u5f88\u5e38\u7528\uff0c\u4f8b\u5982\uff0c\u5b83\u63d0\u5230TemporaryFolder\u8fd9\u4e2aRule\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6587\u4ef6\u6a21\u62df\u673a\u5236\uff0c\u4f46\u662f\u66f4\u597d\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u6a21\u62df\u5de5\u5177\u6765\u5b9e\u73b0\u6b64\u6a21\u62df\u673a\u5236\u3002\u8fd8\u6709\u4e00\u4e2a\u4f8b\u5b50\u5c31\u662f\u524d\u9762\u63d0\u5230\u7684\u901a\u8fc7Rule\u6765\u5b8c\u6210\u5f02\u5e38\u6d4b\u8bd5\uff0c\u5df2\u4e0d\u63a8\u8350\u4f7f\u7528\u3002\u5173\u4e8eRule\u7684\u7528\u6cd5\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\u4e00\u4e2a\u901a\u8fc7Rule\u5b9e\u73b0\u8d85\u65f6\u7684\u6280\u5de7\u3002 \u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u4f7f\u7528Rule\u7684\u7b80\u5355\u4f8b\u5b50\u3002TestName\u662f\u4e00\u4e2a\u83b7\u53d6\u6d4b\u8bd5\u540d\u79f0\u7684Rule\uff0c\u5728\u4e0b\u9762\u8fd9\u6bb5\u6d4b\u8bd5\u4ee3\u7801\u4e2d\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u90fd\u4f1a\u5728\u8fd0\u884c\u671f\u5e94\u7528\u8fd9\u4e2aRule\uff0c\u5e76\u5c06\u5f53\u524d\u7684\u4fe1\u606f\u4f20\u9012\u7ed9Rule\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5373\u53ef\u83b7\u5f97\u6d4b\u8bd5\u540d\u79f0\u3002 public class NameRuleTest { @Rule public final TestName name = new TestName(); @Test public void testA() { assertEquals(\"testA\", name.getMethodName()); } @Test public void testB() { assertEquals(\"testB\", name.getMethodName()); } } \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7528\u5230Rule\u7684\u5730\u65b9\u4e0d\u591a\uff0c\u4f46\u662f\u9700\u8981\u77e5\u9053\u8fd9\u79cd\u673a\u5236\u7684\u5b58\u5728\uff0c\u4fbf\u4e8e\u5728\u9700\u8981\u7684\u65f6\u5019\u5b9e\u73b0\u4e00\u4e9b\u5168\u5c40\u903b\u8f91\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u6d4b\u8bd5\u751f\u6210\u4e00\u4e2a\u4e13\u7528\u7684\u65e5\u5fd7\u5bf9\u8c61\uff0c\u4ee5\u4fbf\u8bb0\u5f55\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u7684\u4fe1\u606f\uff1a public class TestLogger implements TestRule { private Logger logger; public Logger getLogger() { return this.logger; } @Override public Statement apply(final Statement base, final Description description) { return new Statement() { @Override public void evaluate() throws Throwable { logger = Logger.getLogger(description.getTestClass().getName() + '.' + description.getDisplayName()); base.evaluate(); } }; } } 3.4.4 \u5176\u4ed6\u6280\u5de7 1. \u5ffd\u7565\u6d4b\u8bd5 \u5982\u679c\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\uff08\u53ef\u80fd\u662f\u5feb\u901f\u4fee\u590dCI\uff0c\u907f\u514d\u5f71\u54cd\u56e2\u961f\u5176\u4ed6\u6210\u5458\u7684\u5de5\u4f5c\uff09\uff0c\u4f60\u9700\u8981\u5feb\u901f\u5ffd\u7565\u6d4b\u8bd5\uff0c\u90a3\u4e48\u8bf7\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u5927\u9762\u79ef\u6ce8\u91ca\u4ee3\u7801\u7684\u65b9\u6cd5\u3002\u5efa\u8bae\u4f7f\u7528@lgnore\u6ce8\u89e3\uff0c\u5e76\u52a0\u4e0a\u539f\u56e0\uff0c\u4e14\u5728\u65b9\u4fbf\u7684\u65f6\u5019\u53ca\u65f6\u8fdb\u884c\u4fee\u590d\u3002 \u4e0e\u5220\u9664\u3001\u6ce8\u91ca\u4ee3\u7801\u4e0d\u540c\uff0c@Ignore\u4f1a\u88ab\u6d4b\u8bd5\u6846\u67b6\u4f5c\u4e3a\u5df2\u7ecf\u88ab\u5ffd\u7565\u7684\u6d4b\u8bd5\u7edf\u8ba1\u5e76\u663e\u793a\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Ignore(\"Test is ignored as a demonstration\") @Test public void assert_same() { assertThat(1, is(1)); } 2. \u6d4b\u8bd5\u8d85\u65f6 \u5982\u679c\u4e00\u4e2a\u6d4b\u8bd5\u8fd0\u884c\u7684\u65f6\u95f4\u5f88\u957f\uff0c\u5f80\u5f80\u610f\u5473\u7740\u8fd9\u4e2a\u6d4b\u8bd5\u5df2\u5931\u8d25\u3002JUnit\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u5f0f\u7ed3\u675f\u5b83\uff0c\u5373\u4f7f\u7528@Test\u6ce8\u89e3\u7684timeout\u53c2\u6570\u4f20\u5165\u4e00\u4e2a\u6beb\u79d2\u6570\u3002 \u5982\u679c\u8fd9\u4e2a\u6d4b\u8bd5\u7684\u8fd0\u884c\u65f6\u95f4\u8d85\u8fc7\u4e86timeout\u5141\u8bb8\u7684\u65f6\u95f4\uff0cJUnit\u4f1a\u4e2d\u65ad\u6d4b\u8bd5\u7ebf\u7a0b\uff0c\u6807\u8bb0\u6d4b\u8bd5\u5931\u8d25\uff0c\u5e76\u629b\u51fa\u5f02\u5e38\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6d4b\u8bd5\u4ee3\u7801\u65e0\u6cd5\u88ab\u4e2d\u65ad\uff0cJUnit\u4f1a\u542f\u52a8\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u6765\u53d1\u51fa\u4e2d\u65ad\u4fe1\u53f7\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test\uff08timeout = 1000\uff09 public void test_with_timeout\uff08\uff09{ ... } timeout\u53c2\u6570\u53ea\u4f1a\u9488\u5bf9\u5355\u4e2a\u6d4b\u8bd5\u7684\u8d85\u65f6\u65f6\u95f4\u8fdb\u884c\u68c0\u67e5\uff0c\u5982\u679c\u60f3\u8981\u4e00\u6b21\u6027\u5bf9\u6240\u6709\u7684\u6d4b\u8bd5\u90fd\u5e94\u7528\u8fd9\u4e2a\u89c4\u5219\uff0c\u53ef\u4ee5\u4f7f\u7528Rule\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class GlobalTimeoutPractiseTest { @Rule public Timeout globalTimeout = Timeout.seconds(10); @Test public void test_sleep_11_seconds() throws Exception { Thread.sleep(11000); } @Test public void test_sleep_12_seconds() throws Exception { Thread.sleep(12000); } } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cTimeout Rule\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5168\u5c40\u7684Rule\uff0c\u5728\u5f53\u524d\u7684\u7c7b\u4e0b\u6709\u6548\uff0c\u540c\u65f6\u4f1a\u8ba1\u7b97@Before\u3001@After\u65b9\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u3002\u4f46\u662f\uff0c\u5982\u679c\u88ab\u4e2d\u65ad\u7684\u65b9\u6cd5\u662f\u6b7b\u5faa\u73af\u9020\u6210\u7684\uff0c\u90a3\u4e48JUnit\u5c31\u4f1a\u76f4\u63a5\u505c\u6389\uff0c@After\u65b9\u6cd5\u53ef\u80fd\u4e0d\u4f1a\u88ab\u6267\u884c\u3002 3. \u805a\u5408\u6d4b\u8bd5\u5957\u4ef6 \u6709\u65f6\u5019\u9700\u8981\u5c06\u4e00\u7ec4\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u5408\u8d77\u6765\u4f5c\u4e3a\u4e00\u4e2a\u6d4b\u8bd5\u5957\u4ef6\u8fd0\u884c\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06Suite\u4f5c\u4e3aRunner\u6765\u5b9e\u73b0\uff0c\u5373\u901a\u8fc7@Suite.SuiteClasses\u4f20\u4eba\u9700\u8981\u7ec4\u5408\u7684\u6d4b\u8bd5\u7c7b\u6765\u5b9e\u73b0\u5355\u5143\u6d4b\u8bd5\u5957\u4ef6\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @RunWith(Suite.class) @Suite.SuiteClasses({ HelloWorldTest.class, AssertPractiseTest.class }) public class SuitesPractiseTest { } 3.4.5 \u65b0\u624b\u5bb9\u6613\u72af\u7684\u9519\u8bef 1. \u627e\u4e0d\u5230\u5355\u5143\u6d4b\u8bd5 \u663e\u793a\"No tests found \uff08\u627e\u4e0d\u5230\u5355\u5143\u6d4b\u8bd5\uff09\"\uff0c\u8fd9\u6709\u53ef\u80fd\u662f\u4ee5\u4e0b\u539f\u56e0\u9020\u6210\u7684\uff1a \u5355\u5143\u6d4b\u8bd5\u7684\u65b9\u6cd5\u88ab\u8bbe\u7f6e\u4e3a\u4e86 private\uff0c\u4fee\u6539\u4e3a public \u5373\u53ef\u3002\u4e0d\u8fc7\uff0c\u5728JUnit 5\u4e2d\u5df2\u4fee\u6539\u4e86\u76f8\u5e94\u7684\u5b9e\u73b0\u673a\u5236\uff0c\u4e0d\u9700\u8981\u6dfb\u52a0\u65b9\u6cd5\u7684public\u4fee\u9970\u7b26\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002 Classpath \u4e2d\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u7248\u672c\u7684 JUnit \u5305\u3002 2. initialization error \u521d\u59cb\u5316\u5931\u8d25 \u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u5728IntelliJIDEA\u4e2d\uff0c\u6d4b\u8bd5\u8fd0\u884c\u4e00\u6b21\u540e\u628a@Test\u6ce8\u89e3\u6ce8\u91ca\u6389\u4e86\uff0c\u518d\u6b21\u8fd0\u884c\u5c31\u53ef\u80fd\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002\u539f\u56e0\u662fIntelliJIDEA \u8bc6\u522b\u51fa\u4e86\u5b83\u4eec\u662f\u540c\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u4f46\u662f\u542f\u52a8\u5668\uff08\u5728\u6e90\u7801\u5206\u6790\u90e8\u5206\u4f1a\u4ecb\u7ecd\u6d4b\u8bd5\u662f\u5982\u4f55\u542f\u52a8\u7684\uff09\u6ca1\u6709\u8bc6\u522b\u51fa\u6765\u3002\u9047\u5230\u8fd9\u7c7b\u95ee\u9898\uff0c\u4e5f\u53ef\u4ee5\u68c0\u67e5\u4e00\u4e0b@Test\u6ce8\u89e3\u5f15\u5165\u7684\u5305\u8def\u5f84\u662f\u5426\u6b63\u786e\uff0c\u5373\u662f\u5426\u4e3aJUnit\u5305\u4e0b\u9762\u7684\u6ce8\u89e3\u3002 3. IntelliJ IDEA \u4e2d\u4e0d\u51fa\u73b0\u6267\u884c\u6309\u94ae \u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u6709\u53ef\u80fd\u662fJUnit\u6ca1\u6709\u88abIntelliJIDEA\u8bc6\u522b\uff0c\u5efa\u8bae\u5148\u68c0\u67e5Maven\u662f\u5426\u62c9\u53d6\u4e86\u6b63\u786e\u7684\u4f9d\u8d56\uff0c\u7136\u540e\u5c1d\u8bd5\u91cd\u65b0\u52a0\u8f7dMaven\u7684\u4f9d\u8d56\uff0c\u5e76\u91cd\u542fIntelliJIDEA\u3002 4. \u660e\u660e\u52a0\u8f7d\u4e86 JUnit \u7684\u4f9d\u8d56\uff0c\u4f46\u662f @Test \u8fd8\u662f\u7206\u7ea2 \u5982\u679c\u5728Pom\u6587\u4ef6\u4e2d\u4f9d\u8d56\u7684scope\u5c5e\u6027\u88ab\u5b9a\u4e49\u6210\u4e86test\uff0c\u4f46\u662f\u6d4b\u8bd5\u7c7b\u88ab\u521b\u5efa\u5230\u4e86\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\u4e2d\uff0c\u90a3\u4e48JUnit\u7684\u76f8\u5173\u7c7b\u548c\u6ce8\u89e3\u662f\u65e0\u6cd5\u4f7f\u7528\u7684\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u7ee7\u7eed\u4fdd\u6301scope\u4e3atest\uff0c\u5e76\u628a\u6d4b\u8bd5\u7c7b\u79fb\u52a8\u5230test\u6a21\u5757\u4e0b\uff0c\u53c2\u8003\u540e\u9762\u7684Java\u5355\u5143\u6d4b\u8bd5\u7684\u7ea6\u5b9a\u548c\u539f\u5219\uff0c\u907f\u514d\u7c7b\u4f3c\u7684\u95ee\u9898\u518d\u6b21\u53d1\u751f\u3002 3.5 \u57fa\u4e8eJUnit 5 \u5b9e\u73b0\u6d4b\u8bd5 \u524d\u9762\u7684\u5185\u5bb9\u90fd\u662f\u57fa\u4e8eJUnit 4.3\u8fdb\u884c\u8bb2\u89e3\u7684\uff0c\u8fd9\u662fJUnit\u6700\u7ecf\u5178\u7684\u4e00\u4e2a\u7248\u672c\u30022017\u5e74\uff0cJUnit5\u53d1\u5e03\uff0c\u5b83\u548c\u4e4b\u524d\u7684\u7248\u672c\u6709\u8f83\u5927\u7684\u5dee\u5f02\uff0c\u5c24\u5176\u662f\u67b6\u6784\u4e0a\uff0c\u5b83\u88ab\u62c6\u5206\u4e3a\u4e863\u4e2a\u5b50\u9879\u76ee\u3002 \u7b80\u5355\u6765\u8bf4\uff0cJUnit5\u4e0d\u518d\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u800c\u662f\u4e00\u4e2a\u6d4b\u8bd5\u5e73\u53f0\uff0c\u5141\u8bb8\u63a5\u4eba\u5176\u4ed6\u7684\u6d4b\u8bd5\u6846\u67b6\u3002JUnit 5\u5728\u5e26\u6765\u66f4\u591a\u529f\u80fd\u7684\u540c\u65f6\uff0c\u4e5f\u53d8\u5f97\u66f4\u4e3a\u590d\u6742\uff0c\u5bf9\u65b0\u624b\u5e76\u4e0d\u53cb\u597d\uff0c\u8fd9\u4e5f\u662f\u524d\u9762\u6ca1\u6709\u4f7f\u7528\u5b83\u4f5c\u4e3a\u57fa\u7840\u6559\u7a0b\u7684\u539f\u56e0\u3002\u4e0d\u8fc7JUnit5\u8fd8\u662f\u503c\u5f97\u4e00\u5b66\u7684\uff0c\u597d\u5728JUnit5\u5411\u4e0b\u517c\u5bb9\u4e86JUnit 4\uff0c\u4e24\u8005\u5728\u4f7f\u7528\u4e0a\u4e0d\u4f1a\u6709\u592a\u5927\u5dee\u5f02\uff0c\u540e\u7eed\u7684\u5185\u5bb9\u5c06\u5207\u6362\u5230JUnit5\u4e0a\u8fdb\u884c\u8bb2\u89e3\u3002 3.5.1 JUnit 5 \u7684\u67b6\u6784\u8bf4\u660e \u4f7f\u7528JUnit 5\u65f6\u9700\u8981\u5355\u72ec\u5f15\u51653\u4e2a\u5305\uff0c\u8fd93\u4e2a\u5305\u4e3aJUnit5\u76843\u4e2a\u5b50\u9879\u76ee\u3002\u53ef\u4ee5\u7528\u4e00\u4e2a\u516c\u5f0f\u6765\u7406\u89e3JUnit 5\uff1a JUnit 5 = JUnit Platform + JUnit Jupiter + JUnit Vintage\u3002 \u56fe3-6\u4e3aJUnit5\u7684\u67b6\u6784\u793a\u610f\u56fe\u3002JUnit Platform\u662f\u5728JVM\u4e0a\u542f\u52a8\u6d4b\u8bd5\u6846\u67b6\u7684\u57fa\u7840\uff0c\u7528\u6765\u542f\u52a8\u6d4b\u8bd5\u5f15\u64ce\u3002\u5b83\u63d0\u4f9b\u4e86\u4e0d\u540c\u542f\u52a8\u63a5\u53e3\uff0c\u6bd4\u5982\u547d\u4ee4\u884c\u3001Maven\u3001Gradle\u3001IDE\u7b49\u3002\u53e6\u5916\uff0c\u5b83\u5141\u8bb8\u63a5\u5165\u5404\u79cd\u6d4b\u8bd5\u5f15\u64ce\u3002 JUnit Jupiter\u63d0\u4f9b\u4e86\u65b0\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u6b64\u6a21\u578b\u4e3aJUnit5\u7684\u6838\u5fc3\uff0c\u5b83\u5185\u7f6e\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u5f15\u64ce\u3002 \u4ece\u5b57\u9762\u610f\u601d\u6765\u770b\uff0cVintage\u5c31\u662f\u6307\u8fc7\u65f6\uff0c\u53ef\u60f3\u800c\u77e5\uff0cJUnit Vintage\u7528\u4e8e\u5bf9\u65e7\u7684JUnit\u7248\u672c\u63d0\u4f9b\u517c\u5bb9\u3002 \u56fe 3-6 JUnit 5 \u67b6\u6784 JUnit5\u7684\u67b6\u6784\u8ba9\u5355\u5143\u6d4b\u8bd5\u7684\u8fd0\u884c\u53d8\u5f97\u66f4\u52a0\u7075\u6d3b\uff0c\u53e6\u5916Jupiter\u5728\u53cd\u5c04\u80fd\u529b\u65b9\u9762\u4e5f\u6709\u4e00\u4e9b\u63d0\u5347\uff0c\u5f53\u4f60\u5904\u7406\u4e00\u4e9b\u79c1\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u65f6\u5c31\u53ef\u4ee5\u611f\u53d7\u5230\u3002 3.5.2 \u4f7f\u7528 JUnit 5 JUnit5\u7684\u4f7f\u7528\u548cJUnit 4\u7684\u5dee\u5f02\u4e0d\u5927\uff0c\u6ce8\u610f\u8981\u4ece\u65b0\u7684\u5305\u4e2d\u5f15\u5165\u6ce8\u89e3\u548c\u65ad\u8a00\uff0c\u4f46\u662f\u8fd9\u6709\u53ef\u80fd\u4f1a\u7ed9\u65b0\u624b\u9020\u6210\u56f0\u60d1\uff0c\u8fd9\u4e5f\u662f\u672c\u4e66\u4eceJUnit 4.3\u8bb2\u8d77\u7684\u539f\u56e0\u3002 \u4e0b\u9762\u7167\u4f8b\u65b0\u5efa\u4e00\u4e2aJava\u6a21\u5757\uff0c\u547d\u540d\u4e3aJUnit5\uff0c\u7136\u540e\u5728Pom\u6587\u4ef6\u4e2d\u52a0\u5165\u4f9d\u8d56\uff1a <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-api</artifactId> <version>5.7.1</version> <scope>test</scope> </dependency> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-engine</artifactId> <version>5.7.1</version> <scope>test</scope> </dependency> \u5982\u679c\u6211\u4eec\u4e0d\u9700\u8981\u4fdd\u7559\u5bf9JUnit 4\u7684\u517c\u5bb9\uff0c\u53ef\u4ee5\u4e0d\u52a0\u5165 JUnit Vintage\u5305\uff0c\u53ea\u9700\u8981\u5728\u65b0\u7684\u5305\u8def\u5f84\u4e0b\u4f7f\u7528\u76f8\u5173API\u5373\u53ef\u3002 \u4e0b\u9762\u7f16\u5199\u4e00\u4e2a\u548c\u524d\u9762\u4e00\u6837\u7684HelloWorld\u7c7b\uff0c\u4ee5\u53ca\u5173\u4e8eHelloWorld\u7684\u6d4b\u8bd5\uff0c\u5728\u65b0\u7684\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u7684\u662f org.junit.jupiter.api\u5305\u4e2d\u7684\u6ce8\u89e3\uff1a import cn.prinf.demos.junit.jupiter.HelloWorld; import org.junit.jupiter.api.Test; import static org.junit.jupiter.api.Assertions.assertEquals; public class HelloWorldTest { @Test public void should_return_world_as_string() { assertEquals(\"Hello, world!\", HelloWorld.hello()); } } \u5728Jupiter\u4e2d\uff0cAssertions\u4ee3\u66ff\u4e86\u539fJUnit\u5305\u4e2d\u7684Assert\u7c7b\uff0c\u5e76\u63d0\u4f9b\u4e86\u66f4\u4e3a\u4e30\u5bcc\u7684\u529f\u80fd\u3002\u867d\u7136\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2dJUnit 4.3\u7684\u65ad\u8a00\u5e93\u5df2\u7ecf\u591f\u7528\uff0c\u4f46\u6709\u66f4\u591a\u7684\u9009\u62e9\u4e5f\u4e0d\u662f\u574f\u4e8b\u3002JUnit5\u63d0\u4f9b\u7684\u6ce8\u89e3\u4e0eJUnit4.3\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6709\u51e0\u4e2a\u6ce8\u89e3\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5177\u4f53\u5982\u4e0b\uff1a @Test \u6ce8\u89e3\u7684\u804c\u8d23\u53d8\u5f97\u5355\u4e00\uff0c\u5b83\u4e0d\u518d\u63d0\u4f9b\u4e00\u4e9b\u4e3b\u8981\u7684\u5c5e\u6027\uff0c\u8fd9\u4e9b\u7531\u5355\u72ec\u7684\u6ce8\u89e3\u63d0\u4f9b\uff0c\u6bd4\u5982@Timeout \u6ce8\u89e3\u3002 @Timeout \u63d0\u4f9b\u4e0e\u539f\u6765 @Test \u6ce8\u89e3\u4e2d timeout \u5c5e\u6027\u540c\u6837\u7684\u529f\u80fd\u3002 @Before \u548c @After \u5206\u522b\u88ab\u66ff\u6362\u6210\u4e86 @BeforeEach \u548c @AfterEach\u3002 @BeforeClass \u548c @AfterClass \u5206\u522b\u88ab\u66ff\u6362\u6210\u4e86 @BeforeAll \u548c @AfterAll\u3002 @Disabled \u5ffd\u7565\u4e86\u6d4b\u8bd5\u7c7b\u548c\u65b9\u6cd5\uff0c\u548c\u539f\u6765\u7684 @Ignore \u4e00\u6837\u3002 @RepeatedTest \u53ef\u4ee5\u8ba9\u6d4b\u8bd5\u91cd\u590d\u8fd0\u884c\uff0c\u4f46\u5b9e\u9645\u7528\u5230\u7684\u5730\u65b9\u4e0d\u591a\u3002 3.5.3 \u66f4\u5f3a\u7684\u65ad\u8a00\u80fd\u529b JUnit5\u5e26\u7ed9\u4eba\u7684\u6700\u76f4\u89c2\u7684\u611f\u53d7\u5c31\u662f\u65ad\u8a00\u80fd\u529b\u7684\u63d0\u5347\uff0c\u5c24\u5176\u662f\u652f\u6301Java8\u7684Lambda\u8868 \u8fbe\u5f0f\uff0c\u8ba9\u5f88\u591a\u65ad\u8a00\u53d8\u5f97\u6781\u5176\u7b80\u5355\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u5728\u4f7f\u7528JUnit 4.3\u65f6\uff0c\u5982\u679c\u60f3\u58f0\u660e\u6d4b\u8bd5\u65b9\u6cd5\u7684\u5f02\u5e38\uff0c\u9700\u8981\u5b9a\u4e49Rule\uff0c\u6216\u8005\u7528@Test\u6ce8\u89e3\u4e2d\u7684expected\u5c5e\u6027\u58f0\u660e\u3002\u800c\u5728 JUnit 5\u4e2d\uff0c\u76f4\u63a5\u7528Assertions.assertThrows \u5305\u88f9\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u5373\u53ef\u65ad\u8a00\u3002 \u4e0b\u9762\u57fa\u4e8eJUnit5 assertThrows \u6539\u5199\u524d\u9762\u4ecb\u7ecd\u5f02\u5e38\u65ad\u8a00\u65f6\u7684\u4f8b\u5b50\uff1a @Test void should_assert_exception_type_and_message() { DivideByZeroException divideByZeroException = assertThrows(DivideByZeroException.class, () -> divide(9, 0)); assertEquals(\"divisor is zero\",divideByZeroException.getMessage()); } \u4e0a\u8ff0\u4ee3\u7801\u4f1a\u6839\u636e\u8fd4\u56de\u7684\u5f02\u5e38\u5b9e\u4f8b\u8fdb\u884c\u65ad\u8a00\uff0c\u9a8c\u8bc1\u6d88\u606f\u548c\u539f\u56e0\u662f\u5426\u6b63\u786e\uff0c\u4e14\u80fd\u591f\u5728\u5f15\u53d1\u5f02\u5e38\u540e\u5bf9\u5176\u4ed6\u4fe1\u606f\u8fdb\u884c\u65ad\u8a00\u3002\u53e6\u5916\uff0c\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6d4b\u8bd5\u4e2d\u7f16\u5199\u66f4\u591a\u7684\u5f02\u5e38\u65ad\u8a00\uff0c\u4e14\u4e0d\u9700\u8981\u518d\u5f00\u542f\u4e00\u4e2a\u6d4b\u8bd5\u3002 Assertions.assertTimeout\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u548cAssertions.assertThrows\u540c\u6837\u7684\u6548\u679c\u3002 3.5.4 \u5d4c\u5957\u7684\u6d4b\u8bd5 JUnit 5\u63d0\u4f9b\u4e86\u5d4c\u5957\u7684\u6d4b\u8bd5\u98ce\u683c\uff0c\u5373\u5141\u8bb8\u5728\u6d4b\u8bd5\u7c7b\u4e2d\u7f16\u5199\u5d4c\u5957\u7c7b\u6765\u7ec4\u7ec7\u6d4b\u8bd5\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u5c06\u4e1a\u52a1\u7c7b\u548c\u6d4b\u8bd5\u7c7b\u4e00\u4e00\u5bf9\u5e94\uff0c\u4e0d\u8fc7\u6709\u65f6\u5019\u4e00\u4e9b\u4e0a\u4e0b\u6587\u5173\u7cfb\u7684\u6d4b\u8bd5\u53ef\u4ee5\u5408\u5e76\u5230\u4e00\u8d77\uff0c\u907f\u514d\u6d4b\u8bd5\u7c7b\u7684\u6570\u91cf\"\u7206\u70b8\"\u3002\u6b64\u5916\uff0cJunit 5\u8fd8\u53ef\u4ee5\u628a\u9700\u8981\u76f8\u540c\u6d4b\u8bd5\u6570\u636e\u7684\u7c7b\u653e\u5230\u4e00\u8d77\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7ec4\u7ec7\u6d4b\u8bd5\u4ee3\u7801\u3002\u6765\u770b\u4e2a\u793a\u4f8b\uff1a import cn.prinf.demos.junit.jupiter.HelloWorld; import org.junit.jupiter.api.DisplayName; import org.junit.jupiter.api.Nested; import org.junit.jupiter.api.Test; import static org.junit.jupiter.api.Assertions.assertEquals; public class NestedTest { @Test @DisplayName(\"Normal test\") public void should_return_world_as_string() { assertEquals(\"Hello, world!\", HelloWorld.hello()); } @Nested @DisplayName(\"Nested testing demonstration\") class NestedInnerDemoTest { @Test void first_test() { System.out.println(\"this is first nested test\"); } @Test void second_test() { System.out.println(\"this is first nested test\"); } } } \u6d4b\u8bd5\u8fd0\u884c\u540e\u7684\u622a\u56fe\u5982\u56fe3-7\u6240\u793a\uff0c\u53ef\u4ee5\u770b\u5230\u6d4b\u8bd5\u63cf\u8ff0\u5448\u5c42\u6b21\u72b6\u663e\u793a\u3002 \u56fe 3-7 \u5d4c\u5957\u6d4b\u8bd5\u8fd0\u884c\u7ed3\u679c 3.5.5 \u62d3\u5c55\u7684\u53d8\u5316 \u5728JUnit 4.3\u4e2d\uff0c\u4e00\u6b21\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2aRunner\uff0c\u5728JUnit 5 \u4e2d\u5c06@RunWith\u6362\u6210\u4e86@ExtendWith\uff0c\u53e6\u5916@Rule\u4e5f\u88ab\u79fb\u9664\u4e86\u3002\u539f\u56e0\u662f\u539f\u6765\u7684@RunWith\u6709\u8bf8\u591a\u7684\u9650\u5236\uff0c\u60f3\u8981\u5b9a\u4e49\u591a\u4e2a\u8fd0\u884c\u5668\u4f1a\u5f88\u9ebb\u70e6\uff0c\u6240\u4ee5\u4e0d\u5f97\u4e0d\u4f7f\u7528@Rule\u6765\u5b9e\u73b0\u3002\u5728JUnit5\u4e2d\uff0c\u8fd9\u4e00\u70b9\u5df2\u7ecf\u5f97\u5230\u4e86\u5904\u7406\uff0c\u6545\u800c@Rule\u4e5f\u5c31\u65e0\u7528\u6b66\u4e4b\u5730\u4e86\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528Spring Runner\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5728JUnit4.3\u4e2d\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a @RunWith(SpringRunner.class) public class MySpringUnitTest { // ... } \u5728 JUnit 5\u4e2d\u5c31\u662f\u8fd9\u6837\u7684\uff1a @ExtendWith(SpringExtension.class) class MySpringUnitTest { // ... } @ExtendWith\u4e0d\u4ec5\u53ef\u4ee5\u652f\u6301\u591a\u4e2aExtension\uff0c\u8fd8\u53ef\u4ee5\u653e\u7f6e\u5230\u6d4b\u8bd5\u65b9\u6cd5\u4e0a\uff0c\u5728JUnit 4.3\u4e2d@RunWith\u53ea\u80fd\u7528\u5728\u7c7b\u4e0a\u9762\u3002 3.6 Java \u5355\u5143\u6d4b\u8bd5\u7684\u7ea6\u5b9a\u548c\u539f\u5219 \u5f88\u591a\u7f51\u53cb\u548c\u540c\u4e8b\u66fe\u95ee\u6211\uff0c\u600e\u6837\u7684\u5355\u5143\u6d4b\u8bd5\u624d\u7b97\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u6d4b\u8bd5\u3002\u5bf9\u4e8e\u56e2\u961f\u5f00\u53d1\u6765\u8bf4\uff0c\u53ea\u8981\u662f\u6709\u6548\u7684\u3001\u5bb9\u6613\u7ef4\u62a4\u7684\u6d4b\u8bd5\u5c31\u662f\u597d\u6d4b\u8bd5\u3002\u56e0\u6b64\u5355\u5143\u6d4b\u8bd5\u5e94\u5c3d\u91cf\u8f7b\u91cf\u7ea7\uff0c\u4e14\u5e94\u575a\u6301\u505a\u4e0b\u53bb\u3002 \u4e3a\u4e86\u8ba9\u56e2\u961f\u5bf9\u5355\u5143\u6d4b\u8bd5\u6709\u4e00\u4e2a\u7edf\u4e00\u7684\u8ba4\u8bc6\u548c\u7406\u89e3\uff0c\u4e0b\u9762\u57fa\u4e8eFIRST\u539f\u5219\uff08FIRST\u548cAIR\u539f\u5219\u4e3a\u5355\u5143\u6d4b\u8bd5\u7684\u4e24\u79cd\u63cf\u8ff0\u65b9\u5f0f\uff09\u6574\u7406\u4e86\u4e00\u4e9b\u7ea6\u5b9a\u3002 3.6.1 FIRST \u539f\u5219\u548c\u89e3\u91ca 1. \u5feb\u901f\uff08FAST\uff09\u539f\u5219 \u5355\u5143\u6d4b\u8bd5\u5e94\u8be5\u662f\u53ef\u4ee5\u5feb\u901f\u8fd0\u884c\u7684\u3002\u5b83\u4f5c\u4e3a\u975e\u5e38\u7ec6\u7c92\u5ea6\u7684\u6d4b\u8bd5\uff0c\u9700\u8981\u80fd\u5feb\u901f\u8fd0\u884c\u5b8c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002\u5982\u679c\u4e0d\u80fd\uff0c\u53ef\u80fd\u662f\u7c92\u5ea6\u8fc7\u5927\u3002 2. \u72ec\u7acb\uff08Independent\uff09\u539f\u5219 \u5355\u5143\u6d4b\u8bd5\u7684\u6bcf\u4e2a\u7528\u4f8b\u5e94\u8be5\u662f\u72ec\u7acb\u7684\uff0c\u7528\u4f8b\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u5e72\u6270\u548c\u4f9d\u8d56\uff0c\u5e76\u4e0e\u987a\u5e8f\u65e0\u5173\u3002\u53ef\u4ee5\u901a\u8fc7setup\u548cteardown\u65b9\u6cd5\u6765\u4fdd\u8bc1\u3002\u53e6\u5916\uff0c\u4e5f\u4e0d\u5e94\u5f3a\u4f9d\u8d56\u5916\u90e8\u73af\u5883\uff0c\u8981\u5c3d\u91cf\u548c\u73af\u5883\u9694\u79bb\u3002 3. \u53ef\u91cd\u590d\uff08Repeatable\uff09\u539f\u5219 \u5355\u5143\u6d4b\u8bd5\u7684\u6bcf\u4e2a\u7528\u4f8b\u90fd\u8981\u53ef\u4ee5\u88ab\u91cd\u590d\u8fd0\u884c\uff0c\u5e76\u4e14\u6bcf\u6b21\u8fd0\u884c\u8981\u80fd\u5f97\u5230\u540c\u6837\u7684\u7ed3\u679c\u3002\u53e6\u5916\uff0c\u8981\u80fd\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e0a\u8fd0\u884c\uff0c\u4f8b\u5982\u5728\u5176\u4ed6\u56e2\u961f\u6210\u5458\u7684\u5f00\u53d1\u8bbe\u5907\u4e0a\u3002 4. \u81ea\u6211\u9a8c\u8bc1\uff08Self Validating\uff09\u539f\u5219 \u5355\u5143\u6d4b\u8bd5\u7684\u6bcf\u4e2a\u7528\u4f8b\u8fd0\u884c\u7ed3\u679c\u8981\u901a\u8fc7\u65ad\u8a00\u9a8c\u8bc1\uff0c\u4e0d\u5e94\u901a\u8fc7\u4eba\u5de5\u9a8c\u8bc1\u3002 5. \u53ca\u65f6\uff08Timely\uff09\u539f\u5219 \u5355\u5143\u6d4b\u8bd5\u6bcf\u4e2a\u7528\u4f8b\u7684\u8fd0\u884c\u7ed3\u679c\u8981\u901a\u8fc7\u65ad\u8a00\u9a8c\u8bc1\uff0c\u4e0d\u5e94\u901a\u8fc7\u4eba\u5de5\u9a8c\u8bc1\u3002 3.6.2 \u5355\u5143\u6d4b\u8bd5\u7684\u7ea6\u5b9a \u5728\u56e2\u961f\u4e2d\uff0c\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u4ee3\u7801\u8981\u548c\u4e1a\u52a1\u4ee3\u7801\u4e00\u6837\u4fdd\u6301\u7edf\u4e00\u3001\u6574\u6d01\u3002\u4e0b\u9762\u6574\u7406\u4e86\u4e00\u4e9b\u7ea6\u5b9a\u53ca\u89c4\u8303\u3002 \u6d4b\u8bd5\u7528\u4f8b\u7684\u65b9\u6cd5\u540d\u79f0\u4f7f\u7528\u4e0b\u5212\u7ebf\uff0c\u5e76\u4e14\u8981\u8868\u8fbe\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u53e5\u5b50\uff0c\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u4f5c\u4e3a\"\u6d3b\"\u6587\u6863\u3002 \u6d4b\u8bd5\u6587\u4ef6\u8981\u548c\u4e1a\u52a1\u4ee3\u7801\u7c7b------\u5bf9\u5e94\uff0c\u5e76\u4e14\u8981\u653e\u7f6e\u5230\u548c\u4e1a\u52a1\u4ee3\u7801\u540c\u7ea7\u7684\u6d4b\u8bd5\u6a21\u5757\u4e2d\uff0c\u4f8b\u5982\"src/testjava\"\uff0c\u8fd9\u6837IDE\u5de5\u5177\u624d\u53ef\u4ee5\u81ea\u52a8\u8bc6\u522b\uff0c\u5e76\u901a\u8fc7\u5feb\u6377\u952e\u8df3\u8f6c\u3002 \u6d4b\u8bd5\u6587\u4ef6\u8981\u548c\u4e1a\u52a1\u4ee3\u7801\u6587\u4ef6\u540c\u540d\uff0c\u4e14\u5e94\u4f7f\u7528Test\u7ed3\u675f\u3002 \u8981\u6309\u7167Given...When...Then\u7684\u98ce\u683c\u7ec4\u7ec7\u6d4b\u8bd5\u4ee3\u7801\u3002 \u6d4b\u8bd5\u7528\u4f8b\u5fc5\u987b\u6709\u5145\u5206\u7684\u65ad\u8a00\u8bed\u53e5\u3002 \u4e0d\u9700\u8981\u7279\u522b\u7684\u8bbe\u7f6e\u5c31\u80fd\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u3002 \u4e0d\u5141\u8bb8\u6ce8\u91ca\u5355\u5143\u6d4b\u8bd5\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u9700\u8981\u5feb\u901f\u8df3\u8fc7\uff0c\u4f7f\u7528@Ignore\u6ce8\u89e3\u3002 \u5982\u679c\u6539\u53d8\u4e86\u5168\u5c40\u5bf9\u8c61\uff0c\u8981\u4f7f\u7528@After\u6ce8\u89e3\u6e05\u7406\uff0c\u4fdd\u6301\u72ec\u7acb\u539f\u5219\u3002 \u5982\u679c\u88ab\u6d4b\u8bd5\u7684\u7c7b\u5b9e\u73b0\u4e86\u63a5\u53e3\uff0c\u5c3d\u91cf\u901a\u8fc7\u63a5\u53e3\u7684\u7c7b\u578b\u6d4b\u8bd5\u3002 \u914d\u7f6e\u5408\u9002\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u8981\u4e3a\u4e0d\u540c\u7684\u4ee3\u7801\u914d\u7f6e\u4e0d\u540c\u7b49\u7ea7\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u3002\u6838\u5fc3\u4ee3\u7801\u7684\u6d4b\u8bd5\u7387\u5e94\u4e3a100%\u3002 \u901a\u7528\u7684\u51c6\u5907\u5de5\u4f5c\u4f7f\u7528\u76f8\u5173\u751f\u547d\u5468\u671f\u6ce8\u89e3\uff0c\u907f\u514d\u91cd\u590d\u3002 \u901a\u7528\u7684\u6570\u636e\u51c6\u5907\u5de5\u4f5c\u53ef\u4ee5\u901a\u8fc7\u63d0\u53d6\u4e00\u4e2a\u6d4b\u8bd5\u52a9\u624b\u7c7b\u6765\u5b8c\u6210\u3002 \u63d0\u4ea4\u4ee3\u7801\u524d\u4fdd\u8bc1\u5355\u5143\u6d4b\u8bd5\u5df2\u901a\u8fc7\u3002 \u4fee\u6539\u4e1a\u52a1\u4ee3\u7801\u65f6\uff0c\u8981\u540c\u6b65\u4fee\u6539\u5355\u5143\u6d4b\u8bd5\uff0c\u5e76\u8865\u5145\u8db3\u591f\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 3.7 \u5c0f\u7ed3 \u672c\u7ae0\u5148\u4ecb\u7ecd\u4e86\u5355\u5143\u6d4b\u8bd5\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u6bd4\u5982\u5982\u4f55\u4f7f\u7528\u65ad\u8a00\u3001\u6d4b\u8bd5\u5f02\u5e38\u7b49\uff0c\u7136\u540e\u4ecb\u7ecd\u4e86\u6570\u636e\u51c6\u5907\u548c\u6e05\u7406\u7684\u65b9\u6cd5\uff0c\u63a5\u7740\u53c8\u8bb2\u89e3\u4e86\u4e00\u4e9b\u4f7f\u7528\u6280\u5de7\u548c\u8bca\u65ad\u95ee\u9898\u7684\u65b9\u6cd5\u3002\u4efb\u4f55\u56e2\u961f\u5728\u8fdb\u884c\u7f16\u7801\u65f6\u90fd\u9700\u8981\u901a\u8fc7\u4e00\u4e9b\u5951\u7ea6\u6765\u4fdd\u8bc1\u56e2\u961f\u7684\u534f\u4f5c\u987a\u5229\u3002\u56e0\u6b64\uff0c\u672c\u7ae0\u7684\u6700\u540e\u6574\u7406\u4e86\u4e00\u4efd\u5355\u5143\u6d4b\u8bd5\u7684\u7ea6\u5b9a\uff0c\u5e76\u4ecb\u7ecd\u4e86\u5355\u5143\u6d4b\u8bd5\u7684\u539f\u5219\u3002 \u5355\u5143\u6d4b\u8bd5\u5e76\u4e0d\u662f\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u7684\u4e13\u5229\uff0c\u5b83\u5e94\u8be5\u662f\u5408\u683c\u5de5\u7a0b\u5e08\u7684\u57fa\u672c\u80fd\u529b\u3002\u5355\u5143\u6d4b\u8bd5\u5de5\u5177\u548c\u6846\u67b6\u7684\u9009\u7528\u4ee5\u8f7b\u91cf\u7ea7\u3001\u80fd\u575a\u6301\u4e3a\u539f\u5219\u3002\u4e00\u4e0a\u6765\u5c31\u8981\u6c42100%\u7684\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\u6216\u8005\u4f7f\u7528\u4e00\u4e9b\u51b7\u95e8\u590d\u6742\u7684\u6846\u67b6\uff0c\u4e0d\u5229\u4e8e\u56e2\u961f\u575a\u6301\u4e0b\u53bb\u3002 1\uff5e3\u7ae0\u7684\u5185\u5bb9\u5df2\u7ecf\u80fd\u5e2e\u52a9\u5927\u5bb6\u7f16\u5199\u5927\u90e8\u5206\u5de5\u5177\u7c7b\u5e93\u7684\u5355\u5143\u6d4b\u8bd5\u3002\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u5f80\u5f80\u8026\u5408\u5ea6\u66f4\u9ad8\uff0c\u8981\u4e3a\u8fd9\u7c7b\u4ee3\u7801\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u5219\u8fd8\u9700\u8981\u4e00\u4e9b\u5176\u4ed6\u7684\u6280\u5de7\uff0c\u8fd9\u4e9b\u5c06\u5728\u540e\u6587\u4e2d\u9010\u6b65\u4ecb\u7ecd\u3002","title":"\u7b2c 3 \u7ae0 \u5355\u5143\u6d4b\u8bd5\u57fa\u7840"},{"location":"03-unit-testing-fundamentals/#3","text":"\u5355\u5143\u6d4b\u8bd5\u662f\u7814\u53d1\u4eba\u5458\u5fc5\u987b\u638c\u63e1\u7684\u4e00\u9879\u6280\u80fd\uff0c\u4f46\u4e0d\u662f\u7814\u53d1\u81ea\u6d4b\u7684\u5168\u90e8\u5185\u5bb9\u3002\u4e00\u4e9b\u5927\u7684\u516c\u53f8\u5728\u9762\u8bd5\u65f6\uff0c\u751a\u81f3\u8981\u8003\u5bdf\u5e94\u8058\u4eba\u5458\u7684\u5355\u5143\u6d4b\u8bd5\u80fd\u529b\u548c\u6240\u5199\u4ee3\u7801\u7684\u8d28\u91cf\u3002\u5355\u5143\u6d4b\u8bd5\u662f\u5f00\u542f\u7814\u53d1\u81ea\u6d4b\u7684\u4e00\u628a\u94a5\u5319\u3002 \u672c\u7ae0\u6db5\u76d6\u7684\u5185\u5bb9\u6709\uff1a \u5355\u5143\u6d4b\u8bd5\u57fa\u7840\u3002 \u65ad\u8a00\u3002 JUnit \u7684\u4f7f\u7528\u3002 JUnit 5 \u7684\u65b0\u7279\u6027\u3002 \u672c\u7ae0\u7684\u76ee\u6807\u662f\u901a\u8fc7\u5b66\u4e60\u5355\u5143\u6d4b\u8bd5\u76f8\u5173\u77e5\u8bc6\uff0c\u4ee5\u6700\u5177\u6027\u4ef7\u6bd4\u7684\u65b9\u5f0f\u5f00\u542f\u5f00\u53d1\u4eba\u5458\u7684\u81ea\u6d4b\u4e4b\u65c5\u3002 \u672c\u7ae0\u7684\u793a\u4f8b\u4ee3\u7801\u53ef\u4ee5\u5728Git\u4ed3\u5e93\uff08https://github.com/java-self-testing/java-self-testing-example/blob/main/single\uff09\u4e2d\u4e0b\u8f7d\u3002","title":"\u7b2c 3 \u7ae0 \u5355\u5143\u6d4b\u8bd5\u57fa\u7840"},{"location":"03-unit-testing-fundamentals/#31","text":"\u5728\u4ecb\u7ecd\u7e41\u6742\u7684\u6982\u5ff5\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u5355\u5143\u6d4b\u8bd5\u7684\u610f\u4e49\u548c\u5b66\u4e60\u65b9\u6cd5\u3002","title":"3.1 \u5355\u5143\u6d4b\u8bd5"},{"location":"03-unit-testing-fundamentals/#311","text":"\u5728\u8ba1\u7b97\u673a\u7f16\u7a0b\u4e2d\uff0c\u5355\u5143\u6d4b\u8bd5\u53c8\u79f0\u4e3a\u6a21\u5757\u6d4b\u8bd5\uff0c\u662f\u9488\u5bf9\u7a0b\u5e8f\u6a21\u5757\uff08\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u6700\u5c0f\u5355\u4f4d\uff09\u6765\u8fdb\u884c\u6b63\u786e\u6027\u68c0\u9a8c\u7684\u6d4b\u8bd5\u5de5\u4f5c\u3002 \u2014\u2014\u2014\u2014 \u7ef4\u57fa\u767e\u79d1 \u4ec0\u4e48\u662f\u4e00\u4e2a\u5355\u5143\uff1f \u5728\u8fc7\u7a0b\u5316\u7f16\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u5355\u5143\u5c31\u662f\u5355\u4e2a\u7684\u7a0b\u5e8f\u3001\u51fd\u6570\u548c\u8fc7\u7a0b\u7b49\u3002\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u65f6\uff0c\u6700\u5c0f\u7684\u5355\u5143\u5c31\u662f\u65b9\u6cd5\uff0c\u5305\u62ec\u57fa\u7c7b\uff08\u8d85\u7c7b\uff09\u3001\u62bd\u8c61\u7c7b\u6216\u8005\u6d3e\u751f\u7c7b\uff08\u5b50\u7c7b\uff09\u4e2d\u7684\u65b9\u6cd5\u3002 \u5355\u5143\u662f\u4e00\u4e2a\u76f8\u5bf9\u6982\u5ff5\uff0c\u9488\u5bf9\u65b9\u6cd5\u3001\u7c7b\u3001\u6a21\u5757\u548c\u5e94\u7528\u6240\u8fdb\u884c\u7684\u6d4b\u8bd5\u90fd\u53ef\u4ee5\u79f0\u4f5c\u5355\u5143\u6d4b\u8bd5\u7b80\u5355\u6765\u8bf4\uff0c\u5355\u5143\u6d4b\u8bd5\u7684\u521d\u8877\u662f\u5bf9\u5e94\u7528\u7684\u4e00\u5c0f\u90e8\u5206\u53ca\u65f6\u8fdb\u884c\u6d4b\u8bd5\uff0c\u800c\u975e\u7b49\u5230\u6240\u6709\u7684\u4ee3\u7801\u7f16\u5199\u5b8c\u4e4b\u540e\u518d\u9488\u5bf9\u6574\u4e2a\u5e94\u7528\u8fdb\u884c\u6d4b\u8bd5\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u5355\u5143\u6d4b\u8bd5\u662f\u57fa\u4e8e\u7c7b\u3001\u65b9\u6cd5\u5c42\u9762\u7684\uff0c\u4e0e\u4e4b\u76f8\u5bf9\u7684\u662f\u96c6\u6210\u6d4b\u8bd5\u3001E2E\u6d4b\u8bd5\u3002","title":"3.1.1 \u4ec0\u4e48\u662f\u5355\u5143\u6d4b\u8bd5"},{"location":"03-unit-testing-fundamentals/#312","text":"\u5728\u6ca1\u6709\u63a5\u89e6\u5355\u5143\u6d4b\u8bd5\u4e4b\u524d\u6211\u4eec\u662f\u600e\u4e48\u505a\u6d4b\u8bd5\u7684\uff1f\u4e00\u822c\u6709\u4e24\u4e2a\u65b9\u6cd5\uff1a 1\uff09\u542f\u52a8\u6574\u4e2a\u5e94\u7528\uff0c\u50cf\u7528\u6237\u6b63\u5e38\u64cd\u4f5c\u4e00\u6837\uff0c\u5148\u5355\u51fb\u754c\u9762\u4e0a\u7684\u6309\u94ae\uff0c\u7136\u540e\u67e5\u770b\u7a0b\u5e8f\u7684\u53cd\u5e94\u3002\u8fd9\u79cd\u624b\u52a8\u6d4b\u8bd5\u7684\u5f0a\u7aef\u662f\u6bcf\u6b21\u6d4b\u8bd5\u90fd\u5f97\u542f\u52a8\u6574\u4e2a\u5e94\u7528\uff0c\u9879\u76ee\u7a0d\u5fae\u5927\u4e00\u70b9\u54cd\u5e94\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u6162\uff0c\u5982\u679c\u9762\u5bf9\u7684\u662fPHP\u3001Node.js \u7b49\u811a\u672c\u8bed\u8a00\u8fd8\u597d\uff0c\u5982\u679c\u662fJava\u3001C++\u8fd9\u7c7b\u7f16\u8bd1\u578b\u8bed\u8a00\u5219\u4f1a\u975e\u5e38\u75db\u82e6\u3002 2\uff09\u5728\u4ee3\u7801\u7684\u67d0\u4e2a\u5730\u65b9\u5199\u4e00\u4e2a\u4e34\u65f6\u4eba\u53e3\uff0c\u4f8b\u5982\u5728Java\u7684main\u65b9\u6cd5\u4e2d\u6d4b\u8bd5\u67d0\u4e2a\u65b9\u6cd5\u6216\u8005\u67d0\u4e2a\u7c7b\uff0c\u7528\u5b8c\u7559\u5728\u9879\u76ee\u4e2d\u6216\u5220\u9664\u3002\u4f46\u662f\uff0c\u4e0d\u5220\u9664\u4f1a\u8ba9\u9879\u76ee\u53d8\u5f97\u5f88\u4e71\uff0c\u5220\u9664\u7684\u8bdd\u4e0b\u6b21\u60f3\u6d4b\u8bd5\u53c8\u5f97\u518d\u6b21\u7f16\u5199\u3002 \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u6709\u4e00\u4e2a\u5171\u540c\u7684\u95ee\u9898\uff0c\u6ca1\u6cd5\u4fdd\u7559\u6d4b\u8bd5\u6570\u636e\u7684\u521b\u5efa\u8fc7\u7a0b\uff0c\u4e14\u573a\u666f\u3001\u8fb9\u754c\u7684\u8986\u76d6\u57fa\u672c\u968f\u7f18\u3002\u5355\u5143\u6d4b\u8bd5\u672c\u8d28\u4e0a\u5c31\u662f\u65b9\u6cd52\uff0c\u5373\u628a\u7c7b\u4f3cmain\u65b9\u6cd5\u7684\u6d4b\u8bd5\u4ee3\u7801\u7edf\u4e00\u653e\u5230\u4e00\u4e2a\u5730\u65b9\uff0c\u7136\u540e\u6839\u636e\u4e00\u4e9b\u7ea6\u5b9a\u8ba9\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u4f46\u4e0d\u4f1a\u5f3a\u5236\u8981\u6c42\u4f60\u628a\u6d4b\u8bd5\u4ee3\u7801\u653e\u5230\u67d0\u4e2a\u5730\u65b9\u3002 \u5728Java\u9879\u76ee\u4e2d\uff0c\u6839\u636eMaven\u9879\u76ee\u7ed3\u6784\u6709\u5982\u4e0b\u7ea6\u5b9a\uff1a \u6d4b\u8bd5\u4ee3\u7801\u5355\u72ec\u653e\u5230src/test\u76ee\u5f55\u4e0b\uff0c\u4e0esrc/main\u4e2d\u7684\u4e1a\u52a1\u4ee3\u7801\u4e00\u4e00\u5bf9\u5e94\u3002 \u6d4b\u8bd5\u7c7b\u548c\u4e1a\u52a1\u7c7b\u540c\u540d\uff0c\u4e14\u5747\u91c7\u7528Test\u4f5c\u4e3a\u7ed3\u5c3e\u3002 \u7406\u8bba\u4e0a\u4e0d\u4f7f\u7528\u4efb\u4f55\u6d4b\u8bd5\u6846\u67b6\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5355\u5143\u6d4b\u8bd5\uff0c\u6700\u521d\u7684\u5355\u5143\u6d4b\u8bd5\u5c31\u662f\u8fd9\u6837\u5b9e\u73b0\u7684\u3002\u4e0d\u8fc7\u73b0\u5728\u5229\u7528xUnit\u7b49\u6846\u67b6\u53ef\u4ee5\u66f4\u65b9\u4fbf\u5730\u8fd0\u884c\u6d4b\u8bd5\u3002\u4f7f\u7528\u6846\u67b6\u7684\u5355\u5143\u6d4b\u8bd5\u6709\u4ee5\u4e0b\u597d\u5904\uff1a \u65b9\u4fbf\u6279\u91cf\u8fd0\u884c\u548c\u7ba1\u7406\u6d4b\u8bd5\u3002 \u53ef\u4f7f\u7528 @Before \u7b49\u94a9\u5b50\u5b9e\u73b0\u6570\u636e\u51c6\u5907\u3001\u6570\u636e\u6e05\u7406\u3002 \u53ef\u901a\u8fc7\u65ad\u8a00\u9a8c\u8bc1\u7ed3\u679c\uff0c\u907f\u514d\u4eba\u5de5\u5224\u5b9a\u7ed3\u679c\u3002 \u53ef\u901a\u8fc7\u8986\u76d6\u7387\u7edf\u8ba1\u5de5\u5177\u6765\u7edf\u8ba1\u4ee3\u7801\u6d4b\u8bd5\u7684\u8986\u76d6\u7387\u3002 \u53ef\u901a\u8fc7\u6a21\u62df\u89e3\u51b3\u4ee3\u7801\u4e4b\u95f4\u76f8\u4e92\u4f9d\u8d56\u7684\u95ee\u9898\u3002 \u5f53\u7136\uff0c\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u7684\u76ee\u7684\u9664\u4e86\u6d4b\u8bd5\u65b9\u4fbf\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u7528\u9014\uff1a\u91cd\u6784\u3002 \u91cd\u6784\u662f\u5355\u5143\u6d4b\u8bd5\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u7528\u9014\u3002\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u6539\u9020\u4e00\u4e9b\u9057\u7559\u4ee3\u7801\uff0c\u5e76\u4e14\u8981\u8ba9\u5176\u8fd1\u4e4e100%\u5730\u4fdd\u6301\u539f\u6765\u7684\u903b\u8f91\u3002\u4f46\u662f\uff0c\u5982\u679c\u6ca1\u6709\u5355\u5143\u6d4b\u8bd5\u7684\u4fdd\u62a4\uff0c\u5f00\u53d1\u4eba\u5458\u57fa\u672c\u4e0d\u6562\u91cd\u6784\uff0c\u53ea\u80fd\u901a\u8fc7\u6dfb\u52a0\u4ee3\u7801\u6765\u5b9e\u73b0\u4e1a\u52a1\u76ee\u6807\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4ee3\u7801\u8d8a\u6765\u8d8a\u6df7\u4e71\u3002\u5982\u679c\u5728\u91cd\u6784\u524d\uff0c\u5df2\u901a\u8fc7\u5355\u5143\u6d4b\u8bd5\u5c06\u539f\u6765\u7684\u4e1a\u52a1\u903b\u8f91\u8986\u76d6\uff0c\u5728\u6709\u4fdd\u62a4\u7684\u60c5\u51b5\u5f00\u59cb\u91cd\u6784\uff0c\u91cd\u6784\u5b8c\u6210\u540e\u518d\u6b21\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u4e5f\u80fd\u901a\u8fc7\uff0c\u5219\u8bf4\u660e\u8fd9\u6b21\u91cd\u6784\u57fa\u672c\u4e0a\u6ca1\u6709\u7834\u574f\u6027\u3002 \u5728Java\u4e2dJUnit\u662f\u5355\u5143\u6d4b\u8bd5\u5957\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6700\u7b80\u5355\u7684\u5355\u5143\u6d4b\u8bd5\u5f00\u59cb\u5bf9\u5e94\u7528\u7684\u4e00\u4e2a\u65b9\u6cd5\u8fdb\u884c\u9a8c\u8bc1\uff0c\u800c\u4e0d\u5fc5\u542f\u52a8\u6574\u4e2a\u5e94\u7528\u3002","title":"3.1.2 \u4e3a\u4ec0\u4e48\u9700\u8981\u5199\u5355\u5143\u6d4b\u8bd5"},{"location":"03-unit-testing-fundamentals/#313","text":"\u8f6f\u4ef6\u7684\u8d28\u91cf\u662f\u7531\u6bcf\u4e00\u884c\u4ee3\u7801\u7684\u8d28\u91cf\u51b3\u5b9a\u7684\uff0c\u7ec6\u5fae\u5904\u7684Bug\u79ef\u7d2f\u8d77\u6765\u7ec8\u5c06\u5bfc\u81f4\u5927\u95ee\u9898\uff0c\u6240\u4ee5\uff0c\u5728\u7ec6\u5fae\u5904\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u80fd\u5f88\u597d\u5730\u907f\u514d\u5927\u95ee\u9898\u7684\u4ea7\u751f\u3002 \u6211\u521a\u63a5\u89e6\u5355\u5143\u6d4b\u8bd5\u65f6\uff0c\u9879\u76ee\u6b63\u5904\u4e8e\u4e00\u4e2aBug\u4e1b\u751f\u3001\u5f00\u53d1\u4eba\u5458\u6c38\u8fdc\u5728\u5f53\u6551\u706b\u961f\u5458\u7684\u72b6\u6001\u3002\u5728\u719f\u6089\u4e86\u4e00\u4e9b\u6d4b\u8bd5\u6846\u67b6\u540e\uff0c\u6211\u5c06\u5176\u5927\u91cf\u5e94\u7528\u4e8e\u9879\u76ee\u4e2d\uff0c\u4f46\u662f\u7ed3\u679c\u5e76\u4e0d\u7406\u60f3\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u7406\u5ff5\u9700\u8981\u9010\u6b65\u57f9\u517b\uff0c\u4e00\u5f00\u59cb\u5c31\u4f7f\u7528\u975e\u5e38\u590d\u6742\u7684\u5de5\u5177\u3001\u5e93\uff0c\u6216\u8fdb\u884cTDD\u7b49\u9ad8\u96be\u5ea6\u7684\u5b9e\u8df5\uff0c\u4f1a\u5bfc\u81f4\u5b66\u4e60\u66f2\u7ebf\u592a\u8fc7\u9661\u5ced\uff0c\u5728\u9879\u76ee\u4e2d\u5f88\u96be\u575a\u6301\u3002 \u56e0\u6b64\uff0c\u8fd9\u91cc\u7ed9\u5355\u5143\u6d4b\u8bd5\u7684\u521d\u5b66\u8005\u4e00\u4e9b\u5efa\u8bae\uff1a \u5b66\u4e60\u4e00\u4e9b\u7b80\u5355\u7684\u5355\u5143\u6d4b\u8bd5\u65b9\u6cd5\u540e\uff0c\u9a6c\u4e0a\u5e94\u7528\u5230\u9879\u76ee\u4e2d\uff0c\u518d\u6309\u7167\u9700\u8981\u5b66\u4e60\u5176\u4ed6\u6280\u5de7\u3002 \u521a\u5f00\u59cb\u5c3d\u91cf\u4f7f\u7528\u4e3b\u6d41\u6216\u8005\u5e73\u53f0\u5185\u7f6e\u7684\u6846\u67b6\u6216\u5e93\uff0c\u4f8b\u5982IntelliJIDEA\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5f15\u5165JUnit\u3002\u9009\u7528JUnit\u662f\u975e\u5e38\u5212\u7b97\u7684\u4e8b\u60c5\uff0c\u5b83\u81ea\u5e26\u4e86Hamcrest \u65ad\u8a00\u5e93\uff0c\u56e0\u6b64\u6ca1\u6709\u5fc5\u8981\u4e00\u5f00\u59cb\u5c31\u4f7f\u7528AssertJ\u7b49\u66f4\u590d\u6742\u7684\u65ad\u8a00\u5e93\u3002 \u6839\u636e\u4e8c\u516b\u539f\u5219\uff0c80%\u7684\u4ee3\u7801\u90fd\u662f\u5f88\u597d\u6d4b\u8bd5\u4e14\u6027\u4ef7\u6bd4\u9ad8\u7684\uff0c\u53ef\u4f18\u5148\u9009\u62e9\u4e3a\u5b83\u4eec\u7f16\u5199\u6d4b\u8bd5\u3002 \u4e0d\u5fc5\u82db\u6c42\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u6709\u4e00\u4e9b\u4ee3\u7801\u6d4b\u8bd5\u8986\u76d6\u7387\u5f88\u96be\u63d0\u5347\uff0c\u8ffd\u6c42100%\u7684\u4ee3\u7801\u6d4b\u8bd5\u8986\u76d6\u7387\u6027\u4ef7\u6bd4\u975e\u5e38\u4f4e\u3002 \u672c\u4e66\u7684\u7f16\u5199\u601d\u8def\u4e5f\u662f\u5982\u6b64\u3002\u5b66\u5b8c\u672c\u7ae0\u5185\u5bb9\u4ee5\u540e\uff0c\u8bfb\u8005\u5e94\u8be5\u5c31\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u5e94\u7528JUnit\u4e86\uff0c\u5e76\u4e14\u53ef\u4ee5\u9488\u5bf9\u4e00\u4e9b\u4f7f\u7528\u6b21\u6570\u591a\u7684\u516c\u5171\u65b9\u6cd5\uff08\u4e00\u822c\u662f\u9759\u6001\u65b9\u6cd5\uff09\u7f16\u5199\u6d4b\u8bd5\u3002\u540e\u7eed\u7ae0\u8282\u5219\u4f1a\u4ecb\u7ecd\u5982\u4f55\u4e3aSpring\u7684Bean\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u5982\u4f55\u4f7f\u7528\u5404\u79cd\u79c1\u6709\u65b9\u6cd5\u4ee5\u53ca\u9700\u8981\u63d2\u6869\u5904\u7406\u7684\u65b9\u6cd5\uff0c\u6700\u540e\u624d\u7ed9\u51fa\u5404\u79cd\u9ad8\u7ea7\u7684\u7406\u5ff5\uff0c\u6bd4\u5982BDD\u3001JMH\u3001\u5e76\u53d1\u6d4b\u8bd5\u7b49\u3002 \u53e6\u5916\uff0c\u53ef\u9009\u62e9\u7684\u5355\u5143\u6d4b\u8bd5\u76f8\u5173\u6280\u672f\u975e\u5e38\u591a\uff0c\u9650\u4e8e\u7bc7\u5e45\uff0c\u672c\u4e66\u65e0\u6cd5\u5c06\u6240\u6709\u6280\u672f\u548c\u6846\u67b6\u90fd\u4ecb\u7ecd\u5230\uff0c\u6240\u4ee5\u9009\u62e9\u4e86\u4e00\u5957\u6700\u4e3b\u6d41\u7684\u6280\u672f\u6808\u8fdb\u884c\u8bb2\u89e3\u3002\u638c\u63e1\u4e86\u8fd9\u5957\u6280\u672f\u6808\u540e\uff0c\u81ea\u7136\u4e5f\u80fd\u62d3\u5c55\u4f7f\u7528\u5176\u4ed6\u7684\u6280\u672f\u6808\u3002 \u672c\u4e66\u7684\u6280\u672f\u6808\u4e3b\u8981\u5305\u62ecJava\u3001Maven\u3001JUnit\u3001Mockito\u4ee5\u53ca\u76f8\u5173\u7684\u5f00\u6e90\u5de5\u5177\uff08\u5728\u9644\u5f55\u4e2d\u53ef\u4ee5\u627e\u5230\u5f00\u6e90\u5de5\u5177\u6e05\u5355\uff09\u3002","title":"3.1.3 \u600e\u4e48\u5b66\u4e60\u5355\u5143\u6d4b\u8bd5"},{"location":"03-unit-testing-fundamentals/#314-junit","text":"Java\u751f\u6001\u7684\u6d4b\u8bd5\u6846\u67b6\u6bd4\u8f83\u591a\uff0cJUnit 4\u662f\u76ee\u524d\u6700\u4e3b\u6d41\u4e5f\u662f\u642d\u5efa\u6700\u4e3a\u7b80\u5355\u7684\u6d4b\u8bd5\u6846\u67b6\u4e4b\u4e00\u3002\u4e0b\u9762\u7684\u5185\u5bb9\u5c06\u57fa\u4e8eJUnit 4\u8fdb\u884c\u8bb2\u89e3\uff0c\u8fd9\u91cc\u5047\u5b9a\u4f60\u5df2\u7ecf\u6709Java\u5f00\u53d1\u7ecf\u9a8c\uff0c\u5e76\u80fd\u719f\u7ec3\u4f7f\u7528JDK\u3001IntelliJIDEA\u3001Maven\u7b49\u5de5\u5177\u3002\u5982\u679c\u4f60\u4e60\u60ef\u4f7f\u7528Eclipse\u3001Gradle\uff0c\u4e5f\u53ef\u4ee5\u82b1\u4e00\u70b9\u65f6\u95f4\u4e86\u89e3\u4e00\u4e0bIntelliJIDEA\u3001Maven \u8fd9\u4e24\u4e2a\u5de5\u5177\uff0c\u5b83\u4eec\u90fd\u975e\u5e38\u7b80\u5355\u6613\u7528\u3002 \u642d\u5efa\u597dJava\u5f00\u53d1\u73af\u5883\u540e\uff0c\u4f9d\u6b21\u9009\u62e9\u83dc\u5355File\u2192New\u2192Project\uff0c\u7136\u540e\u9009\u62e9Maven\u6807\u7b7e\u9875\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\uff0c\u5982\u56fe3-1\u6240\u793a\u3002 \u56fe 3-1 \u521b\u5efa\u4e00\u4e2a\u9879\u76ee \u521b\u5efa\u5b8cMaven\u9879\u76ee\u540e\u53ef\u4ee5\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e2d\u627e\u5230 pom.xml\u6587\u4ef6\uff0c\u4f7f\u7528JUnit\u53ea\u9700\u8981\u5728pom.xml\u6587\u4ef6\u4e2d\u7684dependency\u8282\u70b9\u6dfb\u52a0\u4f9d\u8d56\u5373\u53ef\uff1a <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.13</version> <scope>test</scope> </dependency> \u6ce8\u610f\uff0c\u5c06dependency\u4e2d\u7684scope\u5c5e\u6027\u8bbe\u7f6e\u4e3atest\uff0c\u8fd9\u6837\u5728\u6784\u5efa\u4ea7\u751f\u7684\u8f6f\u4ef6\u5305\u4e2d\u4f1a\u81ea\u52a8\u6392\u9664JUnit\u7684Jar\u5305\u3002\u5982\u679c\u5728\u521b\u5efaMaven\u9879\u76ee\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u56f0\u96be\uff0c\u53ef\u4ee5\u53c2\u8003\u968f\u4e66\u793a\u4f8b\u4ee3\u7801\u3002","title":"3.1.4 \u642d\u5efa JUnit \u73af\u5883"},{"location":"03-unit-testing-fundamentals/#315-hello-world","text":"\u5927\u90e8\u5206\u4eba\u5b66\u4e60\u7f16\u5199\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u5c31\u662f\"Hello\uff0cworld\uff01\"\uff0c\u901a\u8fc7\u7f16\u7a0b\u8bed\u8a00\u7b80\u5355\u8f93\u51fa\u5b57\u7b26\u4e32\"Hello\uff0cworld\uff01\"\u4ee3\u8868\u5b66\u4f1a\u4e86\u7f16\u5199\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u4e5f\u6807\u5fd7\u7740\u7f16\u7a0b\u73af\u5883\u642d\u5efa\u6210\u529f\u3002\u90a3\u6211\u4eec\u5c31\u6765\u7ed9\"Hello\uff0cworld\uff01\"\u5199\u4e00\u4e2a\u5355\u5143\u6d4b\u8bd5\u3002 \u5148\u7f16\u5199\u4e00\u4e2a\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u65b9\u6cd5\u88ab\u6267\u884c\u540e\u8f93\u51fa\u5b57\u7b26\u4e32\"Hello\uff0cworld\uff01\"\uff1a public class HelloWorld { public static String hello() { return \"Hello, world!\"; } } \u9759\u6001\u65b9\u6cd5\u4e00\u822c\u662f\u4e00\u4e9b\u5de5\u5177\u65b9\u6cd5\uff0c\u5b83\u4e5f\u662f\u6700\u5bb9\u6613\u6d4b\u8bd5\u7684\u65b9\u6cd5\u4e4b\u4e00\u3002\u5de5\u4f5c\u4e2d\uff0c\u6211\u7ecf\u5e38\u770b\u5230\u6709\u4eba\u5728\u9759\u6001\u65b9\u6cd5\u9644\u8fd1\u7f16\u5199\u4e00\u4e2amain\u51fd\u6570\uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u6d4b\u8bd5\u3002\u793a\u4f8b\u5982\u4e0b\uff1a public static void main(String[] args){ System.out.println(hello()); } \u5c31\u50cf\u524d\u9762\u6240\u8bf4\u7684\uff0c\u8fd9\u91cc\u91c7\u7528\u7684\u662f\u4e00\u79cd\u6734\u7d20\u7684\u5355\u5143\u6d4b\u8bd5\u601d\u60f3\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\u548c @Test \u6ce8\u89e3\u4ee3\u66ffmain\u51fd\u6570\u4f5c\u4e3a\u542f\u52a8\u5165\u53e3\u3002\u5148\u521b\u5efa\u4e00\u4e2a\u7c7bHelloWorldTest\uff0c\u5e76\u4e3a\u5176\u6dfb\u52a0\u4e00\u4e2apublic\u65b9\u6cd5\uff0c\u7136\u540e\u6dfb\u52a0 @Test \u6ce8\u89e3\uff0c\u8fd9\u65f6\uff0cIDEA\u4f1a\u81ea\u52a8\u8bc6\u522b\u8fd9\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u7684\u6d4b\u8bd5\uff0c\u6211\u4eec\u53ef\u5728\u8fd9\u4e2a\u65b9\u6cd5\u5185\u8c03\u7528\u88ab\u6d4b\u8bd5\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u5e76\u6253\u5370\u51fa\u6765\u3002 \u5728\u56fe3-2\u4e2d\uff0c\u70b9\u51fb\u5de6\u4fa7\u5708\u51fa\u6765\u7684\u6267\u884c\u6309\u94ae\uff0c\u53ef\u4ee5\u50cfmain\u51fd\u6570\u4e00\u6837\u6267\u884c\u53f3\u4fa7\u7684\u4ee3\u7801\uff0c\u5e76\u5f97\u5230\u540c\u6837\u7684\u8f93\u51fa\u7ed3\u679c\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ed9\u4e88\u8fd9\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u4e00\u4e2a\u6709\u8bed\u4e49\u7684\u540d\u5b57\uff0c\u4f7f\u5355\u5143\u6d4b\u8bd5\u66f4\u6574\u6d01\uff0c\u5e76\u62e5\u6709\u66f4\u5f3a\u7684\u63cf\u8ff0\u6027\u3002 \u56fe 3-2 \u8fd0\u884c\u6d4b\u8bd5 \u8fd9\u6837\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u5355\u5143\u6d4b\u8bd5\u5c31\u5199\u597d\u4e86\u3002\u4e0d\u8fc7\u8fd9\u65f6\u6211\u4eec\u662f\u901a\u8fc7\u8089\u773c\u6765\u5224\u65ad\u7a0b\u5e8f\u6bcf\u6b21\u7684\u8f93\u51fa\u662f\u5426\u6b63\u786e\u7684\uff0c\u5f53\u6709\u51e0\u5341\u3001\u4e0a\u767e\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u65f6\uff0c\u518d\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u663e\u7136\u4e0d\u73b0\u5b9e\u3002 \u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u6d4b\u8bd5\u7684\u4ee3\u7801\u4e2d\u5b9a\u4e49\u51fa\u4ec0\u4e48\u662f\u5bf9\u7684\uff0c\u4ec0\u4e48\u662f\u9519\u7684\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u7528\u5230\u65ad\u8a00\u4e86\uff0c\u5b83\u53ef\u4ee5\u81ea\u52a8\u62a5\u544a\u4e0d\u80fd\u901a\u8fc7\u7684\u6d4b\u8bd5\u3002","title":"3.1.5 \u7ed9 \"Hello, world! \"\u5199\u4e00\u4e2a\u5355\u5143\u6d4b\u8bd5"},{"location":"03-unit-testing-fundamentals/#32","text":"\u8ba1\u7b97\u673a\u662f\u4e00\u79cd\u7279\u522b\u8bb2\u7a76\u51c6\u786e\u6027\u7684\u673a\u5668\uff0c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5bf9\u51c6\u786e\u6027\u7684\u8981\u6c42\u66f4\u9ad8\uff0c\u5c11\u4e86\u4e00\u4e2a\u7b26\u53f7\u6216\u8005\u5355\u8bcd\u62fc\u5199\u9519\u8bef\u5f80\u5f80\u5c31\u4f1a\u8ba9\u7a0b\u5e8f\u51fa\u73b0\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\uff0c\u6211\u76f8\u4fe1\u4e0d\u5c11\u4eba\u6709\u8fc7\u56e0\u4e00\u4e2a\u5355\u8bcd\u62fc\u5199\u9519\u8bef\u5c31Debug\u4e00\u6574\u5929\u7684\u7ecf\u5386\u3002 \u6211\u5728\u521d\u5b66C/C++\u65f6\u4e5f\u66fe\u9762\u5bf9\u8fc7\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u90a3\u65f6\u6211\u603b\u662f\u5fd8\u8bb0\u8f93\u5165\u884c\u672b\u7684\u5206\u53f7\uff0c\u76f4\u5230\u7f16\u8bd1\u65f6\u624d\u53d1\u73b0\u9519\u8bef\u63d0\u793a\uff0c\u6211\u7684\u7f51\u7edcID\"\u5c11\u4e2a\u5206\u53f7\"\u5c31\u662f\u8fd9\u6837\u800c\u6765\u7684\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u5e2e\u6211\u4eec\u68c0\u67e5\u7a0b\u5e8f\u7684\u8f93\u5165\u662f\u5426\u6b63\u786e\uff0c\u5e76\u91cd\u590d\u8fd0\u884c\uff0c\u53ea \u9700\u8981\u544a\u8bc9\u5355\u5143\u6d4b\u8bd5\u4ec0\u4e48\u662f\u5bf9\u7684\uff0c\u4ec0\u4e48\u662f\u9519\u8bef\u7684\u5373\u53ef\uff0c\u8fd9\u5c31\u662f\u65ad\u8a00 \u3002 \u5728\u4e00\u4e9b\"\u8bb2\u7a76\"\u7684\u7a0b\u5e8f\u5458\u773c\u91cc\uff0c\"Hello\uff0cworld\uff01\"\u662f\u795e\u5723\u7684\uff0c\u5047\u8bbe\u5728\u6807\u51c6\u5199\u6cd5\u4e2d\"H\"\u9700\u8981\u5927\u5199\uff0c\u53e5\u5b50\u4e2d\u95f4\u8981\u7528\u534a\u89d2\u9017\u53f7\u9694\u5f00\uff0c\u5e76\u4e14\u8981\u4ee5\u611f\u53f9\u53f7\u7ed3\u675f\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u65ad\u8a00\u6765\u68c0\u6d4b\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8f93\u51fa\u662f\u5426\u5b8c\u5168\u65e0\u8bef\u3002\u4e0b\u9762\u7f16\u5199\u7b2c\u4e00\u4e2a\u65ad\u8a00\uff0c\u5c06\u524d\u9762\u4ee3\u7801\u4e2d\u7684System.out. println\u8bed\u53e5\u66ff\u6362\u4e3aassertEquals\u8bed\u53e5\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_return_world_as_string() { Assert.assertEquals(\"Hello,world!\", HelloWorld.hello()); } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cassertEquals\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u671f\u671b\u7684\u503c\uff0c\u7b2c\u4e8c\u53c2\u6570\u662f\u771f\u5b9e\u7684\u503c\u3002\u5982\u679c\u8fd9\u4e24\u4e2a\u503c\u76f8\u7b49\uff0c\u6d4b\u8bd5\u901a\u8fc7\uff0c\u63a7\u5236\u53f0\u4e3a\u7eff\u8272\u3002\u5982\u679c\u628a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6362\u6210\u4e86\u53e6\u5916\u4e00\u4e2a\u5b57\u7b26\u4e32\"Hello\uff0cworld\uff01\"\uff0c\u8089\u773c\u770b\u53ef\u80fd\u89c9\u5f97\u5e76\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u4f46\u662f\u8fd0\u884c\u6d4b\u8bd5\u65f6\u4f1a\u5931\u8d25\u3002\u539f\u56e0\u4ec5\u4ec5\u662f\u8fd9\u91cc\u628a\u4e2d\u95f4\u7684\u82f1\u6587\u534a\u89d2\u9017\u53f7\u6362\u6210\u4e86\u4e2d\u6587\u7684\u5168\u89d2\u9017\u53f7\uff0c\u5b83\u4eec\u867d\u7136\u770b\u8d77\u6765\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u503c\u5374\u662f\u4e0d\u540c\u7684\u3002\u5355\u5143\u6d4b\u8bd5\u6ca1\u6709\u901a\u8fc7\uff0c\u610f\u5473\u7740\u5b83\u6210\u529f\u5730\u5e2e\u52a9\u6211\u4eec\u4fdd\u62a4\u4e86\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u3002\u4ec5\u4ec5\u4f7f\u7528System.out.println\u662f\u8d77\u4e0d\u5230\u8fd9\u4e2a\u4f5c\u7528\u7684\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u65ad\u8a00\u5c31\u662f\u7528\u6765\u62a5\u9519\u7684\uff0c\u5b83\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e00\u90e8\u5206\u3002","title":"3.2 \u65ad\u8a00"},{"location":"03-unit-testing-fundamentals/#321","text":"\u5982\u679c\u6211\u4eec\u5728\u505a\u7f16\u7a0b\u7ec3\u4e60\u65f6\u624b\u4e0a\u6ca1\u6709\u73b0\u6210\u7684\u65ad\u8a00\u5de5\u5177\uff0c\u6bd4\u5982\u5728\u6d4f\u89c8\u5668\u4e0a\u7f16\u5199JavaScript\u7684\u4ee3\u7801\u65f6\u5f88\u96be\u5feb\u901f\u627e\u5230\u4e00\u4e2a\u6d4b\u8bd5\u6846\u67b6\uff0c\u90a3\u4e48\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\u6765\u8fdb\u884c\u6d4b\u8bd5\uff1a function assertEquals(description, expected, actual) { if (expected !== actual) { throw new Error(\"ComparisonFailure, Expected:\" + expected + \",Actual:\" + actual); } else { console.log(description + \" : %c passs\", \"color:#0f0;\") } } \u8fd9\u5c31\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u65ad\u8a00\u5e93\uff0c\u8fd9\u4e2a\u5e93\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5b83\u4f1a\u5224\u65ad\u671f\u671b\u7684\u503c\u548c\u5b9e\u9645\u7684\u503c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u5c31\u629b\u51fa\u5f02\u5e38\uff0c\u5426\u5219\u5728\u63a7\u5236\u53f0\u4e0a\u6253\u5370\u51fa\u7eff\u8272\u7684\u6210\u529f\u4e86\u7684\u4fe1\u606f\u3002 \u4e0b\u9762\u6839\u636e\u8fd9\u4e2a\u7b80\u5355\u7684\u65ad\u8a00\u65b9\u6cd5\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\uff1a function should_return_hello_world(){ assertEquals(\"test hello world\", \"Hello\", \"Hello\"); } \u53ef\u4ee5\u770b\u5230\uff0c\u5355\u5143\u6d4b\u8bd5\u7684\u903b\u8f91\u5b9e\u9645\u4e0a\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u5728\u51e0\u5206\u949f\u5185\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u5355\u5143\u6d4b\u8bd5\u65ad\u8a00\u5e93\u3002\u65e9\u671f\u6709\u90e8\u5206\u5f00\u6e90\u8f6f\u4ef6\u6ca1\u6709\u7279\u5b9a\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\uff0c\u4f1a\u5185\u7f6e\u4e00\u4e2a\u5fae\u5c0f\u7684\u65ad\u8a00\u5e93\u3002","title":"3.2.1 \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u65ad\u8a00\u5e93"},{"location":"03-unit-testing-fundamentals/#322-junit","text":"\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u53ea\u6709\"\u76f8\u7b49\"\u8fd9\u79cd\u65ad\u8a00\u65b9\u6cd5\u662f\u8fdc\u8fdc\u4e0d\u591f\u7684\u3002\u6709\u7684\u5bf9\u8c61\u5e76\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528assertEquals\u8fdb\u884c\u6bd4\u8f83\uff0c\u800c\u662f\u8981\u7528\u5230\u5c5e\u6027\u7684\u503c\uff0c\u56e0\u6b64\u4e5f\u5c31\u884d\u751f\u51fa\u66f4\u591a\u7684\u65ad\u8a00\u65b9\u6cd5\uff0c\u6bd4\u5982\uff1a \u7a7a\u6216\u8005\u975e\u7a7a\u65ad\u8a00\u3002 \u5f15\u7528\u76f8\u7b49\u65ad\u8a00\u3002 \u6570\u7ec4\u76f8\u7b49\u65ad\u8a00\u3002 \u5bf9\u8c61\u7684\u5d4c\u5957\u76f8\u7b49\u65ad\u8a00\u3002 \u6839\u636e\u7c7b\u578b\u65ad\u8a00\u3002 \u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u65ad\u8a00\u903b\u8f91\u5199\u5230\u5355\u5143\u6d4b\u8bd5\u7684\u65b9\u6cd5\u4e2d\uff0c\u7136\u540e\u901a\u8fc7assenTrue\u6765\u9a8c\u8bc1\u7ed3\u679c\u3002assertTrue\u662fJUnit\u4e2d\u7684\u4e07\u80fd\u65ad\u8a00\u65b9\u6cd5\uff0c\u5b83\u901a\u8fc7\u4f20\u5165true\u6216\u8005false\u6765\u51b3\u5b9a\u6d4b\u8bd5\u662f\u5426\u901a\u8fc7\u3002\u8fd9\u770b\u8d77\u6765\u5e76\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5728\u90e8\u5206\u60c5\u51b5\u4e0b\u65ad\u8a00\u903b\u8f91\u90fd\u662f\u91cd\u590d\u7684\uff0c\u800c\u4e14\u5355\u5143\u6d4b\u8bd5\u5199\u4e86\u4e00\u5927\u5806\u7684\u903b\u8f91\uff0c\u8fd9\u4e9b\u903b\u8f91\u662f\u5426\u53c8\u9700\u8981\u7f16\u5199\u65b0\u7684\u6d4b\u8bd5\u6765\u4fdd\u62a4\u5462\uff1f\u5982\u679c\u6211\u4eec\u4e0d\u4f7f\u7528\u73b0\u6210\u7684\u65ad\u8a00\u5e93\uff0c\u5c31\u4e0d\u80fd\u786e\u4fdd\u65ad\u8a00\u672c\u8eab\u7684\u903b\u8f91\u662f\u5426\u53ef\u9760\u3002\u56e0\u6b64\u5bf9\u4e8e\u65ad\u8a00\u7684\u8fd9\u90e8\u5206\u903b\u8f91\u6765\u8bf4\uff0c\u5e94\u8be5\u4f7f\u7528JUnit\u63d0\u4f9b\u7684\u65ad\u8a00\u65b9\u6cd5\u63d0\u9ad8\u5355\u5143\u6d4b\u8bd5\u7684\u6709\u6548\u6027\uff0c\u8fd9\u4e48\u505a\u4e5f\u80fd\u51cf\u5c11\u6837\u677f\u4ee3\u7801\u3002 \u5982\u679c\u6211\u4eec\u7f16\u5199\u4e86\u4e00\u4e2a\u6392\u5e8f\u65b9\u6cd5\uff0c\u60f3\u901a\u8fc7\u65ad\u8a00\u6765\u5bf9\u7ed3\u679c\u8fdb\u884c\u5224\u5b9a\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528assert\u7cfb\u5217\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65ad\u8a00\u65b9\u6cd5\u53ef\u9488\u5bf9\u4e0d\u540c\u60c5\u51b5\u8fdb\u884c\u6d4b\u8bd5\uff0c\u80fd\u6ee1\u8db3\u4e0d\u540c\u7684\u9700\u6c42\u3002 assertArrayEquals\u53ef\u4ee5\u7528\u4e8e\u65ad\u8a00\u6570\u7ec4\uff0c\u5b83\u4f1a\u4f9d\u6b21\u6bd4\u8f83\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void assert_array_equals() { int[] input = {1, 2, 5, 7, 0}; Arrays.sort(input); int[] expected = {0, 1, 2, 5, 7}; assertArrayEquals(\"expected array should be sorted\", expected, input); } assertNotNull \u975e\u5e38\u5b9e\u7528\uff0c\u5e38\u7528\u4e8e\u6570\u636e\u5e93\u63d2\u5165\u3001\u679a\u4e3e\u89e3\u6790\u7b49\u4e1a\u52a1\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void assert_not_null() { assertNotNull(\"should not be null\", Integer.valueOf(\"10\")); } assertSame \u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u5bf9\u8c61\u5f15\u7528\u662f\u5426\u76f8\u540c\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_be_same() { assertSame(Runtime.getRuntime\uff08\uff09\uff0cRuntime.getRuntime\uff08\uff09); } assertTrue \u8981\u6c42\u4f20\u5165\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684\u771f\uff0c\u5982\u679c\u662f\u771f\u503c\u5219\u65ad\u8a00\u901a\u8fc7\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_be_true() { String hello = \"Hello\"; assertTrue(hello.isEmpty()); } assertArrayEquals\u3001assertNotNull\u3001assertSame\u3001assertTrue \u8fd9\u51e0\u4e2a\u65b9\u6cd5\u90fd\u6709\u53cd\u5411\u65ad\u8a00\u65b9\u6cd5\u3002\u88683-1\u7ed9\u51fa\u4e86\u5e38\u7528\u7684\u65ad\u8a00\u65b9\u6cd5\u4ee5\u53ca\u5b83\u4eec\u7684\u53cd\u5411\u65ad\u8a00\u65b9\u6cd5\u3002 \u8868 3-1 \u5e38\u7528\u7684\u65ad\u8a00\u65b9\u6cd5 \u65ad\u8a00 \u7528\u9014 \u53cd\u5411\u65ad\u8a00 assertEquals \u503c\u76f8\u7b49\u65ad\u8a00 assertNotEquals assertTrue \u771f\u503c\u65ad\u8a00 assertFalse assertNull \u6821\u9a8c\u7a7a assertNotNull assertSame \u6821\u9a8c\u5f15\u7528\u76f8\u540c assertNotSame assertArrayEquals \u6821\u9a8c\u6570\u7ec4\u5143\u7d20\u76f8\u540c - assertThat \u4f7f\u7528 Matcher \u8fdb\u884c\u65ad\u8a00 -","title":"3.2.2 JUnit \u5185\u7f6e\u7684\u65ad\u8a00\u65b9\u6cd5"},{"location":"03-unit-testing-fundamentals/#323-assertthat-matcher","text":"\u524d\u9762\u7ed9\u51fa\u7684\u65ad\u8a00\u65b9\u6cd5\u867d\u7136\u5e38\u7528\uff0c\u5374\u96be\u4ee5\u8986\u76d6\u6240\u6709\u7684\u573a\u666f\u3002\u4e3a\u4e86\u8ba9\u65ad\u8a00\u66f4\u4e3a\u4e30\u5bcc\uff0cJUnit\u4f7f\u7528\u4e86\u66f4\u4e3a\u9ad8\u660e\u7684\u65b9\u6cd5\u2014\u2014\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2aassertThat\u65b9\u6cd5\uff08\u5b9e\u9645\u4e0a\u662fHamcrest\u63d0\u4f9b\u7684\uff09\u3002assertThat\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u9700\u8981\u68c0\u67e5\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u7528\u6765\u8ba1\u7b97\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\u3002\u7528\u6765\u8ba1\u7b97\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\u7684\u51fd\u6570\u53eb\u4f5cMatcher\uff0cMatcher\u53ef\u4ee5\u7531\u7b2c\u4e09\u65b9\u5e93\u63d0\u4f9b\u3002 Java\u4e2d\u6bd4\u8f83\u77e5\u540d\u7684Matcher\u5e93\u662fHamcrest\u548cAssertJ\uff0cHamcrest\u4e3aJUnit\u5185\u7f6e\u7684\u5e93\uff0c\u5b83\u9002\u7528\u4e8e\u5927\u90e8\u5206\u573a\u666f\u3002 \u4f8b\u5982\uff0c\u60f3\u8981\u7f16\u5199\u4e00\u4e2ahelloAndNow\u65b9\u6cd5\u8fd4\u56de\"Hello\uff0cworld\uff01\"\u5e76\u9644\u52a0\u5f53\u524d\u7684\u65f6\u95f4\uff0c\u7531\u4e8e\u65f6\u95f4\u662f\u52a8\u6001\u751f\u6210\u7684\uff0c\u56e0\u6b64\u73b0\u5728\u6ca1\u6709\u529e\u6cd5\u4f7f\u7528assertEquals\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528assertThat\u548cstartsWith Matcher\u6765\u5b9e\u73b0\u4e0a\u8ff0\u65b9\u6cd5\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public static String helloAndNow() { return \"Hello, world!\" + System.currentTimeMillis(); } @Test public void should_start_with_hello() { assertThat(helloAndNow(), startsWith(\"Hello\")); } \u8868 3-2 \u662f\u4e00\u4e9b\u5e38\u7528\u7684 Matcher\uff0c\u4f7f\u7528\u597d Matcher\u53ef\u4ee5\u5927\u5e45\u51cf\u5c11\u6d4b\u8bd5\u7684\u4ee3\u7801\u91cf\u3002 \u8868 3-2 \u5e38\u7528\u7684 Matcher Matcher \u793a\u4f8b \u7528\u9014 anything assertThat(\u201chamcrest\u201d,anything()); \u4efb\u4f55\u5185\u5bb9\uff0c\u4e00\u822c\u53ea\u7528\u6765\u5360\u4f4d describedAs assertThat(\u201chamcrest\u201d, describedAs(\u201ca description\u201d, anything())); \u7528\u6765\u5305\u88c5\u4e00\u4e2a\u63cf\u4fe1\u606f is assertThat(\u201chamcrest\u201d, is((anything())); \u5176\u5b9e\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u5305\u88c5\u4e00\u4e2a\u8bed\u4e49\u4fe1\u606f allOf assertThat(\u201chamcrest\u201d, allOf(anything(), anything(), anything())); \u4e32\u8054\u591a\u4e2a\u65ad\u8a00 anyOf assertThat(\u201chamcrest\u201d, anyOf(anything(), anything(), anything())); \u5e76\u8054\u591a\u4e2a\u65ad\u8a00 not assertThat(\u201chamcrest\u201d, not(not(anything()))); \u53d6\u53cd\u65ad\u8a00 equalTo assertThat(\u201chamcrest\u201d, equalTo(\u201chamcrest\u201d)); \u6d4b\u8bd5\u5bf9\u8c61 equals \u76f8\u7b49 instanceOf assertThat(\u201chamcrest\u201d, instanceOf(String.class)); \u6d4b\u8bd5\u5bf9\u8c61\u7c7b\u578b notNullValue,nullValue assertThat(null,nullValue()); \u6d4b\u8bd5\u7a7a\u3001\u975e\u7a7a\u503c sameInstance assertThat(Runtime.getRuntime(), sameInstance(Runtime.getRuntime())); \u6d4b\u8bd5\u5bf9\u8c61\u5f15\u7528\u662f\u5426\u4e00\u81f4 hasItems assertThat(Arrays.asList(1,2,3), hasItems(1, 2)); \u65ad\u8a00\u5217\u8868\u5185\u5bb9 \u65e2\u7136\u4f7f\u7528\u5408\u9002\u7684Matcher\u5c31\u53ef\u4ee5\u5b8c\u6210assertSame\u7b49\u65ad\u8a00\u65b9\u6cd5\u7684\u5de5\u4f5c\uff0c\u90a3\u4e3a\u4ec0\u4e48\u8981\u91cd\u590d\u9020\u4e00\u4e2a\u8f6e\u5b50\u5462\uff1f \u8fd9\u662f\u56e0\u4e3a\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u548c\u65ad\u8a00\u5e93\u505a\u7684\u662f\u4e24\u4ef6\u4e0d\u540c\u7684\u4e8b\u60c5\u3002\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u66f4\u591a\u7684\u662f\u7ba1\u7406\u3001\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u53ca\u7edf\u8ba1\u901a\u8fc7\u7387\u7b49\uff0cMatcher\u5219\u7528\u6765\u5b8c\u6210\u6761\u4ef6\u5224\u65ad\u7684\u4efb\u52a1\u3002Matcher\u4e00\u822c\u88ab\u8bbe\u8ba1\u4e3a\u517c\u5bb9\u591a\u4e2a\u6d4b\u8bd5\u6846\u67b6\uff0c\u5982\u679c\u8003\u8651\u6362\u6d4b\u8bd5\u6846\u67b6\uff0c\u5efa\u8bae\u5c3d\u91cf\u4f7f\u7528Matcher\u5b8c\u6210\u65ad\u8a00\u4efb\u52a1\uff0c\u65b9\u4fbf\u8fc1\u79fb\u3002","title":"3.2.3 \u4f7f\u7528 assertThat \u548c Matcher"},{"location":"03-unit-testing-fundamentals/#324-matcher","text":"\u5982\u679c\u4e0a\u8ff0l\u65ad\u8a00\u4ecd\u7136\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u7f16\u5199\u4e00\u4e2aMatcher\u3002\u6bd4\u5982\uff0c\u4e00\u6bb5\u7a0b\u5e8f\u4f7f\u7528\u7cfb\u7edf\u5f53\u524d\u65f6\u95f4\u65f6\uff0c\u7531\u4e8e\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u65f6\u95f4\uff0c\u65ad\u8a00\u65f6\u53d6\u5230\u7684\u7cfb\u7edf\u65f6\u95f4\u53ef\u80fd\u5df2\u7ecf\u4e0d\u540c\uff0c\u56e0\u6b64\u65e0\u6cd5\u51c6\u786e\u5730\u65ad\u8a00\u76f8\u5e94\u7684\u65f6\u95f4\uff0c\u90a3\u8be5\u600e\u4e48\u529e\uff1f\u5176\u5b9e\u53ea\u8981\u8fd9\u4e2a\u65f6\u95f4\u6233\u5728\u4e00\u5b9a\u7684\u8303\u56f4\u5185\uff0c\u5c31\u53ef\u4ee5\u7b97\u4f5c\u901a\u8fc7\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684Matcher\u6765\u8fdb\u884c\u5224\u65ad\uff1a public class CurrentSystemTimeMatcher extends TypeSafeMatcher<Long> { private final long timeWindow; public CurrentSystemTimeMatcher(long timeWindow) { this.timeWindow = timeWindow; } protected boolean matchesSafely(Long time) { System.out.println(System.currentTimeMillis()); if (System.currentTimeMillis() <= (time + timeWindow)) { return true; } else { return false; } } public void describeTo(Description description) { description.appendText(\" current time not in range \" + timeWindow); } /** * @param \u901a\u8fc7\u4e00\u4e2a\u65f6\u95f4\u7a97\u6765\u5224\u5b9a\u7ed3\u679c * @return */ public static CurrentSystemTimeMatcher currentTimeEquals(long timeWindow) { return new CurrentSystemTimeMatcher(timeWindow); } } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u5982\u679cTypeSafeMatcher\u5f15\u7528\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u53ef\u4ee5\u67e5\u770b\u4e00\u4e0bCurrentSystem-TimeMatcher\u662f\u5426\u653e\u5230\u4e86\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\u4e0b\uff0c\u800c\u975etest\u7684\u76ee\u5f55\u4e0b\u3002\u6211\u4eec\u4e00\u822c\u4f1a\u5c06\u6d4b\u8bd5\u7684\u4f9d\u8d56scope\u8bbe\u7f6e\u4e3atest\uff0c\u8fd9\u4e9b\u7c7b\u5728\u6e90\u4ee3\u7801\u6a21\u5757\u4e2d\u65e0\u6cd5\u88ab\u5f15\u7528\u3002 \u81ea\u5b9a\u4e49\u7684Matcher\u4f7f\u7528\u8d77\u6765\u548c\u5176\u4ed6Matcher\u662f\u4e00\u6837\u7684\uff0ccurrentTimeEquals\u65b9\u6cd5\u53ef\u63a5\u53d7\u4e00\u4e2a\u65f6\u95f4\u7a97\u53e3\uff0c\u53ea\u8981\u8fd0\u884c\u65f6\u95f4\u5728\u8fd9\u4e2a\u65f6\u95f4\u7a97\u53e3\u5185\uff0c\u5c31\u90fd\u53ef\u4ee5\u7b97\u4f5c\u65ad\u8a00\u901a\u8fc7\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_assert_time_with_time_window() throws InterruptedException { long now = System.currentTimeMillis(); assertThat(now, currentTimeEquals(10)); }","title":"3.2.4 \u7f16\u5199\u81ea\u5df1\u7684 Matcher"},{"location":"03-unit-testing-fundamentals/#325","text":"\u65ad\u8a00\u5e76\u4e0d\u53ea\u662f\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u6982\u5ff5\uff0c\u5728\u7f16\u5199\u5b9e\u9645\u7684\u4e1a\u52a1\u4ee3\u7801\u65f6\u4e5f\u53ef\u4ee5\u5927\u91cf\u4f7f\u7528\u65ad\u8a00\u3002Java 1.4\u4e2d\u5c31\u589e\u52a0\u4e86assert\u5173\u952e\u5b57\uff0c\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65ad\u8a00\uff0c\u6b64\u65ad\u8a00\u5e38\u7528\u4e8e\u68c0\u67e5\u8f93\u5165\uff0c\u5982\u679c\u65ad\u8a00\u672a\u901a\u8fc7\uff0c\u5219\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002 \u5982\u679c\u6211\u4eec\u8981\u7f16\u5199\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u65b9\u6cd5\uff0c\u9010\u4e2a\u5224\u65ad\u8f93\u5165\u53c2\u6570\u662f\u5426\u4e3a\u7a7a\uff0c\u8fd9\u5176\u4e2d\u9700\u8981\u7528\u5230\u5f88\u591a\u7684\u6837\u677f\u4ee3\u7801\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u65ad\u8a00\u8fdb\u884c\u68c0\u67e5\uff0c\u5728\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\u629b\u51faAssertionError\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6837\u677f\u4ee3\u7801\u7684\u6570\u91cf\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public static String contactString(String first, String second) { assert first != null; assert second != null; return first + second; } \u5bf9\u4e8e\u4e0a\u8ff0\u4ee3\u7801\u8981\u8bf4\u660e\u7684\u662f\uff0cassert\u5173\u952e\u5b57\u5e38\u7528\u4e8e\u5404\u79cd\u6846\u67b6\uff0c\u4f46\u662f\u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u5f88\u5c11\u770b\u5230\uff0c\u56e0\u4e3a\u8d85\u51fa\u4e86\u672c\u4e66\u7684\u8303\u56f4\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002","title":"3.2.5 \u65ad\u8a00\u5e76\u4e0d\u53ea\u662f\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u6982\u5ff5"},{"location":"03-unit-testing-fundamentals/#326","text":"\u6211\u4eec\u77e5\u9053\u8ba1\u7b97\u673a\u5728\u6bd4\u8f83\u6d6e\u70b9\u6570\u5b57\u65f6\u4f1a\u6709\u7cbe\u5ea6\u95ee\u9898\uff0c\u90a3\u4e48\u4e0b\u9762\u54ea\u4e00\u4e2a\u65ad\u8a00\u4f1a\u901a\u8fc7\u5462\uff1f Assert.assertEquals(0.0012f, 0.0014f); Assert.assertEquals(0.0012f, 0.0014f, 0.0002); Assert.assertEquals(0.0012f, 0.0014f, 0.0001); \u7cbe\u5ea6\u95ee\u9898\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u5e38\u5e38\u51fa\u73b0\uff0c\u4f8b\u5982\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u4ef7\u683c\uff0c\u7ed3\u679c\u53ef\u80fd\u662f\u4e00\u4e2a\u65e0\u9650\u5c0f\u6570\uff1a public static float calculateAA(float totalPrice, float counts) { return totalPrice / counts; } \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0b\u9762\u7684\u65ad\u8a00\u5c31\u4e0d\u4f1a\u901a\u8fc7\uff1a @Test public void should_assert_with_float_delta() { assertEquals(3.3333F, calculateAA(10F, 3F)); } \u8fd9\u65f6\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u51fa\u4e00\u4e2a delta \u53c2\u6570\uff0c\u7528\u4e8e\u8868\u793a\u80fd\u5bb9\u5fcd\u7684\u771f\u5b9e\u503c\u548c\u671f\u671b\u503c\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4e5f\u5c31\u662f\u7cbe\u786e\u7684\u4f4d\u6570\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void should_assert_with_float_delta() { assertEquals(3.3333F, calculateAA(10F, 3F), 0.1); } \u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3 delta \u53c2\u6570\uff0c\u53ef\u4ee5\u67e5\u770b assertEquals \u7684\u6e90\u7801\u3002","title":"3.2.6 \u601d\u8003\u9898"},{"location":"03-unit-testing-fundamentals/#33","text":"\u4e00\u4e2a\u4f18\u79c0\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u9664\u4e86\u5177\u5907\u524d\u9762\u4ecb\u7ecd\u7684\u65ad\u8a00\u5916\uff0c\u8fd8\u9700\u8981\u51c6\u5907\u6e05\u6670\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u5e76\u6e05\u7406\u6d4b\u8bd5\u6570\u636e\u76f8\u5173\u7684\u903b\u8f91\uff0c\u8fd9\u4e9b\u903b\u8f91\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002\u4e0b\u9762\u5c06\u4ecb\u7ecd\u4e00\u4e2a\u5b8c\u6574\u7684\u5355\u5143\u6d4b\u8bd5\u6709\u54ea\u4e9b\u5185\u5bb9\u3002","title":"3.3 \u5355\u5143\u6d4b\u8bd5\u7684\u7ed3\u6784"},{"location":"03-unit-testing-fundamentals/#331","text":"\u524d\u9762\u7684\u793a\u4f8b\u4f7f\u7528\u7684\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u4f46\u662f\u5728Java\u4e2d\u8fd9\u79cd\u7b80\u5355\u7684\u4f7f\u7528\u573a\u666f\u6bd4\u8f83\u5c11\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u9700\u8981\u5b9e\u4f8b\u5316\u7c7b\u3001\u51c6\u5907\u521d\u59cb\u6570\u636e\uff0c\u5e76\u4e14\u8981\u7528\u5230\u6a21\u62df\u6280\u672f\uff08\u540e\u9762\u4f1a\u4ecb\u7ecd\uff09\u3002 JUnit\u9488\u5bf9\u51c6\u5907\u3001\u6e05\u7406\u6709\u72b6\u6001\u7684\u6570\u636e\u7b49\u64cd\u4f5c\u63d0\u4f9b\u4e86\u51e0\u4e2a\u975e\u5e38\u6709\u7528\u7684\u6ce8\u89e3\uff0c\u4e0b\u9762\u4ee5\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u62fc\u88c5\u5668\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7@Before\u6ce8\u89e3\u6765\u4e3a\u6bcf\u6b21\u7684\u6d4b\u8bd5\u51c6\u5907\u6570\u636e\uff1a class StringAppender { private String value = \"\"; public void append(String appendText) { value = value + appendText; } public String getValue() { return value; } } StringAppender stringAppender; @Before public void setup() { stringAppender = new StringAppender(); } @Test public void should_get_text_from_object() { stringAppender.append(\"Hello\"); stringAppender.append(\",world\"); assertEquals(\"Hello,world\", stringAppender.getValue()); } JUnit 4 \u4e2d\u6709\u5982\u4e0b\u56db\u4e2a\u6267\u884c\u8fc7\u7a0b\uff08\u94a9\u5b50\uff09\u6ce8\u89e3\u3002 @BeforeClass \uff1a\u7528\u4e8e\u7c7b\u52a0\u8f7d\u9996\u6b21\u6267\u884c\uff0c\u5fc5\u987b\u7528\u5728\u9759\u6001\u65b9\u6cd5\u4e0a\u3002 @Before \uff1a\u7528\u5728\u5b9e\u4f8b\u65b9\u6cd5\u4e2d\uff0c\u5728\u6267\u884c\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u524d\u6267\u884c\u3002 @After\uff1a \u7528\u5728\u5b9e\u4f8b\u65b9\u6cd5\u4e2d\uff0c\u5728\u6267\u884c\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u540e\u6267\u884c\u3002 @AfterClass\uff1a\u5728@After\u7c7b\u4f3c\uff0c\u533a\u522b\u5728\u4e8e@AfterClass\u662f\u4ee5\u7c7b\u7684\u7ef4\u5ea6\u751f\u6548\u7684\uff0c\u5373\u88ab\u8be5\u6ce8\u89e3\u4fee\u9970\u7684\u65b9\u6cd5\u4f1a\u5728\u8be5\u7c7b\u5305\u542b\u7684\u5168\u90e8\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u5b8c\u4e4b\u540e\u88ab\u6267\u884c\uff0c\u5fc5\u987b\u7528\u5728\u9759\u6001\u65b9\u6cd5\u4e0a\u3002 \u5728 @Before \u548c @After \u65b9\u6cd5\u4e4b\u95f4\u4f1a\u6267\u884c\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5b83\u4eec\u7684\u6267\u884c\u987a\u5e8f\u662f\uff1a @BeforeClass \u2192 @Before \u2192 @Test \u2192 @After \u2192 @AfterClass \u5982\u679c\u6709\u7236\u7c7b\u7684\u65b9\u6cd5\u51fa\u73b0 @Before\u3001@BeforeClass \u7b49\u6ce8\u89e3\uff0c\u7236\u7c7b\u4f1a\u4f18\u5148\u6267\u884c\u3002\u53ef\u4ee5\u5c1d\u8bd5\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\uff0c\u5305\u542b\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5e76\u6267\u884c\u4e00\u4e2a\u6d4b\u8bd5\u3002 @BeforeClass public static void beforeClass() { System.out.println(\"@BeforeClass\"); } @Before public void setup() { System.out.println(\"@Before\"); } @After public void tearDown() { System.out.println(\"@After\"); } @AfterClass public static void afterClass() throws Exception { System.out.println(\"@AfterClass\"); } \u53ef\u4ee5\u770b\u5230\u7ed3\u679c\u5982\u4e0b\uff1a @BeforeClass @Before @After @AfterClass","title":"3.3.1 \u51c6\u5907\u6570\u636e\u548c\u6e05\u7406\u6570\u636e"},{"location":"03-unit-testing-fundamentals/#332","text":"JUnit\u672c\u8eab\u6bd4\u8f83\u7b80\u5355\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5176\u5185\u7f6e\u7684\u7279\u6027\u8db3\u591f\u7f16\u5199\u5927\u90e8\u5206\u4f9d\u8d56\u7b80\u5355\u7684\u6d4b\u8bd5\u4ee3\u7801\u3002\u7b2c1\u7ae0\u66fe\u4ecb\u7ecd\u8fc7\u4ec0\u4e48\u662f\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e9b\u5b9e\u4f8b\u6765\u8bf4\u660e\u6d4b\u8bd5\u7528\u4f8b\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u5e94\u7528\u3002 \u5355\u5143\u6d4b\u8bd5\u7684\u5bf9\u8c61\u4e00\u822c\u662f\u65b9\u6cd5\u548c\u7ec4\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5355\u5143\u6d4b\u8bd5\u662f\u5bf9\"\u8f6e\u5b50\"\u7684\u8d28\u91cf\u8fdb\u884c\u9a8c\u8bc1\uff0c\u53ef\u60f3\u800c\u77e5\uff0c\u76f8\u8f83\u4e8eQA\u4f7f\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5b83\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u7565\u6709\u4e0d\u540c\u3002\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u5b83\u7684\u7c92\u5ea6\u66f4\u5c0f\uff0c\u6ca1\u6709\u592a\u591a\u573a\u666f\u548c\u6d41\u7a0b\uff0c\u4e3b\u8981\u5173\u6ce8\u7b49\u4ef7\u5212\u5206\u548c\u8fb9\u754c\u503c\u7684\u9009\u62e9\uff0c\u4e14\u8981\u8003\u8651\u8986\u76d6\u66f4\u591a\u7684\u5206\u652f\u3002 JUnit\u4e2d@Test\u4fee\u9970\u7684\u65b9\u6cd5\u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002\u9664\u4e86\u51c6\u5907\u6570\u636e\u4e4b\u5916\uff0c \u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u53ea\u4f1a\u5bf9\u7ec4\u4ef6\u7684\u4e00\u4e2a\u7279\u6027\u8fdb\u884c\u9a8c\u8bc1 \uff0c\u8fd9\u4e2a\u9a8c\u8bc1\u53ef\u80fd\u5305\u62ec\u591a\u6b21\u65ad\u8a00\uff0c\u4ee5\u786e\u4fdd\u7ed3\u679c\u6b63\u786e\u3002 \u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u901a\u5e38\u5305\u542b\u4ee5\u4e0b\u90e8\u5206\uff1a \u8f93\u5165\u6570\u636e \uff0c\u6709\u65f6\u5019\u53ef\u80fd\u6ca1\u6709\u3002 \u4e0e\u88ab\u6d4b\u8bd5\u7684\u65b9\u6cd5\u4ea4\u4e92\u3002 \u65ad\u8a00\u3002 \u53ef\u9009\u7684\u90e8\u5206\u6709\uff1a \u6570\u636e\u51c6\u5907\u3002 \u6570\u636e\u6e05\u7406\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u4ee5\u56de\u6587\u6570\u4f5c\u4e3a\u793a\u4f8b\uff0c\u6765\u9a8c\u8bc1\u4e00\u4e2a\u65b9\u6cd5\u662f\u5426\u53ef\u9760\u3002 1. \u7b49\u4ef7\u5212\u5206\u548c\u8fb9\u754c\u5206\u6790 \u56de\u6587\u6570\u662f\u6307\u6b63\u5e8f\uff08\u4ece\u5de6\u5411\u53f3\uff09\u8bfb\u548c\u5012\u5e8f\uff08\u4ece\u53f3\u5411\u5de6\uff09\u8bfb\u90fd\u662f\u4e00\u6837\u7684\u6574\u6570\u3002\u56de\u6587\u5b57\u7b26\u4e32\u5f88\u597d\u5224\u65ad\uff0c\u4f46\u662f\u56de\u6587\u6570\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u6211\u5199\u4e86\u4e00\u4e2a\u5b9e\u73b0\uff0c\u7136\u540e\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6765\u4fdd\u8bc1\u5b83\u7684\u53ef\u9760\u6027\u3002\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5305\u542b\u4e86\u987a\u5e8f\u3001\u5206\u652f\u3001\u5faa\u73af\u4e09\u79cd\u7a0b\u5e8f\u7ed3\u6784\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a public static boolean isPalindrome(int inputValue) { if (inputValue < 0) { return false; } int reverseValue = 0; int intermediateValue = inputValue; while (intermediateValue != 0) { reverseValue = reverseValue * 10 + intermediateValue % 10; intermediateValue /= 10; } return reverseValue == inputValue; } \u4e0b\u9762\u5148\u8bbe\u8ba1\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u6d4b\u8bd5\uff0c\u8f93\u5165\u4e00\u4e2a\u666e\u901a\u7684\u503c\uff0c\u6bd4\u59828\u3002\u8fd9\u4e2a\u6d4b\u8bd5\u5f88\u5bb9\u6613\u4f1a\u901a\u8fc7\uff0c\u56e0\u4e3a\u5355\u4e2a\u6570\u5b57\u90fd\u6ee1\u8db3\u6761\u4ef6\u3002\u8fd9\u7c7b\u7b80\u5355\u901a\u8fc7\u7684\u6b63\u5411\u6d4b\u8bd5\u53eb\u505a\"Happy Path\"\uff08\u7b2c1\u7ae0\u5df2\u4ecb\u7ecd\uff09\u3002 @Test public void should_be_true_if_value_is_eight() { // Given int inputValue = 8; // When boolean palindrome = isPalindrome(inputValue); // Then assertTrue(palindrome); } \u5982\u679c\u8fd9\u4e2a\u65b9\u6cd5\u88ab\u5f88\u591a\u4eba\u4f7f\u7528\uff0c\u4f1a\u9047\u5230\u5404\u79cd\u5404\u6837\u7684\u573a\u666f\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u5230\u5404\u79cd\u8fb9\u754c\u60c5\u51b5\uff0c\u8ba9\u7a0b\u5e8f\u66f4\u4e3a\u5065\u58ee\u3002\u5c1d\u8bd5\u95ee\u81ea\u5df1\u4e0b\u9762\u7684\u95ee\u9898\uff1a \u5982\u679c\u8fd9\u4e2a\u503c\u662f\u8d1f\u6570\uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u8fd9\u4e2a\u503c\u662f 0 \uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u8fd9\u4e2a\u503c\u662f 7 \uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u8fd9\u4e2a\u503c\u662f\u4e00\u4e2a\u4e24\u4f4d\u6570\uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u8fd9\u4e2a\u503c\u662f Java int \u7c7b\u578b\u6700\u5927\u503c\uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5982\u679c\u8fd9\u4e2a\u503c\u662f Java int \u7c7b\u578b\u7684\u6700\u5c0f\u503c\uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f \u5e78\u597d\u6211\u4eec\u4f7f\u7528\u7684\u662f\u7c7b\u578b\u7cfb\u7edf\u5b8c\u5584\u7684 Java\uff0c\u5982\u679c\u4f7f\u7528\u7684\u662f\u5f31\u7c7b\u578b\u8bed\u8a00\uff0c\u4f8b\u5982 JavaScript \uff0c\u90a3\u4e48\u95ee\u9898\u4f1a\u66f4\u591a\u3002 \u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u7684\u65f6\u5019\uff0c\u6700\u57fa\u7840\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528\u8fb9\u754c\u503c\u5206\u6790\u548c\u7b49\u4ef7\u7c7b\u5212\u5206\u3002\u5728\u4e0a\u8ff0\u5b9e\u73b0\u4e2d\uff0c0 \u548c 10 \u975e\u5e38\u7279\u6b8a\uff0c\u601d\u8003\u4e00\u4e0b\uff0c\u8fd9\u4e24\u4e2a\u6570\u5b57\u4f1a\u5c06\u6570\u8f74\u5212\u5206\u4e3a\u54ea\u4e9b\u8fb9\u754c\uff1a \u6700\u5c0f\u503c\u5230 0 \u662f\u4e24\u4e2a\u8fb9\u754c\u3002 0 \u5230 10 \u662f\u4e00\u4e2a\u8fb9\u754c\u3002 10 \u5230\u6700\u5927\u503c\u662f\u4e00\u4e2a\u8fb9\u754c\u3002 \u8fb9\u754c\u4e0a\u7684\u8f93\u5165\u4f5c\u4e3a\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f8b\u5982 0\u300110\u3002\u8fb9\u754c\u4e2d\u95f4\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u6bd4\u59827 \u548c 8\uff0c \u53ef\u4ee5\u770b\u4f5c\u662f\u7b49\u4ef7\u7684\uff0c\u53d6\u5176\u4e2d\u4e00\u4e2a\u503c\u5373\u53ef\u3002\u4e0b\u9762\u4f7f\u7528\u8868 3-3 \u8fdb\u884c\u63cf\u8ff0\uff1a \u8868 3-3 \u8fb9\u754c\u503c\u5206\u6790 \u8fb9\u754c\u503c \u8f93\u5165\u503c \u671f\u671b\u7684\u7ed3\u679c Integer.MIN_VALUE Integer.MIN_VALUE False 0 0 True 5 5 True 10 10 False 11 11 True Integer.MAX_VALUE Integer.MAX_VALUE False \u88683-3\u4e00\u5171\u67096\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u80fd\u6bd4\u8f83\u5145\u5206\u5730\u8003\u8651\u5230\u5404\u79cd\u60c5\u51b5\u3002\u7531\u4e8e\u5199\u5b8c\u8fd96\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u9700\u8981\u5360\u7528\u5927\u91cf\u7bc7\u5e45\uff0c\u56e0\u6b64\u8fd9\u91cc\u5c31\u4e0d\u518d\u7ed9\u51fa\u793a\u4f8b\u3002\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u9047\u5230\u8fd9\u79cd\u6709\u56fa\u5b9a\u8f93\u5165\u6a21\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u53ef\u4ee5\u60f3\u529e\u6cd5\u51cf\u5c11\u6837\u677f\u4ee3\u7801\uff0c\u5728\u540e\u9762\u4ecb\u7ecdJUnit\u7684\u53e6\u5916\u4e00\u4e2a\u7279\u6027\u65f6\u4f1a\u8fdb\u4e00\u6b65\u8bb2\u89e3\u3002 \u6839\u636e\u53ef\u8fbe\u8def\u5f84\u8bbe\u8ba1\u7528\u4f8b \u53e6\u5916\u4e00\u79cd\u66f4\u5e38\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u65b9\u6cd5\u662f\u6839\u636e\u53ef\u8fbe\u8def\u5f84\u8bbe\u8ba1\u3002\u53ef\u8fbe\u8def\u5f84\u662f\u6307\u7a0b\u5e8f\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u6d41\u52a8\u8def\u5f84\uff0c\u8fd9\u4e9b\u8def\u5f84\u662f\u57fa\u4e8e\u4ee3\u7801\u4e2d\u5206\u652f\u8bed\u53e5\u7684\u6570\u91cf\u6765\u5b9e\u73b0\u7684\uff0c\u5355\u5143\u6d4b\u8bd5\u5e94\u8be5\u4fdd\u8bc1\u6bcf\u6761\u8def\u5f84\u90fd\u80fd\u8986\u76d6\u3002 \u4e0b\u9762\u4ee5\u7b80\u5316\u7248\u7684Fizz Buzz\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff0cFizz Buzz\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u7f16\u7a0b\u7ec3\u4e60\u9898\uff0c\u4e3b\u8981\u8003\u5bdf\u4ee3\u7801\u7684\u8bbe\u8ba1\u601d\u8def\u3002 \u7ed9\u4e88\u4e00\u4e2a\u6574\u6570 n\u3002\u5982\u679c\u8fd9\u4e2a\u6570\u80fd\u88ab3\u6574\u9664\uff0c\u8fd4\u56de fizz\u3002\u5982\u679c\u8fd9\u4e2a\u6570\u80fd\u88ab 5 \u6574\u9664\uff0c\u8fd4\u56de buzz\u3002\u5982\u679c\u8fd9\u4e2a\u6570\u80fd\u540c\u65f6\u88ab 3 \u548c 5 \u6574\u9664\uff0c\u8fd4\u56de fizz buzz\u3002\u5982\u679c\u90fd\u4e0d\u6ee1\u8db3\uff0c\u8fd4\u56de null\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u5b9e\u73b0\uff1a public static String simpleFizzBuzz(int n) { if (n % 3 == 0 && n % 5 == 0) { return \"fizz buzz\"; } else if (n % 3 == 0) { return \"fizz\"; } else if (n % 5 == 0) { return \"buzz\"; } return null; } \u5982\u8868 3-4 \u6240\u793a\uff0csimpleFizzBuzz \u65b9\u6cd5\u6709 4 \u6761\u8def\u5f84\uff0c\u6ee1\u8db3\u5404\u4e2a\u6761\u4ef6\u5219\u8fd4\u56de\u5355\u8bcd\uff0c\u4e0d\u6ee1\u8db3\u5219\u8fd4\u56de null\u3002 \u8868 3-4 \u8def\u5f84\u5206\u6790 \u8def\u5f84 \u7528\u4f8b\u8f93\u5165 \u671f\u671b\u7ed3\u679c n % 3 == 0 && n % 5 == 0 15 fizz buzz n % 3 == 0 3 fizz n % 5 == 0 5 buzz \u5176\u4ed6 10 Null \u4e00\u4e2a\u65b9\u6cd5\u7684\u53ef\u8fbe\u8def\u5f84\u7684\u6570\u91cf\u8fd8\u53ef\u4ee5\u8861\u91cf\u4e00\u6bb5\u4ee3\u7801\u7684\u590d\u6742\u5ea6\u3002\u53ef\u8fbe\u6570\u91cf\u975e\u5e38\u591a\u8bf4\u660e\u8fd9\u4e2a\u65b9\u6cd5\u975e\u5e38\u590d\u6742\uff0c\u9700\u8981\u76f8\u5e94\u5730\u589e\u52a0\u6d4b\u8bd5\u7528\u4f8b\u7684\u6570\u91cf\uff0c\u4ee5\u4fdd\u8bc1\u5b83\u7684\u53ef\u9760\u6027\u3002\u53ef\u8fbe\u8def\u5f84\u975e\u5e38\u591a\u800c\u5e26\u6765\u7684\u590d\u6742\u5ea6\u53eb\u4f5c\u5708\u590d\u6742\u5ea6\u3002 \u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u5305\u542b\u7684\u4ee3\u7801\u6bd4\u8f83\u957f\uff0c\u5708\u590d\u6742\u5ea6\u5219\u76f8\u5bf9\u9ad8\uff0c\u5982\u679c\u5404\u79cd\u6761\u4ef6\u8bed\u53e5\u518d\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u4f1a\u5448\u6307\u6570\u7ea7\u4e0a\u5347\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5708\u590d\u6742\u5ea6\u572820\u4ee5\u5185\u6bd4\u8f83\u5408\u9002\uff0c\u8d85\u51fa40\u5219\u6d4b\u8bd5\u7684\u6210\u672c\u4f1a\u975e\u5e38\u9ad8\u3002 \u5355\u5143\u6d4b\u8bd5\u4ee5\u5c0f\u7684\u9897\u7c92\u5ea6\u51c6\u5907\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7ec4\u5408\u8981\u5c11\u4e00\u4e9b\uff0c\u5982\u679c\u5c06\u591a\u4e2a\u65b9\u6cd5\u5408\u5e76\u6d4b\u8bd5\uff0c\u90a3\u4e48\u9700\u8981\u7ec4\u5408\u7684\u6761\u4ef6\u5c31\u975e\u5e38\u591a\u4e86\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u4f1a\u53e0\u52a0\u3002\u8fd9\u4e5f\u662f\u5355\u5143\u6d4b\u8bd5\u7684\u6210\u672c\u8981\u8fdc\u8fdc\u4f4e\u4e8e\u96c6\u6210\u6d4b\u8bd5\u548c UI\u6d4b\u8bd5\u7684\u539f\u56e0\u3002","title":"3.3.2 \u8bbe\u8ba1\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b"},{"location":"03-unit-testing-fundamentals/#333","text":"\u5982\u679c\u6309\u7167\u524d\u9762\u4ecb\u7ecd\u7684\u65b9\u6cd5\u8fdb\u884c\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\uff0c\u8bbe\u8ba1\u51fa\u7684\u6d4b\u8bd5\u7528\u4f8b\u5f80\u5f80\u4f1a\u975e\u5e38\u591a\u3002\u4ee5\u56de\u6587\u6570\uff08\u89c1\u88683-3\uff09\u4e3a\u4f8b\uff0c\u5171\u67096\u79cd\u8f93\u5165\u6570\u636e\uff0c\u5982\u679c\u6bcf\u4e00\u884c\u5bf9\u5e94\u4e00\u4e2a\u5355\u5143\u6d4b\u8bd5\uff0c\u90a3\u4e48\u6d4b\u8bd5\u4ee3\u7801\u4f1a\u65e0\u6bd4\u5197\u957f\u3002 \u5bf9\u4e8e\u4e0a\u8ff0\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528Parameterized\u8f93\u5165\u4e00\u7ec4\u4e8c\u7ef4\u6570\u7ec4\u6765\u8fdb\u884c\u6539\u5584\uff1a @RunWith(Parameterized.class) public class ParameterizedPractiseTest { @Parameterized.Parameters public static Collection<Object[]> data() { return Arrays.asList(new Object[][]{ {Integer.MIN_VALUE, false}, {0, true}, {5, true}, {10, false}, {11, true}, {Integer.MAX_VALUE, false} }); } private int input; private boolean expected; public ParameterizedPractiseTest(int input, boolean expected) { this.input = input; this.expected = expected; } @Test public void test() { assertEquals(expected, isPalindrome(input)); } } \u5b9e\u9645\u4e0a\u8fd9\u91cc\u53ea\u662f\u4f7f\u7528\u4e86\u4e00\u79cd\u8bed\u6cd5\u7cd6\uff0c\u901a\u8fc7@RunWith\u6ce8\u89e3\u8f93\u5165 Parameterized Runner\uff0c\u5e2e\u52a9\u751f\u62106\u4e2a\u72ec\u7acb\u7684\u6d4b\u8bd5\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u9700\u8981\u7528\u5230Runner\uff0cRunner\u662fJUnit\u7684\u4e00\u79cd\u62d3\u5c55\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u5176\u770b\u4f5c\u6d4b\u8bd5\u7528\u4f8b\u7684\u7ba1\u7406\u5668\u3002\u5728\u540e\u7eed\u7684\u90e8\u5206\u6211\u4eec\u4f1a\u5207\u6362\u5404\u79cd\u5404\u6837\u7684Runner\u6765\u6ee1\u8db3\u7279\u5b9a\u7684\u9700\u6c42\uff0c\u6e90\u7801\u5206\u6790\u90e8\u5206\u5219\u4f1a\u4ecb\u7ecd\u5b83\u7684\u5b9e\u73b0\u7ec6\u8282\u3002@Parameterized.Parameters\u5b9a\u4e49\u4e866\u6761\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u3001\u8f93\u51fa\u4fe1\u606f\u3002\u8fd9\u4e2a\u6ce8\u89e3\u5141\u8bb8\u4f20\u5165\u4e00\u4e2a\u6a21\u677f\u7ed96\u4e2a\u72ec\u7acb\u7684\u6d4b\u8bd5\u8f93\u51fa\u76f8\u5e94\u7684\u540d\u79f0\uff0c\u4fbf\u4e8e\u8bc6\u522b\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u53c2\u6570\u7ec4\u5408\u5230\u6d4b\u8bd5\u7528\u4f8b\u7684\u540d\u5b57\u4e2d\uff0c\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u7528\u4e8e\u5b9a\u4e49\u751f\u6210\u7684\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0\uff1a @Parameterized.Parameters(name = \"{index}_input_({0})_should_be_{1}\") \u73b0\u5728\u6211\u4eec\u5728\u63a7\u5236\u53f0\u5c31\u53ef\u4ee5\u770b\u52306\u4e2a\u72ec\u7acb\u7684\u6d4b\u8bd5\u4e86\uff0c\u8fd0\u884c\u7ed3\u679c\u5982\u56fe3-3\u6240\u793a\u3002 \u56fe 3-3 \u53c2\u6570\u5316\u6d4b\u8bd5\u8fd0\u884c\u7ed3\u679c Runner\u662fJUnit\u4e2d\u6bd4\u8f83\u9ad8\u7ea7\u7684\u6280\u672f\u3002\u53e6\u5916\u4e00\u4e2a\u7b2c\u4e09\u65b9JUnitParamsRunner\u53ef\u4ee5\u76f4\u63a5\u5c06Parameters \u6ce8\u89e3\u7ec4\u5408\u5e94\u7528\u4e8e\u6d4b\u8bd5\u65b9\u6cd5\u4e0a\uff0c\u8fd9\u6837\u663e\u5f97\u66f4\u4e3a\u7b80\u6d01\u3002 \u8981\u4f7f\u7528JUnitParamsRunner\u9700\u8981\u901a\u8fc7Maven\u81ea\u884c\u5bfc\u5165\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a @RunWith(JUnitParamsRunner.class) public class PersonTest { @Test @Parameters({\"17, false\", \"22, true\" }) public void person_is_adult(int age, boolean valid) throws Exception { assertThat(new Person(age).isAdult(), is(valid)); } }","title":"3.3.3 \u53c2\u6570\u5316\u6d4b\u8bd5\u7528\u4f8b"},{"location":"03-unit-testing-fundamentals/#34-junit","text":"\u7531\u4e8e\u5728\u7f16\u5199\u6d4b\u8bd5\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u51fa\u73b0\u4e00\u4e9b\u989d\u5916\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u53d1\u751f\u5f02\u5e38\u8be5\u5982\u4f55\u5904\u7406\u7b49\uff0c\u56e0\u6b64\u4e0b\u9762\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u65b9\u6cd5\u6765\u5e94\u5bf9\u3002","title":"3.4 JUnit \u7684\u5176\u4ed6\u4f7f\u7528\u6280\u5de7"},{"location":"03-unit-testing-fundamentals/#341","text":"\u5f02\u5e38\u662f\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\u65f6\u5e38\u7528\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\uff0c\u5355\u5143\u6d4b\u8bd5\u5f80\u5f80\u9700\u8981\u8986\u76d6\u5404\u79cd\u5f02\u5e38\u60c5\u51b5\uff0c\u5426\u5219\u6d4b\u8bd5\u7684\u610f\u4e49\u4f1a\u5927\u6253\u6298\u6263\u3002\u5bf9\u5f02\u5e38\u65ad\u8a00\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a\u4f7f\u7528@Test\u6ce8\u89e3\u4e2d\u7684expected\u3001\u4f7f\u7528assertThrows \u65ad\u8a00\u5de5\u5177\u6216Rule\u7b49\u3002 \u4e0b\u9762\u4ee5LeetCode\u4e2d\u7684\u9898\u76ee\"\u4e24\u6570\u76f8\u9664\"\u4e3a\u4f8b\u6765\u7ec3\u4e60\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002 \u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\uff0c\u88ab\u9664\u6570dividend\u548c\u9664\u6570divisor\u3002\u5c06\u4e24\u6570\u76f8\u9664\uff0c\u8981\u6c42\u4e0d\u4f7f\u7528\u4e58\u6cd5\u3001\u9664\u6cd5\u548c mod \u8fd0\u7b97\u7b26\u3002\u8fd4\u56de\u88ab\u9664\u6570dividend \u9664\u4ee5\u9664\u6570divisor\u5f97\u5230\u7684\u5546\u3002 \u8fd9\u91cc\u7528\u4e86\u4e00\u4e2a\u6700\u5bb9\u6613\u7406\u89e3\u7684\u7b97\u6cd5\uff0c\u5373\u901a\u8fc7\u5faa\u73af\u505a\u51cf\u6cd5\u6765\u5b9e\u73b0\u9664\u6cd5\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public static int divide(int dividend, int divisor) { int result = 0; float remainder = dividend; while (remainder >= divisor) { result++; remainder = remainder - divisor; } return result; } \u4e0d\u8fc7\u8fd9\u6bb5\u4ee3\u7801\u6709\u4e00\u4e2a\u81f4\u547d\u7684\u6f0f\u6d1e\uff0c\u5982\u679c\u4f20\u5165\u7684divisor\u4e3a0\u5c31\u4f1a\u51fa\u73b0\u6b7b\u5faa\u73af\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u589e\u52a0\u5904\u7406\u8fd9\u79cd\u573a\u666f\u7684\u5f02\u5e38\uff0c\u5373\u4e0d\u5141\u8bb8\u88ab\u9664\u6570\u4e3a0\uff0c\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0cDivideByZeroException \u662f\u4e00\u4e2a\u7a7a\u7684\u5f02\u5e38\uff0c\u7ee7\u627f\u81eaRuntimeException\u3002 if (dividend == 0) { throw new DivideByZeroException(); } \u63a5\u4e0b\u6765\u7f16\u5199\u6d4b\u8bd5\u8fdb\u884c\u9a8c\u8bc1\uff0c\u786e\u4fdd\u4ee3\u7801\u5b89\u5168\u3002","title":"3.4.1 \u6d4b\u8bd5\u5f02\u5e38"},{"location":"03-unit-testing-fundamentals/#1-test-expected","text":"@Test\u63d0\u4f9b\u7684\u53ef\u9009\u53c2\u6570expected\u53ef\u4ee5\u975e\u5e38\u7b80\u5355\u5730\u5b9e\u73b0\u5bf9\u5f02\u5e38\u7684\u65ad\u8a00\uff0c\u8fd9\u4e2a\u53c2\u6570\u53ea\u80fd\u4f20\u5165Throwable\u7684\u5b50\u7c7b\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test(expected = DivideByZeroException.class) public void should_get_error_when_divisor_is_zero() { assertEquals(3, divide(9, 0)); } \u8fd9\u662f\u4e00\u79cd\u5077\u61d2\u7684\u65b9\u6cd5\uff0cexpected\u65e0\u6cd5\u65ad\u8a00\u8be5\u5f02\u5e38\u7684\u5177\u4f53\u503c\u548c\u6d88\u606f\uff0c\u5982\u679c\u65b9\u6cd5\u5185\u90e8\u4e0d\u6b62\u4e00\u4e2a\u5730\u65b9\u629b\u51fa\u4e86\u76f8\u540c\u7684\u5f02\u5e38\uff0c\u5219\u65e0\u6cd5\u51c6\u786e\u5730\u65ad\u8a00\u671f\u671b\u7684\u5f02\u5e38\u3002\u56e0\u6b64\u5efa\u8bae\u5c3d\u91cf\u8003\u8651\u5176\u4ed6\u7684\u65b9\u5f0f\u6765\u6d4b\u8bd5\u5f02\u5e38\u3002","title":"1. \u4f7f\u7528 @Test \u6ce8\u89e3\u4e2d\u7684 expected \u53c2\u6570"},{"location":"03-unit-testing-fundamentals/#2-trycatch","text":"\u5982\u679c\u4f60\u7684 JUnit \u7248\u672c\u8fc7\u4f4e\uff0c\u6216\u8005\u6761\u4ef6\u53d7\u9650\uff0c\u4e00\u4e2a\u7528\u4e8e\u6d4b\u8bd5\u5f02\u5e38\u7684\u5c0f\u6280\u5de7\u5c31\u662f\u4f7f\u7528 try/catch + fail() \u65b9\u6cd5\u3002 \u4e3a\u4e86\u8ba9\u65ad\u8a00\u51c6\u786e\u5904\u7406\u5f02\u5e38\u4fe1\u606f\uff0c\u9996\u5148\u6539\u9020 DivideByZeroException\uff0c\u589e\u52a0\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u6d88\u606f\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class DivideByZeroException extends RuntimeException { public DivideByZeroException(String message) { super(message); } } \u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u4f1a\u7ed9\u4e22\u51fa\u5f02\u5e38\u7684\u5730\u65b9\u52a0\u4e0a\u6d88\u606f\u3002 throw new DivideByZeroException(\"divisor is zero\"); \u4f7f\u7528 try/catch\u8bed\u6cd5\u53ef\u4ee5\u83b7\u5f97\u5b8c\u6574\u7684\u5f02\u5e38\u5b9e\u4f8b\uff0c\u8fdb\u800c\u5b9e\u73b0\u5f02\u5e38\u7684\u65ad\u8a00\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test public void test_exception_by_try_catch() { try { divide(9, 0); fail(\"Expected DivideByZeroException be thrown\"); } catch (DivideByZeroException divideByZeroException) { assertThat(divideByZeroException.getMessage(), is(\"divisor is zero\")); } } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u671f\u671bdivide\uff089\uff0c0\uff09\u629b\u51fa\u5f02\u5e38\uff0c\u8ba9\u6d4b\u8bd5\u901a\u8fc7\u3002\u5982\u679c\u6ca1\u6709\u629b\u51fa\u5f02\u5e38\uff0c\u5c31\u4f1a\u8d70\u5230\u540e\u9762\u7684fail\u65b9\u6cd5\u4e2d\uff0cfail\u65b9\u6cd5\u7684\u4f5c\u7528\u662f\u544a\u8bc9JUnit\u6d4b\u8bd5\u672a\u901a\u8fc7\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cfail\u975e\u5e38\u91cd\u8981\uff0c\u6ca1\u6709\u5b83\u5c31\u8d77\u4e0d\u5230\u65ad\u8a00\u7684\u4f5c\u7528\u3002","title":"2. \u901a\u8fc7try/catch \u6d4b\u8bd5\u5f02\u5e38"},{"location":"03-unit-testing-fundamentals/#3-rule","text":"@Rule\u662f\u4e00\u79cd\u63d0\u524d\u58f0\u660e\u7684\u673a\u5236\uff0c\u5b83\u53ef\u4ee5\u5148\u58f0\u660e\u4e00\u4e9b\u671f\u671b\uff0c\u7136\u540e\u518d\u6267\u884c\u4e1a\u52a1\u4ee3\u7801\uff0c\u4e00\u822c\u7528\u4e8e\u4e00\u4e9b\u7279\u6b8a\u573a\u666f\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Rule public ExpectedException thrown = ExpectedException.none(); @Test public void test_exception_by_rule() throws IndexOutOfBoundsException { thrown.expect(DivideByZeroException.class); thrown.expectMessage(\"divisor is zero\"); divide(9, 0); } \u8fd9\u4e2a\u673a\u5236\u53ef\u4ee5\u7528\u6765\u6d4b\u8bd5\u5f02\u5e38\uff0c\u7531\u4e8e\u5b83\u88ab\u5b9a\u4e49\u4e3a\u7c7b\u7ea7\u522b\uff0c\u4f7f\u7528\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\uff0c\u56e0\u6b64\u5df2\u7ecf\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u66f4\u63a8\u8350\u4f7f\u7528assertThrows\u6765\u6d4b\u8bd5\u5f02\u5e38\u3002","title":"3. \u4f7f\u7528 Rule \u6d4b\u8bd5\u5f02\u5e38"},{"location":"03-unit-testing-fundamentals/#junit-5","text":"JUnit 5 \u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b0\u7684\u65ad\u8a00\u80fd\u529b\uff0c\u53ef\u4ee5\u7ed3\u5408 Java 8 \u7684 Lambda \u8868\u8fbe\u5f0f\u6765\u5b9e\u73b0\u66f4\u4e3a\u65b9\u4fbf\u7684\u65ad\u8a00\uff0c\u5177\u4f53\u5c06\u5728\u540e\u9762\u4ecb\u7ecd\u3002","title":"\u4f7f\u7528 JUnit 5 \u7684\u65b0\u7279\u6027"},{"location":"03-unit-testing-fundamentals/#342","text":"\u5982\u679c\u6211\u4eec\u7684\u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1\u5f97\u4e0d\u597d\uff0c\u6216\u8005\u4e0d\u591f\u591a\uff0c\u5fc5\u7136\u4f1a\u6709\u5f88\u591a\u5206\u652f\u548c\u60c5\u51b5\u6ca1\u6709\u8003\u8651\u5230\u3002\u5bf9\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7edf\u8ba1\u6d4b\u8bd5\u8986\u76d6\u7387\u548c\u8986\u76d6\u60c5\u51b5\u6765\u68c0\u9a8c\u6d4b\u8bd5\u7528\u4f8b\u7684\u8bbe\u8ba1\uff0c\u4ece\u800c\u8fdb\u884c\u6539\u5584\u3002 IDE \u5185\u7f6e\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u7edf\u8ba1\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7edf\u8ba1\uff0c\u53ea\u9700\u8981\u4f7f\u7528Run xx with Coverage \u5373\u53ef\u5b8c\u6210\u3002\u4f8b\u5982\uff0cIntelliJ IDEA\u4e0d\u4ec5\u53ef\u4ee5\u9488\u5bf9\u7c7b\u7edf\u8ba1\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u8fd8\u53ef\u4ee5\u9009\u4e2d\u9488\u5bf9\u7684\u5305\u7edf\u8ba1\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u5982\u56fe3-4\u6240\u793a\u3002 \u56fe 3-4 \u901a\u8fc7\u6d4b\u8bd5\u8986\u76d6\u7387\u542f\u52a8\u5668\u8fd0\u884c \u6d4b\u8bd5\u8986\u76d6\u7387\u7edf\u8ba1\u5de5\u5177\u8fd0\u884c\u5b8c\u4ee5\u540e\uff0cIntelliJ IDEA\u4f1a\u5f39\u51fa\u4e00\u4e2a\u7edf\u8ba1\u7a97\u53e3\uff0c\u540c\u65f6\u4ee3\u7801\u7f16\u8f91\u5668\u4e5f\u4f1a\u663e\u793a\u51fa\u54ea\u4e9b\u4ee3\u7801\u5df2\u88ab\u8986\u76d6\uff0c\u5982\u56fe3-5\u6240\u793a\u3002 \u56fe 3-5 \u6d4b\u8bd5\u8986\u76d6\u7387\u7edf\u8ba1 \u8986\u76d6\u7387\u5206\u4e3a\u7c7b\u3001\u65b9\u6cd5\u3001\u5206\u652f\u8986\u76d6\u7387\u548c\u884c\u8986\u76d6\u7387\uff0c\u4e00\u822c\u9879\u76ee\u4f1a\u8981\u6c42\u7c7b\u548c\u65b9\u6cd5\u7684\u8986\u76d6\u7387\u8fbe\u5230100%\uff0c\u884c\u548c\u5206\u652f\u7684\u8986\u76d6\u7387\u523080%\u3002\u5176\u5b9e\u8986\u76d6\u7387\u7684\u4e3b\u8981\u6307\u6807\u5e94\u8be5\u662f\u5206\u652f\u8986\u76d6\u7387\uff0c\u4e86\u89e3\u5206\u652f\u8986\u76d6\u7387\u53ef\u5e2e\u52a9\u6211\u4eec\u8fdb\u4e00\u6b65\u5b8c\u5584\u6d4b\u8bd5\u7528\u4f8b\u3002 \u5728\u5de5\u7a0b\u5316\u65b9\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Maven Surefire\u63d2\u4ef6\u548cJaCoCo\u6765\u8fd0\u884c\u6d4b\u8bd5\u5e76\u83b7\u53d6\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u540c\u65f6\u4e0a\u4f20\u62a5\u544a\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5728\u5de5\u7a0b\u5316\u90e8\u5206\u4f1a\u8bf4\u660e\u3002","title":"3.4.2 \u6d4b\u8bd5\u8986\u76d6\u7387"},{"location":"03-unit-testing-fundamentals/#343-junit-rule","text":"JUnit Rule\u63d0\u4f9b\u4e86\u2192\u79cd\u7c7b\u4f3c\u62e6\u622a\u5668\u7684\u673a\u5236\uff0c\u7528\u4e8e\u62d3\u5c55JUnit\u7684\u529f\u80fd\uff0c\u5b83\u53ef\u7ed9\u6bcf\u4e2a\u6d4b\u8bd5\u6dfb\u52a0\u4e00\u4e9b\u901a\u7528\u7684\u884c\u4e3a\u3002\u5176\u5e38\u89c1\u7684\u7528\u9014\u6709\u5168\u5c40\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u3001\u83b7\u53d6\u5f53\u524d\u7684\u6d4b\u8bd5\u540d\u79f0\u3001\u6253\u5370\u65e5\u5fd7\u7b49\u3002 JUnit \u5b98\u65b9\u7f51\u7ad9\u4e0a\u7ed9\u51fa\u7684\u90e8\u5206\u793a\u4f8b\u4e0d\u662f\u5f88\u5e38\u7528\uff0c\u4f8b\u5982\uff0c\u5b83\u63d0\u5230TemporaryFolder\u8fd9\u4e2aRule\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6587\u4ef6\u6a21\u62df\u673a\u5236\uff0c\u4f46\u662f\u66f4\u597d\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u6a21\u62df\u5de5\u5177\u6765\u5b9e\u73b0\u6b64\u6a21\u62df\u673a\u5236\u3002\u8fd8\u6709\u4e00\u4e2a\u4f8b\u5b50\u5c31\u662f\u524d\u9762\u63d0\u5230\u7684\u901a\u8fc7Rule\u6765\u5b8c\u6210\u5f02\u5e38\u6d4b\u8bd5\uff0c\u5df2\u4e0d\u63a8\u8350\u4f7f\u7528\u3002\u5173\u4e8eRule\u7684\u7528\u6cd5\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\u4e00\u4e2a\u901a\u8fc7Rule\u5b9e\u73b0\u8d85\u65f6\u7684\u6280\u5de7\u3002 \u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u4f7f\u7528Rule\u7684\u7b80\u5355\u4f8b\u5b50\u3002TestName\u662f\u4e00\u4e2a\u83b7\u53d6\u6d4b\u8bd5\u540d\u79f0\u7684Rule\uff0c\u5728\u4e0b\u9762\u8fd9\u6bb5\u6d4b\u8bd5\u4ee3\u7801\u4e2d\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u90fd\u4f1a\u5728\u8fd0\u884c\u671f\u5e94\u7528\u8fd9\u4e2aRule\uff0c\u5e76\u5c06\u5f53\u524d\u7684\u4fe1\u606f\u4f20\u9012\u7ed9Rule\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5373\u53ef\u83b7\u5f97\u6d4b\u8bd5\u540d\u79f0\u3002 public class NameRuleTest { @Rule public final TestName name = new TestName(); @Test public void testA() { assertEquals(\"testA\", name.getMethodName()); } @Test public void testB() { assertEquals(\"testB\", name.getMethodName()); } } \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7528\u5230Rule\u7684\u5730\u65b9\u4e0d\u591a\uff0c\u4f46\u662f\u9700\u8981\u77e5\u9053\u8fd9\u79cd\u673a\u5236\u7684\u5b58\u5728\uff0c\u4fbf\u4e8e\u5728\u9700\u8981\u7684\u65f6\u5019\u5b9e\u73b0\u4e00\u4e9b\u5168\u5c40\u903b\u8f91\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u6d4b\u8bd5\u751f\u6210\u4e00\u4e2a\u4e13\u7528\u7684\u65e5\u5fd7\u5bf9\u8c61\uff0c\u4ee5\u4fbf\u8bb0\u5f55\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u7684\u4fe1\u606f\uff1a public class TestLogger implements TestRule { private Logger logger; public Logger getLogger() { return this.logger; } @Override public Statement apply(final Statement base, final Description description) { return new Statement() { @Override public void evaluate() throws Throwable { logger = Logger.getLogger(description.getTestClass().getName() + '.' + description.getDisplayName()); base.evaluate(); } }; } }","title":"3.4.3 JUnit Rule \u4f7f\u7528"},{"location":"03-unit-testing-fundamentals/#344","text":"","title":"3.4.4 \u5176\u4ed6\u6280\u5de7"},{"location":"03-unit-testing-fundamentals/#1","text":"\u5982\u679c\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\uff08\u53ef\u80fd\u662f\u5feb\u901f\u4fee\u590dCI\uff0c\u907f\u514d\u5f71\u54cd\u56e2\u961f\u5176\u4ed6\u6210\u5458\u7684\u5de5\u4f5c\uff09\uff0c\u4f60\u9700\u8981\u5feb\u901f\u5ffd\u7565\u6d4b\u8bd5\uff0c\u90a3\u4e48\u8bf7\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u5927\u9762\u79ef\u6ce8\u91ca\u4ee3\u7801\u7684\u65b9\u6cd5\u3002\u5efa\u8bae\u4f7f\u7528@lgnore\u6ce8\u89e3\uff0c\u5e76\u52a0\u4e0a\u539f\u56e0\uff0c\u4e14\u5728\u65b9\u4fbf\u7684\u65f6\u5019\u53ca\u65f6\u8fdb\u884c\u4fee\u590d\u3002 \u4e0e\u5220\u9664\u3001\u6ce8\u91ca\u4ee3\u7801\u4e0d\u540c\uff0c@Ignore\u4f1a\u88ab\u6d4b\u8bd5\u6846\u67b6\u4f5c\u4e3a\u5df2\u7ecf\u88ab\u5ffd\u7565\u7684\u6d4b\u8bd5\u7edf\u8ba1\u5e76\u663e\u793a\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Ignore(\"Test is ignored as a demonstration\") @Test public void assert_same() { assertThat(1, is(1)); }","title":"1. \u5ffd\u7565\u6d4b\u8bd5"},{"location":"03-unit-testing-fundamentals/#2","text":"\u5982\u679c\u4e00\u4e2a\u6d4b\u8bd5\u8fd0\u884c\u7684\u65f6\u95f4\u5f88\u957f\uff0c\u5f80\u5f80\u610f\u5473\u7740\u8fd9\u4e2a\u6d4b\u8bd5\u5df2\u5931\u8d25\u3002JUnit\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u5f0f\u7ed3\u675f\u5b83\uff0c\u5373\u4f7f\u7528@Test\u6ce8\u89e3\u7684timeout\u53c2\u6570\u4f20\u5165\u4e00\u4e2a\u6beb\u79d2\u6570\u3002 \u5982\u679c\u8fd9\u4e2a\u6d4b\u8bd5\u7684\u8fd0\u884c\u65f6\u95f4\u8d85\u8fc7\u4e86timeout\u5141\u8bb8\u7684\u65f6\u95f4\uff0cJUnit\u4f1a\u4e2d\u65ad\u6d4b\u8bd5\u7ebf\u7a0b\uff0c\u6807\u8bb0\u6d4b\u8bd5\u5931\u8d25\uff0c\u5e76\u629b\u51fa\u5f02\u5e38\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6d4b\u8bd5\u4ee3\u7801\u65e0\u6cd5\u88ab\u4e2d\u65ad\uff0cJUnit\u4f1a\u542f\u52a8\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u6765\u53d1\u51fa\u4e2d\u65ad\u4fe1\u53f7\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test\uff08timeout = 1000\uff09 public void test_with_timeout\uff08\uff09{ ... } timeout\u53c2\u6570\u53ea\u4f1a\u9488\u5bf9\u5355\u4e2a\u6d4b\u8bd5\u7684\u8d85\u65f6\u65f6\u95f4\u8fdb\u884c\u68c0\u67e5\uff0c\u5982\u679c\u60f3\u8981\u4e00\u6b21\u6027\u5bf9\u6240\u6709\u7684\u6d4b\u8bd5\u90fd\u5e94\u7528\u8fd9\u4e2a\u89c4\u5219\uff0c\u53ef\u4ee5\u4f7f\u7528Rule\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class GlobalTimeoutPractiseTest { @Rule public Timeout globalTimeout = Timeout.seconds(10); @Test public void test_sleep_11_seconds() throws Exception { Thread.sleep(11000); } @Test public void test_sleep_12_seconds() throws Exception { Thread.sleep(12000); } } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cTimeout Rule\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5168\u5c40\u7684Rule\uff0c\u5728\u5f53\u524d\u7684\u7c7b\u4e0b\u6709\u6548\uff0c\u540c\u65f6\u4f1a\u8ba1\u7b97@Before\u3001@After\u65b9\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u3002\u4f46\u662f\uff0c\u5982\u679c\u88ab\u4e2d\u65ad\u7684\u65b9\u6cd5\u662f\u6b7b\u5faa\u73af\u9020\u6210\u7684\uff0c\u90a3\u4e48JUnit\u5c31\u4f1a\u76f4\u63a5\u505c\u6389\uff0c@After\u65b9\u6cd5\u53ef\u80fd\u4e0d\u4f1a\u88ab\u6267\u884c\u3002","title":"2. \u6d4b\u8bd5\u8d85\u65f6"},{"location":"03-unit-testing-fundamentals/#3_1","text":"\u6709\u65f6\u5019\u9700\u8981\u5c06\u4e00\u7ec4\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u5408\u8d77\u6765\u4f5c\u4e3a\u4e00\u4e2a\u6d4b\u8bd5\u5957\u4ef6\u8fd0\u884c\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06Suite\u4f5c\u4e3aRunner\u6765\u5b9e\u73b0\uff0c\u5373\u901a\u8fc7@Suite.SuiteClasses\u4f20\u4eba\u9700\u8981\u7ec4\u5408\u7684\u6d4b\u8bd5\u7c7b\u6765\u5b9e\u73b0\u5355\u5143\u6d4b\u8bd5\u5957\u4ef6\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @RunWith(Suite.class) @Suite.SuiteClasses({ HelloWorldTest.class, AssertPractiseTest.class }) public class SuitesPractiseTest { }","title":"3. \u805a\u5408\u6d4b\u8bd5\u5957\u4ef6"},{"location":"03-unit-testing-fundamentals/#345","text":"","title":"3.4.5 \u65b0\u624b\u5bb9\u6613\u72af\u7684\u9519\u8bef"},{"location":"03-unit-testing-fundamentals/#1_1","text":"\u663e\u793a\"No tests found \uff08\u627e\u4e0d\u5230\u5355\u5143\u6d4b\u8bd5\uff09\"\uff0c\u8fd9\u6709\u53ef\u80fd\u662f\u4ee5\u4e0b\u539f\u56e0\u9020\u6210\u7684\uff1a \u5355\u5143\u6d4b\u8bd5\u7684\u65b9\u6cd5\u88ab\u8bbe\u7f6e\u4e3a\u4e86 private\uff0c\u4fee\u6539\u4e3a public \u5373\u53ef\u3002\u4e0d\u8fc7\uff0c\u5728JUnit 5\u4e2d\u5df2\u4fee\u6539\u4e86\u76f8\u5e94\u7684\u5b9e\u73b0\u673a\u5236\uff0c\u4e0d\u9700\u8981\u6dfb\u52a0\u65b9\u6cd5\u7684public\u4fee\u9970\u7b26\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002 Classpath \u4e2d\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u7248\u672c\u7684 JUnit \u5305\u3002","title":"1. \u627e\u4e0d\u5230\u5355\u5143\u6d4b\u8bd5"},{"location":"03-unit-testing-fundamentals/#2-initialization-error","text":"\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u5728IntelliJIDEA\u4e2d\uff0c\u6d4b\u8bd5\u8fd0\u884c\u4e00\u6b21\u540e\u628a@Test\u6ce8\u89e3\u6ce8\u91ca\u6389\u4e86\uff0c\u518d\u6b21\u8fd0\u884c\u5c31\u53ef\u80fd\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002\u539f\u56e0\u662fIntelliJIDEA \u8bc6\u522b\u51fa\u4e86\u5b83\u4eec\u662f\u540c\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u4f46\u662f\u542f\u52a8\u5668\uff08\u5728\u6e90\u7801\u5206\u6790\u90e8\u5206\u4f1a\u4ecb\u7ecd\u6d4b\u8bd5\u662f\u5982\u4f55\u542f\u52a8\u7684\uff09\u6ca1\u6709\u8bc6\u522b\u51fa\u6765\u3002\u9047\u5230\u8fd9\u7c7b\u95ee\u9898\uff0c\u4e5f\u53ef\u4ee5\u68c0\u67e5\u4e00\u4e0b@Test\u6ce8\u89e3\u5f15\u5165\u7684\u5305\u8def\u5f84\u662f\u5426\u6b63\u786e\uff0c\u5373\u662f\u5426\u4e3aJUnit\u5305\u4e0b\u9762\u7684\u6ce8\u89e3\u3002","title":"2. initialization error \u521d\u59cb\u5316\u5931\u8d25"},{"location":"03-unit-testing-fundamentals/#3-intellij-idea","text":"\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u6709\u53ef\u80fd\u662fJUnit\u6ca1\u6709\u88abIntelliJIDEA\u8bc6\u522b\uff0c\u5efa\u8bae\u5148\u68c0\u67e5Maven\u662f\u5426\u62c9\u53d6\u4e86\u6b63\u786e\u7684\u4f9d\u8d56\uff0c\u7136\u540e\u5c1d\u8bd5\u91cd\u65b0\u52a0\u8f7dMaven\u7684\u4f9d\u8d56\uff0c\u5e76\u91cd\u542fIntelliJIDEA\u3002","title":"3. IntelliJ IDEA \u4e2d\u4e0d\u51fa\u73b0\u6267\u884c\u6309\u94ae"},{"location":"03-unit-testing-fundamentals/#4-junit-test","text":"\u5982\u679c\u5728Pom\u6587\u4ef6\u4e2d\u4f9d\u8d56\u7684scope\u5c5e\u6027\u88ab\u5b9a\u4e49\u6210\u4e86test\uff0c\u4f46\u662f\u6d4b\u8bd5\u7c7b\u88ab\u521b\u5efa\u5230\u4e86\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\u4e2d\uff0c\u90a3\u4e48JUnit\u7684\u76f8\u5173\u7c7b\u548c\u6ce8\u89e3\u662f\u65e0\u6cd5\u4f7f\u7528\u7684\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u7ee7\u7eed\u4fdd\u6301scope\u4e3atest\uff0c\u5e76\u628a\u6d4b\u8bd5\u7c7b\u79fb\u52a8\u5230test\u6a21\u5757\u4e0b\uff0c\u53c2\u8003\u540e\u9762\u7684Java\u5355\u5143\u6d4b\u8bd5\u7684\u7ea6\u5b9a\u548c\u539f\u5219\uff0c\u907f\u514d\u7c7b\u4f3c\u7684\u95ee\u9898\u518d\u6b21\u53d1\u751f\u3002","title":"4. \u660e\u660e\u52a0\u8f7d\u4e86 JUnit \u7684\u4f9d\u8d56\uff0c\u4f46\u662f @Test \u8fd8\u662f\u7206\u7ea2"},{"location":"03-unit-testing-fundamentals/#35-junit-5","text":"\u524d\u9762\u7684\u5185\u5bb9\u90fd\u662f\u57fa\u4e8eJUnit 4.3\u8fdb\u884c\u8bb2\u89e3\u7684\uff0c\u8fd9\u662fJUnit\u6700\u7ecf\u5178\u7684\u4e00\u4e2a\u7248\u672c\u30022017\u5e74\uff0cJUnit5\u53d1\u5e03\uff0c\u5b83\u548c\u4e4b\u524d\u7684\u7248\u672c\u6709\u8f83\u5927\u7684\u5dee\u5f02\uff0c\u5c24\u5176\u662f\u67b6\u6784\u4e0a\uff0c\u5b83\u88ab\u62c6\u5206\u4e3a\u4e863\u4e2a\u5b50\u9879\u76ee\u3002 \u7b80\u5355\u6765\u8bf4\uff0cJUnit5\u4e0d\u518d\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u800c\u662f\u4e00\u4e2a\u6d4b\u8bd5\u5e73\u53f0\uff0c\u5141\u8bb8\u63a5\u4eba\u5176\u4ed6\u7684\u6d4b\u8bd5\u6846\u67b6\u3002JUnit 5\u5728\u5e26\u6765\u66f4\u591a\u529f\u80fd\u7684\u540c\u65f6\uff0c\u4e5f\u53d8\u5f97\u66f4\u4e3a\u590d\u6742\uff0c\u5bf9\u65b0\u624b\u5e76\u4e0d\u53cb\u597d\uff0c\u8fd9\u4e5f\u662f\u524d\u9762\u6ca1\u6709\u4f7f\u7528\u5b83\u4f5c\u4e3a\u57fa\u7840\u6559\u7a0b\u7684\u539f\u56e0\u3002\u4e0d\u8fc7JUnit5\u8fd8\u662f\u503c\u5f97\u4e00\u5b66\u7684\uff0c\u597d\u5728JUnit5\u5411\u4e0b\u517c\u5bb9\u4e86JUnit 4\uff0c\u4e24\u8005\u5728\u4f7f\u7528\u4e0a\u4e0d\u4f1a\u6709\u592a\u5927\u5dee\u5f02\uff0c\u540e\u7eed\u7684\u5185\u5bb9\u5c06\u5207\u6362\u5230JUnit5\u4e0a\u8fdb\u884c\u8bb2\u89e3\u3002","title":"3.5 \u57fa\u4e8eJUnit 5 \u5b9e\u73b0\u6d4b\u8bd5"},{"location":"03-unit-testing-fundamentals/#351-junit-5","text":"\u4f7f\u7528JUnit 5\u65f6\u9700\u8981\u5355\u72ec\u5f15\u51653\u4e2a\u5305\uff0c\u8fd93\u4e2a\u5305\u4e3aJUnit5\u76843\u4e2a\u5b50\u9879\u76ee\u3002\u53ef\u4ee5\u7528\u4e00\u4e2a\u516c\u5f0f\u6765\u7406\u89e3JUnit 5\uff1a JUnit 5 = JUnit Platform + JUnit Jupiter + JUnit Vintage\u3002 \u56fe3-6\u4e3aJUnit5\u7684\u67b6\u6784\u793a\u610f\u56fe\u3002JUnit Platform\u662f\u5728JVM\u4e0a\u542f\u52a8\u6d4b\u8bd5\u6846\u67b6\u7684\u57fa\u7840\uff0c\u7528\u6765\u542f\u52a8\u6d4b\u8bd5\u5f15\u64ce\u3002\u5b83\u63d0\u4f9b\u4e86\u4e0d\u540c\u542f\u52a8\u63a5\u53e3\uff0c\u6bd4\u5982\u547d\u4ee4\u884c\u3001Maven\u3001Gradle\u3001IDE\u7b49\u3002\u53e6\u5916\uff0c\u5b83\u5141\u8bb8\u63a5\u5165\u5404\u79cd\u6d4b\u8bd5\u5f15\u64ce\u3002 JUnit Jupiter\u63d0\u4f9b\u4e86\u65b0\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u6b64\u6a21\u578b\u4e3aJUnit5\u7684\u6838\u5fc3\uff0c\u5b83\u5185\u7f6e\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u5f15\u64ce\u3002 \u4ece\u5b57\u9762\u610f\u601d\u6765\u770b\uff0cVintage\u5c31\u662f\u6307\u8fc7\u65f6\uff0c\u53ef\u60f3\u800c\u77e5\uff0cJUnit Vintage\u7528\u4e8e\u5bf9\u65e7\u7684JUnit\u7248\u672c\u63d0\u4f9b\u517c\u5bb9\u3002 \u56fe 3-6 JUnit 5 \u67b6\u6784 JUnit5\u7684\u67b6\u6784\u8ba9\u5355\u5143\u6d4b\u8bd5\u7684\u8fd0\u884c\u53d8\u5f97\u66f4\u52a0\u7075\u6d3b\uff0c\u53e6\u5916Jupiter\u5728\u53cd\u5c04\u80fd\u529b\u65b9\u9762\u4e5f\u6709\u4e00\u4e9b\u63d0\u5347\uff0c\u5f53\u4f60\u5904\u7406\u4e00\u4e9b\u79c1\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u65f6\u5c31\u53ef\u4ee5\u611f\u53d7\u5230\u3002","title":"3.5.1 JUnit 5 \u7684\u67b6\u6784\u8bf4\u660e"},{"location":"03-unit-testing-fundamentals/#352-junit-5","text":"JUnit5\u7684\u4f7f\u7528\u548cJUnit 4\u7684\u5dee\u5f02\u4e0d\u5927\uff0c\u6ce8\u610f\u8981\u4ece\u65b0\u7684\u5305\u4e2d\u5f15\u5165\u6ce8\u89e3\u548c\u65ad\u8a00\uff0c\u4f46\u662f\u8fd9\u6709\u53ef\u80fd\u4f1a\u7ed9\u65b0\u624b\u9020\u6210\u56f0\u60d1\uff0c\u8fd9\u4e5f\u662f\u672c\u4e66\u4eceJUnit 4.3\u8bb2\u8d77\u7684\u539f\u56e0\u3002 \u4e0b\u9762\u7167\u4f8b\u65b0\u5efa\u4e00\u4e2aJava\u6a21\u5757\uff0c\u547d\u540d\u4e3aJUnit5\uff0c\u7136\u540e\u5728Pom\u6587\u4ef6\u4e2d\u52a0\u5165\u4f9d\u8d56\uff1a <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-api</artifactId> <version>5.7.1</version> <scope>test</scope> </dependency> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-engine</artifactId> <version>5.7.1</version> <scope>test</scope> </dependency> \u5982\u679c\u6211\u4eec\u4e0d\u9700\u8981\u4fdd\u7559\u5bf9JUnit 4\u7684\u517c\u5bb9\uff0c\u53ef\u4ee5\u4e0d\u52a0\u5165 JUnit Vintage\u5305\uff0c\u53ea\u9700\u8981\u5728\u65b0\u7684\u5305\u8def\u5f84\u4e0b\u4f7f\u7528\u76f8\u5173API\u5373\u53ef\u3002 \u4e0b\u9762\u7f16\u5199\u4e00\u4e2a\u548c\u524d\u9762\u4e00\u6837\u7684HelloWorld\u7c7b\uff0c\u4ee5\u53ca\u5173\u4e8eHelloWorld\u7684\u6d4b\u8bd5\uff0c\u5728\u65b0\u7684\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u7684\u662f org.junit.jupiter.api\u5305\u4e2d\u7684\u6ce8\u89e3\uff1a import cn.prinf.demos.junit.jupiter.HelloWorld; import org.junit.jupiter.api.Test; import static org.junit.jupiter.api.Assertions.assertEquals; public class HelloWorldTest { @Test public void should_return_world_as_string() { assertEquals(\"Hello, world!\", HelloWorld.hello()); } } \u5728Jupiter\u4e2d\uff0cAssertions\u4ee3\u66ff\u4e86\u539fJUnit\u5305\u4e2d\u7684Assert\u7c7b\uff0c\u5e76\u63d0\u4f9b\u4e86\u66f4\u4e3a\u4e30\u5bcc\u7684\u529f\u80fd\u3002\u867d\u7136\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2dJUnit 4.3\u7684\u65ad\u8a00\u5e93\u5df2\u7ecf\u591f\u7528\uff0c\u4f46\u6709\u66f4\u591a\u7684\u9009\u62e9\u4e5f\u4e0d\u662f\u574f\u4e8b\u3002JUnit5\u63d0\u4f9b\u7684\u6ce8\u89e3\u4e0eJUnit4.3\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6709\u51e0\u4e2a\u6ce8\u89e3\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5177\u4f53\u5982\u4e0b\uff1a @Test \u6ce8\u89e3\u7684\u804c\u8d23\u53d8\u5f97\u5355\u4e00\uff0c\u5b83\u4e0d\u518d\u63d0\u4f9b\u4e00\u4e9b\u4e3b\u8981\u7684\u5c5e\u6027\uff0c\u8fd9\u4e9b\u7531\u5355\u72ec\u7684\u6ce8\u89e3\u63d0\u4f9b\uff0c\u6bd4\u5982@Timeout \u6ce8\u89e3\u3002 @Timeout \u63d0\u4f9b\u4e0e\u539f\u6765 @Test \u6ce8\u89e3\u4e2d timeout \u5c5e\u6027\u540c\u6837\u7684\u529f\u80fd\u3002 @Before \u548c @After \u5206\u522b\u88ab\u66ff\u6362\u6210\u4e86 @BeforeEach \u548c @AfterEach\u3002 @BeforeClass \u548c @AfterClass \u5206\u522b\u88ab\u66ff\u6362\u6210\u4e86 @BeforeAll \u548c @AfterAll\u3002 @Disabled \u5ffd\u7565\u4e86\u6d4b\u8bd5\u7c7b\u548c\u65b9\u6cd5\uff0c\u548c\u539f\u6765\u7684 @Ignore \u4e00\u6837\u3002 @RepeatedTest \u53ef\u4ee5\u8ba9\u6d4b\u8bd5\u91cd\u590d\u8fd0\u884c\uff0c\u4f46\u5b9e\u9645\u7528\u5230\u7684\u5730\u65b9\u4e0d\u591a\u3002","title":"3.5.2 \u4f7f\u7528 JUnit 5"},{"location":"03-unit-testing-fundamentals/#353","text":"JUnit5\u5e26\u7ed9\u4eba\u7684\u6700\u76f4\u89c2\u7684\u611f\u53d7\u5c31\u662f\u65ad\u8a00\u80fd\u529b\u7684\u63d0\u5347\uff0c\u5c24\u5176\u662f\u652f\u6301Java8\u7684Lambda\u8868 \u8fbe\u5f0f\uff0c\u8ba9\u5f88\u591a\u65ad\u8a00\u53d8\u5f97\u6781\u5176\u7b80\u5355\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u5728\u4f7f\u7528JUnit 4.3\u65f6\uff0c\u5982\u679c\u60f3\u58f0\u660e\u6d4b\u8bd5\u65b9\u6cd5\u7684\u5f02\u5e38\uff0c\u9700\u8981\u5b9a\u4e49Rule\uff0c\u6216\u8005\u7528@Test\u6ce8\u89e3\u4e2d\u7684expected\u5c5e\u6027\u58f0\u660e\u3002\u800c\u5728 JUnit 5\u4e2d\uff0c\u76f4\u63a5\u7528Assertions.assertThrows \u5305\u88f9\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u5373\u53ef\u65ad\u8a00\u3002 \u4e0b\u9762\u57fa\u4e8eJUnit5 assertThrows \u6539\u5199\u524d\u9762\u4ecb\u7ecd\u5f02\u5e38\u65ad\u8a00\u65f6\u7684\u4f8b\u5b50\uff1a @Test void should_assert_exception_type_and_message() { DivideByZeroException divideByZeroException = assertThrows(DivideByZeroException.class, () -> divide(9, 0)); assertEquals(\"divisor is zero\",divideByZeroException.getMessage()); } \u4e0a\u8ff0\u4ee3\u7801\u4f1a\u6839\u636e\u8fd4\u56de\u7684\u5f02\u5e38\u5b9e\u4f8b\u8fdb\u884c\u65ad\u8a00\uff0c\u9a8c\u8bc1\u6d88\u606f\u548c\u539f\u56e0\u662f\u5426\u6b63\u786e\uff0c\u4e14\u80fd\u591f\u5728\u5f15\u53d1\u5f02\u5e38\u540e\u5bf9\u5176\u4ed6\u4fe1\u606f\u8fdb\u884c\u65ad\u8a00\u3002\u53e6\u5916\uff0c\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6d4b\u8bd5\u4e2d\u7f16\u5199\u66f4\u591a\u7684\u5f02\u5e38\u65ad\u8a00\uff0c\u4e14\u4e0d\u9700\u8981\u518d\u5f00\u542f\u4e00\u4e2a\u6d4b\u8bd5\u3002 Assertions.assertTimeout\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u548cAssertions.assertThrows\u540c\u6837\u7684\u6548\u679c\u3002","title":"3.5.3 \u66f4\u5f3a\u7684\u65ad\u8a00\u80fd\u529b"},{"location":"03-unit-testing-fundamentals/#354","text":"JUnit 5\u63d0\u4f9b\u4e86\u5d4c\u5957\u7684\u6d4b\u8bd5\u98ce\u683c\uff0c\u5373\u5141\u8bb8\u5728\u6d4b\u8bd5\u7c7b\u4e2d\u7f16\u5199\u5d4c\u5957\u7c7b\u6765\u7ec4\u7ec7\u6d4b\u8bd5\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u5c06\u4e1a\u52a1\u7c7b\u548c\u6d4b\u8bd5\u7c7b\u4e00\u4e00\u5bf9\u5e94\uff0c\u4e0d\u8fc7\u6709\u65f6\u5019\u4e00\u4e9b\u4e0a\u4e0b\u6587\u5173\u7cfb\u7684\u6d4b\u8bd5\u53ef\u4ee5\u5408\u5e76\u5230\u4e00\u8d77\uff0c\u907f\u514d\u6d4b\u8bd5\u7c7b\u7684\u6570\u91cf\"\u7206\u70b8\"\u3002\u6b64\u5916\uff0cJunit 5\u8fd8\u53ef\u4ee5\u628a\u9700\u8981\u76f8\u540c\u6d4b\u8bd5\u6570\u636e\u7684\u7c7b\u653e\u5230\u4e00\u8d77\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7ec4\u7ec7\u6d4b\u8bd5\u4ee3\u7801\u3002\u6765\u770b\u4e2a\u793a\u4f8b\uff1a import cn.prinf.demos.junit.jupiter.HelloWorld; import org.junit.jupiter.api.DisplayName; import org.junit.jupiter.api.Nested; import org.junit.jupiter.api.Test; import static org.junit.jupiter.api.Assertions.assertEquals; public class NestedTest { @Test @DisplayName(\"Normal test\") public void should_return_world_as_string() { assertEquals(\"Hello, world!\", HelloWorld.hello()); } @Nested @DisplayName(\"Nested testing demonstration\") class NestedInnerDemoTest { @Test void first_test() { System.out.println(\"this is first nested test\"); } @Test void second_test() { System.out.println(\"this is first nested test\"); } } } \u6d4b\u8bd5\u8fd0\u884c\u540e\u7684\u622a\u56fe\u5982\u56fe3-7\u6240\u793a\uff0c\u53ef\u4ee5\u770b\u5230\u6d4b\u8bd5\u63cf\u8ff0\u5448\u5c42\u6b21\u72b6\u663e\u793a\u3002 \u56fe 3-7 \u5d4c\u5957\u6d4b\u8bd5\u8fd0\u884c\u7ed3\u679c","title":"3.5.4 \u5d4c\u5957\u7684\u6d4b\u8bd5"},{"location":"03-unit-testing-fundamentals/#355","text":"\u5728JUnit 4.3\u4e2d\uff0c\u4e00\u6b21\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2aRunner\uff0c\u5728JUnit 5 \u4e2d\u5c06@RunWith\u6362\u6210\u4e86@ExtendWith\uff0c\u53e6\u5916@Rule\u4e5f\u88ab\u79fb\u9664\u4e86\u3002\u539f\u56e0\u662f\u539f\u6765\u7684@RunWith\u6709\u8bf8\u591a\u7684\u9650\u5236\uff0c\u60f3\u8981\u5b9a\u4e49\u591a\u4e2a\u8fd0\u884c\u5668\u4f1a\u5f88\u9ebb\u70e6\uff0c\u6240\u4ee5\u4e0d\u5f97\u4e0d\u4f7f\u7528@Rule\u6765\u5b9e\u73b0\u3002\u5728JUnit5\u4e2d\uff0c\u8fd9\u4e00\u70b9\u5df2\u7ecf\u5f97\u5230\u4e86\u5904\u7406\uff0c\u6545\u800c@Rule\u4e5f\u5c31\u65e0\u7528\u6b66\u4e4b\u5730\u4e86\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528Spring Runner\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5728JUnit4.3\u4e2d\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a @RunWith(SpringRunner.class) public class MySpringUnitTest { // ... } \u5728 JUnit 5\u4e2d\u5c31\u662f\u8fd9\u6837\u7684\uff1a @ExtendWith(SpringExtension.class) class MySpringUnitTest { // ... } @ExtendWith\u4e0d\u4ec5\u53ef\u4ee5\u652f\u6301\u591a\u4e2aExtension\uff0c\u8fd8\u53ef\u4ee5\u653e\u7f6e\u5230\u6d4b\u8bd5\u65b9\u6cd5\u4e0a\uff0c\u5728JUnit 4.3\u4e2d@RunWith\u53ea\u80fd\u7528\u5728\u7c7b\u4e0a\u9762\u3002","title":"3.5.5 \u62d3\u5c55\u7684\u53d8\u5316"},{"location":"03-unit-testing-fundamentals/#36-java","text":"\u5f88\u591a\u7f51\u53cb\u548c\u540c\u4e8b\u66fe\u95ee\u6211\uff0c\u600e\u6837\u7684\u5355\u5143\u6d4b\u8bd5\u624d\u7b97\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u6d4b\u8bd5\u3002\u5bf9\u4e8e\u56e2\u961f\u5f00\u53d1\u6765\u8bf4\uff0c\u53ea\u8981\u662f\u6709\u6548\u7684\u3001\u5bb9\u6613\u7ef4\u62a4\u7684\u6d4b\u8bd5\u5c31\u662f\u597d\u6d4b\u8bd5\u3002\u56e0\u6b64\u5355\u5143\u6d4b\u8bd5\u5e94\u5c3d\u91cf\u8f7b\u91cf\u7ea7\uff0c\u4e14\u5e94\u575a\u6301\u505a\u4e0b\u53bb\u3002 \u4e3a\u4e86\u8ba9\u56e2\u961f\u5bf9\u5355\u5143\u6d4b\u8bd5\u6709\u4e00\u4e2a\u7edf\u4e00\u7684\u8ba4\u8bc6\u548c\u7406\u89e3\uff0c\u4e0b\u9762\u57fa\u4e8eFIRST\u539f\u5219\uff08FIRST\u548cAIR\u539f\u5219\u4e3a\u5355\u5143\u6d4b\u8bd5\u7684\u4e24\u79cd\u63cf\u8ff0\u65b9\u5f0f\uff09\u6574\u7406\u4e86\u4e00\u4e9b\u7ea6\u5b9a\u3002","title":"3.6 Java \u5355\u5143\u6d4b\u8bd5\u7684\u7ea6\u5b9a\u548c\u539f\u5219"},{"location":"03-unit-testing-fundamentals/#361-first","text":"","title":"3.6.1 FIRST \u539f\u5219\u548c\u89e3\u91ca"},{"location":"03-unit-testing-fundamentals/#1-fast","text":"\u5355\u5143\u6d4b\u8bd5\u5e94\u8be5\u662f\u53ef\u4ee5\u5feb\u901f\u8fd0\u884c\u7684\u3002\u5b83\u4f5c\u4e3a\u975e\u5e38\u7ec6\u7c92\u5ea6\u7684\u6d4b\u8bd5\uff0c\u9700\u8981\u80fd\u5feb\u901f\u8fd0\u884c\u5b8c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002\u5982\u679c\u4e0d\u80fd\uff0c\u53ef\u80fd\u662f\u7c92\u5ea6\u8fc7\u5927\u3002","title":"1. \u5feb\u901f\uff08FAST\uff09\u539f\u5219"},{"location":"03-unit-testing-fundamentals/#2-independent","text":"\u5355\u5143\u6d4b\u8bd5\u7684\u6bcf\u4e2a\u7528\u4f8b\u5e94\u8be5\u662f\u72ec\u7acb\u7684\uff0c\u7528\u4f8b\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u5e72\u6270\u548c\u4f9d\u8d56\uff0c\u5e76\u4e0e\u987a\u5e8f\u65e0\u5173\u3002\u53ef\u4ee5\u901a\u8fc7setup\u548cteardown\u65b9\u6cd5\u6765\u4fdd\u8bc1\u3002\u53e6\u5916\uff0c\u4e5f\u4e0d\u5e94\u5f3a\u4f9d\u8d56\u5916\u90e8\u73af\u5883\uff0c\u8981\u5c3d\u91cf\u548c\u73af\u5883\u9694\u79bb\u3002","title":"2. \u72ec\u7acb\uff08Independent\uff09\u539f\u5219"},{"location":"03-unit-testing-fundamentals/#3-repeatable","text":"\u5355\u5143\u6d4b\u8bd5\u7684\u6bcf\u4e2a\u7528\u4f8b\u90fd\u8981\u53ef\u4ee5\u88ab\u91cd\u590d\u8fd0\u884c\uff0c\u5e76\u4e14\u6bcf\u6b21\u8fd0\u884c\u8981\u80fd\u5f97\u5230\u540c\u6837\u7684\u7ed3\u679c\u3002\u53e6\u5916\uff0c\u8981\u80fd\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e0a\u8fd0\u884c\uff0c\u4f8b\u5982\u5728\u5176\u4ed6\u56e2\u961f\u6210\u5458\u7684\u5f00\u53d1\u8bbe\u5907\u4e0a\u3002","title":"3. \u53ef\u91cd\u590d\uff08Repeatable\uff09\u539f\u5219"},{"location":"03-unit-testing-fundamentals/#4-self-validating","text":"\u5355\u5143\u6d4b\u8bd5\u7684\u6bcf\u4e2a\u7528\u4f8b\u8fd0\u884c\u7ed3\u679c\u8981\u901a\u8fc7\u65ad\u8a00\u9a8c\u8bc1\uff0c\u4e0d\u5e94\u901a\u8fc7\u4eba\u5de5\u9a8c\u8bc1\u3002","title":"4. \u81ea\u6211\u9a8c\u8bc1\uff08Self Validating\uff09\u539f\u5219"},{"location":"03-unit-testing-fundamentals/#5-timely","text":"\u5355\u5143\u6d4b\u8bd5\u6bcf\u4e2a\u7528\u4f8b\u7684\u8fd0\u884c\u7ed3\u679c\u8981\u901a\u8fc7\u65ad\u8a00\u9a8c\u8bc1\uff0c\u4e0d\u5e94\u901a\u8fc7\u4eba\u5de5\u9a8c\u8bc1\u3002","title":"5. \u53ca\u65f6\uff08Timely\uff09\u539f\u5219"},{"location":"03-unit-testing-fundamentals/#362","text":"\u5728\u56e2\u961f\u4e2d\uff0c\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u4ee3\u7801\u8981\u548c\u4e1a\u52a1\u4ee3\u7801\u4e00\u6837\u4fdd\u6301\u7edf\u4e00\u3001\u6574\u6d01\u3002\u4e0b\u9762\u6574\u7406\u4e86\u4e00\u4e9b\u7ea6\u5b9a\u53ca\u89c4\u8303\u3002 \u6d4b\u8bd5\u7528\u4f8b\u7684\u65b9\u6cd5\u540d\u79f0\u4f7f\u7528\u4e0b\u5212\u7ebf\uff0c\u5e76\u4e14\u8981\u8868\u8fbe\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u53e5\u5b50\uff0c\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u4f5c\u4e3a\"\u6d3b\"\u6587\u6863\u3002 \u6d4b\u8bd5\u6587\u4ef6\u8981\u548c\u4e1a\u52a1\u4ee3\u7801\u7c7b------\u5bf9\u5e94\uff0c\u5e76\u4e14\u8981\u653e\u7f6e\u5230\u548c\u4e1a\u52a1\u4ee3\u7801\u540c\u7ea7\u7684\u6d4b\u8bd5\u6a21\u5757\u4e2d\uff0c\u4f8b\u5982\"src/testjava\"\uff0c\u8fd9\u6837IDE\u5de5\u5177\u624d\u53ef\u4ee5\u81ea\u52a8\u8bc6\u522b\uff0c\u5e76\u901a\u8fc7\u5feb\u6377\u952e\u8df3\u8f6c\u3002 \u6d4b\u8bd5\u6587\u4ef6\u8981\u548c\u4e1a\u52a1\u4ee3\u7801\u6587\u4ef6\u540c\u540d\uff0c\u4e14\u5e94\u4f7f\u7528Test\u7ed3\u675f\u3002 \u8981\u6309\u7167Given...When...Then\u7684\u98ce\u683c\u7ec4\u7ec7\u6d4b\u8bd5\u4ee3\u7801\u3002 \u6d4b\u8bd5\u7528\u4f8b\u5fc5\u987b\u6709\u5145\u5206\u7684\u65ad\u8a00\u8bed\u53e5\u3002 \u4e0d\u9700\u8981\u7279\u522b\u7684\u8bbe\u7f6e\u5c31\u80fd\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u3002 \u4e0d\u5141\u8bb8\u6ce8\u91ca\u5355\u5143\u6d4b\u8bd5\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u9700\u8981\u5feb\u901f\u8df3\u8fc7\uff0c\u4f7f\u7528@Ignore\u6ce8\u89e3\u3002 \u5982\u679c\u6539\u53d8\u4e86\u5168\u5c40\u5bf9\u8c61\uff0c\u8981\u4f7f\u7528@After\u6ce8\u89e3\u6e05\u7406\uff0c\u4fdd\u6301\u72ec\u7acb\u539f\u5219\u3002 \u5982\u679c\u88ab\u6d4b\u8bd5\u7684\u7c7b\u5b9e\u73b0\u4e86\u63a5\u53e3\uff0c\u5c3d\u91cf\u901a\u8fc7\u63a5\u53e3\u7684\u7c7b\u578b\u6d4b\u8bd5\u3002 \u914d\u7f6e\u5408\u9002\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u8981\u4e3a\u4e0d\u540c\u7684\u4ee3\u7801\u914d\u7f6e\u4e0d\u540c\u7b49\u7ea7\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u3002\u6838\u5fc3\u4ee3\u7801\u7684\u6d4b\u8bd5\u7387\u5e94\u4e3a100%\u3002 \u901a\u7528\u7684\u51c6\u5907\u5de5\u4f5c\u4f7f\u7528\u76f8\u5173\u751f\u547d\u5468\u671f\u6ce8\u89e3\uff0c\u907f\u514d\u91cd\u590d\u3002 \u901a\u7528\u7684\u6570\u636e\u51c6\u5907\u5de5\u4f5c\u53ef\u4ee5\u901a\u8fc7\u63d0\u53d6\u4e00\u4e2a\u6d4b\u8bd5\u52a9\u624b\u7c7b\u6765\u5b8c\u6210\u3002 \u63d0\u4ea4\u4ee3\u7801\u524d\u4fdd\u8bc1\u5355\u5143\u6d4b\u8bd5\u5df2\u901a\u8fc7\u3002 \u4fee\u6539\u4e1a\u52a1\u4ee3\u7801\u65f6\uff0c\u8981\u540c\u6b65\u4fee\u6539\u5355\u5143\u6d4b\u8bd5\uff0c\u5e76\u8865\u5145\u8db3\u591f\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002","title":"3.6.2 \u5355\u5143\u6d4b\u8bd5\u7684\u7ea6\u5b9a"},{"location":"03-unit-testing-fundamentals/#37","text":"\u672c\u7ae0\u5148\u4ecb\u7ecd\u4e86\u5355\u5143\u6d4b\u8bd5\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u6bd4\u5982\u5982\u4f55\u4f7f\u7528\u65ad\u8a00\u3001\u6d4b\u8bd5\u5f02\u5e38\u7b49\uff0c\u7136\u540e\u4ecb\u7ecd\u4e86\u6570\u636e\u51c6\u5907\u548c\u6e05\u7406\u7684\u65b9\u6cd5\uff0c\u63a5\u7740\u53c8\u8bb2\u89e3\u4e86\u4e00\u4e9b\u4f7f\u7528\u6280\u5de7\u548c\u8bca\u65ad\u95ee\u9898\u7684\u65b9\u6cd5\u3002\u4efb\u4f55\u56e2\u961f\u5728\u8fdb\u884c\u7f16\u7801\u65f6\u90fd\u9700\u8981\u901a\u8fc7\u4e00\u4e9b\u5951\u7ea6\u6765\u4fdd\u8bc1\u56e2\u961f\u7684\u534f\u4f5c\u987a\u5229\u3002\u56e0\u6b64\uff0c\u672c\u7ae0\u7684\u6700\u540e\u6574\u7406\u4e86\u4e00\u4efd\u5355\u5143\u6d4b\u8bd5\u7684\u7ea6\u5b9a\uff0c\u5e76\u4ecb\u7ecd\u4e86\u5355\u5143\u6d4b\u8bd5\u7684\u539f\u5219\u3002 \u5355\u5143\u6d4b\u8bd5\u5e76\u4e0d\u662f\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u7684\u4e13\u5229\uff0c\u5b83\u5e94\u8be5\u662f\u5408\u683c\u5de5\u7a0b\u5e08\u7684\u57fa\u672c\u80fd\u529b\u3002\u5355\u5143\u6d4b\u8bd5\u5de5\u5177\u548c\u6846\u67b6\u7684\u9009\u7528\u4ee5\u8f7b\u91cf\u7ea7\u3001\u80fd\u575a\u6301\u4e3a\u539f\u5219\u3002\u4e00\u4e0a\u6765\u5c31\u8981\u6c42100%\u7684\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\u6216\u8005\u4f7f\u7528\u4e00\u4e9b\u51b7\u95e8\u590d\u6742\u7684\u6846\u67b6\uff0c\u4e0d\u5229\u4e8e\u56e2\u961f\u575a\u6301\u4e0b\u53bb\u3002 1\uff5e3\u7ae0\u7684\u5185\u5bb9\u5df2\u7ecf\u80fd\u5e2e\u52a9\u5927\u5bb6\u7f16\u5199\u5927\u90e8\u5206\u5de5\u5177\u7c7b\u5e93\u7684\u5355\u5143\u6d4b\u8bd5\u3002\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u5f80\u5f80\u8026\u5408\u5ea6\u66f4\u9ad8\uff0c\u8981\u4e3a\u8fd9\u7c7b\u4ee3\u7801\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u5219\u8fd8\u9700\u8981\u4e00\u4e9b\u5176\u4ed6\u7684\u6280\u5de7\uff0c\u8fd9\u4e9b\u5c06\u5728\u540e\u6587\u4e2d\u9010\u6b65\u4ecb\u7ecd\u3002","title":"3.7 \u5c0f\u7ed3"},{"location":"04-testing-doubles/","text":"\u7b2c 4 \u7ae0 \u6d4b\u8bd5\u66ff\u8eab \u6d4b\u8bd5\u66ff\u8eab\u662f\u5355\u5143\u6d4b\u8bd5\u4e2d\u975e\u5e38\u6709\u7528\u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u7528\u6765\u9694\u79bb\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u8ba9\u4e0d\u53ef\u6d4b\u8bd5\u7684\u7ec4\u4ef6\u53d8\u5f97\u53ef\u4ee5\u6d4b\u8bd5\u3002 \u66fe\u542c\u5f88\u591a\u670b\u53cb\u8bf4\uff0c\u6d4b\u8bd5\u66ff\u8eab\u8fd9\u4e2a\u6982\u5ff5\u975e\u5e38\u96be\u7406\u89e3\uff0c\u5b83\u6709\u79cd\u6d53\u6d53\u7684\u7ffb\u8bd1\u5473\u3002\u6211\u4e00\u76f4\u5728\u5c1d\u8bd5\u627e\u4e00\u4e2a\u5408\u9002\u7684\u7c7b\u6bd4\u6765\u8bf4\u660e\u8fd9\u4e9b\u6982\u5ff5\uff0c\u76f4\u5230\u6709\u4e00\u6b21\u6211\u5bb6\u7684\u706f\u6ce1\u574f\u4e86\uff0c\u6211\u5e26\u7740\u8fd9\u4e2a\u706f\u6ce1\u5230\u4e00\u5bb6\u4e94\u91d1\u5e97\u8d2d\u4e70\u65b0\u7684\u706f\u6ce1\u3002\u8001\u677f\u5728\u67dc\u5b50\u91cc\u7ffb\u51fa\u4e00\u4e2a\u5dee\u4e0d\u591a\u7684\u706f\u6ce1\uff0c\u7136\u540e\u63d2\u5230\u95e8\u540e\u9884\u7559\u7684\u4e00\u4e2a\u706f\u5ea7\u4e0a\uff0c\u706f\u6ce1\u4eae\u4e86\u8d77\u6765\u3002\u6211\u5ffd\u7136\u7075\u5149\u4e00\u95ea\uff0c\u8fd9\u4e0d\u5c31\u662f\u6d4b\u8bd5\u66ff\u8eab\u4e00\u4e2a\u7edd\u5999\u7684\u7c7b\u6bd4\u4e48\uff1f\u4ee3\u66ff\u771f\u5b9e\u706f\u5ea7\uff08\u57fa\u7840\u8bbe\u65bd\uff09\u8fdb\u884c\u9a8c\u8bc1\uff08\u5355\u5143\u6d4b\u8bd5\uff09\u7684\u88c5\u7f6e\u5c31\u662f\u6d4b\u8bd5\u66ff\u8eab\u3002 \u5408\u7406\u8fd0\u7528\u6d4b\u8bd5\u66ff\u8eab\u53ef\u4ee5\u5728\u8fd0\u884c\u6d4b\u8bd5\u65f6\u53bb\u9664\u5bf9\u8fd0\u884c\u73af\u5883\u7684\u4f9d\u8d56\u3002\u8fd9\u4e5f\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u542f\u793a\uff0c\u90a3\u5c31\u662f\u5c3d\u53ef\u80fd\u5730\u4f7f\u7528\u6e05\u6670\u7684\u8fb9\u754c\u6765\u8bbe\u8ba1\u4ee3\u7801\uff0c\u8ba9\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u66f4\u52a0\u5bb9\u6613\u3002 \u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u6709\u65f6\u5019\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u3002\u5bf9\u4e8e\u524d\u9762\u63d0\u5230\u7684\u7c7b\u6bd4\uff0c\u5047\u5982\u706f\u6ce1\u662f\u901a\u8fc7\u7535\u7ebf\u76f4\u63a5\u8fde\u63a5\u5230\u4f9b\u7535\u7cfb\u7edf\u7684\u800c\u4e0d\u662f\u706f\u5ea7\uff0c\u90a3\u4e48\u6d4b\u8bd5\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u56f0\u96be\u3002 \u672c\u7ae0\u7684\u76ee\u6807\u662f\u89e3\u51b3\u5355\u5143\u6d4b\u8bd5\u5728\u5b9e\u9645\u7f16\u5199\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u5404\u79cd\u56f0\u96be\uff0c\u901a\u8fc7\u6d4b\u8bd5\u66ff\u8eab\u8ba9\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u987a\u5229\u8fdb\u884c\u3002\u5728Java\u6280\u672f\u6808\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Mockito\u3001PowerMock\u8fd9\u4e24\u79cd\u6d4b\u8bd5\u66ff\u8eab\u5de5\u5177\u3002 \u672c\u7ae0\u6db5\u76d6\u7684\u5185\u5bb9\u6709\uff1a \u4f7f\u7528Mockito\u5b9e\u73b0public\u65b9\u6cd5\u7684\u6a21\u62df\uff0c\u7528\u4e8e\u89e3\u51b3\u5927\u90e8\u5206\u53ef\u6d4b\u6027\u95ee\u9898\u3002 \u4f7f\u7528PowerMock\u5b9e\u73b0\u7279\u6b8a\u7684\u6d4b\u8bd5\u573a\u666f\u3002\u6bd4\u5982\u5728\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u4e2d\u6709\u4e00\u6bb5Sytem.out. printf\u4ee3\u7801\uff0c\u6211\u4eec\u5f88\u96be\u8fdb\u884c\u66ff\u6362\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4f7f\u7528\u66f4\u7279\u6b8a\u7684\u65b9\u6cd5\u3002 4.1 \u6d4b\u8bd5\u66ff\u8eab\u7b80\u4ecb \u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u8005\u4e00\u4e2a\u7cfb\u7edf\u6709\u65f6\u5f88\u96be\u63d0\u4f9b\u4e00\u4e2a\u7eaf\u7cb9\u7684\u7c7b\u6765\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u5f80\u5f80\u4ea4\u7ec7\u5728\u4e00\u8d77\uff0c\u9700\u8981\u62c6\u6210\u5404\u4e2a\u5355\u5143\u624d\u80fd\u9010\u4e2a\u51fb\u7834\uff0c\u8fd9\u4e5f\u662f\u5355\u5143\u6d4b\u8bd5\u7684\u5fc5\u8981\u6761\u4ef6\u3002 \u8981\u5c06\u8fd9\u4e9b\u4ea4\u7ec7\u5728\u4e00\u8d77\u7684\u5bf9\u8c61\u62c6\u5f00\uff0c\u9700\u8981\u901a\u8fc7\u4e00\u4e9b\u5de5\u5177\u6765\u6a21\u62df\u76f8\u5173\u6570\u636e\u6216\u66ff\u6362\u5177\u6709\u67d0\u4e9b\u7279\u5b9a\u884c\u4e3a\u7684\u7c7b\u7b49\u3002\u7f51\u7ad9 xunitpatterns.com \u628a\u8fd9\u4e9b\u5de5\u5177\u79f0\u4e3aTest Double\uff0c\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f\"\u6d4b\u8bd5\u66ff\u8eab\"\u3002 \u5728\u4e0d\u540c\u7684\u6d4b\u8bd5\u56fe\u4e66\u4e2d\u5bf9\u6d4b\u8bd5\u66ff\u8eab\u6709\u4e0d\u540c\u7684\u8bf4\u6cd5\u3002\u6bd4\u5982\uff0c\u5728\u4e00\u4e9b\u56fe\u4e66\u4e2d\u5c06Stubs\u8868\u8ff0\u4e3a\u6d4b\u8bd5\u66ff\u8eab\uff0c\u4f46\u5728\u6709\u4e9b\u56fe\u4e66\u4e2dStubs\u88ab\u4f5c\u4e3a\u6d4b\u8bd5\u66ff\u8eab\u4e2d\u7684\u4e00\u7c7b\u6765\u770b\u5f85\u3002 Martin Fowler\u4e3a\u4e86\u8ba9\u8fd9\u4e9b\u6982\u5ff5\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u5728\u4ed6\u7684\u7f51\u7ad9 https://martinfowler.com/bliki/TestDouble.html \u4e0a\u91cd\u65b0\u7ed9\u51fa\u4e86\u6d4b\u8bd5\u66ff\u8eab\u7684\u542b\u4e49\uff0c\u4e0b\u9762\u4e3b\u8981\u7ed3\u5408Martin Fowler \u7684\u770b\u6cd5\u9488\u5bf9\u6d4b\u8bd5\u66ff\u8eab\u76f8\u5173\u6982\u5ff5\u7ed9\u51fa\u8bf4\u660e\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u65e5\u5e38\u4ea4\u6d41\u4e2d\u4f1a\u76f4\u63a5\u4f7f\u7528\u82f1\u6587\u6765\u63cf\u8ff0\u8fd9\u4e9b\u6982\u5ff5\uff0c\u4e3a\u4e86\u7406\u89e3\u65b9\u4fbf\uff0c\u8fd9\u91cc\u4e5f\u63d0\u4f9b\u76f8\u5e94\u7684\u4e2d\u6587\u540d\u79f0\u4ee5\u4f9b\u53c2\u8003\u3002 \u6211\u4eec\u5c06Test Double\u4f5c\u4e3a\u62bd\u8c61\u6982\u5ff5\uff0c\u63cf\u8ff0\u591a\u79cd\u6d4b\u8bd5\u66ff\u8eab\u7684\u96c6\u5408\uff0c\u800c\u6d4b\u8bd5\u66ff\u8eab\u5177\u4f53\u7684\u79cd\u7c7b\u4f7f\u7528\u4e0b\u9762\u7684\u6982\u5ff5\u9610\u8ff0\uff08\u540d\u8bcd\u5f62\u5f0f\uff09\u3002 Dummy \uff1a\u54d1\u5bf9\u8c61\uff08\u6570\u636e\uff09\u3002\u6b64\u5bf9\u8c61\u4ec5\u4ec5\u7528\u4e8e\u586b\u5145\u53c2\u6570\u5217\u8868\uff0c\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u7528\u5230\u5b83\u4eec\uff0c\u5bf9\u6d4b\u8bd5\u7ed3\u679c\u4e5f\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u3002 Fake\uff1a \u4e00\u4e9b\u5047\u7684\u5bf9\u8c61\u6216\u8005\u7ec4\u4ef6\u3002\u5b83\u53ef\u5b8c\u6574\u66ff\u4ee3\u4f9d\u8d56\u7ec4\u4ef6\u3002\u4f8b\u5982\u5185\u5b58\u6570\u636e\u5e93H2\uff0c\u4e00\u822c\u53ea\u4f1a\u5728\u6d4b\u8bd5\u73af\u5883\u4e0b\u8d77\u4f5c\u7528\uff0c\u4e0d\u4f1a\u5e94\u7528\u4e8e\u751f\u4ea7\u3002 Stub\uff1a \u6869\u4ef6\u3002\u4e3a\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u63d0\u4f9b\u6570\u636e\uff0c\u6ca1\u6709\u4efb\u4f55\u884c\u4e3a\uff0c\u5f80\u5f80\u662f\u6d4b\u8bd5\u5bf9\u8c61\u4f9d\u8d56\u5173\u7cfb\u7684\u4e0a\u6e38\u6570\u636e\u3002 Spy\uff1a\u95f4\u8c0d\u5bf9\u8c61\u3002\u5b83\u4ee3\u7406\u4e86\u5f85\u6d4b\u5bf9\u8c61\u6240\u4f9d\u8d56\u7684\u5bf9\u8c61\uff0c\u5176\u884c\u4e3a\u5f80\u5f80\u7531\u88ab\u4ee3\u7406\u7684\u771f\u5b9e\u5bf9\u8c61\u63d0\u4f9b\uff0c\u4ee3\u7406\u7684\u76ee\u7684\u662f\u4e86\u89e3\u88ab\u4f9d\u8d56\u5bf9\u8c61\u5185\u90e8\u7684\u8fd0\u884c\u8fc7\u7a0b\u3002 Mock\uff1a \u6a21\u62df\u5bf9\u8c61\u3002\u7528\u4e8e\u6a21\u62df\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u7684\u4f9d\u8d56\uff0c\u5b83\u5f80\u5f80\u662f\u4e00\u4e2a\u5177\u6709\u7279\u5b9a\u884c\u4e3a\u7684\u5bf9\u8c61\u3002\u5f00\u53d1\u8005\u5728\u6d4b\u8bd5\u5f00\u59cb\u524d\u6839\u636e\u671f\u671b\u8bbe\u7f6e\u9884\u671f\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u5728\u8c03\u7528\u8fd9\u4e2a\u6a21\u62df\u5bf9\u8c61\u7684\u65b9\u6cd5\u65f6\uff0c\u8fd4\u56de\u9884\u5148\u8bbe\u5b9a\u7684\u503c\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e0d\u540c\u7684\u6d4b\u8bd5\u6846\u67b6\u5bf9\u8fd9\u4e9b\u6982\u5ff5\u7684\u5b9e\u73b0\u4f1a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u4f46\u5927\u4f53\u4e0a\u4e0d\u4f1a\u5dee\u592a\u591a\u3002\u4f8b\u5982\uff0c\u5728\u524d\u9762\u6211\u4eec\u5c06Stub\u7406\u89e3\u4e3a\u7ed9\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u63d0\u4f9b\u6570\u636e\u7684\u5bf9\u8c61\uff0c\u800c\u5728Mockito\u7684\u6e90\u7801\u4e2d\uff0c\u4e3a\u6a21\u62df\u5bf9\u8c61\u8bbe\u7f6e\u9884\u671f\u884c\u4e3a\u7684\u8fc7\u7a0b\u4e5f\u53eb\u4f5cStub\uff0c\u52a8\u8bcd\u4e3aStubbing\u3002\u6d4b\u8bd5\u6846\u67b6\u5f80\u5f80\u4f1a\u63d0\u4f9b\u4e0eMock\u3001Spy\u76f8\u5173\u7684\u5b9e\u73b0\uff0cStub\u3001Fake\u3001Dummy\u5219\u9700\u8981\u81ea\u5df1\u914d\u7f6e\u6216\u8005\u5b9e\u73b0\uff0c\u5728\u672c\u7ae0\u4ee5\u53ca\u540e\u7eed\u7684\u7ae0\u8282\u4e2d\u5c06\u4f1a\u805a\u7126\u4e8eMock\u3001Spy\u7684\u539f\u7406\u548c\u4f7f\u7528\u4e0a\u3002 \u6ce8\u610f\uff1a\u4e3a\u4e86\u8868\u8ff0\u6e05\u6670\uff0c\u540e\u6587\u4e2dMock\u3001Spy \u4f7f\u7528\u4e2d\u6587\u540d\u79f0\u8868\u8ff0\u3002Mock \u7ffb\u8bd1\u4e3a\u4e2d\u6587\u65f6\uff0c\u52a8\u8bcd\u4e3a\"\u6a21\u62df\"\uff0c\u540d\u8bcd\u4e3a\"\u6a21\u62df\u5bf9\u8c61\"\uff1bSpy \u7ffb\u8bd1\u4e3a\u4e2d\u6587\u65f6\uff0c\u52a8\u8bcd\u4e3a\"\u76d1\u89c6\"\uff0c\u540d\u8bcd\u4e3a \"\u95f4\u8c0d\u5bf9\u8c61\"\u3002 \u56fe4-1\u7b80\u5355\u8bf4\u660e\u4e86\u8fd9\u4e9b\u6d4b\u8bd5\u66ff\u8eab\u5206\u522b\u6709\u4ec0\u4e48\u7528\uff0c\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u4e0d\u5fc5\u5168\u90e8\u5f15\u5165\uff0c\u6839\u636e\u9700\u8981\u4f7f\u7528\u5373\u53ef\u3002\u4ee5\u7528\u6237\u6ce8\u518c\u4e3a\u4f8b\uff0c\u6211\u4eec\u7f16\u5199\u7684\u5355\u5143\u6d4b\u8bd5\u4f1a\u805a\u7126\u4e8e\u6ce8\u518c\u90e8\u5206\u7684\u4ee3\u7801\uff0c\u81f3\u4e8e\u5176\u4ed6\u90e8\u5206\uff0c\u80fd\u6a21\u62df\u5c31\u5c3d\u91cf\u60f3\u529e\u6cd5\u6a21\u62df\u3002 \u56fe 4-1 \u5404\u79cd\u6d4b\u8bd5\u66ff\u8eab\u7684\u89e3\u91ca \u4e0b\u9762\u6211\u4eec\u4f7f\u7528 Mockito \u6765\u6d4b\u8bd5\u4f9d\u8d56\u5173\u7cfb\u590d\u6742\u7684\u5bf9\u8c61\u3002 \u672c\u7ae0\u7684\u793a\u4f8b\u4ee3\u7801\u89c1 https://github.com/java-self-testing/java-self-testing-example/tree/master/stubs \u3002 4.2 Mockito \u56fe4-2\u4e3aMockito\u7684Logo\uff0c\u753b\u9762\u4e2d\u5305\u542b\u4e86\u4e00\u676f\u83ab\u5409\u6258\u9e21\u5c3e\u9152\uff0cMockito\u7684\u540d\u79f0\u5c31\u662f\u7531\u83ab\u5409\u6258\uff08Mojito\uff09\u7684\u8c10\u97f3\u800c\u6765\u3002 \u56fe 4-2 Mockito\u7684Logo Mockito\u662f\u4e00\u4e2a\u6613\u7528\u7684\u6a21\u62df\u6846\u67b6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5e72\u51c0\u3001\u6d41\u5f0f\u7684API\u7f16\u5199\u51fa\u5bb9\u6613\u9605\u8bfb\u7684\u6d4b\u8bd5\u4ee3\u7801\u3002Mockito\u548cJUnit 4\u914d\u5408\u5f97\u975e\u5e38\u5b8c\u7f8e\uff0c\u5728Stack Overflow \u793e\u533a\u7684\u6295\u7968\u4e2d\u6392\u540d\u8f83\u9ad8\uff0c\u53e6\u5916\u5b83\u4e5f\u662fGitHub\u4e2d\u5f15\u7528\u5360\u6bd4\u975e\u5e38\u9ad8\u7684\u4e00\u4e2a\u6846\u67b6\u3002 Mockito\u6700\u5e38\u7528\u7684\u662fmock\u3001spy\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5b83\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e24\u4e2a\u9759\u6001\u65b9\u6cd5\u6765\u5b8c\u6210\u3002\u4f7f\u7528mock\u65b9\u6cd5\u8f93\u5165\u4e00\u4e2a\u9700\u8981\u6a21\u62df\u7684\u7c7b\u578b\u540e\uff0cMockito\u4f1a\u6784\u9020\u4e00\u4e2a\u6a21\u62df\u5bf9\u8c61\uff0c\u5e76\u63d0\u4f9b\u4e00\u7cfb\u5217\u65b9\u6cd5\u64cd\u63a7\u6240\u751f\u6210\u7684\u6a21\u62df\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u6839\u636e\u53c2\u6570\u8fd4\u56de\u7279\u5b9a\u7684\u503c\u3001\u629b\u51fa\u5f02\u5e38\u6216\u9a8c\u8bc1\u8fd9\u4e2a\u6a21\u62df\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5\u662f\u5426\u88ab\u8c03\u7528\uff0c\u4ee5\u53ca\u901a\u8fc7\u4f55\u79cd\u53c2\u6570\u8c03\u7528\u7b49\u3002spy\u65b9\u6cd5\u5728\u4f7f\u7528\u4e0a\u4e0emock\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u5b83\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u5b9e\u4f8b\u5316\u597d\u7684\u5bf9\u8c61\uff0cMockito\u4f1a\u4ee3\u7406\u8fd9\u4e2a\u65b9\u6cd5\u800c\u4e0d\u662f\u65b0\u5efa\u4e00\u4e2a\u6a21\u62df\u7c7b\u3002 \u9009\u62e9Mockito\u7684\u53e6\u5916\u4e00\u4e2a\u539f\u56e0\u8fd8\u5728\u4e8e\u5b83\u7684\u751f\u6001\u548c\u53ef\u62d3\u5c55\u6027\u3002\u540e\u9762\u6211\u4eec\u5728\u4ecb\u7ecd\u4e00\u4e9b\u9759\u6001\u65b9\u6cd5\u3001\u79c1\u6709\u65b9\u6cd5\u7684\u6a21\u62df\u548c\u6d4b\u8bd5\u65f6\uff0c\u4f1a\u501f\u52a9PowerMock\u6765\u5b8c\u6210\uff0cPowerMock\u548cMockito\u80fd\u5f88\u597d\u5730\u534f\u4f5c\u3002 4.1.1\u4f7f\u7528 mock \u65b9\u6cd5 \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\uff0cstubs\u6a21\u5757\u6709\u4e00\u4e2aUserService\u5bf9\u8c61\uff0c\u7528\u6765\u6f14\u793a\u7528\u6237\u6ce8\u518c\u7684\u903b\u8f91\u3002\u5728register\u65b9\u6cd5\u4e2d\uff0c\u6ce8\u518c\u7684\u8fc7\u7a0b\u5206\u4e3a\u5bf9\u5bc6\u7801\u8fdb\u884cHash\u8ba1\u7b97\u3001\u8ba9\u6570\u636e\u6301\u4e45\u5316\u548c\u53d1\u9001\u90ae\u4ef6\u8fd9\u4e09\u4e2a\u6b65\u9aa4\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5b9e\u9645\u573a\u666f\u4e0b\u7684\u6ce8\u518c\u65b9\u6cd5\u6bd4\u8fd9\u66f4\u52a0\u590d\u6742\uff0c\u8fd9\u91cc\u505a\u4e86\u5927\u91cf\u7b80\u5316\uff0c\u4ee5\u4fbf\u4e8e\u6211\u4eec\u5c06\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u5355\u5143\u6d4b\u8bd5\u4e0a\u3002 ppublic class UserService { private UserRepository userRepository; private EmailService emailService; private EncryptionService encryptionService; public UserService(UserRepository userRepository, EmailService emailService, EncryptionService encryptionService) { this.userRepository = userRepository; this.emailService = emailService; this.encryptionService = encryptionService; } public void register(User user) { user.setPassword(encryptionService.sha256(user.getPassword())); userRepository.saveUser(user); String emailSubject = \"Register Notification\"; String emailContent = \"Register Account successful! your username is \" + user.getUsername(); emailService.sendEmail(user.getEmail(), emailSubject, emailContent); } } \u4e3a\u4e86\u6f14\u793a Mockito \u7684\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5\uff0c\u8fd9\u91cc\u6ca1\u6709\u4f7f\u7528Spring\u6846\u67b6\uff0c\u9700\u8981\u8bfb\u8005\u81ea\u5df1\u901a\u8fc7\u6784\u9020\u51fd\u6570\u7ec4\u7ec7\u5bf9\u8c61\u4f9d\u8d56\u5173\u7cfb\u3002 \u6211\u4eec\u7684\u6d4b\u8bd5\u76ee\u6807\u662fregister\u65b9\u6cd5\uff0c\u4e0e\u4e4b\u524d\u7684\u793a\u4f8b\u4e0d\u540c\uff0c\u8fd9\u91cc\u7684\u88ab\u6d4b\u8bd5\u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u56e0\u6b64\u65e0\u6cd5\u6839\u636e\u8fd4\u56de\u503c\u65ad\u8a00\uff0c\u5982\u679c\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\u5c31\u4ee3\u8868\u529f\u80fd\u548c\u903b\u8f91\u6b63\u5e38\u3002\u53e6\u5916\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8c03\u7528\u5176\u4ed6\u5bf9\u8c61\uff0c\u590d\u6742\u7684\u4f9d\u8d56\u5173\u7cfb\u5728\u73b0\u5b9e\u4e2d\u5f88\u5e38\u89c1\uff0c\u793a\u4f8b\u4e2d\u5df2\u7ecf\u7b80\u5316\u4e86\u3002 \u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0cUserService\u5bf9\u8c61\u7684\u6784\u9020\u65b9\u6cd5\u9700\u8981\u4f20\u4eba userRepository\u3001emailService\u3001encryptionService \u8fd9\u4e09\u4e2a\u5bf9\u8c61\uff0c\u5426\u5219\u65e0\u6cd5\u5de5\u4f5c\u3002 \u4e0b\u9762\u6f14\u793a\u7684\u662f\u5e94\u7528\u4e86\u6a21\u62df\u5bf9\u8c61\u7684\u6d4b\u8bd5\u793a\u4f8b\u3002\u9996\u5148\uff0c\u521b\u5efa\u4e00\u4e2aMaven\u9879\u76ee\u6216\u8005\u6a21\u5757\uff0c\u5728Pom\u6587\u4ef6\u4e2d\u589e\u52a0 Mockito\u7684\u4f9d\u8d56\uff1a <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.13</version> <scope>test</scope> </dependency> <dependency> <groupId>org.mockito</groupId> <artifactId>mockito-core</artifactId> <version>2.28.2</version> <scope>test</scope> </dependency> Mockito\u4f7f\u7528\u4e86Byte Buddy\u4f5c\u4e3a\u4ee3\u7406\u6280\u672f\uff0c\u6839\u636e\u66b4\u9732\u51fa\u6765\u7684API\u53ef\u77e5\uff0c\u53ea\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u7c7b\u4f5c\u4e3a\u53c2\u6570\u5c31\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u5e76\u6307\u5b9a\u8fd9\u4e2a\u4ee3\u7406\u5bf9\u8c61\u7684\u884c\u4e3a\u4ee5\u4fbf\u8fd4\u56de\u7279\u5b9a\u7684\u503c\uff0c\u4ece\u800c\u5b8c\u6210\u6d4b\u8bd5\u5de5\u4f5c\u3002 \u5728\u4e0b\u9762\u7684\u6d4b\u8bd5\u4ee3\u7801\u4e2d\uff0c\u4f1a\u4f7f\u7528Mockito \u521b\u5efa\u6211\u4eec\u9700\u8981\u7684\u88ab\u4f9d\u8d56\u5bf9\u8c61\uff1a public class UserServiceTest { @Test public void should_register() { // \u4f7f\u7528 Mockito \u6a21\u62df\u4e09\u4e2a\u5bf9\u8c61 UserRepository mockedUserRepository = mock(UserRepository.class); EmailService mockedEmailService = mock(EmailService.class); EncryptionService mockedEncryptionService = mock(EncryptionService.class); UserService userService = new UserService(mockedUserRepository, mockedEmailService, mockedEncryptionService); // Given User user = new User(\"admin@test.com\", \"admin\", \"xxx\"); // When userService.register(user); // Then verify(mockedEmailService).sendEmail( eq(\"admin@test.com\"), eq(\"Register Notification\"), eq(\"Register Account successful! your username is admin\")); } } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cmock \u65b9\u6cd5\u5e2e\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u6a21\u62df\u5bf9\u8c61\uff0c\u800c\u975e\u771f\u5b9e\u7684\u5bf9\u8c61\u3002mock\u65b9\u6cd5\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u6765\u81ea Mockito\uff0c\u4e3a\u4e86\u8ba9\u5185\u5bb9\u7b80\u77ed\uff0c\u6211\u4eec\u4e00\u822c\u76f4\u63a5\u5bfc\u5165\u9759\u6001\u65b9\u6cd5\u3002Mockito \u7c7b\u662fMockito\u7684\u95e8\u9762\u7c7b\uff0c\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u9759\u6001\u65b9\u6cd5\u4f9b\u5f00\u53d1\u8005\u4f7f\u7528\u3002 \u4e0a\u8ff0\u793a\u4f8b\u662f\u4ee5Given...When...Then\u7684\u65b9\u5f0f\u6765\u7ec4\u7ec7\u6d4b\u8bd5\u4ee3\u7801\u7684\uff0c\u8fd9\u53ef\u8ba9\u6d4b\u8bd5\u770b\u8d77\u6765\u66f4\u4e3a\u6e05\u6670\u3002Given...When...Then\u662f\u4e00\u79cd\u6d4b\u8bd5\u7684\u98ce\u683c\uff0c\u524d\u9762\u5728\u4ecb\u7ecd\u5355\u5143\u6d4b\u8bd5\u65f6\u5df2\u7ecf\u4f7f\u7528\u8fc7\uff0c\u7531\u4e8e\u8fd9\u91cc\u4f7f\u7528\u4e86\u6d4b\u8bd5\u66ff\u8eab\uff0c\u8fd9\u79cd\u98ce\u683c\u4f53\u73b0\u5f97\u66f4\u52a0\u660e\u663e\uff0c\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u3002 \u5f88\u591a\u6587\u7ae0\u8ba4\u4e3a\u8fd9\u79cd\u6d4b\u8bd5\u7528\u4f8b\u7684\u98ce\u683c\u662f\u884c\u4e3a\u9a71\u52a8\u5f00\u53d1\uff08BDD\uff09\u7684\u4e00\u90e8\u5206\uff0c\u5f88\u591aE2E\u6d4b\u8bd5\u6846\u67b6\u5c06\u5176\u4f5c\u4e3a\u9ed8\u8ba4\u7684\u4ee3\u7801\u7ec4\u7ec7\u5f62\u5f0f\uff0c\u56e0\u6b64\u88ab\u5e7f\u6cdb\u63a8\u8350\u4f7f\u7528\u3002\u5176\u57fa\u672c\u601d\u60f3\u662f\u5c06\u7f16\u5199\u573a\u666f\uff08\u6216\u6d4b\u8bd5\uff09\u5206\u89e3\u4e3a\u4ee5\u4e0b\u4e09\u4e2a\u90e8\u5206\uff1a Given \u90e8\u5206\u63cf\u8ff0\u5728\u5f00\u59cb\u6307\u5b9a\u7684\u884c\u4e3a\u4e4b\u524d\u7a0b\u5e8f\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u6d4b\u8bd5\u7684\u524d\u63d0\u6761\u4ef6\u3002 When \u90e8\u5206\u89e6\u53d1\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u7684\u8c03\u7528\u3002 Then \u90e8\u5206\u68c0\u67e5\u548c\u65ad\u8a00\u6307\u5b9a\u884c\u4e3a\u6240\u4ea7\u751f\u7684\u53d8\u5316\u3002\u8fd9\u79cd\u53d8\u5316\u53ef\u4ee5\u662f\u65b9\u6cd5\u8c03\u7528\u6210\u529f\u7684\u8fd4\u56de\u503c\u3001\u629b\u51fa\u7684\u5f02\u5e38\u3001\u4e0b\u6e38\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u7b49\u3002 Mockito\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u95e8\u9762\u7c7bBDDMockito\u6765\u8ba9\u5f00\u53d1\u8005\u4f7f\u7528\u76f8\u5173API\u7f16\u5199BDD\u98ce\u683c\u7684\u6d4b\u8bd5\u3002\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0cBDD\u4e0d\u662f\u5fc5\u9009\u9879\uff0c\u4f46\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u6a21\u4eff\u4e0e\u4e4b\u7c7b\u4f3c\u7684\u98ce\u683c\u3002 \u6309\u7167\u8fd9\u4e2a\u6a21\u5f0f\uff0c\u4e00\u4e2a\u6d4b\u8bd5\u4e2d\u5e94\u8be5\u53ea\u5305\u542b\u4e00\u7ec4Given...When...Then\uff0c\u5982\u679c\u51fa\u73b0\u591a\u7ec4\uff0c\u5219\u5efa\u8bae\u62c6\u5206\u6210\u591a\u4e2a\u6d4b\u8bd5\u3002 \u5bf9register\u65b9\u6cd5\u6765\u8bf4\uff0c\u60f3\u8981\u8ba9\u6d4b\u8bd5\u66f4\u6709\u6548\uff0c\u5c31\u9700\u8981\u9a8c\u8bc1\u4f20\u7ed9 sendEmail\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u5426\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\u3002\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528verify\u65b9\u6cd5\u4f20\u5165\u6a21\u62df\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u76f8\u5173\u65b9\u6cd5\u3002verify\u8fd8\u53ef\u4ee5\u4f20\u5165\u9a8c\u8bc1\u7684\u6b21\u6570\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u5faa\u73af\uff0c\u88ab\u6a21\u62df\u7684\u5bf9\u8c61\u53ef\u80fd\u4f1a\u4e0d\u6b62\u4e00\u6b21\u88ab\u8c03\u7528\uff0c\u4e0d\u4f20\u5165\u7684\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u662f1\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a verify(mockedEmailService).sendEmail( eq(\"admin@test.com\"), eq(\"Register Notification\"), eq(\"Register Account successful! your username is admin\")); verify(mockedEmailService) \u7b49\u4ef7\u4e8e verify(mockedEmailService, 1)\u3002 \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cverify(mockedEmailService) \u7b49\u4ef7\u4e8everify(mockedEmailService, 1) \u3002\u8fd9\u91cc\u8fd8\u9700\u8981\u9a8c\u8bc1\u53d1\u9001\u90ae\u4ef6\u7684\u53c2\u6570\u662f\u5426\u662f\u6211\u4eec\u6240\u671f\u671b\u7684\u3002\u6bd4\u5982\u9a8c\u8bc1\u53d1\u9001\u90ae\u4ef6\u7684\u5730\u5740\u662f\u5426\u4e3a\"admin@test.com\"\uff0c\u53d1\u9001\u7684\u5185\u5bb9\u4e2d\u662f\u5426\u5305\u542b\u4e86\u7528\u6237\u540d\u7b49\u4fe1\u606f\u3002 \u4e0a\u8ff0\u4ee3\u7801\u4f7f\u7528\u4e86 eq \u65b9\u6cd5\u8fdb\u884c\u5bf9\u6bd4\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0ceq \u65b9\u6cd5\u548c assertThat \u4e2d\u7684equalTo \u4e0d\u592a\u4e00\u6837\u3002eq \u65b9\u6cd5\u662f\u901a\u8fc7\u5bf9\u53c2\u6570\u8fdb\u884c\u9a8c\u8bc1\u6765\u5b9e\u73b0\u5bf9\u6bd4\u7684\uff0c\u5b83\u6765\u81ea\u4e8e ArgumentMatchers \u5bf9\u8c61\u3002 \u6211\u4eec\u77e5\u9053\uff0c\u53ea\u6709\u88ab\u6210\u529f\u62e6\u622a\u7684\u5bf9\u8c61\u624d\u80fd\u7528 verify \u65b9\u6cd5\u9a8c\u8bc1\u3002\u4e00\u4e2a\u5f62\u8c61\u7684\u4f8b\u5b50\u662f\uff0c\u5f53\u4f60\u53bb\u653f\u52a1\u4e2d\u5fc3\u529e\u7406\u65b0\u7684\u8eab\u4efd\u8bc1\u65f6\uff0c\u5de5\u4f5c\u4eba\u5458\u4f1a\u5728\u6570\u4e2a\u5de5\u4f5c\u65e5\u5185\u5b8c\u6210\u529e\u7406\uff0c\u7136\u540e\u901a\u8fc7\u90ae\u9012\u5458\u6d3e\u53d1\u5230\u6307\u5b9a\u7684\u6536\u8d27\u5730\u5740\u3002\u653f\u52a1\u4e2d\u5fc3\u7684\u9ad8\u7ea7\u68c0\u67e5\u4eba\u5458\u6765\u68c0\u67e5\u8eab\u4efd\u8bc1\u529e\u7406\u7684\u5de5\u4f5c\u662f\u5426\u505a\u5230\u4f4d\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u53bb\u76d1\u63a7\u8bc1\u4ef6\u529e\u7406\u4eba\u5458\u7684\u4e00\u4e3e\u4e00\u52a8\uff0c\u53ea\u9700\u8981\u5230\u4e0b\u6e38\u7684\u73af\u8282\u62bd\u67e5\u529e\u7406\u7684\u7ed3\u679c\u5373\u53ef\u3002\u6700\u9ad8\u660e\u7684\u65b9\u6cd5\u65e0\u7591\u662f\u6084\u6084\u626e\u6f14\u6210\u90ae\u9012\u5458\u4e0e\u529e\u4e8b\u5458\u5bf9\u63a5\u5de5\u4f5c\u3002\u68c0\u67e5\u4eba\u5458\u5c31\u662f\u8fd9\u91cc\u88ab\u6a21\u62df\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\"\u65b9\u6cd5\"\u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4e0b\u6e38\u7684\"\u53c2\u6570\"\u4e5f\u5c31\u88ab\u4f20\u9012\u5230\u68c0\u67e5\u4eba\u5458\u624b\u4e0a\u3002 \u5bb9\u6613\u8054\u60f3\u7684\u662f\uff0c\u68c0\u67e5\u70b9\u53ef\u4ee5\u662f\u8c03\u7528\u7684\u6b21\u6570\u3001\u8c03\u7528\u7684\u53c2\u6570\u3001\u8c03\u7528\u7684\u5ef6\u65f6\u7b49\uff0c\u800c\u5b9e\u73b0\u7684\u7ec6\u8282\u548c\u6bcf\u6b65\u7684\u903b\u8f91\u5728verify\u65b9\u6cd5\u4e2d\u5e76\u4e0d\u9700\u8981\u68c0\u67e5\u3002\u53cd\u4e4b\uff0c\u5305\u542b\u6570\u5341\u4e2averify\u65ad\u8a00\u65b9\u6cd5\u7684\u6d4b\u8bd5\u8ba9\u7f16\u5199\u8005\u548c\u9605\u8bfb\u8005\u90fd\u611f\u5230\u56f0\u60d1\uff0c\u5b83\u4eec\u7684\u804c\u8d23\u4e0d\u591f\u5355\u4e00\uff0c\u68c0\u67e5\u70b9\u4e92\u76f8\u8986\u76d6\uff0c\u4f46\u53c8\u6ca1\u6709\u5145\u5206\u53d1\u6325\u4f5c\u7528\u3002 4.2.2 \u6355\u6349\u53c2\u6570\u5bf9\u8c61 \u524d\u9762\u6211\u4eec\u9a8c\u8bc1\u4e86\u90ae\u4ef6\u53d1\u9001\u7684\u5185\u5bb9\u662f\u5426\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u9a8c\u8bc1\u4f20\u5165userRepository. saveUser\u65b9\u6cd5\u7684\u5185\u5bb9\u662f\u5426\u6309\u7167\u6211\u4eec\u7684\u9884\u671f\u6267\u884c\u3002\u56e0\u6b64\u6211\u4eec\u4e0d\u4ec5\u9700\u8981\u9a8c\u8bc1saveUser\u65b9\u6cd5\u7684\u8c03\u7528\u6b21\u6570\uff0c\u8fd8\u9700\u8981\u9a8c\u8bc1\u4f20\u5165\u7684\u5bf9\u8c61\u3002 \u5728 Java \u4e2d\uff0c\u5982\u679c\u4fee\u6539\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u503c\uff0c\u5728\u8fdb\u884c\u76f8\u7b49\u5224\u65ad\u65f6\uff0c\u53ea\u4f1a\u901a\u8fc7\u5f15\u7528\u6bd4\u8f83\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u65e0\u6cd5\u8d77\u5230\u65ad\u8a00\u548c\u6821\u9a8c\u7684\u4f5c\u7528\u3002\u6240\u4ee5\u5728\u4f7f\u7528verify\u65b9\u6cd5\u8fdb\u884c\u9a8c\u8bc1\u65f6\uff0c\u9700\u8981\u6355\u6349\u4f20\u4eba\u7684\u53c2\u6570\u5bf9\u8c61\uff0c\u518d\u901a\u8fc7\u524d\u9762\u4ecb\u7ecd\u7684\u65ad\u8a00\u6765\u5b8c\u6210\u9a8c\u8bc1\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7ArgumentCaptor\u6784\u5efa\u4e00\u4e2aArgument\u5bf9\u8c61\uff0c\u5e76\u6355\u6349\u53c2\u6570\uff0c\u518d\u7528\u4e8e\u65ad\u8a00\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a ArgumentCaptor<User> argument = ArgumentCaptor.forClass(User.class); verify(mockedUserRepository).saveUser(argument.capture()); assertEquals(\"admin@test.com\", argument.getValue().getEmail()); assertEquals(\"admin\", argument.getValue().getUsername()); 4.2.3 \u8bbe\u7f6e\u6a21\u62df\u5bf9\u8c61\u7684\u884c\u4e3a \u5728register\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7encryptionService.sha256\u65b9\u6cd5\u6765\u5bf9\u5bc6\u7801\u8fdb\u884cHash\u8ba1\u7b97\u3002\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u6a21\u62df\u5bf9\u8c61\u4e2d\u65b9\u6cd5\u7684\u884c\u4e3a\uff0c\u4ece\u800c\u5b9e\u73b0\u4e00\u4e2a\u5b8c\u6574\u7684\u5355\u5143\u6d4b\u8bd5\u3002 \u5728\u4e0d\u9884\u8bbe\u8fd4\u56de\u503c\u7684\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u6a21\u62df\u5bf9\u8c61\u7684\u65b9\u6cd5\u4f1a\u6309\u7167\u4e0b\u9762\u7684\u89c4\u5219\u8fd4\u56de\u9ed8\u8ba4\u503c\uff1a \u5982\u679c\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5305\u88c5\u7c7b\u578b\uff0c\u6a21\u62df\u5bf9\u8c61\u4f1a\u9ed8\u8ba4\u8fd4\u56denull\u3002 \u5982\u679c\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u4f1a\u8fd4\u56de\u76f8\u5e94\u7684\u9ed8\u8ba4\u503c\uff0c\u4f8b\u5982\u6570\u5b57\u7c7b\u578b\u4f1a\u8fd4\u56de0\uff0c\u5e03\u5c14\u7c7b\u578b\u4f1a\u8fd4\u56defalse\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u6d4b\u8bd5\u5404\u79cd\u884c\u4e3a\uff0c\u9700\u8981\u8ba9\u6a21\u62df\u5bf9\u8c61\u6309\u7167\u6211\u4eec\u7684\u610f\u56fe\u8fd4\u56de\u6570\u636e\u6216\u8005\u505a\u4e00\u4e9b\u5176\u4ed6\u64cd\u4f5c\u3002\u901a\u8fc7when(...). thenReturn(...) \u8bed\u53e5\u53ef\u4ee5\u4fee\u6539\u6a21\u62df\u5bf9\u8c61\u4e2d\u88ab\u6a21\u62df\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\u7684\u884c\u4e3a\u6216\u8fd4\u56de\u503c\u3002 \u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0csha256\u65b9\u6cd5\u4f20\u5165\u4e86\u4e00\u4e2aany\u65b9\u6cd5\uff0c\u5b83\u662f\u53c2\u6570\u5339\u914d\u5668\uff0c\u901a\u8fc7\u5339\u914d\u4e00\u4e9b\u6761\u4ef6\u6765\u51b3\u5b9a\u662f\u5426\u4fee\u6539\u88ab\u6a21\u62df\u65b9\u6cd5\u7684\u884c\u4e3a\u6216\u8fd4\u56de\u503c\u3002\u5982\u679cany \u65b9\u6cd5\u4e0d\u5e26\u53c2\u6570\uff0c\u5219\u610f\u5473\u7740\u4efb\u4f55\u53c2\u6570\u90fd\u6ee1\u8db3\u6761\u4ef6\u3002\u5982\u679cany\u65b9\u6cd5\u4f7f\u7528any(Class type) \u7684\u5f62\u5f0f\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\uff0c\u90a3\u4e48\u5b83\u4f1a\u9650\u5b9a\u5177\u4f53\u7684\u53c2\u6570\u7c7b\u578b\u3002\u7c7b\u4f3c\u5730\uff0cArgumentMatchers\u7c7b\u4e2d\u8fd8\u6709eq\u3001contains\u7b49\u65b9\u6cd5\u7528\u4e8e\u66f4\u7cbe\u786e\u7684\u5339\u914d\u3002 when(mockedEncryptionService.sha256(any())) .thenReturn(\"cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860\"); when\u65b9\u6cd5\u53ef\u63a5\u6536\u4e00\u4e2a\u6a21\u62df\u5bf9\u8c61\u6216\u95f4\u8c0d\u5bf9\u8c61\uff08\u540e\u9762\u4f1a\u8ba8\u8bba\uff09\u4f5c\u4e3a\u53c2\u6570\uff0c\u968f\u540e\u4f1a\u8c03\u7528\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u6cd5\u9884\u7f6e\u884c\u4e3a\u3002 thenReturn\uff1a\u9884\u7f6e\u4e00\u4e2a\u8fd4\u56de\u503c\u3002 thenThrow\uff1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002 thenCallRealMethod\uff1a\u8c03\u7528\u95f4\u8c0d\u5bf9\u8c61\u4e0a\u88ab\u4ee3\u7406\u7684\u539f\u59cb\u65b9\u6cd5\u3002 thenAnswer\uff1a\u8fd4\u56de\u4e00\u4e2a Answer \u5bf9\u8c61\uff0cAnswer \u5bf9\u8c61\u662f\u9884\u7f6e\u884c\u4e3a\u7684\u5c01\u88c5\u7c7b\uff0c\u4e0a\u9762\u4e09\u79cd\u90fd\u662f\u4e00\u79cdAnswer\u7684\u5b9e\u73b0\u3002 \u4ed4\u7ec6\u89c2\u5bdf\u4f60\u4f1a\u53d1\u73b0\uff0c\u8fd9\u91cc\u8d4b\u4e88\u4e00\u4e2a\u6a21\u62df\u5bf9\u8c61\u76f8\u5e94\u884c\u4e3a\u7684\u64cd\u4f5c\u662f\u901a\u8fc7\u76f4\u63a5\u8c03\u7528\u8fd9\u4e2a\u6a21\u62df\u5bf9\u8c61\u4e0a\u7684\u65b9\u6cd5\uff0c\u5e76\u4f20\u9012\u4e00\u4e2a\u53c2\u6570\u5339\u914d\u5bf9\u8c61\u6765\u5b9e\u73b0\u7684\u3002\u4f7f\u7528\u8fd9\u79cd\u8bed\u6cd5\u8bbe\u7f6e\u6a21\u62df\u5bf9\u8c61\u7684\u9884\u671f\u884c\u4e3a\uff0c\u5c31\u50cf\u8c03\u7528\u666e\u901a\u65b9\u6cd5\u4e00\u6837\u65b9\u4fbf\uff0c\u4f46\u662f\u5bb9\u6613\u8ba9\u4eba\u611f\u5230\u56f0\u60d1\u3002 \u6211\u7b2c\u4e00\u6b21\u4f7f\u7528\u8fd9\u4e2a\u8bed\u6cd5\u7684\u65f6\u5019\u611f\u5230\u4e0d\u53ef\u601d\u8bae\uff0c\u8fd9\u9a71\u4f7f\u6211\u53bb\u9605\u8bfb\u4e86Mockito\u7684\u6e90\u4ee3\u7801\u3002Mockito\u5728\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\u4e2d\u4f1a\u8bb0\u5f55\u6a21\u62df\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u88ab\u8d4b\u4e88\u671f\u671b\u7684\u884c\u4e3a\uff0c\u6a21\u62df\u5bf9\u8c61\u4e0a\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u5219\u4f1a\u88ab\u8ba4\u4e3a\u662f\u8bbe\u7f6e\u9636\u6bb5\u3002\u82e5\u5b58\u5728\u6a21\u62df\u5bf9\u8c61\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u8bbe\u7f6e\u4e86\u884c\u4e3a\uff0c\u90a3\u4e48\u5b83\u518d\u88ab\u8c03\u7528\u4f1a\u8fd4\u56de\u5148\u524d\u8bbe\u7f6e\u7684\u8fd4\u56de\u503c\u6216\u89e6\u53d1\u76f8\u5e94\u903b\u8f91\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u6709\u70b9\u50cf\u4e00\u628a\u7279\u6b8a\u8bbe\u8ba1\u7684\u67aa\uff0c\u7b2c\u4e00\u6b21\u6263\u4e0b\u6273\u673a\u65f6\u53ea\u662f\u4e3a\u4e86\u8ba9\u5b50\u5f39\u4e0a\u819b\uff0c\u7b2c\u4e8c\u6b21\u6263\u4e0b\u6273\u673a\u624d\u4f1a\u53d1\u5c04\u5b50\u5f39\u3002 Mockito \u8fd8\u6709\u4e00\u4e9b\u9690\u85cf\u7684\u89c4\u5219\uff0c\u82e5\u60f3\u907f\u514d\u6389\u5165\u8fd9\u4e9b\u9677\u9631\u5219\u9700\u8981\u4e86\u89e3\u4e00\u4e0b\uff1a \u53ef\u4ee5\u591a\u6b21\u5b9a\u4e49\u9884\u7f6e\u884c\u4e3a\uff0c\u540e\u7eed\u7684\u5b9a\u4e49\u4f1a\u8986\u76d6\u524d\u9762\u7684\u8bbe\u7f6e\uff0c\u4ee5\u6700\u540e\u4e00\u6b21\u4e3a\u51c6\u3002\u4f46\u662f\u4e0d\u63a8\u8350\u8fd9\u79cd\u505a\u6cd5\uff0c\u8fd9\u662f\u4e00\u79cd\u4ee3\u7801\u574f\u5473\u9053\uff0c\u5f15\u5165\u4e86\u4e00\u4e9b\u65e0\u6548\u7684\u4ee3\u7801\uff0c\u800c\u4e14\u4f1a\u8ba9\u53ef\u8bfb\u6027\u4e0b\u964d\u3002 \u4e00\u65e6\u9884\u7f6e\u4e86\u884c\u4e3a\uff0c\u65e0\u8bba\u8c03\u7528\u591a\u5c11\u6b21\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u8fd4\u56de\u76f8\u540c\u7684\u5185\u5bb9\u3002 Mockito \u8fd8\u63d0\u4f9b\u4e86\u5176\u4ed6\u5f62\u5f0f\u7684\u8bed\u6cd5\uff0c\u4ee5\u4fbf\u66f4\u7075\u6d3b\u5730\u7ed9\u6a21\u62df\u5bf9\u8c61\u8bbe\u7f6e\u9884\u671f\u884c\u4e3a\u3002 1. do(...).when(...) \u8bed\u6cd5 \u6ce8\u610f\uff0c\u5bf9\u4e8e\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u65b9\u6cd5\uff0c\u4e0d\u80fd\u4f7f\u7528when(...).thenReturn(...) \u8fd9\u79cd\u8bed\u6cd5\u8bbe\u7f6e\u9884\u671f\u884c\u4e3a\uff0c\u8fd9\u662f\u56e0\u4e3awhen\u65b9\u6cd5\u9700\u8981\u63a5\u6536\u4e00\u4e2a\u88ab\u6a21\u62df\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4f5c\u4e3a\u53c2\u6570\uff0c\u5982\u679c\u88ab\u6a21\u62df\u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528do(...).when(...) \u8bed\u6cd5\uff0c\u53d6\u5f97\u7684\u6548\u679c\u7c7b\u4f3c\u3002\u5728\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u628a\u9884\u7f6e\u7684\u884c\u4e3a\u5199\u5728\u524d\u9762\u5373\u53ef\u3002 doThrow(new RuntimeException()).when(mockedList).clear(); // \u4e0b\u9762\u7684\u8c03\u7528\u4f1a\u89e6\u53d1\u5f02\u5e38\u629b\u51fa mockedList.clear(); \u76f8\u5173\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\u7684\u8bf4\u660e\u5982\u4e0b\u3002 doReturn\uff1a\u9884\u7f6e\u4e00\u4e2a\u8fd4\u56de\u503c\u3002 doThrow\uff1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002 doNothing\uff1a\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002 doCallRealMethod\uff1a\u8c03\u7528\u95f4\u8c0d\u5bf9\u8c61\u4e0a\u88ab\u4ee3\u7406\u7684\u539f\u59cb\u65b9\u6cd5\u3002 doAnswer\uff1a\u524d\u9762\u51e0\u79cd\u65b9\u6cd5\u7684\u5c01\u88c5\u3002 \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684 when \u4e0d\u662f\u63a5\u6536\u65b9\u6cd5\u8c03\u7528\u540e\u7684\u8fd4\u56de\u503c\uff0c\u800c\u662f\u4f1a\u63a5\u6536\u6a21\u62df\u5bf9\u8c61\u672c\u8eab\uff0c\u6ce8\u610f\u533a\u5206\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002 2. BDD \u98ce\u683c\u8bed\u6cd5 \u8fd8\u8bb0\u5f97\u524d\u9762\u63d0\u5230\u7684Given..When...Then\u7684\u6d4b\u8bd5\u98ce\u683c\u5417\uff1f \u5728Mockito \u9ed8\u8ba4API\u63d0\u4f9b\u7684\u65b9\u6cd5\u4e2d\uff0cwhen\u65b9\u6cd5\u88ab\u7528\u4e8e\u5b9a\u4e49\u6a21\u62df\u5bf9\u8c61\u7684\u9884\u7f6e\u884c\u4e3a\uff0c\u4f46\u8fd9\u6837\u4e00\u6765\u5c31\u4e0eBDD\u7684\u98ce\u683c\u4e0d\u4e00\u81f4\u4e86\uff0c\u5728\u53ef\u8bfb\u6027\u4e0a\u4f1a\u53d7\u5230\u4e00\u5b9a\u7684\u5f71\u54cd\u3002 Mockito\u4e3a\u4e86\u9f13\u52b1\u4f7f\u7528BDD\u6d4b\u8bd5\u98ce\u683c\uff0c\u4e5f\u63d0\u4f9b\u4e86\u4e00\u5957API\uff0c\u5728\u8fd9\u5957API\u91cc\uff0c\u4f7f\u7528BDD-Mockito\u7c7b\u4e2d\u7684\u65b9\u6cd5\u4ee3\u66ff\u4e86Mockito\u7c7b\uff08BDDMock\u4e3aMockito\u7684\u65b9\u6cd5\u522b\u540d\uff09\uff0c\u53ef\u4ee5\u6a21\u4effBDD \u7684\u98ce\u683c\u8fdb\u884c\u6d4b\u8bd5\u3002\u5b83\u7684\u7528\u6cd5\u5f88\u7b80\u5355\uff0c\u5c06\u524d\u9762\u7684when\u4fee\u6539\u4e3agiven\uff0c\u5c06then\u66ff\u6362\u4e3awill\u5373\u53ef\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a given(mockedEncryptionService.sha256(any())) .willReturn(\"cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860\"); \u5728\u56e2\u961f\u8fbe\u6210\u5171\u8bc6\u7684\u60c5\u51b5\u4e0b\uff0c\u5229\u7528\u4e0a\u8ff0\u65b9\u6cd5\u522b\u540d\u53ef\u4ee5\u63d0\u9ad8\u6d4b\u8bd5\u7684\u81ea\u89e3\u91ca\u6027\u3002 4.2.4 \u53c2\u6570\u5339\u914d\u5668 {#\u53c2\u6570\u5339\u914d\u5668-1} \u53c2\u6570\u5339\u914d\u5668\u662fMockito\u7684\u4e00\u4e2a\u7279\u8272\u529f\u80fd\uff0c\u53ef\u4ee5\u8ba9Mock\u53d8\u5f97\u66f4\u52a0\u7075\u6d3b\uff0c\u7528\u4e8e\u533a\u5206\u540c\u4e00\u4e2a\u65b9\u6cd5\u591a\u6b21\u88ab\u4e0d\u540c\u7684\u53c2\u6570\u8c03\u7528\u7684\u60c5\u51b5\u3002\u53c2\u6570\u6821\u9a8c\u5668\u548cJUnit\u4e2d\u65ad\u8a00\u7684\u5339\u914d\u5668\u662f\u7c7b\u4f3c\u7684\u6a21\u5f0f\u3002 Mockito\u9700\u8981\u501f\u52a9\u53c2\u6570\u5339\u914d\u5668\u6765\u7ed1\u5b9a\u9884\u7f6e\u884c\u4e3a\uff0c\u53c2\u6570\u5339\u914d\u5668\u4e5f\u4f1a\u7528\u4e8everify\u65b9\u6cd5\u4e2d\uff0c\u8d77\u5230\u65ad\u8a00\u7684\u4f5c\u7528\u3002 \u4e3a\u4e86\u66b4\u9732 ArgumentMatchers\u4e2d\u7684 API\uff0cMockito \u7c7b\u76f4\u63a5\u7ee7\u627f\u4e86 ArgumentMatchers \u7c7b\uff0c\u8fd9\u8db3\u4ee5\u8bf4\u660e\u5b83\u7684\u91cd\u8981\u6027\u3002 \u524d\u9762\u7684\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86any\u53c2\u6570\u5339\u914d\u5668\uff0c\u5176\u7528\u9014\u662f\u8ba9\u4efb\u4f55\u53c2\u6570\u90fd\u53ef\u5339\u914d\u5230\u3002\u5982\u679c\u4f7f\u7528any \u53c2\u6570\u5339\u914d\u5668\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u6267\u884c\u540e\u4f1a\u6253\u5370true\u3002 List mockedList = mock(List.class); when(mockedList.add(any())).thenReturn(true); System.out.println(mockedList.add(null)); \u5982\u679c\u60f3\u8981\u5f97\u5230\u66f4\u4e3a\u7ec6\u81f4\u7684\u7c7b\u578b\u5339\u914d\uff0c\u53ef\u4ee5\u4f7f\u7528any(Class)\u3001anyxxx\u7b49\u5173\u4e8e\u7c7b\u578b\u7684\u53c2\u6570\u5339\u914d\u5668\u3002\u56e0\u4e3a\u6ca1\u6709\u5339\u914d\u4e0a\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u6253\u5370\u51fafalse\uff0c\u8fd9\u662fMockito\u9ed8\u8ba4\u7684\u884c\u4e3a\u5bfc\u81f4\u7684\u3002 List mockedList = mock(List.class); // \u7b49\u4ef7\u4e8e any(Boolean.class); when(mockedList.add(anyBoolean())).thenReturn(true); System.out.println(mockedList.add(null)); \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u6700\u5bb9\u6613\u5f04\u9519\u7684\u662fnull\u503c\u7684\u5904\u7406\uff0c\u7531\u4e8e\u5b57\u9762\u91cf\uff08\u4e0d\u7ecf\u8fc7\u5b9a\u4e49\u800c\u5728\u4ee3\u7801\u4e2d\u76f4\u63a5\u4f7f\u7528\u7684\u503c\uff09\u3001\u53c2\u6570\u5339\u914d\u5668\u3001\u65ad\u8a00\u4e2d\u7684\u5339\u914d\u5668\u5747\u6709\u591a\u79cd\u7684\u5199\u6cd5\uff0c\u5f00\u53d1\u8005\u975e\u5e38\u5bb9\u6613\u88ab\u8bef\u5bfc\u3002 \u4f7f\u7528\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u4f53\u9a8c\u4e0d\u540c\u7684\u5339\u914d\u65b9\u5f0f\u5e26\u6765\u7684\u4e0d\u540c\u6548\u679c\u3002\u6ce8\u610f\uff0c\u7406\u89e3\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u5bf9null\u503c\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u672a\u77e5\u7684\u95ee\u9898\u3002 List mockedList = mock(List.class); // \u7b49\u4ef7 isNull() when(mockedList.add(eq(null))).thenReturn(false); // \u8fd9\u91cc\u662f\u5728\u771f\u5b9e\u8c03\u7528\uff0c\u4f20\u5165\u5b57\u9762\u91cf System.out.println(mockedList.add(null)); // \u8fd9\u91cc\u662f\u5728\u9a8c\u8bc1\uff0c\u4ecd\u7136\u4f7f\u7528\u53c2\u6570\u5339\u914d\u5668 verify(mockedList).add(isNull()); // \u8fd9\u91cc\u662f\u5728\u65ad\u8a00\uff0c\u4f7f\u7528\u65ad\u8a00\u4e2d\u7684\u5339\u914d\u5668 assertThat(mockedList.get(0), nullValue()); assertThat(mockedList.get(0), equalTo(null)); assertThat(mockedList.get(0), new IsNull()); 4.2.5 \u4f7f\u7528 spy \u65b9\u6cd5 \u5982\u679c\u9879\u76ee\u4e2d\u7684\u5bf9\u8c61\u5f88\u591a\uff0c\u5bf9\u6240\u6709\u5f85\u6d4b\u8bd5\u5bf9\u8c61\u6240\u4f9d\u8d56\u7684\u5bf9\u8c61\u90fd\u8fdb\u884c\u6a21\u62df\uff0c\u5de5\u4f5c\u91cf\u4f1a\u975e\u5e38\u5927\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u60f3\u529e\u6cd5\u51cf\u5c11\u76f8\u5e94\u7684\u5de5\u4f5c\u91cf\u3002\u8bd5\u60f3\uff0c\u5982\u679c\u5bf9\u8c61B\u4f9d\u8d56A\uff0c\u5bf9\u8c61A\u5df2\u7ecf\u901a\u8fc7\u4e86\u5355\u5143\u6d4b\u8bd5\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba4\u4e3aA\u662f\u53ef\u4fe1\u4efb\u7684\u3002A\u7684\u7ed3\u679c\u53ef\u4ee5\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u76f4\u63a5\u7528\u4e8e\u6d4b\u8bd5\uff0c\u5b83\u5e76\u4e0d\u5f71\u54cd\u6d4b\u8bd5\u7684\u6b63\u786e\u6027\u3002 \u8981\u60f3\u5b9e\u73b0\u4e0a\u8ff0\u8bbe\u60f3\uff0c\u53ef\u4ee5\u4f7f\u7528spy\u65b9\u6cd5\u3002spy\u65b9\u6cd5\u76f8\u5f53\u4e8e\u5bf9\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u9700\u8981\u4f9d\u8d56\u7684\u65b9\u6cd5\u8fdb\u884c\u4ee3\u7406\uff0c\u5728\u4e0d\u6539\u53d8\u539f\u6765\u7684\u903b\u8f91\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u6240\u4f9d\u8d56\u7684\u5bf9\u8c61\u8fdb\u884c\u76d1\u542c\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u90e8\u5206\u65b9\u6cd5\u8bbe\u7f6e\u9884\u671f\u884c\u4e3a\u3002\u53ef\u4ee5\u8bf4spy\u65b9\u6cd5\u5b9e\u73b0\u4e86\u4e00\u79cd\u7279\u6b8a\u7684\u6a21\u62df\u3002\u5176\u5185\u90e8\u5b9e\u73b0\u548cmock\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u5c40\u90e8\u6a21\u62df\u884c\u4e3a\u3002 \u7531\u4e8e\u88abspy\u65b9\u6cd5\u5e94\u7528\u7684\u5bf9\u8c61\u5f80\u5f80\u4f1a\u6709\u81ea\u5df1\u7684\u5b9e\u73b0\uff0c\u56e0\u6b64\u53ef\u4ee5\u7701\u53bbgiven\u65b9\u6cd5\u3002\u95f4\u8c0d\u5bf9\u8c61\u4f9d\u7136\u53ef\u4ee5\u548c\u6a21\u62df\u5bf9\u8c61\u4e00\u6837\u88ab\u9a8c\u8bc1\uff0c\u4ee5\u53ca\u7ed9\u90e8\u5206\u65b9\u6cd5\u9884\u7f6e\u884c\u4e3a\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8eEncryptionService\uff0c\u6211\u4eec\u7ed9sha256\u65b9\u6cd5\u4e00\u4e2a\u771f\u5b9e\u7684\u5b9e\u73b0\uff1a public String sha256(String text) { MessageDigest md = null; try { md = MessageDigest.getInstance(\"SHA-256\"); return new BigInteger(1, md.digest(text.getBytes())).toString(16); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } return null; } \u5728register\u7684\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0c\u4fee\u6539EncryptionService\u7c7b\u7684mock\u65b9\u6cd5\u4e3aspy\u65b9\u6cd5\uff0c\u5e76\u5220\u9664mockedEncryptionService\u7684Given\u64cd\u4f5c\u3002 EncryptionService mockedEncryptionService = spy(new EncryptionService()); \u91cd\u65b0\u8fd0\u884c\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u5f97\u5230\u4e0e\u4f7f\u7528mock\u65b9\u6cd5\u540c\u6837\u7684\u6d4b\u8bd5\u7ed3\u679c\u3002\u4f7f\u7528spy\u65b9\u6cd5\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6d4b\u8bd5\u6837\u677f\u4ee3\u7801\uff0c\u907f\u514d\u91cd\u590d\u5de5\u4f5c\u3002\u4f7f\u7528spy\u65b9\u6cd5\u5c31\u50cf\u662f\u4e00\u4e2a\u95f4\u8c0d\u4fb5\u4eba\u9700\u8981\u6ce8\u5165\u7684\u5bf9\u8c61\u89c2\u5bdf\u4e0b\u6e38\u5bf9\u8c61\u7684\u884c\u4e3a\uff0c\u5e76\u8bb0\u5f55\u4e00\u5207\uff0c\u7136\u540e\u5728\u6d4b\u8bd5\u5b8c\u6210\u540e\u6c47\u62a5\u4ed6\u770b\u5230\u7684\u4fe1\u606f\u4e00\u6837\u3002 \u5e94\u7528\u4e86spy\u65b9\u6cd5\u7684\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u88ab\u9a8c\u8bc1\uff0c\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u4ecd\u7136\u53ef\u4ee5\u9a8c\u8bc1register\u65b9\u6cd5\u786e\u5b9e\u8c03\u7528\u4e86sha256\u65b9\u6cd5\u3002 verify(mockedEncryptionService).sha256(eq(\"xxx\")); 4.2.6 \u4f7f\u7528\u6ce8\u89e3 \u5982\u679c\u6bcf\u6b21\u90fd\u7f16\u5199mock\u3001spy\u65b9\u6cd5\u6765\u521b\u5efa\u6a21\u62df\u5bf9\u8c61\uff0c\u4ee3\u7801\u4f1a\u663e\u5f97\u5197\u957f\u4e14\u4e0d\u6613\u9605\u8bfb\u3002\u5229\u7528Java \u6ce8\u89e3\u7684\u80fd\u529b\uff0c\u53ef\u4ee5\u8ba9\u6a21\u62df\u884c\u4e3a\u63d0\u524d\u81ea\u52a8\u51c6\u5907\u597d\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f1a\u901a\u8fc7\u6ce8\u89e3\u5b8c\u6210\u6d4b\u8bd5\uff0c\u4ece\u800c\u51cf\u5c11\u6d4b\u8bd5\u7684\u4ee3\u7801\u91cf\u3002 \u4f7f\u7528\u6ce8\u89e3\u53ea\u9700\u8981\u4fee\u6539\u9700\u8981\u88ab\u6a21\u62df\u7684\u4e09\u4e2a\u5bf9\u8c61\uff0c\u5e76\u4f7f\u7528\u6ce8\u89e3\u4ee3\u66ff\u624b\u52a8\u521b\u5efa\u5373\u53ef\uff1a @Mock UserRepository mockedUserRepository; @Mock EmailService mockedEmailService; @Spy EncryptionService mockedEncryptionService = new EncryptionService(); \u5982\u679c\u53ea\u662f\u52a0\u4e0a\u6ce8\u89e3\uff0c\u6d4b\u8bd5\u65b9\u6cd5\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e2a\u6d4b\u8bd5\u7c7b\u9700\u8981\u5904\u7406\u6ce8\u89e3\u5e76\u521d\u59cb\u5316\u6a21\u62df\u884c\u4e3a\uff0c\u56e0\u6b64\u9700\u8981\u5728\u6d4b\u8bd5\u7c7b\u4e0a\u6dfb\u52a0\u4e00\u4e2aRunner\u8ba9Mockito\u6709\u673a\u4f1a\u53bb\u5904\u7406\u6ce8\u89e3\u3002Rumner\u4e2d\u7684\u903b\u8f91\u8fd0\u884c\u5728\u6240\u6709\u751f\u547d\u5468\u671f\u94a9\u5b50\u7684\u6700\u524d\u9762\uff0c\u5177\u6709\u6700\u5927\u7684\u7075\u6d3b\u6027\u3002 \u6211\u4eec\u53ef\u5728\u6d4b\u8bd5\u7c7b\u4e0a\u589e\u52a0\u4e0b\u9762\u7684\u6ce8\u89e3\uff1a @RunWith(MockitoJUnitRunner.class) \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60f3\u8981\u5145\u5206\u5229\u7528Mockito \u7684\u7279\u6027\u53ef\u4ee5\u4f7f\u7528MockitoJUnitRunner\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7PowerMockRunner\u6765\u914d\u5408\u4f7f\u7528PowerMock\uff0c\u901a\u8fc7SpringRumner\u6765\u914d\u5408\u4f7f\u7528Spring\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u57fa\u7c7b\uff0c\u5728\u57fa\u7c7b\u4e0a\u4f7f\u7528@RunWith\u6ce8\u89e3\u4fee\u9970\uff0c\u8fd9\u6837\u5c31\u4e0d\u5fc5\u5728\u6240\u6709\u7684\u5b50\u7c7b\u4e2d\u91cd\u590d\u5b9a\u4e49\u4e86\u3002 @Mock\u6ce8\u89e3\u7b49\u4ef7\u4e8emock\u65b9\u6cd5\uff0c@Spy\u6ce8\u89e3\u7c7b\u4f3c\uff0c\u7b49\u4ef7\u4e8espy\u65b9\u6cd5\u3002\u62ff\u5230\u6a21\u62df\u5bf9\u8c61\u6216\u95f4\u8c0d\u5bf9\u8c61\u4ee5\u540e\uff0c\u8fd8\u9700\u8981\u5c06\u6a21\u62df\u51fa\u6765\u7684\u5bf9\u8c61\u6ce8\u5165\u88ab\u6d4b\u8bd5\u7c7b\u4e2d\u624d\u80fd\u4f7f\u7528\u3002Mockito\u63d0\u4f9b\u4e86@InjectMocks \u6ce8\u89e3\u6765\u5b8c\u6210\u8fd9\u90e8\u5206\u5de5\u4f5c\u3002@InjectMocks\u7684\u6ce8\u5165\u5de5\u4f5c\u662f\u6839\u636e\u7c7b\u578b\u6765\u5b9e\u73b0\u7684\uff0c\u7c7b\u4f3c\u4e8e\u4f9d\u8d56\u6ce8\u4eba\uff0c\u4f46\u5982\u679c\u9700\u8981\u6ce8\u5165\u4e00\u4e2a\u7c7b\u7684\u4e0d\u540c\u5b9e\u4f8b\uff0c\u6ce8\u89e3\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\u3002 \u4f7f\u7528\u6ce8\u89e3\u7684\u5b8c\u6574\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u5728GitHub\u4e0a\u7684\u793a\u4f8b\u4ee3\u7801\u4ed3\u5e93\u4e2d\u627e\u5230\u6b64\u4ee3\u7801\u6bb5\u3002 @RunWith(MockitoJUnitRunner.class) public class UserServiceAnnotationTest { @Mock UserRepository mockedUserRepository; @Mock EmailService mockedEmailService; @Spy EncryptionService mockedEncryptionService = new EncryptionService(); @InjectMocks UserService userService; @Test public void should_register() { // Given User user = new User(\"admin@test.com\", \"admin\", \"xxx\"); // When userService.register(user); // Then verify(mockedEncryptionService).sha256(eq(\"xxx\")); verify(mockedEmailService).sendEmail( eq(\"admin@test.com\"), eq(\"Register Notification\"), eq(\"Register Account successful! your username is admin\")); // \u4e3a\u4e86\u9a8c\u8bc1\u4f20\u5165\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\u6355\u83b7\u5668ArgumentCaptor\u6765\u6355\u83b7\u4f20\u5165\u65b9\u6cd5\u7684\u53c2\u6570\u3002 ArgumentCaptor<User> argument = ArgumentCaptor.forClass(User.class); verify(mockedUserRepository).saveUser(argument.capture()); assertEquals(\"admin@test.com\", argument.getValue().getEmail()); assertEquals(\"admin\", argument.getValue().getUsername()); assertEquals(\"cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860\", argument.getValue().getPassword()); } } 4.2.7 \u5176\u4ed6\u6280\u5de7 \u5728\u4f7f\u7528 Mockito \u7684\u65f6\u5019\uff0c\u8fd8\u6709\u4e00\u4e9b\u6280\u5de7\u53ef\u4ee5\u7528\u6765\u6392\u9519\uff0c\u5728\u9047\u5230\u95ee\u9898\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u5bf9\u6211\u4eec\u6709\u5e2e\u52a9\u3002 1. \u6e05\u7406\u6a21\u62df\u72b6\u6001 \u5982\u679c\u9700\u8981\u5728\u4e00\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u4e2d\u53cd\u590d\u8bbe\u7f6e\u6a21\u62df\u5bf9\u8c61\u7684\u884c\u4e3a\uff0c\u4ee5\u53ca\u91cd\u590d\u9a8c\u8bc1\u88ab\u6a21\u62df\u7684\u65b9\u6cd5\u662f\u5426\u88ab\u8c03\u7528\uff0c\u4f46\u662f\u6a21\u62df\u5bf9\u8c61\u4e0a\u7684\u72b6\u6001\u53cd\u590d\u53d8\u5316\u4f1a\u5e72\u6270\u6d4b\u8bd5\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528reset\u65b9\u6cd5\u6e05\u7406\u6389\u6b64\u72b6\u6001\u3002 \u5f53\u7136\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0d\u5fc5\u624b\u52a8\u6e05\u7406\u6a21\u62df\u72b6\u6001\uff0c\u6d4b\u8bd5\u7ed3\u675f\u540e Mockito \u4f1a\u81ea\u52a8\u6e05\u7406\u3002\u5982\u679c\u5728\u4e00\u4e9b\u6d4b\u8bd5\u573a\u666f\u4e2d\uff0c\u5fc5\u987b\u4f7f\u7528reset\u65b9\u6cd5\u624b\u52a8\u6e05\u7406\uff0c\u4e5f\u8bf7\u5148\u8003\u8651\u662f\u5426\u5e94\u8be5\u5c06\u5176\u62c6\u5206\u6210\u591a\u4e2a\u4e0d\u540c\u7684\u6d4b\u8bd5\u3002 2. \u83b7\u53d6\u6a21\u62df\u72b6\u6001 \u4f7f\u7528Mockito\u65f6\uff0c\u53ef\u80fd\u4f1a\u56e0\u4e3a\u9519\u8bef\u64cd\u4f5c\u5bfc\u81f4\u6a21\u62df\u4e0d\u751f\u6548\uff0c\u4e3a\u65b9\u4fbf\u8c03\u8bd5\uff0c\u53ef\u4ee5\u6253\u5370\u51fa\u6a21\u62df\u5bf9\u8c61\u7684\u4fe1\u606f\u6765\u63a2\u67e5\u539f\u56e0\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a EncryptionService mockedEncryptionService = mock(EncryptionService.class); given(mockedEncryptionService.sha256(any())) .willReturn(\"cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860\"); MockingDetails mockingDetails = Mockito.mockingDetails(mockedEncryptionService); System.out.println(mockingDetails.isMock()); System.out.println(mockingDetails.getStubbings()); \u6267\u884c\u4e0a\u8ff0\u4ee3\u7801\u5373\u53ef\u8f93\u51fa\u5f53\u524d\u5bf9\u8c61\u7684\u6a21\u62df\u72b6\u6001\u3002\u901a\u8fc7\u68c0\u67e5\u8f93\u51fa\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u53c2\u6570\u5339\u914d\u662f\u5426\u5de5\u4f5c\uff1a true [encryptionService.sha256(<any>); stubbed with: [Returns: cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860]] 3. \u4f7f\u7528 Lambda \u98ce\u683c\u6821\u9a8c\u53c2\u6570 \u4f7f\u7528\u53c2\u6570\u6355\u83b7\u6765\u9a8c\u8bc1\u4e0b\u6e38\u5bf9\u8c61\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\u7684\u4ee3\u7801\u8f83\u4e3a\u5197\u957f\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528Matcher\u6765\u5b9e\u73b0Lambda\u98ce\u683c\u7684\u53c2\u6570\u6821\u9a8c\u3002\u539f\u7406\u4e3a\u53c2\u6570\u6821\u9a8c\u5668 argThat \u63a5\u53d7\u4e00\u4e2aArgumentMatcher\u63a5\u53e3\u7684\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u4f7f\u7528\u533f\u540d\u7684\u65b9\u5f0f\u5b9e\u73b0\u8be5\u63a5\u53e3\u3002\u8fd9\u4e2a\u63a5\u53e3\u53ea\u6709\u4e00\u4e2amatches\u65b9\u6cd5\uff0c\u5728Java 1.8\u4e4b\u540e\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a\u7bad\u5934\u51fd\u6570\uff0c\u4e5f\u5c31\u662fLambda\u98ce\u683c\u7684\u5199\u6cd5\u3002 \u6821\u9a8c mockedEncryptionService \u7684 sha256\u65b9\u6cd5\u7684\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a verify(mockedEncryptionService).sha256(argThat(new ArgumentMatcher<String>() { @Override public boolean matches(String argument) { return argument.equals(\"xxx\"); } })); \u6539\u5199\u6210 Lambda \u540e\u53d8\u5f97\u975e\u5e38\u7b80\u6d01\uff1a verify(mockedEncryptionService).sha256(argThat(argument -> { return argument.equals(\"xxx\"); })); \u751a\u81f3\u53ef\u4ee5\u5199\u6210\u4e00\u884c\uff1a verify(mockedEncryptionService).sha256(argThat(argument -> argument.equals(\"xxx\"))); \u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u80fd\u8fc7\u4e8e\u7b80\u5355\u65e0\u6cd5\u8bf4\u660e\u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\u8fdb\u884c\u65ad\u8a00\u7684\u65b9\u4fbf\u6027\uff0c\u66f4\u590d\u6742\u7684\u4f8b\u5b50\u53c2\u8003\u793a\u4f8b\u4ee3\u7801\u5e93\u4e2d lambda_verify_object_example \u6d4b\u8bd5\u793a\u4f8b\u3002 \u5173\u4e8e Mockito \u5b9e\u73b0\u7684\u8be6\u60c5\u53ef\u4ee5\u9605\u8bfb\u672c\u4e66\u7684\u6700\u540e\u4e00\u7ae0\uff0c\u8fdb\u4e00\u6b65\u4e86\u89e3\u8fd9\u4e9b\u6d4b\u8bd5\u6846\u67b6\u548c\u5e93\u7684\u6e90\u7801\u5206\u6790\u8fc7\u7a0b\u3002 4.3 \u589e\u5f3a\u6d4b\u8bd5\uff1a\u9759\u6001\u3001\u79c1\u6709\u65b9\u6cd5\u7684\u5904\u7406 Mockito\u5f88\u5f3a\u5927\uff0c\u80fd\u5e2e\u6211\u4eec\u5b8c\u6210\u5927\u90e8\u5206\u6a21\u62df\u5de5\u4f5c\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5\u5b83\u8fd8\u662f\u65e0\u80fd\u4e3a\u529b\u3002 \u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u83b7\u53d6\u7cfb\u7edf\u5f53\u524d\u7684\u65f6\u95f4\u6233\u65f6\uff0c\u53ef\u80fd\u4f1a\u8c03\u7528System.currentTimeMillis()\uff0c\u4f46\u6211\u4eec\u65e0\u6cd5\u6a21\u62df\u8fd9\u4e2a\u65b9\u6cd5\u3002\u6211\u4eec\u6709\u53ef\u80fd\u4f1a\u9047\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u73b0\u8c61\uff0c\u90e8\u5206\u6d4b\u8bd5\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\u5c31\u65e0\u6cd5\u901a\u8fc7\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u5b9e\u73b0\u4e2d\u53ef\u80fd\u6709\u5bf9\u7cfb\u7edf\u65f6\u95f4\u6233\u8fdb\u884c\u68c0\u67e5\u7684\u903b\u8f91\u3002\u518d\u6bd4\u5982\u8d22\u52a1\u62a5\u9500\u5355\u76f8\u5173\u7684\u903b\u8f91\uff0c\u8d39\u7528\u4ea7\u751f\u51e0\u4e2a\u6708\u540e\u518d\u8fdb\u884c\u62a5\u9500\u6d4b\u8bd5\u5c31\u4f1a\u5931\u8d25\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u521d\u6b21\u6d4b\u8bd5\u65f6\uff0c\u4f7f\u7528\u7684\u6a21\u62df\u6570\u636e\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u65f6\u95f4\uff0c\u56e0\u6b64\u51e0\u4e2a\u6708\u540e\u91cd\u65b0\u8fd0\u884c\u76f8\u5173\u7684\u5355\u5143\u6d4b\u8bd5\u5c31\u65e0\u6cd5\u901a\u8fc7\u4e86\u3002 \u53e6\u5916\uff0c\u5b9e\u9645\u9879\u76ee\u4e2d\u4e0d\u53ef\u907f\u514d\u5730\u9700\u8981\u6a21\u62df\u7cfb\u7edf\u4e2d\u7684\u9759\u6001\u65b9\u6cd5\u3001\u79c1\u6709\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5bf9\u4e00\u4e9b\u79c1\u6709\u65b9\u6cd5\u8fdb\u884c\u6d4b\u8bd5\uff08\u867d\u7136\u4e0d\u63a8\u8350\u6d4b\u8bd5\u79c1\u6709\u65b9\u6cd5\uff09\uff0c\u5982\u679c\u9047\u5230\u7684\u662f\u9057\u7559\u7cfb\u7edf\uff0cpublic\u65b9\u6cd5\u5f88\u5927\uff0c\u6d4b\u8bd5\u7684\u6210\u672c\u975e\u5e38\u9ad8\uff0c\u8fd9\u65f6\u4e5f\u53ef\u4ee5\u91c7\u7528\u6280\u672f\u624b\u6bb5\u6d4b\u8bd5\u79c1\u6709\u65b9\u6cd5\u3002 \u914d\u5408 Mockito \u4f7f\u7528\u7684\u53e6\u5916\u4e00\u4e2a\u6846\u67b6\u662fPowerMock\u3002PowerMock\u652f\u6301\u5404\u79cd\u6a21\u62df\u6846\u67b6\u5e76\u5bf9\u8fd9\u4e9b\u6846\u67b6\u63d0\u4f9b\u4e86\u62d3\u5c55\u3002powermock-api-mockito\u662f\u4e00\u4e2a\u62d3\u5c55\u5e93\uff0c\u5b83\u901a\u8fc7\u62d3\u5c55Mockito\u5e76\u7ed3\u5408PowerMock \u529f\u80fd\u6765\u505a\u589e\u5f3a\u6d4b\u8bd5\uff0c\u89e3\u51b3\u6a21\u62df\u9759\u6001\u3001\u79c1\u6709\u65b9\u6cd5\u7684\u56f0\u96be\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u6d4b\u8bd5\u9759\u6001\u3001\u79c1\u6709\u65b9\u6cd5\u3002 \u867d\u7136\u5e94\u5c3d\u53ef\u80fd\u5730\u907f\u514d\u4f7f\u7528PowerMock \u8fd9\u7c7b\u5bf9\u5c01\u88c5\u6027\u7834\u574f\u8f83\u5927\u7684\u5e93\uff0c\u4f46\u662f\u5728\u7279\u6b8a\u7684\u573a\u666f\u4e0b\u8fd8\u662f\u53ef\u4ee5\u5c11\u91cf\u4f7f\u7528\uff0c\u5b83\u53ef\u4ee5\u5feb\u901f\u89e3\u51b3\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\uff0c\u5177\u4f53\u89c6\u60c5\u51b5\u800c\u5b9a\u3002PowerMock \u4e3b\u8981\u9762\u5411\u6709\u6d4b\u8bd5\u7ecf\u9a8c\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u5c3d\u91cf\u4e0d\u8981\u4ea4\u7ed9\u521d\u7ea7\u7684\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u3002 \u867d\u7136PowerMock\u548cMockito\u90fd\u662f\u901a\u8fc7\u64cd\u4f5c\u5b57\u8282\u7801\u6765\u5b9e\u73b0\u6a21\u62df\u529f\u80fd\u7684\uff0c\u4e0d\u8fc7\u4e24\u8005\u5728\u5b9e\u73b0\u4e0a\u6709\u8f83\u5927\u7684\u533a\u522b\uff0c\u5b9a\u4f4d\u4e5f\u4e0d\u4e00\u6837\u3002Mockito\u662f\u901a\u8fc7\u5bf9\u88ab\u6a21\u62df\u7684\u7c7b\u8fdb\u884c\u5b57\u8282\u7801\u5904\u7406\u6765\u5b9e\u73b0\u4e00\u4e2a\u4ee3\u7406\u7c7b\u7684\uff0c\u7528\u4e8e\u63a7\u5236\u9884\u7f6e\u7684\u6240\u6709\u903b\u8f91\u3002PowerMock\u5219\u662f\u5bf9\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u8fdb\u884c\u5904\u7406\uff0c\u901a\u8fc7\u66ff\u6362\u88ab\u6d4b\u8bd5\u4ee3\u7801\u7684\u5b57\u8282\u7801\u6765\u5b9e\u73b0\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\u3002\u56e0\u6b64\u5b83\u4e5f\u989d\u5916\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5bf9\u79c1\u6709\u65b9\u6cd5\u3001\u53d8\u91cf\u8bbf\u95ee\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u8bbf\u95ee\u88ab\u6d4b\u8bd5\u7c7b\u7684\u5185\u90e8\u72b6\u6001\u3002 \u8fd9\u90e8\u5206\u7684\u793a\u4f8b\u4ee3\u7801\u89c1 https://github.com//java-self-testing/java-self-testing-example/tree/master/powermock \u3002 4.3.1 \u6a21\u62df\u9759\u6001\u65b9\u6cd5 \u4e3a\u4e86\u4fbf\u4e8e\u6f14\u793a\u6a21\u62df\u9759\u6001\u65b9\u6cd5\u7684\u8fc7\u7a0b\uff0c\u4e0b\u9762\u4f1a\u7ed9\u524d\u9762\u793a\u4f8b\u4e2d\u7684User\u5bf9\u8c61\u589e\u52a0createAt \u5b57\u6bb5\uff0ccreateAt\u5b57\u6bb5\u5728register\u65b9\u6cd5\u5185\u88ab\u586b\u5145\uff0c\u7136\u540e\u8fdb\u884c\u6301\u4e45\u5316\u3002 \u66f4\u65b0\u540e\u7684User\u5bf9\u8c61\u5982\u4e0b\uff1a public class User { private String email; private String username; private String password; private Instant createAt; public User(String email, String username, String password, Instant createAt) { this.email = email; this.username = username; this.password = password; this.createAt = createAt; } ... } \u5e76\u7ed9user\u5bf9\u8c61\u8bbe\u7f6e\u5bf9\u5e94\u7684\u503c\uff0c\u4e5f\u5c31\u662fInstant.now() \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u5373\u7cfb\u7edf\u5f53\u524d\u7684\u65f6\u95f4\u3002 user.setCreateAt(Instant.now()); \u4f9d\u636e\u524d\u9762\u7684\u6d4b\u8bd5\u53ef\u77e5\uff0c\u8fd9\u4f1a\u7ed9\u6d4b\u8bd5\u5e26\u6765\u4e0d\u4fbf\uff0c\u56e0\u6b64\u9700\u8981\u60f3\u529e\u6cd5\u6a21\u62dfInstant.now \u8fd9\u4e2a\u65b9\u6cd5\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a assertEquals(\"\", argument.getValue().getCreateAt()); \u9996\u5148\uff0c\u5f15\u5165PowerMock\u7684\u76f8\u5173\u4f9d\u8d56\u3002PowerMock\u6709\u4e24\u4e2a\u6a21\u5757\uff0c\u4e00\u4e2a\u662f\u5bf9JUnit\u7684\u5c01\u88c5\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u5bf9Mockito\u7684\u5c01\u88c5\u3002\u5b83\u4eec\u95f4\u63a5\u5730\u4f9d\u8d56\u4e86JUnit\u548cMockito\uff0c\u56e0\u6b64\u53ef\u4ee5\u5148\u628a\u539f\u6765\u7684\u6d4b\u8bd5\u4f9d\u8d56\u79fb\u9664\uff0c\u518d\u6dfb\u52a0\u8fd9\u4e24\u4e2a\u4f9d\u8d56\u3002\u7531\u4e8e powermock-api-mockito2\u5bf9Mockito\u7684\u7248\u672c\u6709\u4e00\u5b9a\u7684\u517c\u5bb9\u6027\u8981\u6c42\uff0c\u6240\u4ee5\u5efa\u8bae\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u6dfb\u52a0\u4f9d\u8d56\uff0c\u907f\u514d\u51b2\u7a81\u3002 <dependency> <groupId>org.powermock</groupId> <artifactId>powermock-module-junit4</artifactId> <version>2.0.2</version> <scope>test</scope> </dependency> <dependency> <groupId>org.powermock</groupId> <artifactId>powermock-api-mockito2</artifactId> <version>2.0.2</version> <scope>test</scope> </dependency> \u7136\u540e\uff0c\u4f7f\u7528PowerMockRunner\u4ee3\u66ffMockito\u7684Runner\uff0c\u5e76\u4f7f\u7528@PrepareForTest\u5bf9\u7528\u5230\u8be5\u9759\u6001\u65b9\u6cd5\u7684\u5730\u65b9\u8fdb\u884c\u521d\u59cb\u5316\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @RunWith(PowerMockRunner.class) @PrepareForTest(UserService.class) \u5982\u6b64\uff0c\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6a21\u62dfInstant\u7c7b\u4e2d\u7684\u9759\u6001\u65b9\u6cd5\u4e86\uff0c\u5e76\u4e14\u4f1a\u5f71\u54cdUserService \u4e2d\u4f7f\u7528\u5b83\u7684\u5730\u65b9\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a Instant moment = Instant.ofEpochSecond(1596494464); PowerMockito.mockStatic(Instant.class); PowerMockito.when(Instant.now()).thenReturn(moment); \u6a21\u62df\u5b8c\u6210\u540e\uff0cInstant.now() \u5c31\u4f1a\u6309\u7167\u6211\u4eec\u671f\u671b\u7684\u503c\u8fd4\u56de\u7ed3\u679c\uff0c\u6d4b\u8bd5\u4ee3\u7801\u81ea\u7136\u4e5f\u5c31\u53ef\u4ee5\u6309\u7167\u9884\u5148\u8bbe\u5b9a\u7684\u503c\u6765\u8fdb\u884c\u65ad\u8a00\u4e86\u3002\u7531\u4e8ePowerMock\u4e0eMockito\u80fd\u5f88\u597d\u5730\u5728\u4e00\u8d77\u5de5\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528 Mockito \u7684 API\u6765\u7f16\u5199\u6d4b\u8bd5\u3002\u5bf9\u4e8e\u7279\u6b8a\u7684\u6a21\u62df\u884c\u4e3a\uff0c\u4f7f\u7528 PowerMock \u4e2d\u7684\u8bed\u6cd5\u4ee3\u66ffMockito\u4e2d\u7684\u8bed\u6cd5\u5373\u53ef\u3002\u5b8c\u6574\u7684\u6d4b\u8bd5\u5982\u4e0b\uff1a @RunWith(PowerMockRunner.class) // \u4f7f\u7528 PrepareForTest \u8ba9\u6a21\u62df\u884c\u4e3a\u5728\u88ab\u6d4b\u8bd5\u4ee3\u7801\u4e2d\u751f\u6548 @PrepareForTest({UserService.class}) public class UserServiceAnnotationTest { @Mock UserRepository mockedUserRepository; @Mock EmailService mockedEmailService; @Spy EncryptionService mockedEncryptionService = new EncryptionService(); @InjectMocks UserService userService; @Test public void should_register() { // \u6a21\u62df\u524d\u751f\u6210\u4e00\u4e2a Instant \u5b9e\u4f8b Instant moment = Instant.ofEpochSecond(1596494464); // \u6a21\u62df\u5e76\u8bbe\u5b9a\u671f\u671b\u8fd4\u56de\u503c PowerMockito.mockStatic(Instant.class); PowerMockito.when(Instant.now()).thenReturn(moment); // Given User user = new User(\"admin@test.com\", \"admin\", \"xxx\", null); // When userService.register(user); // Then verify(mockedEmailService).sendEmail( eq(\"admin@test.com\"), eq(\"Register Notification\"), eq(\"Register Account successful! your username is admin\")); ArgumentCaptor<User> argument = ArgumentCaptor.forClass(User.class); verify(mockedUserRepository).saveUser(argument.capture()); assertEquals(\"admin@test.com\", argument.getValue().getEmail()); assertEquals(\"admin\", argument.getValue().getUsername()); assertEquals(\"cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860\", argument.getValue().getPassword()); assertEquals(moment, argument.getValue().getCreateAt()); } } \u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b\u4f7f\u7528PowerMock \u65f6\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u5730\u65b9\uff0c\u4ece\u800c\u907f\u514d\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u78b0\u5230\u95ee\u9898\u3002@PrepareForTest\u4e2d\u7684\u53c2\u6570\u4e3a\u4e00\u4e2a\u88ab\u5904\u7406\u7684\u76ee\u6807\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u4e0d\u662f\u88ab\u6a21\u62df\u7684\u7c7b\uff0c\u800c\u662f\u88ab\u6d4b\u8bd5\u7684\u7c7b\uff08\u4e1a\u52a1\u4ee3\u7801\uff09\uff0c\u76ee\u7684\u662f\u8ba9\u88ab\u6d4b\u8bd5\u4ee3\u7801\u4e2d\u7684\u7279\u6b8a\u6a21\u62df\u751f\u6548\u3002\u4f8b\u5982\uff0c\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u5b50\u4e2d\uff0c\u88ab\u6d4b\u8bd5\u7684\u7c7b\u662fUserService\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u7684\u662fInstant.now\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8981\u5728UserService\u4e2d\u4f7f\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u7c7b\u662fUserService\u800c\u4e0d\u662fInstant\u3002\u8fd9\u662f\u4f7f\u7528PowerMock \u7684\u8fc7\u7a0b\u4e2d\u6700\u5e38\u89c1\u7684\u4e00\u4e2a\u9677\u9631\uff0c\u539f\u56e0\u662f\u9759\u6001\u65b9\u6cd5\u662f\u7c7b\u7ea7\u522b\u7684\u65b9\u6cd5\uff0c\u9700\u8981\u5728\u88ab\u6d4b\u8bd5\u7c7b\u52a0\u8f7d\u524d\u51c6\u5907\u5b8c\u6bd5\u3002\u60f3\u8981\u7279\u6b8a\u6a21\u62df\u5728\u88ab\u6d4b\u8bd5\u4ee3\u7801\u4e2d\u751f\u6548\uff0c\u5c31\u9700\u8981\u4f7f\u7528@PrepareForTest\u8fdb\u884c\u5904\u7406\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u662f\u5728PowerMockRunner\u4e2d\u5b8c\u6210\u7684\uff0c\u5176\u4e2d\u7528\u4e86\u5f88\u591a\u5b57\u8282\u7801\u7ea7\u522b\u7684\u6280\u672f\uff0c\u60f3\u8981\u5173\u5fc3\u5177\u4f53\u5b9e\u73b0\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003\u6e90\u7801\u3002 \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u9a8c\u8bc1Instant.now\u65b9\u6cd5\u7684\u8c03\u7528\u60c5\u51b5\u3002\u5982\u679c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u9a8c\u8bc1\u9759\u6001\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528PowerMock\u7684verifyStatic\u65b9\u6cd5\u91cd\u65b0\u52a0\u8f7d\u4fee\u6539\u540e\u7684\u7c7b\uff0c\u7136\u540e\u8fdb\u884c\u9a8c\u8bc1\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a PowerMockito.verifyStatic(Static.class); Static.thirdStaticMethod(Mockito.anyInt()); \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u9a8c\u8bc1\u90fd\u9700\u8981\u8c03\u7528verifyStatic\uff0c\u56e0\u4e3a\u8fd9\u4e24\u53e5\u4ee3\u7801\u662f\u6210\u5bf9\u51fa\u73b0\u7684\u3002 4.3.2 \u6a21\u62df\u6784\u9020\u65b9\u6cd5 \u6709\u65f6\u5019\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u4e2d\u53ef\u80fd\u4f1a\u76f4\u63a5\u4f7f\u7528new \u5173\u952e\u5b57\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u4e0d\u592a\u597d\u9694\u79bb\u88ab\u521b\u5efa\u7684\u5bf9\u8c61\u4e86\u3002\u5982\u679c\u4e0d\u4f7f\u7528PowerMock\uff0c\u751a\u81f3\u8fd9\u6bb5\u4ee3\u7801\u90fd\u4e0d\u80fd\u88ab\u6d4b\u8bd5\u3002\u5bf9\u6b64\uff0c\u6709\u4e24\u4e2a\u9014\u5f84\u53ef\u89e3\u51b3\uff1a\u4e00\u662f\u4f7f\u7528\u5de5\u5382\u65b9\u6cd5\u8fdb\u884c\u89e3\u8026\uff0c\u5373\u7528\u4f9d\u8d56\u6ce8\u5165\u4ee3\u66ff\u76f4\u63a5\u4f7f\u7528new \u5173\u952e\u5b57\uff1a\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528PowerMock\u5bf9\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u6a21\u62df\u3002 \u7b2c\u4e00\u79cd\u65b9\u6cd5\u76f8\u5f53\u4e8e\u4fee\u6539\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\uff0c\u5728\u91cd\u6784\u65f6\u8fd9\u6837\u505a\u4e0d\u592a\u5b89\u5168\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002\u5728PowerMock\u4e2d\u4f7f\u7528whenNew\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u62e6\u622a\u6784\u9020\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u76f4\u63a5\u8fd4\u56de\u5176\u4ed6\u5bf9\u8c61\u6216\u8005\u5f02\u5e38\u3002\u5bf9\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u6a21\u62df\u662fPowerMock\u4e2d\u6700\u5e38\u7528\u7684\u7279\u6027\u4e4b\u4e00\u3002 \u5982\u679c\u5728\u5904\u7406\u4e00\u4e2a\u9057\u7559\u7cfb\u7edf\u65f6\uff0c\u5728UserService\u4e2d\u7684register\u65b9\u6cd5\u4e2d\u53d1\u73b0\u4e86\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff1a public void register(User user) { user.setPassword(encryptionService.sha256(user.getPassword())); user.setCreateAt(Instant.now()); userRepository.saveUser(user); sendEmail(user); // \u4ee3\u7801\u4e2d\u6709\u4e00\u4e2a\u76f4\u63a5\u88ab new \u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u8ba9\u8fd9\u4e2a\u65b9\u6cd5\u65e0\u6cd5\u88ab\u8f7b\u6613\u6a21\u62df (new LogService()).log(\"finished register action\"); } \u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528whenNew\u65b9\u6cd5\u4f20\u5165\u4e00\u4e2a\u51c6\u5907\u597d\u7684\u6a21\u62df\u5bf9\u8c61\uff0c\u4ee5\u6b64\u66ff\u6362\u539f\u6709\u7684\u5b9e\u73b0\uff0c\u4ece\u800c\u8fbe\u5230\u53ef\u6d4b\u8bd5\u7684\u76ee\u7684\u3002 // Given User user = new User(\"admin@test.com\", \"admin\", \"xxx\", null); LogService mockedLogService = mock(LogService.class); whenNew(LogService.class).withNoArguments().thenReturn(mockedLogService); // When userService.register(user); // Then Mockito.verify(mockedLogService).log(any()); \u4f7f\u7528Mockito\u51c6\u5907\u4e00\u4e2a\u6a21\u62df\u5bf9\u8c61\uff0c\u5728 new \u8bed\u53e5\u6267\u884c\u65f6\uff0cPowerMock\u4f1a\u5c06\u8fd9\u4e2a\u6a21\u62df\u5bf9\u8c61\u8fd4\u56de\uff0c\u8fd9\u6837\u540e\u7eed\u7684\u65ad\u8a00\u5c31\u53ef\u4ee5\u5f97\u5230\u4fdd\u969c\uff0c\u628a\u4e0d\u53ef\u6d4b\u7684\u4ee3\u7801\u53d8\u6210\u4e86\u53ef\u6d4b\u8bd5\u7684\u4ee3\u7801\u3002 \u81ea\u7136\u5730\uff0c\u5982\u679c\u9700\u8981\u9a8c\u8bc1\u6784\u9020\u65b9\u6cd5\u662f\u5426\u88ab\u8c03\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528verifyNew(LogService.class). withNoArguments()\u3002 4.3.3 \u6a21\u62df\u79c1\u6709\u65b9\u6cd5 \u4e0e\u524d\u9762\u7684\u95ee\u9898\u7c7b\u4f3c\uff0c\u5728\u8fdb\u884c\u91cd\u6784\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u7c7b\u4e2d\u6709\u4e00\u4e9b\u7279\u522b\u957f\u7684\u79c1\u6709\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u79c1\u6709\u65b9\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u4f7f\u5f97\u6d4b\u8bd5\u6210\u672c\u5f88\u9ad8\u3002 \u4e00\u79cd\u89e3\u51b3\u65b9\u5f0f\u662f\u901a\u8fc7\u91cd\u6784\u5c06\u8fd9\u4e9b\u79c1\u6709\u65b9\u6cd5\u642c\u5230\u53e6\u5916\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u4f7f\u5f97\u7c7b\u7684\u79c1\u6709\u65b9\u6cd5\u6570\u91cf\u5904\u4e8e\u8f83\u5c11\u7684\u72b6\u6001\u3002\u53e6\u5916\u4e00\u79cd\u662f\u901a\u8fc7PowerMock\u5bf9\u79c1\u6709\u65b9\u6cd5\u8fdb\u884c\u6a21\u62df\u64cd\u4f5c\u3002\u4f7f\u7528PowerMock\u6a21\u62df\u79c1\u6709\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4f7f\u7528PowerMockito\u7c7b\u4e2d\u7684when\u65b9\u6cd5\u4ee3\u66ffMockito\u4e2d\u7684\u540c\u540d\u65b9\u6cd5\u5373\u53ef\u3002\u56e0\u4e3a\u76f4\u63a5\u8c03\u7528\u79c1\u6709\u65b9\u6cd5\u4f1a\u51fa\u73b0Java\u8bed\u6cd5\u62a5\u9519\uff0c\u6240\u4ee5PowerMockito\u7c7b\u4e2d\u7684when\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e0eMockito\u7c7b\u4f3c\u7684API\uff0c\u4f46\u662f\u5b83\u7684\u65b9\u6cd5\u540d\u9700\u8981\u4ee5\u5b57\u7b26\u4e32\u4f5c\u4e3a\u989d\u5916\u7684\u53c2\u6570\u4f20\u4eba\u3002 \u5047\u5982LogService\u5bf9\u8c61\u4e2d\u6709\u4e00\u4e2a\u79c1\u6709\u65b9\u6cd5 _log\u7528\u4e8e\u53d1\u9001\u65e5\u5fd7\u5230\u65e5\u5fd7\u5e73\u53f0\uff0c\u7531\u4e8e\u4e00\u4e9b\u57fa\u7840\u8bbe\u65bd\u7684\u539f\u56e0\u5bfc\u81f4\u6d4b\u8bd5\u5931\u8d25\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528PowerMock\u5c06\u5176\u9694\u79bb\uff0c\u8ba9\u5176\u4ed6\u7684\u6d4b\u8bd5\u903b\u8f91\u6b63\u5e38\u8fdb\u884c\u3002 \u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 PowerMock \u6a21\u62df\u79c1\u6709\u65b9\u6cd5\u3002 public class LogService { public void log(String content) { _log(content); } private void _log(String content) { System.out.println(content); } } \u4e0b\u9762\u7684\u4ee3\u7801\u7528\u4e8e\u5f53 _log\u88ab\u8c03\u7528\u65f6\u4e0d\u8ba9\u5176\u6709\u526f\u4f5c\u7528\uff1a @RunWith(PowerMockRunner.class) @PrepareForTest({LogService.class}) public class PrivateTest { @Test public void private_test() throws Exception { LogService logService = mock(LogService.class); PowerMockito.doNothing().when(logService, \"_log\", any()); logService.log(\"test data\"); } } \u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5904\u7406\u79c1\u6709\u65b9\u6cd5\u65f6\u8981\u5904\u7406\u4ee5\u4e0b\u4e24\u4e2a\u5bf9\u8c61\uff1a\u88ab\u6a21\u62df\u7684\u5bf9\u8c61\u548c\u88ab\u6d4b\u8bd5\u7684\u5bf9\u8c61\u3002\u5728\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cUserService\u662f\u88ab\u6d4b\u8bd5\u7684\u5bf9\u8c61\uff0cLogService\u662f\u9700\u8981\u88ab\u6a21\u62df\u7684\u5bf9\u8c61\u3002\u5982\u679c\u662fLogService\u4e2d\u7684\u79c1\u6709\u65b9\u6cd5\u9700\u8981\u88ab\u9694\u79bb\u6389\uff0c@PrepareForTest\u4e2d\u7684\u53c2\u6570\u5219\u5e94\u8be5\u8bbe\u7f6e\u4e3aLogService\u800c\u4e0d\u662fUserservice\u3002\u540c\u7406\uff0c\u5982\u679cUserService\u4e2d\u6709\u4e00\u4e2a\u79c1\u6709\u65b9\u6cd5\uff0c\u6211\u4eec\u60f3\u505a\u4e00\u4e9b\u5904\u7406\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f\u9996\u5148\uff0c\u9700\u8981\u5c06@PrepareForTest\u7684\u53c2\u6570\u8bbe\u7f6e\u4e3aUserService\uff0c\u5176\u6b21\uff0c\u7531\u4e8eUserService\u662f\u88ab\u6d4b\u8bd5\u5bf9\u8c61\uff0c\u65e0\u6cd5\u5e94\u7528when\u65b9\u6cd5\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528spy\u65b9\u6cd5\u5305\u88c5\u5904\u7406\u3002 4.3.4 \u53cd\u5c04\u5de5\u5177\u7bb1 \u5982\u679c\u4e00\u4e2a\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u6709\u4e00\u4e2a\u79c1\u6709\u5c5e\u6027\uff0c\u4f46\u662f\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u65e0\u6cd5\u8d4b\u4e88\u6a21\u62df\u5bf9\u8c61\uff0c\u5bfc\u81f4\u6d4b\u8bd5\u56f0\u96be\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u53cd\u5c04\u65b9\u5f0f\u4fee\u6539\u5b83\u7684\u53ef\u8bbf\u95ee\u6027\u3002\u4f8b\u5982\uff0c\u67d0Person\u7c7b\u4e0a\u6709\u4e00\u4e2a\u79c1\u6709\u5c5e\u6027name\uff0c\u73b0\u5728\u9700\u8981\u4e3a\u5176\u8d4b\u4e88\u4e00\u4e2a\u65b0\u7684\u503c\uff0c\u90a3\u4e48\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u7f16\u5199\u4ee3\u7801\uff1a Person person = new Person(); Class<?> clazz = Person.class; Field field = clazz.getDeclaredField(\"name\"); field.setAccessible(true); // \u8d4b\u503c field.set(person, \"new name\"); \u4e0a\u8ff0\u4ee3\u7801\u6bd4\u8f83\u70e6\u7410\uff0cMockito\u548cPowerMock\u90fd\u63d0\u4f9b\u4e86\u4e00\u7ec4\u53cd\u5c04\u5de5\u5177\u7c7b\uff0c\u7528\u4e8e\u8bbf\u95ee\u79c1\u6709\u6210\u5458\uff0c\u6bd4 Java \u672c\u8eab\u7684\u53cd\u5c04\u80fd\u529b\u8981\u5f3a\u4e00\u4e9b\u3002 1. \u8bbf\u95ee\u79c1\u6709\u5c5e\u6027 \u6bd4\u5982\uff0c\u6211\u4eec\u5728LogService\u4e2d\u589e\u52a0\u4e86\u4e00\u4e2aprefix\u5c5e\u6027\uff0c\u7528\u4e8e\u6253\u5370\u65e5\u5fd7\u7684\u524d\u7f00\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a private String prefix = \"warning: \"; ... private void _log(String content) { System.out.println(prefix + content); } \u90a3\u4e48\u4f7f\u7528Mockito\uff08\u975ePowerMock\uff09\u7684FieldSetter\u5de5\u5177\u7c7b\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u79c1\u6709\u5c5e\u6027\uff1a LogService logService = new LogService(); FieldSetter.setField( logService, LogService.class.getDeclaredField(\"prefix\"), \"error: \" ); logService.log(\"test data\"); 2. \u6d4b\u8bd5\u79c1\u6709\u65b9\u6cd5 \u5982\u679c\u6211\u4eec\u9047\u5230\u67d0\u4e2a\u79c1\u6709\u65b9\u6cd5\u65f6\uff0c\u60f3\u8981\u6d4b\u8bd5\u5b83\uff0c\u4e00\u79cd\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u79c1\u6709\u65b9\u6cd5\u4fee\u6539\u4e3a\u5305\u7ea7\u522b\u79c1\u6709\uff0c\u5e76\u5c06\u6d4b\u8bd5\u4ee3\u7801\u653e\u5230\u540c\u4e00\u4e2a\u5305\u4e0b\uff0c\u4f46\u662f\u5b83\u5904\u4e8etest\u76ee\u5f55\u4e0b\uff08\u6bd4\u5982\uff0c\u5f85\u6d4b\u8bd5\u7684\u79c1\u6709\u65b9\u6cd5\u4f4d\u4e8esrc/main/java\u4e2d\uff0c\u6d4b\u8bd5\u4ee3\u7801\u4f4d\u4e8esrc/test/java\u4e2d\uff09\uff0c\u8fd9\u6837\u6d4b\u8bd5\u4ee3\u7801\u5c31\u80fd\u8bbf\u95ee\u5230\u8be5\u65b9\u6cd5\u4e86\u3002 \u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u4f7f\u7528\u4e00\u4e9b\u8f85\u52a9\u5de5\u5177\uff0c\u4f8b\u5982\uff0c\u4f7f\u7528PowerMock\u4e2d\u7684Whitebox\u7c7b\u7b49\uff0c\u63d0\u4f9b\u5bf9\u79c1\u6709\u65b9\u6cd5\u3001\u5c5e\u6027\u7684\u8bbf\u95ee\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a Whitebox.invokeMethod(testObj, \"method1\", new Long(10L)); \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5efa\u8bae\u907f\u514d\u4f7f\u7528\u53cd\u5c04\u65b9\u5f0f\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5927\u5927\u7834\u574f\u5c01\u88c5\u6027\u3002\u4e0d\u8fc7\uff0c\u5728\u5904\u7406\u9057\u7559\u7cfb\u7edf\u65f6\uff0c\u5982\u679c\u56e0\u4e3a\u6ca1\u6709\u6d4b\u8bd5\u4fdd\u62a4\u800c\u4e0d\u6562\u8d38\u7136\u4fee\u6539\u6e90\u4ee3\u7801\uff0c\u4e14\u9057\u7559\u7cfb\u7edf\u4e2d\u4f1a\u6709\u5f88\u591a\u4ee3\u7801\u4e0d\u5177\u5907\u53ef\u6d4b\u8bd5\u6027\uff0c\u90a3\u4e48\u53ef\u4ee5\u914c\u60c5\u4f7f\u7528\u8fd9\u7c7b\u65b9\u6cd5\u6dfb\u52a0\u4e00\u4e9b\u6d4b\u8bd5\u5b88\u62a4\u91cd\u6784\u3002 \u5bf9\u4e8e\u65b0\u5b9e\u73b0\u7684\u4ee3\u7801\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u9700\u8981\u7528\u5230\u53cd\u5c04\u624d\u80fd\u5b8c\u6210\u6d4b\u8bd5\u7684\u60c5\u51b5\uff0c\u5219\u8bf4\u660e\u4ee3\u7801\u4e2d\u5b58\u5728\u574f\u5473\u9053\uff0c\u9700\u8981\u53ca\u65f6\u5904\u7406\u3002 4.4 \u6d4b\u8bd5\u4ee3\u7801\u7684\u7ed3\u6784\u6a21\u5f0f \u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\u540e\uff0c\u6d4b\u8bd5\u4ee3\u7801\u7684\u7ed3\u6784\u4f1a\u53d8\u5f97\u6709\u4e9b\u590d\u6742\uff0c\u5bf9\u4e8e\u5982\u4f55\u826f\u597d\u5730\u7ec4\u7ec7\u6d4b\u8bd5\u4ee3\u7801\u7684\u7ed3\u6784\uff0c\u4e00\u4e9b\u4e13\u5bb6\u4e5f\u603b\u7ed3\u4e86\u51e0\u79cd\u6a21\u5f0f\u3002 4.4.1 \u51c6\u5907-\u6267\u884c-\u65ad\u8a00 \u51c6\u5907-\u6267\u884c-\u65ad\u8a00\uff08Arrange-Act-Assert\uff09\u662f\u4e00\u79cd\u4e3b\u6d41\u7684\u5355\u5143\u6d4b\u8bd5\u4ee3\u7801\u7ed3\u6784\u6a21\u5f0f\uff0c\u5b83\u975e\u5e38\u7c7b\u4f3c \"\u4e09\u6bb5\u8bba\" \u7684\u6587\u7ae0\u7ed3\u6784\uff1a \u51c6\u5907\uff1a\u51c6\u5907\u6d4b\u8bd5\u6570\u636e\u3001\u6a21\u62df\u4f9d\u8d56\u5bf9\u8c61\u3001\u521d\u59cb\u5316\u6d4b\u8bd5\u72b6\u6001\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002 \u6267\u884c\uff1a\u5bf9\u6d4b\u8bd5\u76ee\u6807\u8fdb\u884c\u8c03\u7528\uff0c\u6267\u884c\u76f8\u5173\u65b9\u6cd5\u548c\u903b\u8f91\u3002 \u65ad\u8a00\uff1a\u9a8c\u8bc1\u6267\u884c\u7684\u7ed3\u679c\u662f\u5426\u6ee1\u8db3\u9884\u671f\uff0c\u5305\u62ec\u8fdb\u884c\u65ad\u8a00\u3001\u5bf9Mock\u4e2d\u7684\u4e0b\u6e38\u5bf9\u8c61\u53c2\u6570\u8fdb\u884c\u9a8c\u8bc1\u7b49\u3002 \u5176\u5b9e\u4ece\u672c\u7ae0\u7684\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u662f\u6309\u7167\u8fd9\u79cd\u7ed3\u6784\u6765\u4ecb\u7ecd\u5355\u5143\u6d4b\u8bd5\u7684\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u57fa\u672c\u5177\u6709\u7c7b\u4f3c\u7684\u7ed3\u6784\u3002\u5728BDD\u4e2d\uff0cGiven...When...Then\u7684\u8bed\u6cd5\u7ed3\u6784\u4e5f\u4e0e\u4e4b\u7c7b\u4f3c\u3002 \u5728\u654f\u6377\u5f00\u53d1\u4e2d\uff0c\u7528\u6237\u6545\u4e8b\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u529f\u80fd\u7279\u6027\u5355\u4f4d\uff0c\u8bc4\u4ef7\u4e00\u4e2a\u7528\u6237\u6545\u4e8b\u662f\u5426\u5b8c\u6210\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u9a8c\u6536\u6761\u4ef6\u3002\u9a8c\u6536\u6761\u4ef6\u53ef\u4ee5\u770b\u4f5c\u529f\u80fd\u6d4b\u8bd5\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5355\u5143\u6d4b\u8bd5\u53ea\u4e0d\u8fc7\u662f\u5176\u5fae\u89c2\u5f62\u6001\u3002 \u8fd9\u79cd\u6a21\u5f0f\u975e\u5e38\u7b80\u5355\uff0c\u5f88\u5bb9\u6613\u548c\u56e2\u961f\u8fbe\u6210\u4e00\u81f4\uff0c\u4ece\u800c\u5199\u51fa\u7ed3\u6784\u5408\u7406\u3001\u7edf\u4e00\u7684\u5355\u5143\u6d4b\u8bd5\u6765\u3002 4.4.2 \u56db\u9636\u6bb5\u6d4b\u8bd5 \u56db\u9636\u6bb5\u6d4b\u8bd5\uff08Four-Phase Test\uff09\u662f\u51c6\u5907-\u6267\u884c-\u65ad\u8a00\u7684\u62d3\u5c55\uff0c\u8be5\u6a21\u5f0f\u63cf\u8ff0\u4e86\u521b\u5efa\u7b80\u6d01\u3001\u53ef\u8bfb\u4e14\u7ed3\u6784\u826f\u597d\u7684\u6d4b\u8bd5\u9700\u8981\u5177\u5907\u5982\u4e0b4\u4e2a\u9636\u6bb5\u3002 \u8bbe\u7f6e\uff1a\u5efa\u7acb\u6d4b\u8bd5\u7684\u5148\u51b3\u6761\u4ef6\uff0c\u5305\u62ec\u6a21\u62df\u4f9d\u8d56\u5bf9\u8c61\u3001\u51c6\u5907\u6d4b\u8bd5\u6570\u636e\u3002 \u6267\u884c\uff1a\u5bf9\u7cfb\u7edf\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u5bf9\u6d4b\u8bd5\u76ee\u6807\u8fdb\u884c\u8c03\u7528\u3002 \u9a8c\u8bc1\uff1a\u68c0\u67e5\u9884\u671f\u7ed3\u679c\uff0c\u65ad\u8a00\u548c\u5bf9\u6a21\u62df\u5bf9\u8c61\u4e2d\u7684\u4e0b\u6e38\u5bf9\u8c61\u53c2\u6570\u8fdb\u884c\u9a8c\u8bc1\u3002 \u6e05\u7406\uff1a\u6d4b\u8bd5\u7ed3\u675f\u540e\u5c06\u88ab\u6d4b\u7cfb\u7edf\u6062\u590d\u5230\u521d\u59cb\u72b6\u6001\u3002 \u770b\u8d77\u6765\u548c\u51c6\u5907-\u6267\u884c-\u65ad\u8a00\u6a21\u5f0f\u7c7b\u4f3c\uff0c\u5bf9\u5427\uff1f\u5176\u5b9e\u53ea\u662f\u5bf9\u5b83\u505a\u4e86\u4e00\u4e9b\u8865\u5145\uff0c\u5bf9\u6d4b\u8bd5\u5404\u90e8\u5206\u7684\u804c\u8d23\u8fdb\u884c\u4e86\u5212\u5206\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u6d4b\u8bd5\u6846\u67b6\u4e5f\u5728\u53c2\u8003\u8fd9\u79cd\u6a21\u5f0f\u7684\u5b9e\u73b0\u3002 \u5728JUnit\u4e2d\uff0c@Beforexxx\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e9b\u901a\u7528\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5176\u89c6\u4f5c\u8bbe\u7f6e\u7684\u4e00\u90e8\u5206\u3002\u524d\u9762\u63d0\u5230\u8fc7\u53e6\u5916\u4e00\u4e2a\u6982\u5ff5Fixture\uff0c\u6b64\u6982\u5ff5\u5728\u5f88\u591a\u6d4b\u8bd5\u4e2d\u90fd\u80fd\u770b\u5230\uff0c\u7ffb\u8bd1\u4e3a\u4e2d\u6587\u662f\u6d4b\u8bd5\u5939\u5177\u6216\u6d4b\u8bd5\u5de5\u5177\u7c7b\uff0c\u610f\u601d\u662f\u5728\u8bbe\u7f6e\u9636\u6bb5\u8fdb\u884c\u7684\u901a\u7528\u7684\u51c6\u5907\u5de5\u4f5c\uff08\u5c01\u88c5\u4e3a\u6d4b\u8bd5Fixture\uff09\u3002 JUnit\u7684@Afterxxx\u65b9\u6cd5\u5bf9\u5e94\u7684\u662f\u6e05\u7406\u5de5\u4f5c\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u3002\u56fe4-3\u5c55\u793a\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\uff08\u4e00\u822c\u4e5f\u662f\u4e00\u4e2a\u6d4b\u5957\u4ef6\uff09\u548c\u591a\u4e2a\u6d4b\u8bd5\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u56fe 4-3 \u6d4b\u8bd5\u4ee3\u7801\u7684\u7ed3\u6784 4.5 \u57fa\u4e8e\u6d4b\u8bd5\u66ff\u8eab\u7684\u53cd\u601d \u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\u7f16\u5199\u6d4b\u8bd5\uff0c\u4f1a\u9a71\u4f7f\u6211\u4eec\u53bb\u601d\u8003\u5982\u4f55\u8bbe\u8ba1\u51fa\u66f4\u597d\u7684\u4e1a\u52a1\u4ee3\u7801\u7ed3\u6784\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4eba\u4eec\u5bb9\u6613\u5bf9\u4ed6\u4eba\u4e25\u82db\uff0c\u5bf9\u81ea\u5df1\u5bbd\u5bb9\uff0c\u4f46\u7f16\u5199\u6d4b\u8bd5\u7684\u65f6\u5019\u662f\u96be\u5f97\u7684\u5bf9\u81ea\u5df1\"\u4e25\u82db\"\u7684\u65f6\u5019\u3002\u53ef\u6d4b\u8bd5\u7684\u4e1a\u52a1\u4ee3\u7801\u4e00\u822c\u90fd\u5177\u6709\u6e05\u6670\u7684\u5c42\u6b21\u7ed3\u6784\u3002 4.5.1 \"\u5927\u6ce5\u7403\" \"\u5927\u6ce5\u7403\"\u662f\u4e00\u4e2a\u7528\u6765\u6bd4\u55bb\u7cdf\u7cd5\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u672f\u8bed\u3002\u4e00\u4efd\u4e0d\u7ecf\u8fc7\u8bbe\u8ba1\u3001\u968f\u610f\u5806\u780c\u7684\u4ee3\u7801\uff0c\u6ca1\u6709\u6e05\u6670\u7684\u7ed3\u6784\u7279\u5f81\uff0c\u5c31\u50cf\u4e00\u4e2a\u6ce5\u7403\u4e00\u6837\uff0c\u6beb\u65e0\u7ed3\u6784\u53ef\u8a00\u3002 \u6240\u8c13\u7684\u5927\u6ce5\u7403\u5c31\u662f\u4e00\u4e2a\u968f\u610f\u7ed3\u6784\u5316\u3001\u8513\u5ef6\u7684\u3001\u4e0d\u7ecf\u5fc3\u7684\u3001\u610f\u5927\u5229\u9762\u6761\u5f0f\u7684\u4ee3\u7801\u6df7\u5408\u4f53\u3002\u7cfb\u7edf\u5c55\u73b0\u4e86\u65e0\u53ef\u4e89\u8bae\u7684\u8868\u8c61\uff1a\u4e0d\u53d7\u7ba1\u5236\u7684\u589e\u957f\u3001\u91cd\u590d\u3001\u6743\u5b9c\u4e4b\u8ba1\u7684\u4fee\u8865\u3002\u4fe1\u606f\u88ab\u7cfb\u7edf\u4e2d\u76f8\u8ddd\u5f88\u8fdc\u7684\u6a21\u5757\u6742\u4e71\u5730\u5171\u4eab\uff0c\u91cd\u8981\u4fe1\u606f\u5e38\u53d8\u4e3a\u5168\u5c40\u7684\u6216\u8005\u91cd\u590d\u7684\u3002 ------ Brian Foote & Joseph Yoder \u4ea7\u751f\"\u5927\u6ce5\u7403\"\u7684\u539f\u56e0\u53ef\u80fd\u6709\uff1a \u5f00\u53d1\u8005\u5f80\u5f80\u53ea\u662f\u5173\u6ce8\u5982\u4f55\u7f16\u5199\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u5173\u6ce8\u8bbe\u8ba1\u3002\u7531\u4e8e\u7f3a\u4e4f\u524d\u671f\u7684\u8bbe\u8ba1\uff0c\u9047\u5230\u95ee\u9898\u6216\u8005\u65b0\u7279\u6027\u65f6\u76f4\u63a5\u8fdb\u884c\u788e\u7247\u5f0f\u7684\u4fee\u6539\uff0c\u8ba9\u4ee3\u7801\u53d8\u5f97\u6df7\u4e71\u548c\u6df7\u6c8c\u3002 \u7528\u6237\u7684\u9700\u6c42\u53d1\u751f\u53d8\u5316\uff0c\u4f46\u662f\u67b6\u6784\u7684\u6f14\u8fdb\u6ca1\u6709\u8ddf\u4e0a\uff0c\u7cfb\u7edf\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u7ef4\u62a4\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u6602\u8d35\u3002 \u5f00\u53d1\u8005\u53d7\u8bbe\u8ba1\u80fd\u529b\u7684\u5236\u7ea6\u3002 \"\u5927\u6ce5\u7403\"\u7684\u4ee3\u7801\u975e\u5e38\u96be\u6d4b\u8bd5\uff0c\u8fd9\u4e9b\u4ee3\u7801\u5f80\u5f80\u6e90\u81ea\u4e00\u4e9b\u9057\u7559\u7cfb\u7edf\uff0c\u9700\u8981\u4f7f\u7528\u5927\u91cf\u7684\u6d4b\u8bd5\u66ff\u8eab\u6280\u5de7\u624d\u80fd\u52c9\u5f3a\u7f16\u5199\u51fa\u4e00\u4e9b\u6d4b\u8bd5\u6765\u4fdd\u62a4\u4ee3\u7801\u3002 \u4e3a\u4e86\u89e3\u51b3\"\u5927\u6ce5\u7403\"\u7684\u95ee\u9898\uff0c\u9664\u4e86\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684SOLID\u539f\u5219\u589e\u5f3a\u8bbe\u8ba1\u548c\u5f00\u53d1\u4ee5\u5916\uff0c\u8fd8\u9700\u8981\u6ce8\u610f\u4f7f\u7528\"\u7f16\u6392\u548c\u590d\u7528\u5206\u79bb\"\u7684\u6280\u5de7\u3002\u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u65e0\u8bba\u8ba9\u65b9\u6cd5\u5206\u89e3\u5f97\u591a\u5c0f\uff0c\u90fd\u5f88\u96be\u7edd\u5bf9\u5730\u6d88\u9664\u91cd\u590d\uff0c\u6216\u8005\u6d88\u9664\u91cd\u590d\u7684\u4ee3\u4ef7\u662f\u53c8\u9020\u6210\u4e86\u5176\u4ed6\u65b9\u9762\u7684\u8026\u5408\u3002\u8fd9\u65f6\uff0c\u6839\u636e\u4ee3\u7801\u7684\u804c\u8d23\u8fdb\u884c\u7b80\u5355\u7684\u5212\u5206\uff0c\u5c31\u53ef\u4ee5\u8ba9\u5176\u804c\u8d23\u53d8\u6e05\u6670\uff0c\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4ee3\u7801\u5206\u4e3a\u7f16\u6392\u903b\u8f91\u548c\u590d\u7528\u903b\u8f91\u3002 \u7f16\u6392\u903b\u8f91\u6307\u7684\u662f\u7528\u4e8e\u7ec4\u7ec7\u539f\u5b50\u65b9\u6cd5\u7684\u903b\u8f91\uff0c\u4f8b\u5982\u7528\u6237\u5728\u6ce8\u518c\u65f6\u4f1a\u7ec4\u5408\u8c03\u7528\u5b58\u50a8\u3001\u53d1\u9001\u90ae\u4ef6\u3001\u52a0\u5bc6\u7b49\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u770b\u4f5c\u662f\u7f16\u6392\u903b\u8f91\u3002\u7f16\u6392\u903b\u8f91\u5173\u6ce8\u4e8e\u573a\u666f\uff0c\u800c\u975e\u5177\u4f53\u7684\u4e8b\u60c5\u3002\u5bf9\u4e8e\u7f16\u6392\u903b\u8f91\u6765\u8bf4\uff0c\u91cd\u590d\u4f18\u4e8e\u590d\u7528\u3002\u56e0\u4e3a\u7f16\u6392\u672c\u8eab\u5177\u6709\u4e1a\u52a1\u542b\u4e49\uff0c\u5982\u679c\u590d\u7528\u7f16\u6392\u903b\u8f91\u4f1a\u8ba9\u8fd9\u4e9b\u4e1a\u52a1\u542b\u4e49\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u90a3\u4e48\u8fd9\u79cd\u590d\u7528\u5e76\u6ca1\u6709\u5e26\u6765\u597d\u5904\u3002\u6b64\u5916\uff0c\u7f16\u6392\u76f8\u5173\u7684\u65b9\u6cd5\u5f7c\u6b64\u4e4b\u95f4\u4e5f\u4e0d\u5e94\u8be5\u4e92\u76f8\u8c03\u7528\u3002 \u590d\u7528\u903b\u8f91\u6307\u7684\u662f\u53ef\u4ee5\u88ab\u591a\u4e2a\u573a\u666f\u4f7f\u7528\u7684\u901a\u7528\u903b\u8f91\uff0c\u4f8b\u5982\u53d1\u9001\u90ae\u4ef6\u65f6\uff0c\u53ea\u9700\u8981\u5173\u6ce8\u53d1\u9001\u90ae\u4ef6\u8fd9\u4e2a\u52a8\u4f5c\u5373\u53ef\uff0c\u81f3\u4e8e\u53d1\u9001\u4e4b\u540e\u662f\u5426\u9700\u8981\u5b58\u50a8\uff0c\u5219\u4ea4\u7531\u7f16\u6392\u903b\u8f91\u6765\u5904\u7406\u3002 \u5728\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u65f6\uff0c\u590d\u7528\u903b\u8f91\u51e0\u4e4e\u4e0d\u9700\u8981\u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\uff0c\u56e0\u4e3a\u5b83\u8db3\u591f\u539f\u5b50\u5316\uff1a\u7f16\u6392\u903b\u8f91\u5219\u9700\u8981\u4f7f\u7528\u5927\u91cf\u7684\u6d4b\u8bd5\u66ff\u8eab\uff0c\u597d\u5728\u8fd9\u5176\u4e2d\u6ca1\u6709\u591a\u5c11\u903b\u8f91\uff0c\u6240\u4ee5\u5355\u5143\u6d4b\u8bd5\u4e5f\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u5b9e\u73b0\u3002\u53e6\u5916\uff0cE2E\u6d4b\u8bd5\u5e94\u8be5\u66f4\u5173\u6ce8\u7f16\u6392\u903b\u8f91\u8fd9\u4e00\u90e8\u5206\uff0c\u5982\u679c\u5355\u5143\u6d4b\u8bd5\u5904\u7406\u8fd9\u90e8\u5206\u903b\u8f91\u7684\u6210\u672c\u8fc7\u9ad8\uff0c\u4e5f\u53ef\u4ee5\u4ea4\u7ed9E2E\u6d4b\u8bd5\u3002 4.5.2 \u5206\u5c42\u8fc7\u591a \u53e6\u5916\u4e00\u79cd\u4ee3\u7801\u7ed3\u6784\u4e5f\u4f1a\u8ba9\u6d4b\u8bd5\u53d8\u5f97\u56f0\u96be\uff0c\u5c31\u662f\u5206\u5c42\u8fc7\u591a\u7684\u4ee3\u7801\u7ed3\u6784\u3002\u8fd9\u79cd\u4ee3\u7801\u53ef\u80fd\u5b58\u5728\u8fc7\u5ea6\u8bbe\u8ba1\uff0c\u6bd4\u5982\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u529f\u80fd\u75313\uff5e4\u5c42\u4ee3\u7801\u5b9e\u73b0\u3002\u5982\u679c\u6839\u636e\u5206\u5c42\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u4f1a\u9020\u6210\u6d4b\u8bd5\u548c\u66ff\u8eab\u6570\u91cf\u8fdc\u8fdc\u591a\u4e8e\u6e90\u4ee3\u7801\u3002 \u5206\u5c42\u8fc7\u591a\u4e3b\u8981\u662f\u56e0\u4e3a\u8bbe\u8ba1\u8005\u6ca1\u6709\u6e05\u6670\u5730\u8ba4\u8bc6\u6bcf\u4e2a\u7c7b\u7684\u804c\u8d23\uff0c\u4ed6\u8ba4\u4e3a\u5206\u5c42\u8d8a\u591a\u8d8a\u6e05\u6670\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u505a\u6cd5\u53cd\u800c\u8ba9\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u4e0b\u964d\u4e86\u3002\u56e0\u4e3a\u9605\u8bfb\u8005\u5f80\u5f80\u9700\u8981\u8ffd\u6eaf\u975e\u5e38\u591a\u7684\u65b9\u6cd5\u624d\u80fd\u627e\u5230\u771f\u6b63\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\u7684\u5730\u65b9\u3002 \u5206\u5c42\u8fc7\u591a\u7684\u95ee\u9898\u5982\u4f55\u89e3\u51b3\uff1f\u8fd9\u53d6\u51b3\u4e8e\u8bbe\u8ba1\u8005\u5bf9\u4e1a\u52a1\u903b\u8f91\u7684\u8ba4\u77e5\uff0c\u53e6\u5916\u4e5f\u53ef\u4ee5\u501f\u9274\u4e00\u4e9b\u601d\u7ef4\u65b9\u6cd5\u3002\u901a\u8fc7\u8ba4\u8bc6\u8bba\u6211\u4eec\u77e5\u9053\uff0c\u5bf9\u4e8e\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4e00\u4e2a\u884c\u4e3a\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\"\u4e3b\u4f53\"\u548c\"\u5ba2\u4f53\"\u6765\u8fdb\u884c\u5206\u6790\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u4e3b\u4f53\u901a\u8fc7\u64cd\u4f5c\u5ba2\u4f53\u6765\u5b8c\u6210\u4e00\u9879\u4efb\u52a1\u3002\u800c\u5728\u9762\u5411\u5bf9\u8c61\u4e2d\uff0c\u5177\u6709\u884c\u4e3a\u7684Service\u901a\u5e38\u4f1a\u64cd\u4f5c\u4e00\u4e9bEntity\u3001DTO\u7b49\u5177\u6709\u5c5e\u6027\u548c\u6570\u636e\u7684\u5bf9\u8c61\uff0c\u5b83\u4eec\u4e4b\u95f4\u4e5f\u6784\u6210\u4e86\u4e3b\u5ba2\u5173\u7cfb\u3002 \u5728\u5206\u5c42\u8bbe\u8ba1\u4e2d\uff0c\u9996\u5148\u9700\u8981\u5f04\u6e05\u695a\"\u4e3b\u4f53\"\u7c7b\u7684\u804c\u8d23\u662f\u4ec0\u4e48\uff0c\u5982\u679c\u67d0\u4e9b\"\u4e3b\u4f53\"\u7c7b\u7684\u804c\u8d23\u4e00\u81f4\u6216\u8005\u7c7b\u4f3c\uff0c\u5219\u5e94\u8be5\u8003\u8651\u5408\u5e76\u3002 4.5.3 \u6ee5\u7528\u6d4b\u8bd5\u66ff\u8eab \u8fc7\u591a\u5730\u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\u4e5f\u4f1a\u5e26\u6765\u95ee\u9898\uff0c\u6bd4\u5982\uff0c\u5c01\u88c5\u6027\u4f1a\u53d7\u5230\u7834\u574f\uff0c\u6d4b\u8bd5\u4ee3\u7801\u6bd4\u4e1a\u52a1\u4ee3\u7801\u8fd8\u957f\u5f88\u591a\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\u53cd\u800c\u4f1a\u66f4\u52a0\u7b80\u5355\u548c\u9ad8\u6548\u3002 \u6ee5\u7528\u6d4b\u8bd5\u66ff\u8eab\u4f1a\u5e26\u6765\u5982\u4e0b\u95ee\u9898\u3002 \u6d4b\u8bd5\u96be\u4ee5\u7406\u89e3\u3002\u8fc7\u4e8e\u590d\u6742\u7684\u6a21\u62df\u884c\u4e3a\u8ba9\u6d4b\u8bd5\u4ee3\u7801\u53d8\u5f97\u6781\u5176\u96be\u4ee5\u7406\u89e3\uff0c\u5c24\u5176\u662f\u5177\u6709\u5168\u5c40\u72b6\u6001\u518d\u914d\u5408\u6a21\u62df\u884c\u4e3a\u7684\u6d4b\u8bd5\u3002\u590d\u6742\u7684\u6d4b\u8bd5\u6709\u53ef\u80fd\u4f1a\u8ba9\u4e0d\u719f\u6089\u4ee3\u7801\u7684\u5f00\u53d1\u8005\u82b1\u4e0a\u4e00\u6574\u5929\u7684\u65f6\u95f4\u6765\u4fee\u590d\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u6781\u5927\u5730\u964d\u4f4e\u4e86\u5f00\u53d1\u6548\u7387\u3002 \u91cd\u6784\u6210\u672c\u589e\u52a0\u3002\u5982\u679c\u91cd\u6784\u7684\u76ee\u6807\u4ee3\u7801\u91cc\u5305\u542b\u5177\u6709\u6d4b\u8bd5\u66ff\u8eab\u7684\u6d4b\u8bd5\u4ee3\u7801\uff0c\u90a3\u4e48\u4f1a\u5bfc\u81f4\u4e00\u7cfb\u5217\u6d4b\u8bd5\u9700\u8981\u91cd\u65b0\u4fee\u6539\u3002 \u6ee5\u7528\u6d4b\u8bd5\u66ff\u8eab\u5f80\u5f80\u662f\u4e3a\u4e86\u8ffd\u6c42\u5b8c\u7f8e\u7684\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u6bd4\u5982\u8bd5\u56fe\u8ba9\u5355\u5143\u6d4b\u8bd5\u8fbe\u5230100%\uff0c\u4ece\u800c\u60f3\u5c3d\u529e\u6cd5\u8fdb\u884c\u6781\u7aef\u7684\u6a21\u62df\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u548c\u56e2\u961f\u8fbe\u6210\u4e00\u5b9a\u7684\u5171\u8bc6\uff0c\u4f18\u5148\u8986\u76d6\u6700\u91cd\u8981\u7684\u903b\u8f91\uff0c\u4e3a\u771f\u6b63\u9700\u8981\u6d4b\u8bd5\u7684\u5730\u65b9\u6dfb\u52a0\u5355\u5143\u6d4b\u8bd5\u3002 4.6 \u5c0f\u7ed3 \u672c\u7ae0\u4ecb\u7ecd\u4e86\u4ec0\u4e48\u662f\u6d4b\u8bd5\u66ff\u8eab\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\u6765\u8ba9\u5355\u5143\u6d4b\u8bd5\u66f4\u4e3a\u7b80\u5355\u3002\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u4e0d\u4e00\u5b9a\u5bb9\u6613\u88ab\u6a21\u62df\u548c\u6d4b\u8bd5\u3002\u901a\u8fc7\u5173\u6ce8\u524d\u671f\u8bbe\u8ba1\u3001\u53d8\u66f4\u9002\u914d\u9700\u6c42\u8ba9\u4ee3\u7801\u5177\u6709\u5f88\u597d\u7684\u6d4b\u8bd5\u6027\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4ef6\u4e8b\u3002 \u5f53\u6211\u4eec\u786e\u5b9e\u9700\u8981\u5bf9\u79c1\u6709\u65b9\u6cd5\u8fdb\u884c\u6d4b\u8bd5\u4ee5\u53ca\u884c\u4e3a\u6a21\u62df\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528PowerMock\u5bf9\u79c1\u6709\u65b9\u6cd5\u8fdb\u884c\u6a21\u62df\u548c\u9a8c\u8bc1\uff0c\u5e76\u4f7f\u7528\u53cd\u5c04\u5de5\u5177\uff08\u4f8b\u5982Whitebox\u3001FieldSetter\u7b49\uff09\u6765\u8bbf\u95ee\u79c1\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 \u5f53\u6211\u4eec\u7684\u6d4b\u8bd5\u53d8\u5f97\u975e\u5e38\u590d\u6742\u65f6\uff0c\u56e2\u961f\u6210\u5458\u9700\u8981\u5c31\u6d4b\u8bd5\u4ee3\u7801\u7684\u7ec4\u7ec7\u7ed3\u6784\u8fbe\u6210\u5951\u7ea6\uff0c\u8fd9\u65f6\uff0c\u53ef\u4ee5\u53c2\u8003\u4e00\u4e9b\u6d4b\u8bd5\u4ee3\u7801\u7684\u7ed3\u6784\u6a21\u5f0f\u3002\u901a\u8fc7\u9075\u5faa\u540c\u6837\u7684\u7f16\u5199\u98ce\u683c\u548c\u6a21\u5f0f\uff0c\u53ef\u4ee5\u8ba9\u56e2\u961f\u4e2d\u7684\u4ee3\u7801\u98ce\u683c\u66f4\u7edf\u4e00\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u548c\u4f53\u9a8c\u3002 \u6700\u540e\u4ecb\u7ecd\u4e86\u5982\u4f55\u901a\u8fc7\u5355\u5143\u6d4b\u8bd5\u6765\u611f\u53d7\u6e90\u4ee3\u7801\u7684\u8bbe\u8ba1\u8d28\u91cf\uff0c\u4ee5\u53ca\u5982\u4f55\u901a\u8fc7\u6d4b\u8bd5\u66ff\u8eab\u7684\u5b9e\u73b0\u96be\u5ea6\u6765\u53cd\u601d\u4ee3\u7801\u8bbe\u8ba1\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\u3002 \u6211\u4eec\u5e94\u8be5\u907f\u514d\u4f7f\u7528\"\u5927\u6ce5\u7403\"\u6837\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u5728\u8bbe\u8ba1\u4ee3\u7801\u65f6\uff0c\u4e5f\u8981\u6ce8\u610f\u514d\u53bb\u4e0d\u5fc5\u8981\u7684\u5206\u5c42\uff0c\u5f53\u7136\u66f4\u4e0d\u80fd\u6ee5\u7528\u6d4b\u8bd5\u66ff\u8eab\uff0c\u4ee5\u514d\u964d\u4f4e\u6d4b\u8bd5\u7684\u53ef\u9605\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002","title":"\u7b2c 4 \u7ae0 \u6d4b\u8bd5\u66ff\u8eab"},{"location":"04-testing-doubles/#4","text":"\u6d4b\u8bd5\u66ff\u8eab\u662f\u5355\u5143\u6d4b\u8bd5\u4e2d\u975e\u5e38\u6709\u7528\u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u7528\u6765\u9694\u79bb\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u8ba9\u4e0d\u53ef\u6d4b\u8bd5\u7684\u7ec4\u4ef6\u53d8\u5f97\u53ef\u4ee5\u6d4b\u8bd5\u3002 \u66fe\u542c\u5f88\u591a\u670b\u53cb\u8bf4\uff0c\u6d4b\u8bd5\u66ff\u8eab\u8fd9\u4e2a\u6982\u5ff5\u975e\u5e38\u96be\u7406\u89e3\uff0c\u5b83\u6709\u79cd\u6d53\u6d53\u7684\u7ffb\u8bd1\u5473\u3002\u6211\u4e00\u76f4\u5728\u5c1d\u8bd5\u627e\u4e00\u4e2a\u5408\u9002\u7684\u7c7b\u6bd4\u6765\u8bf4\u660e\u8fd9\u4e9b\u6982\u5ff5\uff0c\u76f4\u5230\u6709\u4e00\u6b21\u6211\u5bb6\u7684\u706f\u6ce1\u574f\u4e86\uff0c\u6211\u5e26\u7740\u8fd9\u4e2a\u706f\u6ce1\u5230\u4e00\u5bb6\u4e94\u91d1\u5e97\u8d2d\u4e70\u65b0\u7684\u706f\u6ce1\u3002\u8001\u677f\u5728\u67dc\u5b50\u91cc\u7ffb\u51fa\u4e00\u4e2a\u5dee\u4e0d\u591a\u7684\u706f\u6ce1\uff0c\u7136\u540e\u63d2\u5230\u95e8\u540e\u9884\u7559\u7684\u4e00\u4e2a\u706f\u5ea7\u4e0a\uff0c\u706f\u6ce1\u4eae\u4e86\u8d77\u6765\u3002\u6211\u5ffd\u7136\u7075\u5149\u4e00\u95ea\uff0c\u8fd9\u4e0d\u5c31\u662f\u6d4b\u8bd5\u66ff\u8eab\u4e00\u4e2a\u7edd\u5999\u7684\u7c7b\u6bd4\u4e48\uff1f\u4ee3\u66ff\u771f\u5b9e\u706f\u5ea7\uff08\u57fa\u7840\u8bbe\u65bd\uff09\u8fdb\u884c\u9a8c\u8bc1\uff08\u5355\u5143\u6d4b\u8bd5\uff09\u7684\u88c5\u7f6e\u5c31\u662f\u6d4b\u8bd5\u66ff\u8eab\u3002 \u5408\u7406\u8fd0\u7528\u6d4b\u8bd5\u66ff\u8eab\u53ef\u4ee5\u5728\u8fd0\u884c\u6d4b\u8bd5\u65f6\u53bb\u9664\u5bf9\u8fd0\u884c\u73af\u5883\u7684\u4f9d\u8d56\u3002\u8fd9\u4e5f\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u542f\u793a\uff0c\u90a3\u5c31\u662f\u5c3d\u53ef\u80fd\u5730\u4f7f\u7528\u6e05\u6670\u7684\u8fb9\u754c\u6765\u8bbe\u8ba1\u4ee3\u7801\uff0c\u8ba9\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u66f4\u52a0\u5bb9\u6613\u3002 \u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u6709\u65f6\u5019\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u3002\u5bf9\u4e8e\u524d\u9762\u63d0\u5230\u7684\u7c7b\u6bd4\uff0c\u5047\u5982\u706f\u6ce1\u662f\u901a\u8fc7\u7535\u7ebf\u76f4\u63a5\u8fde\u63a5\u5230\u4f9b\u7535\u7cfb\u7edf\u7684\u800c\u4e0d\u662f\u706f\u5ea7\uff0c\u90a3\u4e48\u6d4b\u8bd5\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u56f0\u96be\u3002 \u672c\u7ae0\u7684\u76ee\u6807\u662f\u89e3\u51b3\u5355\u5143\u6d4b\u8bd5\u5728\u5b9e\u9645\u7f16\u5199\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u5404\u79cd\u56f0\u96be\uff0c\u901a\u8fc7\u6d4b\u8bd5\u66ff\u8eab\u8ba9\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u987a\u5229\u8fdb\u884c\u3002\u5728Java\u6280\u672f\u6808\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Mockito\u3001PowerMock\u8fd9\u4e24\u79cd\u6d4b\u8bd5\u66ff\u8eab\u5de5\u5177\u3002 \u672c\u7ae0\u6db5\u76d6\u7684\u5185\u5bb9\u6709\uff1a \u4f7f\u7528Mockito\u5b9e\u73b0public\u65b9\u6cd5\u7684\u6a21\u62df\uff0c\u7528\u4e8e\u89e3\u51b3\u5927\u90e8\u5206\u53ef\u6d4b\u6027\u95ee\u9898\u3002 \u4f7f\u7528PowerMock\u5b9e\u73b0\u7279\u6b8a\u7684\u6d4b\u8bd5\u573a\u666f\u3002\u6bd4\u5982\u5728\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u4e2d\u6709\u4e00\u6bb5Sytem.out. printf\u4ee3\u7801\uff0c\u6211\u4eec\u5f88\u96be\u8fdb\u884c\u66ff\u6362\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4f7f\u7528\u66f4\u7279\u6b8a\u7684\u65b9\u6cd5\u3002","title":"\u7b2c 4 \u7ae0 \u6d4b\u8bd5\u66ff\u8eab"},{"location":"04-testing-doubles/#41","text":"\u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u8005\u4e00\u4e2a\u7cfb\u7edf\u6709\u65f6\u5f88\u96be\u63d0\u4f9b\u4e00\u4e2a\u7eaf\u7cb9\u7684\u7c7b\u6765\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u5f80\u5f80\u4ea4\u7ec7\u5728\u4e00\u8d77\uff0c\u9700\u8981\u62c6\u6210\u5404\u4e2a\u5355\u5143\u624d\u80fd\u9010\u4e2a\u51fb\u7834\uff0c\u8fd9\u4e5f\u662f\u5355\u5143\u6d4b\u8bd5\u7684\u5fc5\u8981\u6761\u4ef6\u3002 \u8981\u5c06\u8fd9\u4e9b\u4ea4\u7ec7\u5728\u4e00\u8d77\u7684\u5bf9\u8c61\u62c6\u5f00\uff0c\u9700\u8981\u901a\u8fc7\u4e00\u4e9b\u5de5\u5177\u6765\u6a21\u62df\u76f8\u5173\u6570\u636e\u6216\u66ff\u6362\u5177\u6709\u67d0\u4e9b\u7279\u5b9a\u884c\u4e3a\u7684\u7c7b\u7b49\u3002\u7f51\u7ad9 xunitpatterns.com \u628a\u8fd9\u4e9b\u5de5\u5177\u79f0\u4e3aTest Double\uff0c\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f\"\u6d4b\u8bd5\u66ff\u8eab\"\u3002 \u5728\u4e0d\u540c\u7684\u6d4b\u8bd5\u56fe\u4e66\u4e2d\u5bf9\u6d4b\u8bd5\u66ff\u8eab\u6709\u4e0d\u540c\u7684\u8bf4\u6cd5\u3002\u6bd4\u5982\uff0c\u5728\u4e00\u4e9b\u56fe\u4e66\u4e2d\u5c06Stubs\u8868\u8ff0\u4e3a\u6d4b\u8bd5\u66ff\u8eab\uff0c\u4f46\u5728\u6709\u4e9b\u56fe\u4e66\u4e2dStubs\u88ab\u4f5c\u4e3a\u6d4b\u8bd5\u66ff\u8eab\u4e2d\u7684\u4e00\u7c7b\u6765\u770b\u5f85\u3002 Martin Fowler\u4e3a\u4e86\u8ba9\u8fd9\u4e9b\u6982\u5ff5\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u5728\u4ed6\u7684\u7f51\u7ad9 https://martinfowler.com/bliki/TestDouble.html \u4e0a\u91cd\u65b0\u7ed9\u51fa\u4e86\u6d4b\u8bd5\u66ff\u8eab\u7684\u542b\u4e49\uff0c\u4e0b\u9762\u4e3b\u8981\u7ed3\u5408Martin Fowler \u7684\u770b\u6cd5\u9488\u5bf9\u6d4b\u8bd5\u66ff\u8eab\u76f8\u5173\u6982\u5ff5\u7ed9\u51fa\u8bf4\u660e\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u65e5\u5e38\u4ea4\u6d41\u4e2d\u4f1a\u76f4\u63a5\u4f7f\u7528\u82f1\u6587\u6765\u63cf\u8ff0\u8fd9\u4e9b\u6982\u5ff5\uff0c\u4e3a\u4e86\u7406\u89e3\u65b9\u4fbf\uff0c\u8fd9\u91cc\u4e5f\u63d0\u4f9b\u76f8\u5e94\u7684\u4e2d\u6587\u540d\u79f0\u4ee5\u4f9b\u53c2\u8003\u3002 \u6211\u4eec\u5c06Test Double\u4f5c\u4e3a\u62bd\u8c61\u6982\u5ff5\uff0c\u63cf\u8ff0\u591a\u79cd\u6d4b\u8bd5\u66ff\u8eab\u7684\u96c6\u5408\uff0c\u800c\u6d4b\u8bd5\u66ff\u8eab\u5177\u4f53\u7684\u79cd\u7c7b\u4f7f\u7528\u4e0b\u9762\u7684\u6982\u5ff5\u9610\u8ff0\uff08\u540d\u8bcd\u5f62\u5f0f\uff09\u3002 Dummy \uff1a\u54d1\u5bf9\u8c61\uff08\u6570\u636e\uff09\u3002\u6b64\u5bf9\u8c61\u4ec5\u4ec5\u7528\u4e8e\u586b\u5145\u53c2\u6570\u5217\u8868\uff0c\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u7528\u5230\u5b83\u4eec\uff0c\u5bf9\u6d4b\u8bd5\u7ed3\u679c\u4e5f\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u3002 Fake\uff1a \u4e00\u4e9b\u5047\u7684\u5bf9\u8c61\u6216\u8005\u7ec4\u4ef6\u3002\u5b83\u53ef\u5b8c\u6574\u66ff\u4ee3\u4f9d\u8d56\u7ec4\u4ef6\u3002\u4f8b\u5982\u5185\u5b58\u6570\u636e\u5e93H2\uff0c\u4e00\u822c\u53ea\u4f1a\u5728\u6d4b\u8bd5\u73af\u5883\u4e0b\u8d77\u4f5c\u7528\uff0c\u4e0d\u4f1a\u5e94\u7528\u4e8e\u751f\u4ea7\u3002 Stub\uff1a \u6869\u4ef6\u3002\u4e3a\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u63d0\u4f9b\u6570\u636e\uff0c\u6ca1\u6709\u4efb\u4f55\u884c\u4e3a\uff0c\u5f80\u5f80\u662f\u6d4b\u8bd5\u5bf9\u8c61\u4f9d\u8d56\u5173\u7cfb\u7684\u4e0a\u6e38\u6570\u636e\u3002 Spy\uff1a\u95f4\u8c0d\u5bf9\u8c61\u3002\u5b83\u4ee3\u7406\u4e86\u5f85\u6d4b\u5bf9\u8c61\u6240\u4f9d\u8d56\u7684\u5bf9\u8c61\uff0c\u5176\u884c\u4e3a\u5f80\u5f80\u7531\u88ab\u4ee3\u7406\u7684\u771f\u5b9e\u5bf9\u8c61\u63d0\u4f9b\uff0c\u4ee3\u7406\u7684\u76ee\u7684\u662f\u4e86\u89e3\u88ab\u4f9d\u8d56\u5bf9\u8c61\u5185\u90e8\u7684\u8fd0\u884c\u8fc7\u7a0b\u3002 Mock\uff1a \u6a21\u62df\u5bf9\u8c61\u3002\u7528\u4e8e\u6a21\u62df\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u7684\u4f9d\u8d56\uff0c\u5b83\u5f80\u5f80\u662f\u4e00\u4e2a\u5177\u6709\u7279\u5b9a\u884c\u4e3a\u7684\u5bf9\u8c61\u3002\u5f00\u53d1\u8005\u5728\u6d4b\u8bd5\u5f00\u59cb\u524d\u6839\u636e\u671f\u671b\u8bbe\u7f6e\u9884\u671f\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u5728\u8c03\u7528\u8fd9\u4e2a\u6a21\u62df\u5bf9\u8c61\u7684\u65b9\u6cd5\u65f6\uff0c\u8fd4\u56de\u9884\u5148\u8bbe\u5b9a\u7684\u503c\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e0d\u540c\u7684\u6d4b\u8bd5\u6846\u67b6\u5bf9\u8fd9\u4e9b\u6982\u5ff5\u7684\u5b9e\u73b0\u4f1a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u4f46\u5927\u4f53\u4e0a\u4e0d\u4f1a\u5dee\u592a\u591a\u3002\u4f8b\u5982\uff0c\u5728\u524d\u9762\u6211\u4eec\u5c06Stub\u7406\u89e3\u4e3a\u7ed9\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u63d0\u4f9b\u6570\u636e\u7684\u5bf9\u8c61\uff0c\u800c\u5728Mockito\u7684\u6e90\u7801\u4e2d\uff0c\u4e3a\u6a21\u62df\u5bf9\u8c61\u8bbe\u7f6e\u9884\u671f\u884c\u4e3a\u7684\u8fc7\u7a0b\u4e5f\u53eb\u4f5cStub\uff0c\u52a8\u8bcd\u4e3aStubbing\u3002\u6d4b\u8bd5\u6846\u67b6\u5f80\u5f80\u4f1a\u63d0\u4f9b\u4e0eMock\u3001Spy\u76f8\u5173\u7684\u5b9e\u73b0\uff0cStub\u3001Fake\u3001Dummy\u5219\u9700\u8981\u81ea\u5df1\u914d\u7f6e\u6216\u8005\u5b9e\u73b0\uff0c\u5728\u672c\u7ae0\u4ee5\u53ca\u540e\u7eed\u7684\u7ae0\u8282\u4e2d\u5c06\u4f1a\u805a\u7126\u4e8eMock\u3001Spy\u7684\u539f\u7406\u548c\u4f7f\u7528\u4e0a\u3002 \u6ce8\u610f\uff1a\u4e3a\u4e86\u8868\u8ff0\u6e05\u6670\uff0c\u540e\u6587\u4e2dMock\u3001Spy \u4f7f\u7528\u4e2d\u6587\u540d\u79f0\u8868\u8ff0\u3002Mock \u7ffb\u8bd1\u4e3a\u4e2d\u6587\u65f6\uff0c\u52a8\u8bcd\u4e3a\"\u6a21\u62df\"\uff0c\u540d\u8bcd\u4e3a\"\u6a21\u62df\u5bf9\u8c61\"\uff1bSpy \u7ffb\u8bd1\u4e3a\u4e2d\u6587\u65f6\uff0c\u52a8\u8bcd\u4e3a\"\u76d1\u89c6\"\uff0c\u540d\u8bcd\u4e3a \"\u95f4\u8c0d\u5bf9\u8c61\"\u3002 \u56fe4-1\u7b80\u5355\u8bf4\u660e\u4e86\u8fd9\u4e9b\u6d4b\u8bd5\u66ff\u8eab\u5206\u522b\u6709\u4ec0\u4e48\u7528\uff0c\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u4e0d\u5fc5\u5168\u90e8\u5f15\u5165\uff0c\u6839\u636e\u9700\u8981\u4f7f\u7528\u5373\u53ef\u3002\u4ee5\u7528\u6237\u6ce8\u518c\u4e3a\u4f8b\uff0c\u6211\u4eec\u7f16\u5199\u7684\u5355\u5143\u6d4b\u8bd5\u4f1a\u805a\u7126\u4e8e\u6ce8\u518c\u90e8\u5206\u7684\u4ee3\u7801\uff0c\u81f3\u4e8e\u5176\u4ed6\u90e8\u5206\uff0c\u80fd\u6a21\u62df\u5c31\u5c3d\u91cf\u60f3\u529e\u6cd5\u6a21\u62df\u3002 \u56fe 4-1 \u5404\u79cd\u6d4b\u8bd5\u66ff\u8eab\u7684\u89e3\u91ca \u4e0b\u9762\u6211\u4eec\u4f7f\u7528 Mockito \u6765\u6d4b\u8bd5\u4f9d\u8d56\u5173\u7cfb\u590d\u6742\u7684\u5bf9\u8c61\u3002 \u672c\u7ae0\u7684\u793a\u4f8b\u4ee3\u7801\u89c1 https://github.com/java-self-testing/java-self-testing-example/tree/master/stubs \u3002","title":"4.1 \u6d4b\u8bd5\u66ff\u8eab\u7b80\u4ecb"},{"location":"04-testing-doubles/#42-mockito","text":"\u56fe4-2\u4e3aMockito\u7684Logo\uff0c\u753b\u9762\u4e2d\u5305\u542b\u4e86\u4e00\u676f\u83ab\u5409\u6258\u9e21\u5c3e\u9152\uff0cMockito\u7684\u540d\u79f0\u5c31\u662f\u7531\u83ab\u5409\u6258\uff08Mojito\uff09\u7684\u8c10\u97f3\u800c\u6765\u3002 \u56fe 4-2 Mockito\u7684Logo Mockito\u662f\u4e00\u4e2a\u6613\u7528\u7684\u6a21\u62df\u6846\u67b6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5e72\u51c0\u3001\u6d41\u5f0f\u7684API\u7f16\u5199\u51fa\u5bb9\u6613\u9605\u8bfb\u7684\u6d4b\u8bd5\u4ee3\u7801\u3002Mockito\u548cJUnit 4\u914d\u5408\u5f97\u975e\u5e38\u5b8c\u7f8e\uff0c\u5728Stack Overflow \u793e\u533a\u7684\u6295\u7968\u4e2d\u6392\u540d\u8f83\u9ad8\uff0c\u53e6\u5916\u5b83\u4e5f\u662fGitHub\u4e2d\u5f15\u7528\u5360\u6bd4\u975e\u5e38\u9ad8\u7684\u4e00\u4e2a\u6846\u67b6\u3002 Mockito\u6700\u5e38\u7528\u7684\u662fmock\u3001spy\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5b83\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e24\u4e2a\u9759\u6001\u65b9\u6cd5\u6765\u5b8c\u6210\u3002\u4f7f\u7528mock\u65b9\u6cd5\u8f93\u5165\u4e00\u4e2a\u9700\u8981\u6a21\u62df\u7684\u7c7b\u578b\u540e\uff0cMockito\u4f1a\u6784\u9020\u4e00\u4e2a\u6a21\u62df\u5bf9\u8c61\uff0c\u5e76\u63d0\u4f9b\u4e00\u7cfb\u5217\u65b9\u6cd5\u64cd\u63a7\u6240\u751f\u6210\u7684\u6a21\u62df\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u6839\u636e\u53c2\u6570\u8fd4\u56de\u7279\u5b9a\u7684\u503c\u3001\u629b\u51fa\u5f02\u5e38\u6216\u9a8c\u8bc1\u8fd9\u4e2a\u6a21\u62df\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5\u662f\u5426\u88ab\u8c03\u7528\uff0c\u4ee5\u53ca\u901a\u8fc7\u4f55\u79cd\u53c2\u6570\u8c03\u7528\u7b49\u3002spy\u65b9\u6cd5\u5728\u4f7f\u7528\u4e0a\u4e0emock\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u5b83\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u5b9e\u4f8b\u5316\u597d\u7684\u5bf9\u8c61\uff0cMockito\u4f1a\u4ee3\u7406\u8fd9\u4e2a\u65b9\u6cd5\u800c\u4e0d\u662f\u65b0\u5efa\u4e00\u4e2a\u6a21\u62df\u7c7b\u3002 \u9009\u62e9Mockito\u7684\u53e6\u5916\u4e00\u4e2a\u539f\u56e0\u8fd8\u5728\u4e8e\u5b83\u7684\u751f\u6001\u548c\u53ef\u62d3\u5c55\u6027\u3002\u540e\u9762\u6211\u4eec\u5728\u4ecb\u7ecd\u4e00\u4e9b\u9759\u6001\u65b9\u6cd5\u3001\u79c1\u6709\u65b9\u6cd5\u7684\u6a21\u62df\u548c\u6d4b\u8bd5\u65f6\uff0c\u4f1a\u501f\u52a9PowerMock\u6765\u5b8c\u6210\uff0cPowerMock\u548cMockito\u80fd\u5f88\u597d\u5730\u534f\u4f5c\u3002","title":"4.2 Mockito"},{"location":"04-testing-doubles/#411-mock","text":"\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\uff0cstubs\u6a21\u5757\u6709\u4e00\u4e2aUserService\u5bf9\u8c61\uff0c\u7528\u6765\u6f14\u793a\u7528\u6237\u6ce8\u518c\u7684\u903b\u8f91\u3002\u5728register\u65b9\u6cd5\u4e2d\uff0c\u6ce8\u518c\u7684\u8fc7\u7a0b\u5206\u4e3a\u5bf9\u5bc6\u7801\u8fdb\u884cHash\u8ba1\u7b97\u3001\u8ba9\u6570\u636e\u6301\u4e45\u5316\u548c\u53d1\u9001\u90ae\u4ef6\u8fd9\u4e09\u4e2a\u6b65\u9aa4\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5b9e\u9645\u573a\u666f\u4e0b\u7684\u6ce8\u518c\u65b9\u6cd5\u6bd4\u8fd9\u66f4\u52a0\u590d\u6742\uff0c\u8fd9\u91cc\u505a\u4e86\u5927\u91cf\u7b80\u5316\uff0c\u4ee5\u4fbf\u4e8e\u6211\u4eec\u5c06\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u5355\u5143\u6d4b\u8bd5\u4e0a\u3002 ppublic class UserService { private UserRepository userRepository; private EmailService emailService; private EncryptionService encryptionService; public UserService(UserRepository userRepository, EmailService emailService, EncryptionService encryptionService) { this.userRepository = userRepository; this.emailService = emailService; this.encryptionService = encryptionService; } public void register(User user) { user.setPassword(encryptionService.sha256(user.getPassword())); userRepository.saveUser(user); String emailSubject = \"Register Notification\"; String emailContent = \"Register Account successful! your username is \" + user.getUsername(); emailService.sendEmail(user.getEmail(), emailSubject, emailContent); } } \u4e3a\u4e86\u6f14\u793a Mockito \u7684\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5\uff0c\u8fd9\u91cc\u6ca1\u6709\u4f7f\u7528Spring\u6846\u67b6\uff0c\u9700\u8981\u8bfb\u8005\u81ea\u5df1\u901a\u8fc7\u6784\u9020\u51fd\u6570\u7ec4\u7ec7\u5bf9\u8c61\u4f9d\u8d56\u5173\u7cfb\u3002 \u6211\u4eec\u7684\u6d4b\u8bd5\u76ee\u6807\u662fregister\u65b9\u6cd5\uff0c\u4e0e\u4e4b\u524d\u7684\u793a\u4f8b\u4e0d\u540c\uff0c\u8fd9\u91cc\u7684\u88ab\u6d4b\u8bd5\u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u56e0\u6b64\u65e0\u6cd5\u6839\u636e\u8fd4\u56de\u503c\u65ad\u8a00\uff0c\u5982\u679c\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\u5c31\u4ee3\u8868\u529f\u80fd\u548c\u903b\u8f91\u6b63\u5e38\u3002\u53e6\u5916\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8c03\u7528\u5176\u4ed6\u5bf9\u8c61\uff0c\u590d\u6742\u7684\u4f9d\u8d56\u5173\u7cfb\u5728\u73b0\u5b9e\u4e2d\u5f88\u5e38\u89c1\uff0c\u793a\u4f8b\u4e2d\u5df2\u7ecf\u7b80\u5316\u4e86\u3002 \u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0cUserService\u5bf9\u8c61\u7684\u6784\u9020\u65b9\u6cd5\u9700\u8981\u4f20\u4eba userRepository\u3001emailService\u3001encryptionService \u8fd9\u4e09\u4e2a\u5bf9\u8c61\uff0c\u5426\u5219\u65e0\u6cd5\u5de5\u4f5c\u3002 \u4e0b\u9762\u6f14\u793a\u7684\u662f\u5e94\u7528\u4e86\u6a21\u62df\u5bf9\u8c61\u7684\u6d4b\u8bd5\u793a\u4f8b\u3002\u9996\u5148\uff0c\u521b\u5efa\u4e00\u4e2aMaven\u9879\u76ee\u6216\u8005\u6a21\u5757\uff0c\u5728Pom\u6587\u4ef6\u4e2d\u589e\u52a0 Mockito\u7684\u4f9d\u8d56\uff1a <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.13</version> <scope>test</scope> </dependency> <dependency> <groupId>org.mockito</groupId> <artifactId>mockito-core</artifactId> <version>2.28.2</version> <scope>test</scope> </dependency> Mockito\u4f7f\u7528\u4e86Byte Buddy\u4f5c\u4e3a\u4ee3\u7406\u6280\u672f\uff0c\u6839\u636e\u66b4\u9732\u51fa\u6765\u7684API\u53ef\u77e5\uff0c\u53ea\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u7c7b\u4f5c\u4e3a\u53c2\u6570\u5c31\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u5e76\u6307\u5b9a\u8fd9\u4e2a\u4ee3\u7406\u5bf9\u8c61\u7684\u884c\u4e3a\u4ee5\u4fbf\u8fd4\u56de\u7279\u5b9a\u7684\u503c\uff0c\u4ece\u800c\u5b8c\u6210\u6d4b\u8bd5\u5de5\u4f5c\u3002 \u5728\u4e0b\u9762\u7684\u6d4b\u8bd5\u4ee3\u7801\u4e2d\uff0c\u4f1a\u4f7f\u7528Mockito \u521b\u5efa\u6211\u4eec\u9700\u8981\u7684\u88ab\u4f9d\u8d56\u5bf9\u8c61\uff1a public class UserServiceTest { @Test public void should_register() { // \u4f7f\u7528 Mockito \u6a21\u62df\u4e09\u4e2a\u5bf9\u8c61 UserRepository mockedUserRepository = mock(UserRepository.class); EmailService mockedEmailService = mock(EmailService.class); EncryptionService mockedEncryptionService = mock(EncryptionService.class); UserService userService = new UserService(mockedUserRepository, mockedEmailService, mockedEncryptionService); // Given User user = new User(\"admin@test.com\", \"admin\", \"xxx\"); // When userService.register(user); // Then verify(mockedEmailService).sendEmail( eq(\"admin@test.com\"), eq(\"Register Notification\"), eq(\"Register Account successful! your username is admin\")); } } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cmock \u65b9\u6cd5\u5e2e\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u6a21\u62df\u5bf9\u8c61\uff0c\u800c\u975e\u771f\u5b9e\u7684\u5bf9\u8c61\u3002mock\u65b9\u6cd5\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u6765\u81ea Mockito\uff0c\u4e3a\u4e86\u8ba9\u5185\u5bb9\u7b80\u77ed\uff0c\u6211\u4eec\u4e00\u822c\u76f4\u63a5\u5bfc\u5165\u9759\u6001\u65b9\u6cd5\u3002Mockito \u7c7b\u662fMockito\u7684\u95e8\u9762\u7c7b\uff0c\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u9759\u6001\u65b9\u6cd5\u4f9b\u5f00\u53d1\u8005\u4f7f\u7528\u3002 \u4e0a\u8ff0\u793a\u4f8b\u662f\u4ee5Given...When...Then\u7684\u65b9\u5f0f\u6765\u7ec4\u7ec7\u6d4b\u8bd5\u4ee3\u7801\u7684\uff0c\u8fd9\u53ef\u8ba9\u6d4b\u8bd5\u770b\u8d77\u6765\u66f4\u4e3a\u6e05\u6670\u3002Given...When...Then\u662f\u4e00\u79cd\u6d4b\u8bd5\u7684\u98ce\u683c\uff0c\u524d\u9762\u5728\u4ecb\u7ecd\u5355\u5143\u6d4b\u8bd5\u65f6\u5df2\u7ecf\u4f7f\u7528\u8fc7\uff0c\u7531\u4e8e\u8fd9\u91cc\u4f7f\u7528\u4e86\u6d4b\u8bd5\u66ff\u8eab\uff0c\u8fd9\u79cd\u98ce\u683c\u4f53\u73b0\u5f97\u66f4\u52a0\u660e\u663e\uff0c\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u3002 \u5f88\u591a\u6587\u7ae0\u8ba4\u4e3a\u8fd9\u79cd\u6d4b\u8bd5\u7528\u4f8b\u7684\u98ce\u683c\u662f\u884c\u4e3a\u9a71\u52a8\u5f00\u53d1\uff08BDD\uff09\u7684\u4e00\u90e8\u5206\uff0c\u5f88\u591aE2E\u6d4b\u8bd5\u6846\u67b6\u5c06\u5176\u4f5c\u4e3a\u9ed8\u8ba4\u7684\u4ee3\u7801\u7ec4\u7ec7\u5f62\u5f0f\uff0c\u56e0\u6b64\u88ab\u5e7f\u6cdb\u63a8\u8350\u4f7f\u7528\u3002\u5176\u57fa\u672c\u601d\u60f3\u662f\u5c06\u7f16\u5199\u573a\u666f\uff08\u6216\u6d4b\u8bd5\uff09\u5206\u89e3\u4e3a\u4ee5\u4e0b\u4e09\u4e2a\u90e8\u5206\uff1a Given \u90e8\u5206\u63cf\u8ff0\u5728\u5f00\u59cb\u6307\u5b9a\u7684\u884c\u4e3a\u4e4b\u524d\u7a0b\u5e8f\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u6d4b\u8bd5\u7684\u524d\u63d0\u6761\u4ef6\u3002 When \u90e8\u5206\u89e6\u53d1\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u7684\u8c03\u7528\u3002 Then \u90e8\u5206\u68c0\u67e5\u548c\u65ad\u8a00\u6307\u5b9a\u884c\u4e3a\u6240\u4ea7\u751f\u7684\u53d8\u5316\u3002\u8fd9\u79cd\u53d8\u5316\u53ef\u4ee5\u662f\u65b9\u6cd5\u8c03\u7528\u6210\u529f\u7684\u8fd4\u56de\u503c\u3001\u629b\u51fa\u7684\u5f02\u5e38\u3001\u4e0b\u6e38\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u7b49\u3002 Mockito\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u95e8\u9762\u7c7bBDDMockito\u6765\u8ba9\u5f00\u53d1\u8005\u4f7f\u7528\u76f8\u5173API\u7f16\u5199BDD\u98ce\u683c\u7684\u6d4b\u8bd5\u3002\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0cBDD\u4e0d\u662f\u5fc5\u9009\u9879\uff0c\u4f46\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u6a21\u4eff\u4e0e\u4e4b\u7c7b\u4f3c\u7684\u98ce\u683c\u3002 \u6309\u7167\u8fd9\u4e2a\u6a21\u5f0f\uff0c\u4e00\u4e2a\u6d4b\u8bd5\u4e2d\u5e94\u8be5\u53ea\u5305\u542b\u4e00\u7ec4Given...When...Then\uff0c\u5982\u679c\u51fa\u73b0\u591a\u7ec4\uff0c\u5219\u5efa\u8bae\u62c6\u5206\u6210\u591a\u4e2a\u6d4b\u8bd5\u3002 \u5bf9register\u65b9\u6cd5\u6765\u8bf4\uff0c\u60f3\u8981\u8ba9\u6d4b\u8bd5\u66f4\u6709\u6548\uff0c\u5c31\u9700\u8981\u9a8c\u8bc1\u4f20\u7ed9 sendEmail\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u5426\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\u3002\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528verify\u65b9\u6cd5\u4f20\u5165\u6a21\u62df\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u76f8\u5173\u65b9\u6cd5\u3002verify\u8fd8\u53ef\u4ee5\u4f20\u5165\u9a8c\u8bc1\u7684\u6b21\u6570\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u5faa\u73af\uff0c\u88ab\u6a21\u62df\u7684\u5bf9\u8c61\u53ef\u80fd\u4f1a\u4e0d\u6b62\u4e00\u6b21\u88ab\u8c03\u7528\uff0c\u4e0d\u4f20\u5165\u7684\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u662f1\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a verify(mockedEmailService).sendEmail( eq(\"admin@test.com\"), eq(\"Register Notification\"), eq(\"Register Account successful! your username is admin\")); verify(mockedEmailService) \u7b49\u4ef7\u4e8e verify(mockedEmailService, 1)\u3002 \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cverify(mockedEmailService) \u7b49\u4ef7\u4e8everify(mockedEmailService, 1) \u3002\u8fd9\u91cc\u8fd8\u9700\u8981\u9a8c\u8bc1\u53d1\u9001\u90ae\u4ef6\u7684\u53c2\u6570\u662f\u5426\u662f\u6211\u4eec\u6240\u671f\u671b\u7684\u3002\u6bd4\u5982\u9a8c\u8bc1\u53d1\u9001\u90ae\u4ef6\u7684\u5730\u5740\u662f\u5426\u4e3a\"admin@test.com\"\uff0c\u53d1\u9001\u7684\u5185\u5bb9\u4e2d\u662f\u5426\u5305\u542b\u4e86\u7528\u6237\u540d\u7b49\u4fe1\u606f\u3002 \u4e0a\u8ff0\u4ee3\u7801\u4f7f\u7528\u4e86 eq \u65b9\u6cd5\u8fdb\u884c\u5bf9\u6bd4\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0ceq \u65b9\u6cd5\u548c assertThat \u4e2d\u7684equalTo \u4e0d\u592a\u4e00\u6837\u3002eq \u65b9\u6cd5\u662f\u901a\u8fc7\u5bf9\u53c2\u6570\u8fdb\u884c\u9a8c\u8bc1\u6765\u5b9e\u73b0\u5bf9\u6bd4\u7684\uff0c\u5b83\u6765\u81ea\u4e8e ArgumentMatchers \u5bf9\u8c61\u3002 \u6211\u4eec\u77e5\u9053\uff0c\u53ea\u6709\u88ab\u6210\u529f\u62e6\u622a\u7684\u5bf9\u8c61\u624d\u80fd\u7528 verify \u65b9\u6cd5\u9a8c\u8bc1\u3002\u4e00\u4e2a\u5f62\u8c61\u7684\u4f8b\u5b50\u662f\uff0c\u5f53\u4f60\u53bb\u653f\u52a1\u4e2d\u5fc3\u529e\u7406\u65b0\u7684\u8eab\u4efd\u8bc1\u65f6\uff0c\u5de5\u4f5c\u4eba\u5458\u4f1a\u5728\u6570\u4e2a\u5de5\u4f5c\u65e5\u5185\u5b8c\u6210\u529e\u7406\uff0c\u7136\u540e\u901a\u8fc7\u90ae\u9012\u5458\u6d3e\u53d1\u5230\u6307\u5b9a\u7684\u6536\u8d27\u5730\u5740\u3002\u653f\u52a1\u4e2d\u5fc3\u7684\u9ad8\u7ea7\u68c0\u67e5\u4eba\u5458\u6765\u68c0\u67e5\u8eab\u4efd\u8bc1\u529e\u7406\u7684\u5de5\u4f5c\u662f\u5426\u505a\u5230\u4f4d\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u53bb\u76d1\u63a7\u8bc1\u4ef6\u529e\u7406\u4eba\u5458\u7684\u4e00\u4e3e\u4e00\u52a8\uff0c\u53ea\u9700\u8981\u5230\u4e0b\u6e38\u7684\u73af\u8282\u62bd\u67e5\u529e\u7406\u7684\u7ed3\u679c\u5373\u53ef\u3002\u6700\u9ad8\u660e\u7684\u65b9\u6cd5\u65e0\u7591\u662f\u6084\u6084\u626e\u6f14\u6210\u90ae\u9012\u5458\u4e0e\u529e\u4e8b\u5458\u5bf9\u63a5\u5de5\u4f5c\u3002\u68c0\u67e5\u4eba\u5458\u5c31\u662f\u8fd9\u91cc\u88ab\u6a21\u62df\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\"\u65b9\u6cd5\"\u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4e0b\u6e38\u7684\"\u53c2\u6570\"\u4e5f\u5c31\u88ab\u4f20\u9012\u5230\u68c0\u67e5\u4eba\u5458\u624b\u4e0a\u3002 \u5bb9\u6613\u8054\u60f3\u7684\u662f\uff0c\u68c0\u67e5\u70b9\u53ef\u4ee5\u662f\u8c03\u7528\u7684\u6b21\u6570\u3001\u8c03\u7528\u7684\u53c2\u6570\u3001\u8c03\u7528\u7684\u5ef6\u65f6\u7b49\uff0c\u800c\u5b9e\u73b0\u7684\u7ec6\u8282\u548c\u6bcf\u6b65\u7684\u903b\u8f91\u5728verify\u65b9\u6cd5\u4e2d\u5e76\u4e0d\u9700\u8981\u68c0\u67e5\u3002\u53cd\u4e4b\uff0c\u5305\u542b\u6570\u5341\u4e2averify\u65ad\u8a00\u65b9\u6cd5\u7684\u6d4b\u8bd5\u8ba9\u7f16\u5199\u8005\u548c\u9605\u8bfb\u8005\u90fd\u611f\u5230\u56f0\u60d1\uff0c\u5b83\u4eec\u7684\u804c\u8d23\u4e0d\u591f\u5355\u4e00\uff0c\u68c0\u67e5\u70b9\u4e92\u76f8\u8986\u76d6\uff0c\u4f46\u53c8\u6ca1\u6709\u5145\u5206\u53d1\u6325\u4f5c\u7528\u3002","title":"4.1.1\u4f7f\u7528 mock \u65b9\u6cd5"},{"location":"04-testing-doubles/#422","text":"\u524d\u9762\u6211\u4eec\u9a8c\u8bc1\u4e86\u90ae\u4ef6\u53d1\u9001\u7684\u5185\u5bb9\u662f\u5426\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u9a8c\u8bc1\u4f20\u5165userRepository. saveUser\u65b9\u6cd5\u7684\u5185\u5bb9\u662f\u5426\u6309\u7167\u6211\u4eec\u7684\u9884\u671f\u6267\u884c\u3002\u56e0\u6b64\u6211\u4eec\u4e0d\u4ec5\u9700\u8981\u9a8c\u8bc1saveUser\u65b9\u6cd5\u7684\u8c03\u7528\u6b21\u6570\uff0c\u8fd8\u9700\u8981\u9a8c\u8bc1\u4f20\u5165\u7684\u5bf9\u8c61\u3002 \u5728 Java \u4e2d\uff0c\u5982\u679c\u4fee\u6539\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u503c\uff0c\u5728\u8fdb\u884c\u76f8\u7b49\u5224\u65ad\u65f6\uff0c\u53ea\u4f1a\u901a\u8fc7\u5f15\u7528\u6bd4\u8f83\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u65e0\u6cd5\u8d77\u5230\u65ad\u8a00\u548c\u6821\u9a8c\u7684\u4f5c\u7528\u3002\u6240\u4ee5\u5728\u4f7f\u7528verify\u65b9\u6cd5\u8fdb\u884c\u9a8c\u8bc1\u65f6\uff0c\u9700\u8981\u6355\u6349\u4f20\u4eba\u7684\u53c2\u6570\u5bf9\u8c61\uff0c\u518d\u901a\u8fc7\u524d\u9762\u4ecb\u7ecd\u7684\u65ad\u8a00\u6765\u5b8c\u6210\u9a8c\u8bc1\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7ArgumentCaptor\u6784\u5efa\u4e00\u4e2aArgument\u5bf9\u8c61\uff0c\u5e76\u6355\u6349\u53c2\u6570\uff0c\u518d\u7528\u4e8e\u65ad\u8a00\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a ArgumentCaptor<User> argument = ArgumentCaptor.forClass(User.class); verify(mockedUserRepository).saveUser(argument.capture()); assertEquals(\"admin@test.com\", argument.getValue().getEmail()); assertEquals(\"admin\", argument.getValue().getUsername());","title":"4.2.2 \u6355\u6349\u53c2\u6570\u5bf9\u8c61"},{"location":"04-testing-doubles/#423","text":"\u5728register\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7encryptionService.sha256\u65b9\u6cd5\u6765\u5bf9\u5bc6\u7801\u8fdb\u884cHash\u8ba1\u7b97\u3002\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u6a21\u62df\u5bf9\u8c61\u4e2d\u65b9\u6cd5\u7684\u884c\u4e3a\uff0c\u4ece\u800c\u5b9e\u73b0\u4e00\u4e2a\u5b8c\u6574\u7684\u5355\u5143\u6d4b\u8bd5\u3002 \u5728\u4e0d\u9884\u8bbe\u8fd4\u56de\u503c\u7684\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u6a21\u62df\u5bf9\u8c61\u7684\u65b9\u6cd5\u4f1a\u6309\u7167\u4e0b\u9762\u7684\u89c4\u5219\u8fd4\u56de\u9ed8\u8ba4\u503c\uff1a \u5982\u679c\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5305\u88c5\u7c7b\u578b\uff0c\u6a21\u62df\u5bf9\u8c61\u4f1a\u9ed8\u8ba4\u8fd4\u56denull\u3002 \u5982\u679c\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u4f1a\u8fd4\u56de\u76f8\u5e94\u7684\u9ed8\u8ba4\u503c\uff0c\u4f8b\u5982\u6570\u5b57\u7c7b\u578b\u4f1a\u8fd4\u56de0\uff0c\u5e03\u5c14\u7c7b\u578b\u4f1a\u8fd4\u56defalse\u3002 \u56e0\u6b64\uff0c\u4e3a\u4e86\u6d4b\u8bd5\u5404\u79cd\u884c\u4e3a\uff0c\u9700\u8981\u8ba9\u6a21\u62df\u5bf9\u8c61\u6309\u7167\u6211\u4eec\u7684\u610f\u56fe\u8fd4\u56de\u6570\u636e\u6216\u8005\u505a\u4e00\u4e9b\u5176\u4ed6\u64cd\u4f5c\u3002\u901a\u8fc7when(...). thenReturn(...) \u8bed\u53e5\u53ef\u4ee5\u4fee\u6539\u6a21\u62df\u5bf9\u8c61\u4e2d\u88ab\u6a21\u62df\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\u7684\u884c\u4e3a\u6216\u8fd4\u56de\u503c\u3002 \u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0csha256\u65b9\u6cd5\u4f20\u5165\u4e86\u4e00\u4e2aany\u65b9\u6cd5\uff0c\u5b83\u662f\u53c2\u6570\u5339\u914d\u5668\uff0c\u901a\u8fc7\u5339\u914d\u4e00\u4e9b\u6761\u4ef6\u6765\u51b3\u5b9a\u662f\u5426\u4fee\u6539\u88ab\u6a21\u62df\u65b9\u6cd5\u7684\u884c\u4e3a\u6216\u8fd4\u56de\u503c\u3002\u5982\u679cany \u65b9\u6cd5\u4e0d\u5e26\u53c2\u6570\uff0c\u5219\u610f\u5473\u7740\u4efb\u4f55\u53c2\u6570\u90fd\u6ee1\u8db3\u6761\u4ef6\u3002\u5982\u679cany\u65b9\u6cd5\u4f7f\u7528any(Class type) \u7684\u5f62\u5f0f\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\uff0c\u90a3\u4e48\u5b83\u4f1a\u9650\u5b9a\u5177\u4f53\u7684\u53c2\u6570\u7c7b\u578b\u3002\u7c7b\u4f3c\u5730\uff0cArgumentMatchers\u7c7b\u4e2d\u8fd8\u6709eq\u3001contains\u7b49\u65b9\u6cd5\u7528\u4e8e\u66f4\u7cbe\u786e\u7684\u5339\u914d\u3002 when(mockedEncryptionService.sha256(any())) .thenReturn(\"cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860\"); when\u65b9\u6cd5\u53ef\u63a5\u6536\u4e00\u4e2a\u6a21\u62df\u5bf9\u8c61\u6216\u95f4\u8c0d\u5bf9\u8c61\uff08\u540e\u9762\u4f1a\u8ba8\u8bba\uff09\u4f5c\u4e3a\u53c2\u6570\uff0c\u968f\u540e\u4f1a\u8c03\u7528\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u6cd5\u9884\u7f6e\u884c\u4e3a\u3002 thenReturn\uff1a\u9884\u7f6e\u4e00\u4e2a\u8fd4\u56de\u503c\u3002 thenThrow\uff1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002 thenCallRealMethod\uff1a\u8c03\u7528\u95f4\u8c0d\u5bf9\u8c61\u4e0a\u88ab\u4ee3\u7406\u7684\u539f\u59cb\u65b9\u6cd5\u3002 thenAnswer\uff1a\u8fd4\u56de\u4e00\u4e2a Answer \u5bf9\u8c61\uff0cAnswer \u5bf9\u8c61\u662f\u9884\u7f6e\u884c\u4e3a\u7684\u5c01\u88c5\u7c7b\uff0c\u4e0a\u9762\u4e09\u79cd\u90fd\u662f\u4e00\u79cdAnswer\u7684\u5b9e\u73b0\u3002 \u4ed4\u7ec6\u89c2\u5bdf\u4f60\u4f1a\u53d1\u73b0\uff0c\u8fd9\u91cc\u8d4b\u4e88\u4e00\u4e2a\u6a21\u62df\u5bf9\u8c61\u76f8\u5e94\u884c\u4e3a\u7684\u64cd\u4f5c\u662f\u901a\u8fc7\u76f4\u63a5\u8c03\u7528\u8fd9\u4e2a\u6a21\u62df\u5bf9\u8c61\u4e0a\u7684\u65b9\u6cd5\uff0c\u5e76\u4f20\u9012\u4e00\u4e2a\u53c2\u6570\u5339\u914d\u5bf9\u8c61\u6765\u5b9e\u73b0\u7684\u3002\u4f7f\u7528\u8fd9\u79cd\u8bed\u6cd5\u8bbe\u7f6e\u6a21\u62df\u5bf9\u8c61\u7684\u9884\u671f\u884c\u4e3a\uff0c\u5c31\u50cf\u8c03\u7528\u666e\u901a\u65b9\u6cd5\u4e00\u6837\u65b9\u4fbf\uff0c\u4f46\u662f\u5bb9\u6613\u8ba9\u4eba\u611f\u5230\u56f0\u60d1\u3002 \u6211\u7b2c\u4e00\u6b21\u4f7f\u7528\u8fd9\u4e2a\u8bed\u6cd5\u7684\u65f6\u5019\u611f\u5230\u4e0d\u53ef\u601d\u8bae\uff0c\u8fd9\u9a71\u4f7f\u6211\u53bb\u9605\u8bfb\u4e86Mockito\u7684\u6e90\u4ee3\u7801\u3002Mockito\u5728\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\u4e2d\u4f1a\u8bb0\u5f55\u6a21\u62df\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u88ab\u8d4b\u4e88\u671f\u671b\u7684\u884c\u4e3a\uff0c\u6a21\u62df\u5bf9\u8c61\u4e0a\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u5219\u4f1a\u88ab\u8ba4\u4e3a\u662f\u8bbe\u7f6e\u9636\u6bb5\u3002\u82e5\u5b58\u5728\u6a21\u62df\u5bf9\u8c61\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u8bbe\u7f6e\u4e86\u884c\u4e3a\uff0c\u90a3\u4e48\u5b83\u518d\u88ab\u8c03\u7528\u4f1a\u8fd4\u56de\u5148\u524d\u8bbe\u7f6e\u7684\u8fd4\u56de\u503c\u6216\u89e6\u53d1\u76f8\u5e94\u903b\u8f91\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u6709\u70b9\u50cf\u4e00\u628a\u7279\u6b8a\u8bbe\u8ba1\u7684\u67aa\uff0c\u7b2c\u4e00\u6b21\u6263\u4e0b\u6273\u673a\u65f6\u53ea\u662f\u4e3a\u4e86\u8ba9\u5b50\u5f39\u4e0a\u819b\uff0c\u7b2c\u4e8c\u6b21\u6263\u4e0b\u6273\u673a\u624d\u4f1a\u53d1\u5c04\u5b50\u5f39\u3002 Mockito \u8fd8\u6709\u4e00\u4e9b\u9690\u85cf\u7684\u89c4\u5219\uff0c\u82e5\u60f3\u907f\u514d\u6389\u5165\u8fd9\u4e9b\u9677\u9631\u5219\u9700\u8981\u4e86\u89e3\u4e00\u4e0b\uff1a \u53ef\u4ee5\u591a\u6b21\u5b9a\u4e49\u9884\u7f6e\u884c\u4e3a\uff0c\u540e\u7eed\u7684\u5b9a\u4e49\u4f1a\u8986\u76d6\u524d\u9762\u7684\u8bbe\u7f6e\uff0c\u4ee5\u6700\u540e\u4e00\u6b21\u4e3a\u51c6\u3002\u4f46\u662f\u4e0d\u63a8\u8350\u8fd9\u79cd\u505a\u6cd5\uff0c\u8fd9\u662f\u4e00\u79cd\u4ee3\u7801\u574f\u5473\u9053\uff0c\u5f15\u5165\u4e86\u4e00\u4e9b\u65e0\u6548\u7684\u4ee3\u7801\uff0c\u800c\u4e14\u4f1a\u8ba9\u53ef\u8bfb\u6027\u4e0b\u964d\u3002 \u4e00\u65e6\u9884\u7f6e\u4e86\u884c\u4e3a\uff0c\u65e0\u8bba\u8c03\u7528\u591a\u5c11\u6b21\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u8fd4\u56de\u76f8\u540c\u7684\u5185\u5bb9\u3002 Mockito \u8fd8\u63d0\u4f9b\u4e86\u5176\u4ed6\u5f62\u5f0f\u7684\u8bed\u6cd5\uff0c\u4ee5\u4fbf\u66f4\u7075\u6d3b\u5730\u7ed9\u6a21\u62df\u5bf9\u8c61\u8bbe\u7f6e\u9884\u671f\u884c\u4e3a\u3002","title":"4.2.3 \u8bbe\u7f6e\u6a21\u62df\u5bf9\u8c61\u7684\u884c\u4e3a"},{"location":"04-testing-doubles/#1-dowhen","text":"\u6ce8\u610f\uff0c\u5bf9\u4e8e\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u65b9\u6cd5\uff0c\u4e0d\u80fd\u4f7f\u7528when(...).thenReturn(...) \u8fd9\u79cd\u8bed\u6cd5\u8bbe\u7f6e\u9884\u671f\u884c\u4e3a\uff0c\u8fd9\u662f\u56e0\u4e3awhen\u65b9\u6cd5\u9700\u8981\u63a5\u6536\u4e00\u4e2a\u88ab\u6a21\u62df\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4f5c\u4e3a\u53c2\u6570\uff0c\u5982\u679c\u88ab\u6a21\u62df\u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528do(...).when(...) \u8bed\u6cd5\uff0c\u53d6\u5f97\u7684\u6548\u679c\u7c7b\u4f3c\u3002\u5728\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u628a\u9884\u7f6e\u7684\u884c\u4e3a\u5199\u5728\u524d\u9762\u5373\u53ef\u3002 doThrow(new RuntimeException()).when(mockedList).clear(); // \u4e0b\u9762\u7684\u8c03\u7528\u4f1a\u89e6\u53d1\u5f02\u5e38\u629b\u51fa mockedList.clear(); \u76f8\u5173\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\u7684\u8bf4\u660e\u5982\u4e0b\u3002 doReturn\uff1a\u9884\u7f6e\u4e00\u4e2a\u8fd4\u56de\u503c\u3002 doThrow\uff1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002 doNothing\uff1a\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002 doCallRealMethod\uff1a\u8c03\u7528\u95f4\u8c0d\u5bf9\u8c61\u4e0a\u88ab\u4ee3\u7406\u7684\u539f\u59cb\u65b9\u6cd5\u3002 doAnswer\uff1a\u524d\u9762\u51e0\u79cd\u65b9\u6cd5\u7684\u5c01\u88c5\u3002 \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684 when \u4e0d\u662f\u63a5\u6536\u65b9\u6cd5\u8c03\u7528\u540e\u7684\u8fd4\u56de\u503c\uff0c\u800c\u662f\u4f1a\u63a5\u6536\u6a21\u62df\u5bf9\u8c61\u672c\u8eab\uff0c\u6ce8\u610f\u533a\u5206\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002","title":"1. do(...).when(...) \u8bed\u6cd5"},{"location":"04-testing-doubles/#2-bdd","text":"\u8fd8\u8bb0\u5f97\u524d\u9762\u63d0\u5230\u7684Given..When...Then\u7684\u6d4b\u8bd5\u98ce\u683c\u5417\uff1f \u5728Mockito \u9ed8\u8ba4API\u63d0\u4f9b\u7684\u65b9\u6cd5\u4e2d\uff0cwhen\u65b9\u6cd5\u88ab\u7528\u4e8e\u5b9a\u4e49\u6a21\u62df\u5bf9\u8c61\u7684\u9884\u7f6e\u884c\u4e3a\uff0c\u4f46\u8fd9\u6837\u4e00\u6765\u5c31\u4e0eBDD\u7684\u98ce\u683c\u4e0d\u4e00\u81f4\u4e86\uff0c\u5728\u53ef\u8bfb\u6027\u4e0a\u4f1a\u53d7\u5230\u4e00\u5b9a\u7684\u5f71\u54cd\u3002 Mockito\u4e3a\u4e86\u9f13\u52b1\u4f7f\u7528BDD\u6d4b\u8bd5\u98ce\u683c\uff0c\u4e5f\u63d0\u4f9b\u4e86\u4e00\u5957API\uff0c\u5728\u8fd9\u5957API\u91cc\uff0c\u4f7f\u7528BDD-Mockito\u7c7b\u4e2d\u7684\u65b9\u6cd5\u4ee3\u66ff\u4e86Mockito\u7c7b\uff08BDDMock\u4e3aMockito\u7684\u65b9\u6cd5\u522b\u540d\uff09\uff0c\u53ef\u4ee5\u6a21\u4effBDD \u7684\u98ce\u683c\u8fdb\u884c\u6d4b\u8bd5\u3002\u5b83\u7684\u7528\u6cd5\u5f88\u7b80\u5355\uff0c\u5c06\u524d\u9762\u7684when\u4fee\u6539\u4e3agiven\uff0c\u5c06then\u66ff\u6362\u4e3awill\u5373\u53ef\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a given(mockedEncryptionService.sha256(any())) .willReturn(\"cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860\"); \u5728\u56e2\u961f\u8fbe\u6210\u5171\u8bc6\u7684\u60c5\u51b5\u4e0b\uff0c\u5229\u7528\u4e0a\u8ff0\u65b9\u6cd5\u522b\u540d\u53ef\u4ee5\u63d0\u9ad8\u6d4b\u8bd5\u7684\u81ea\u89e3\u91ca\u6027\u3002","title":"2. BDD \u98ce\u683c\u8bed\u6cd5"},{"location":"04-testing-doubles/#424-1","text":"\u53c2\u6570\u5339\u914d\u5668\u662fMockito\u7684\u4e00\u4e2a\u7279\u8272\u529f\u80fd\uff0c\u53ef\u4ee5\u8ba9Mock\u53d8\u5f97\u66f4\u52a0\u7075\u6d3b\uff0c\u7528\u4e8e\u533a\u5206\u540c\u4e00\u4e2a\u65b9\u6cd5\u591a\u6b21\u88ab\u4e0d\u540c\u7684\u53c2\u6570\u8c03\u7528\u7684\u60c5\u51b5\u3002\u53c2\u6570\u6821\u9a8c\u5668\u548cJUnit\u4e2d\u65ad\u8a00\u7684\u5339\u914d\u5668\u662f\u7c7b\u4f3c\u7684\u6a21\u5f0f\u3002 Mockito\u9700\u8981\u501f\u52a9\u53c2\u6570\u5339\u914d\u5668\u6765\u7ed1\u5b9a\u9884\u7f6e\u884c\u4e3a\uff0c\u53c2\u6570\u5339\u914d\u5668\u4e5f\u4f1a\u7528\u4e8everify\u65b9\u6cd5\u4e2d\uff0c\u8d77\u5230\u65ad\u8a00\u7684\u4f5c\u7528\u3002 \u4e3a\u4e86\u66b4\u9732 ArgumentMatchers\u4e2d\u7684 API\uff0cMockito \u7c7b\u76f4\u63a5\u7ee7\u627f\u4e86 ArgumentMatchers \u7c7b\uff0c\u8fd9\u8db3\u4ee5\u8bf4\u660e\u5b83\u7684\u91cd\u8981\u6027\u3002 \u524d\u9762\u7684\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86any\u53c2\u6570\u5339\u914d\u5668\uff0c\u5176\u7528\u9014\u662f\u8ba9\u4efb\u4f55\u53c2\u6570\u90fd\u53ef\u5339\u914d\u5230\u3002\u5982\u679c\u4f7f\u7528any \u53c2\u6570\u5339\u914d\u5668\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u6267\u884c\u540e\u4f1a\u6253\u5370true\u3002 List mockedList = mock(List.class); when(mockedList.add(any())).thenReturn(true); System.out.println(mockedList.add(null)); \u5982\u679c\u60f3\u8981\u5f97\u5230\u66f4\u4e3a\u7ec6\u81f4\u7684\u7c7b\u578b\u5339\u914d\uff0c\u53ef\u4ee5\u4f7f\u7528any(Class)\u3001anyxxx\u7b49\u5173\u4e8e\u7c7b\u578b\u7684\u53c2\u6570\u5339\u914d\u5668\u3002\u56e0\u4e3a\u6ca1\u6709\u5339\u914d\u4e0a\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u6253\u5370\u51fafalse\uff0c\u8fd9\u662fMockito\u9ed8\u8ba4\u7684\u884c\u4e3a\u5bfc\u81f4\u7684\u3002 List mockedList = mock(List.class); // \u7b49\u4ef7\u4e8e any(Boolean.class); when(mockedList.add(anyBoolean())).thenReturn(true); System.out.println(mockedList.add(null)); \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u6700\u5bb9\u6613\u5f04\u9519\u7684\u662fnull\u503c\u7684\u5904\u7406\uff0c\u7531\u4e8e\u5b57\u9762\u91cf\uff08\u4e0d\u7ecf\u8fc7\u5b9a\u4e49\u800c\u5728\u4ee3\u7801\u4e2d\u76f4\u63a5\u4f7f\u7528\u7684\u503c\uff09\u3001\u53c2\u6570\u5339\u914d\u5668\u3001\u65ad\u8a00\u4e2d\u7684\u5339\u914d\u5668\u5747\u6709\u591a\u79cd\u7684\u5199\u6cd5\uff0c\u5f00\u53d1\u8005\u975e\u5e38\u5bb9\u6613\u88ab\u8bef\u5bfc\u3002 \u4f7f\u7528\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u4f53\u9a8c\u4e0d\u540c\u7684\u5339\u914d\u65b9\u5f0f\u5e26\u6765\u7684\u4e0d\u540c\u6548\u679c\u3002\u6ce8\u610f\uff0c\u7406\u89e3\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u5bf9null\u503c\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u672a\u77e5\u7684\u95ee\u9898\u3002 List mockedList = mock(List.class); // \u7b49\u4ef7 isNull() when(mockedList.add(eq(null))).thenReturn(false); // \u8fd9\u91cc\u662f\u5728\u771f\u5b9e\u8c03\u7528\uff0c\u4f20\u5165\u5b57\u9762\u91cf System.out.println(mockedList.add(null)); // \u8fd9\u91cc\u662f\u5728\u9a8c\u8bc1\uff0c\u4ecd\u7136\u4f7f\u7528\u53c2\u6570\u5339\u914d\u5668 verify(mockedList).add(isNull()); // \u8fd9\u91cc\u662f\u5728\u65ad\u8a00\uff0c\u4f7f\u7528\u65ad\u8a00\u4e2d\u7684\u5339\u914d\u5668 assertThat(mockedList.get(0), nullValue()); assertThat(mockedList.get(0), equalTo(null)); assertThat(mockedList.get(0), new IsNull());","title":"4.2.4 \u53c2\u6570\u5339\u914d\u5668 {#\u53c2\u6570\u5339\u914d\u5668-1}"},{"location":"04-testing-doubles/#425-spy","text":"\u5982\u679c\u9879\u76ee\u4e2d\u7684\u5bf9\u8c61\u5f88\u591a\uff0c\u5bf9\u6240\u6709\u5f85\u6d4b\u8bd5\u5bf9\u8c61\u6240\u4f9d\u8d56\u7684\u5bf9\u8c61\u90fd\u8fdb\u884c\u6a21\u62df\uff0c\u5de5\u4f5c\u91cf\u4f1a\u975e\u5e38\u5927\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u60f3\u529e\u6cd5\u51cf\u5c11\u76f8\u5e94\u7684\u5de5\u4f5c\u91cf\u3002\u8bd5\u60f3\uff0c\u5982\u679c\u5bf9\u8c61B\u4f9d\u8d56A\uff0c\u5bf9\u8c61A\u5df2\u7ecf\u901a\u8fc7\u4e86\u5355\u5143\u6d4b\u8bd5\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba4\u4e3aA\u662f\u53ef\u4fe1\u4efb\u7684\u3002A\u7684\u7ed3\u679c\u53ef\u4ee5\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u76f4\u63a5\u7528\u4e8e\u6d4b\u8bd5\uff0c\u5b83\u5e76\u4e0d\u5f71\u54cd\u6d4b\u8bd5\u7684\u6b63\u786e\u6027\u3002 \u8981\u60f3\u5b9e\u73b0\u4e0a\u8ff0\u8bbe\u60f3\uff0c\u53ef\u4ee5\u4f7f\u7528spy\u65b9\u6cd5\u3002spy\u65b9\u6cd5\u76f8\u5f53\u4e8e\u5bf9\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u9700\u8981\u4f9d\u8d56\u7684\u65b9\u6cd5\u8fdb\u884c\u4ee3\u7406\uff0c\u5728\u4e0d\u6539\u53d8\u539f\u6765\u7684\u903b\u8f91\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u6240\u4f9d\u8d56\u7684\u5bf9\u8c61\u8fdb\u884c\u76d1\u542c\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u90e8\u5206\u65b9\u6cd5\u8bbe\u7f6e\u9884\u671f\u884c\u4e3a\u3002\u53ef\u4ee5\u8bf4spy\u65b9\u6cd5\u5b9e\u73b0\u4e86\u4e00\u79cd\u7279\u6b8a\u7684\u6a21\u62df\u3002\u5176\u5185\u90e8\u5b9e\u73b0\u548cmock\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u5c40\u90e8\u6a21\u62df\u884c\u4e3a\u3002 \u7531\u4e8e\u88abspy\u65b9\u6cd5\u5e94\u7528\u7684\u5bf9\u8c61\u5f80\u5f80\u4f1a\u6709\u81ea\u5df1\u7684\u5b9e\u73b0\uff0c\u56e0\u6b64\u53ef\u4ee5\u7701\u53bbgiven\u65b9\u6cd5\u3002\u95f4\u8c0d\u5bf9\u8c61\u4f9d\u7136\u53ef\u4ee5\u548c\u6a21\u62df\u5bf9\u8c61\u4e00\u6837\u88ab\u9a8c\u8bc1\uff0c\u4ee5\u53ca\u7ed9\u90e8\u5206\u65b9\u6cd5\u9884\u7f6e\u884c\u4e3a\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8eEncryptionService\uff0c\u6211\u4eec\u7ed9sha256\u65b9\u6cd5\u4e00\u4e2a\u771f\u5b9e\u7684\u5b9e\u73b0\uff1a public String sha256(String text) { MessageDigest md = null; try { md = MessageDigest.getInstance(\"SHA-256\"); return new BigInteger(1, md.digest(text.getBytes())).toString(16); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } return null; } \u5728register\u7684\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0c\u4fee\u6539EncryptionService\u7c7b\u7684mock\u65b9\u6cd5\u4e3aspy\u65b9\u6cd5\uff0c\u5e76\u5220\u9664mockedEncryptionService\u7684Given\u64cd\u4f5c\u3002 EncryptionService mockedEncryptionService = spy(new EncryptionService()); \u91cd\u65b0\u8fd0\u884c\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u5f97\u5230\u4e0e\u4f7f\u7528mock\u65b9\u6cd5\u540c\u6837\u7684\u6d4b\u8bd5\u7ed3\u679c\u3002\u4f7f\u7528spy\u65b9\u6cd5\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6d4b\u8bd5\u6837\u677f\u4ee3\u7801\uff0c\u907f\u514d\u91cd\u590d\u5de5\u4f5c\u3002\u4f7f\u7528spy\u65b9\u6cd5\u5c31\u50cf\u662f\u4e00\u4e2a\u95f4\u8c0d\u4fb5\u4eba\u9700\u8981\u6ce8\u5165\u7684\u5bf9\u8c61\u89c2\u5bdf\u4e0b\u6e38\u5bf9\u8c61\u7684\u884c\u4e3a\uff0c\u5e76\u8bb0\u5f55\u4e00\u5207\uff0c\u7136\u540e\u5728\u6d4b\u8bd5\u5b8c\u6210\u540e\u6c47\u62a5\u4ed6\u770b\u5230\u7684\u4fe1\u606f\u4e00\u6837\u3002 \u5e94\u7528\u4e86spy\u65b9\u6cd5\u7684\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u88ab\u9a8c\u8bc1\uff0c\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u4ecd\u7136\u53ef\u4ee5\u9a8c\u8bc1register\u65b9\u6cd5\u786e\u5b9e\u8c03\u7528\u4e86sha256\u65b9\u6cd5\u3002 verify(mockedEncryptionService).sha256(eq(\"xxx\"));","title":"4.2.5 \u4f7f\u7528 spy \u65b9\u6cd5"},{"location":"04-testing-doubles/#426","text":"\u5982\u679c\u6bcf\u6b21\u90fd\u7f16\u5199mock\u3001spy\u65b9\u6cd5\u6765\u521b\u5efa\u6a21\u62df\u5bf9\u8c61\uff0c\u4ee3\u7801\u4f1a\u663e\u5f97\u5197\u957f\u4e14\u4e0d\u6613\u9605\u8bfb\u3002\u5229\u7528Java \u6ce8\u89e3\u7684\u80fd\u529b\uff0c\u53ef\u4ee5\u8ba9\u6a21\u62df\u884c\u4e3a\u63d0\u524d\u81ea\u52a8\u51c6\u5907\u597d\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f1a\u901a\u8fc7\u6ce8\u89e3\u5b8c\u6210\u6d4b\u8bd5\uff0c\u4ece\u800c\u51cf\u5c11\u6d4b\u8bd5\u7684\u4ee3\u7801\u91cf\u3002 \u4f7f\u7528\u6ce8\u89e3\u53ea\u9700\u8981\u4fee\u6539\u9700\u8981\u88ab\u6a21\u62df\u7684\u4e09\u4e2a\u5bf9\u8c61\uff0c\u5e76\u4f7f\u7528\u6ce8\u89e3\u4ee3\u66ff\u624b\u52a8\u521b\u5efa\u5373\u53ef\uff1a @Mock UserRepository mockedUserRepository; @Mock EmailService mockedEmailService; @Spy EncryptionService mockedEncryptionService = new EncryptionService(); \u5982\u679c\u53ea\u662f\u52a0\u4e0a\u6ce8\u89e3\uff0c\u6d4b\u8bd5\u65b9\u6cd5\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e2a\u6d4b\u8bd5\u7c7b\u9700\u8981\u5904\u7406\u6ce8\u89e3\u5e76\u521d\u59cb\u5316\u6a21\u62df\u884c\u4e3a\uff0c\u56e0\u6b64\u9700\u8981\u5728\u6d4b\u8bd5\u7c7b\u4e0a\u6dfb\u52a0\u4e00\u4e2aRunner\u8ba9Mockito\u6709\u673a\u4f1a\u53bb\u5904\u7406\u6ce8\u89e3\u3002Rumner\u4e2d\u7684\u903b\u8f91\u8fd0\u884c\u5728\u6240\u6709\u751f\u547d\u5468\u671f\u94a9\u5b50\u7684\u6700\u524d\u9762\uff0c\u5177\u6709\u6700\u5927\u7684\u7075\u6d3b\u6027\u3002 \u6211\u4eec\u53ef\u5728\u6d4b\u8bd5\u7c7b\u4e0a\u589e\u52a0\u4e0b\u9762\u7684\u6ce8\u89e3\uff1a @RunWith(MockitoJUnitRunner.class) \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60f3\u8981\u5145\u5206\u5229\u7528Mockito \u7684\u7279\u6027\u53ef\u4ee5\u4f7f\u7528MockitoJUnitRunner\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7PowerMockRunner\u6765\u914d\u5408\u4f7f\u7528PowerMock\uff0c\u901a\u8fc7SpringRumner\u6765\u914d\u5408\u4f7f\u7528Spring\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u57fa\u7c7b\uff0c\u5728\u57fa\u7c7b\u4e0a\u4f7f\u7528@RunWith\u6ce8\u89e3\u4fee\u9970\uff0c\u8fd9\u6837\u5c31\u4e0d\u5fc5\u5728\u6240\u6709\u7684\u5b50\u7c7b\u4e2d\u91cd\u590d\u5b9a\u4e49\u4e86\u3002 @Mock\u6ce8\u89e3\u7b49\u4ef7\u4e8emock\u65b9\u6cd5\uff0c@Spy\u6ce8\u89e3\u7c7b\u4f3c\uff0c\u7b49\u4ef7\u4e8espy\u65b9\u6cd5\u3002\u62ff\u5230\u6a21\u62df\u5bf9\u8c61\u6216\u95f4\u8c0d\u5bf9\u8c61\u4ee5\u540e\uff0c\u8fd8\u9700\u8981\u5c06\u6a21\u62df\u51fa\u6765\u7684\u5bf9\u8c61\u6ce8\u5165\u88ab\u6d4b\u8bd5\u7c7b\u4e2d\u624d\u80fd\u4f7f\u7528\u3002Mockito\u63d0\u4f9b\u4e86@InjectMocks \u6ce8\u89e3\u6765\u5b8c\u6210\u8fd9\u90e8\u5206\u5de5\u4f5c\u3002@InjectMocks\u7684\u6ce8\u5165\u5de5\u4f5c\u662f\u6839\u636e\u7c7b\u578b\u6765\u5b9e\u73b0\u7684\uff0c\u7c7b\u4f3c\u4e8e\u4f9d\u8d56\u6ce8\u4eba\uff0c\u4f46\u5982\u679c\u9700\u8981\u6ce8\u5165\u4e00\u4e2a\u7c7b\u7684\u4e0d\u540c\u5b9e\u4f8b\uff0c\u6ce8\u89e3\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\u3002 \u4f7f\u7528\u6ce8\u89e3\u7684\u5b8c\u6574\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u5728GitHub\u4e0a\u7684\u793a\u4f8b\u4ee3\u7801\u4ed3\u5e93\u4e2d\u627e\u5230\u6b64\u4ee3\u7801\u6bb5\u3002 @RunWith(MockitoJUnitRunner.class) public class UserServiceAnnotationTest { @Mock UserRepository mockedUserRepository; @Mock EmailService mockedEmailService; @Spy EncryptionService mockedEncryptionService = new EncryptionService(); @InjectMocks UserService userService; @Test public void should_register() { // Given User user = new User(\"admin@test.com\", \"admin\", \"xxx\"); // When userService.register(user); // Then verify(mockedEncryptionService).sha256(eq(\"xxx\")); verify(mockedEmailService).sendEmail( eq(\"admin@test.com\"), eq(\"Register Notification\"), eq(\"Register Account successful! your username is admin\")); // \u4e3a\u4e86\u9a8c\u8bc1\u4f20\u5165\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\u6355\u83b7\u5668ArgumentCaptor\u6765\u6355\u83b7\u4f20\u5165\u65b9\u6cd5\u7684\u53c2\u6570\u3002 ArgumentCaptor<User> argument = ArgumentCaptor.forClass(User.class); verify(mockedUserRepository).saveUser(argument.capture()); assertEquals(\"admin@test.com\", argument.getValue().getEmail()); assertEquals(\"admin\", argument.getValue().getUsername()); assertEquals(\"cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860\", argument.getValue().getPassword()); } }","title":"4.2.6 \u4f7f\u7528\u6ce8\u89e3"},{"location":"04-testing-doubles/#427","text":"\u5728\u4f7f\u7528 Mockito \u7684\u65f6\u5019\uff0c\u8fd8\u6709\u4e00\u4e9b\u6280\u5de7\u53ef\u4ee5\u7528\u6765\u6392\u9519\uff0c\u5728\u9047\u5230\u95ee\u9898\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u5bf9\u6211\u4eec\u6709\u5e2e\u52a9\u3002","title":"4.2.7 \u5176\u4ed6\u6280\u5de7"},{"location":"04-testing-doubles/#1","text":"\u5982\u679c\u9700\u8981\u5728\u4e00\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u4e2d\u53cd\u590d\u8bbe\u7f6e\u6a21\u62df\u5bf9\u8c61\u7684\u884c\u4e3a\uff0c\u4ee5\u53ca\u91cd\u590d\u9a8c\u8bc1\u88ab\u6a21\u62df\u7684\u65b9\u6cd5\u662f\u5426\u88ab\u8c03\u7528\uff0c\u4f46\u662f\u6a21\u62df\u5bf9\u8c61\u4e0a\u7684\u72b6\u6001\u53cd\u590d\u53d8\u5316\u4f1a\u5e72\u6270\u6d4b\u8bd5\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528reset\u65b9\u6cd5\u6e05\u7406\u6389\u6b64\u72b6\u6001\u3002 \u5f53\u7136\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0d\u5fc5\u624b\u52a8\u6e05\u7406\u6a21\u62df\u72b6\u6001\uff0c\u6d4b\u8bd5\u7ed3\u675f\u540e Mockito \u4f1a\u81ea\u52a8\u6e05\u7406\u3002\u5982\u679c\u5728\u4e00\u4e9b\u6d4b\u8bd5\u573a\u666f\u4e2d\uff0c\u5fc5\u987b\u4f7f\u7528reset\u65b9\u6cd5\u624b\u52a8\u6e05\u7406\uff0c\u4e5f\u8bf7\u5148\u8003\u8651\u662f\u5426\u5e94\u8be5\u5c06\u5176\u62c6\u5206\u6210\u591a\u4e2a\u4e0d\u540c\u7684\u6d4b\u8bd5\u3002","title":"1. \u6e05\u7406\u6a21\u62df\u72b6\u6001"},{"location":"04-testing-doubles/#2","text":"\u4f7f\u7528Mockito\u65f6\uff0c\u53ef\u80fd\u4f1a\u56e0\u4e3a\u9519\u8bef\u64cd\u4f5c\u5bfc\u81f4\u6a21\u62df\u4e0d\u751f\u6548\uff0c\u4e3a\u65b9\u4fbf\u8c03\u8bd5\uff0c\u53ef\u4ee5\u6253\u5370\u51fa\u6a21\u62df\u5bf9\u8c61\u7684\u4fe1\u606f\u6765\u63a2\u67e5\u539f\u56e0\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a EncryptionService mockedEncryptionService = mock(EncryptionService.class); given(mockedEncryptionService.sha256(any())) .willReturn(\"cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860\"); MockingDetails mockingDetails = Mockito.mockingDetails(mockedEncryptionService); System.out.println(mockingDetails.isMock()); System.out.println(mockingDetails.getStubbings()); \u6267\u884c\u4e0a\u8ff0\u4ee3\u7801\u5373\u53ef\u8f93\u51fa\u5f53\u524d\u5bf9\u8c61\u7684\u6a21\u62df\u72b6\u6001\u3002\u901a\u8fc7\u68c0\u67e5\u8f93\u51fa\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u53c2\u6570\u5339\u914d\u662f\u5426\u5de5\u4f5c\uff1a true [encryptionService.sha256(<any>); stubbed with: [Returns: cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860]]","title":"2. \u83b7\u53d6\u6a21\u62df\u72b6\u6001"},{"location":"04-testing-doubles/#3-lambda","text":"\u4f7f\u7528\u53c2\u6570\u6355\u83b7\u6765\u9a8c\u8bc1\u4e0b\u6e38\u5bf9\u8c61\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\u7684\u4ee3\u7801\u8f83\u4e3a\u5197\u957f\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528Matcher\u6765\u5b9e\u73b0Lambda\u98ce\u683c\u7684\u53c2\u6570\u6821\u9a8c\u3002\u539f\u7406\u4e3a\u53c2\u6570\u6821\u9a8c\u5668 argThat \u63a5\u53d7\u4e00\u4e2aArgumentMatcher\u63a5\u53e3\u7684\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u4f7f\u7528\u533f\u540d\u7684\u65b9\u5f0f\u5b9e\u73b0\u8be5\u63a5\u53e3\u3002\u8fd9\u4e2a\u63a5\u53e3\u53ea\u6709\u4e00\u4e2amatches\u65b9\u6cd5\uff0c\u5728Java 1.8\u4e4b\u540e\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a\u7bad\u5934\u51fd\u6570\uff0c\u4e5f\u5c31\u662fLambda\u98ce\u683c\u7684\u5199\u6cd5\u3002 \u6821\u9a8c mockedEncryptionService \u7684 sha256\u65b9\u6cd5\u7684\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a verify(mockedEncryptionService).sha256(argThat(new ArgumentMatcher<String>() { @Override public boolean matches(String argument) { return argument.equals(\"xxx\"); } })); \u6539\u5199\u6210 Lambda \u540e\u53d8\u5f97\u975e\u5e38\u7b80\u6d01\uff1a verify(mockedEncryptionService).sha256(argThat(argument -> { return argument.equals(\"xxx\"); })); \u751a\u81f3\u53ef\u4ee5\u5199\u6210\u4e00\u884c\uff1a verify(mockedEncryptionService).sha256(argThat(argument -> argument.equals(\"xxx\"))); \u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u80fd\u8fc7\u4e8e\u7b80\u5355\u65e0\u6cd5\u8bf4\u660e\u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\u8fdb\u884c\u65ad\u8a00\u7684\u65b9\u4fbf\u6027\uff0c\u66f4\u590d\u6742\u7684\u4f8b\u5b50\u53c2\u8003\u793a\u4f8b\u4ee3\u7801\u5e93\u4e2d lambda_verify_object_example \u6d4b\u8bd5\u793a\u4f8b\u3002 \u5173\u4e8e Mockito \u5b9e\u73b0\u7684\u8be6\u60c5\u53ef\u4ee5\u9605\u8bfb\u672c\u4e66\u7684\u6700\u540e\u4e00\u7ae0\uff0c\u8fdb\u4e00\u6b65\u4e86\u89e3\u8fd9\u4e9b\u6d4b\u8bd5\u6846\u67b6\u548c\u5e93\u7684\u6e90\u7801\u5206\u6790\u8fc7\u7a0b\u3002","title":"3. \u4f7f\u7528 Lambda \u98ce\u683c\u6821\u9a8c\u53c2\u6570"},{"location":"04-testing-doubles/#43","text":"Mockito\u5f88\u5f3a\u5927\uff0c\u80fd\u5e2e\u6211\u4eec\u5b8c\u6210\u5927\u90e8\u5206\u6a21\u62df\u5de5\u4f5c\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5\u5b83\u8fd8\u662f\u65e0\u80fd\u4e3a\u529b\u3002 \u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u83b7\u53d6\u7cfb\u7edf\u5f53\u524d\u7684\u65f6\u95f4\u6233\u65f6\uff0c\u53ef\u80fd\u4f1a\u8c03\u7528System.currentTimeMillis()\uff0c\u4f46\u6211\u4eec\u65e0\u6cd5\u6a21\u62df\u8fd9\u4e2a\u65b9\u6cd5\u3002\u6211\u4eec\u6709\u53ef\u80fd\u4f1a\u9047\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u73b0\u8c61\uff0c\u90e8\u5206\u6d4b\u8bd5\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\u5c31\u65e0\u6cd5\u901a\u8fc7\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u5b9e\u73b0\u4e2d\u53ef\u80fd\u6709\u5bf9\u7cfb\u7edf\u65f6\u95f4\u6233\u8fdb\u884c\u68c0\u67e5\u7684\u903b\u8f91\u3002\u518d\u6bd4\u5982\u8d22\u52a1\u62a5\u9500\u5355\u76f8\u5173\u7684\u903b\u8f91\uff0c\u8d39\u7528\u4ea7\u751f\u51e0\u4e2a\u6708\u540e\u518d\u8fdb\u884c\u62a5\u9500\u6d4b\u8bd5\u5c31\u4f1a\u5931\u8d25\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u521d\u6b21\u6d4b\u8bd5\u65f6\uff0c\u4f7f\u7528\u7684\u6a21\u62df\u6570\u636e\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u65f6\u95f4\uff0c\u56e0\u6b64\u51e0\u4e2a\u6708\u540e\u91cd\u65b0\u8fd0\u884c\u76f8\u5173\u7684\u5355\u5143\u6d4b\u8bd5\u5c31\u65e0\u6cd5\u901a\u8fc7\u4e86\u3002 \u53e6\u5916\uff0c\u5b9e\u9645\u9879\u76ee\u4e2d\u4e0d\u53ef\u907f\u514d\u5730\u9700\u8981\u6a21\u62df\u7cfb\u7edf\u4e2d\u7684\u9759\u6001\u65b9\u6cd5\u3001\u79c1\u6709\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5bf9\u4e00\u4e9b\u79c1\u6709\u65b9\u6cd5\u8fdb\u884c\u6d4b\u8bd5\uff08\u867d\u7136\u4e0d\u63a8\u8350\u6d4b\u8bd5\u79c1\u6709\u65b9\u6cd5\uff09\uff0c\u5982\u679c\u9047\u5230\u7684\u662f\u9057\u7559\u7cfb\u7edf\uff0cpublic\u65b9\u6cd5\u5f88\u5927\uff0c\u6d4b\u8bd5\u7684\u6210\u672c\u975e\u5e38\u9ad8\uff0c\u8fd9\u65f6\u4e5f\u53ef\u4ee5\u91c7\u7528\u6280\u672f\u624b\u6bb5\u6d4b\u8bd5\u79c1\u6709\u65b9\u6cd5\u3002 \u914d\u5408 Mockito \u4f7f\u7528\u7684\u53e6\u5916\u4e00\u4e2a\u6846\u67b6\u662fPowerMock\u3002PowerMock\u652f\u6301\u5404\u79cd\u6a21\u62df\u6846\u67b6\u5e76\u5bf9\u8fd9\u4e9b\u6846\u67b6\u63d0\u4f9b\u4e86\u62d3\u5c55\u3002powermock-api-mockito\u662f\u4e00\u4e2a\u62d3\u5c55\u5e93\uff0c\u5b83\u901a\u8fc7\u62d3\u5c55Mockito\u5e76\u7ed3\u5408PowerMock \u529f\u80fd\u6765\u505a\u589e\u5f3a\u6d4b\u8bd5\uff0c\u89e3\u51b3\u6a21\u62df\u9759\u6001\u3001\u79c1\u6709\u65b9\u6cd5\u7684\u56f0\u96be\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u6d4b\u8bd5\u9759\u6001\u3001\u79c1\u6709\u65b9\u6cd5\u3002 \u867d\u7136\u5e94\u5c3d\u53ef\u80fd\u5730\u907f\u514d\u4f7f\u7528PowerMock \u8fd9\u7c7b\u5bf9\u5c01\u88c5\u6027\u7834\u574f\u8f83\u5927\u7684\u5e93\uff0c\u4f46\u662f\u5728\u7279\u6b8a\u7684\u573a\u666f\u4e0b\u8fd8\u662f\u53ef\u4ee5\u5c11\u91cf\u4f7f\u7528\uff0c\u5b83\u53ef\u4ee5\u5feb\u901f\u89e3\u51b3\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\uff0c\u5177\u4f53\u89c6\u60c5\u51b5\u800c\u5b9a\u3002PowerMock \u4e3b\u8981\u9762\u5411\u6709\u6d4b\u8bd5\u7ecf\u9a8c\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u5c3d\u91cf\u4e0d\u8981\u4ea4\u7ed9\u521d\u7ea7\u7684\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u3002 \u867d\u7136PowerMock\u548cMockito\u90fd\u662f\u901a\u8fc7\u64cd\u4f5c\u5b57\u8282\u7801\u6765\u5b9e\u73b0\u6a21\u62df\u529f\u80fd\u7684\uff0c\u4e0d\u8fc7\u4e24\u8005\u5728\u5b9e\u73b0\u4e0a\u6709\u8f83\u5927\u7684\u533a\u522b\uff0c\u5b9a\u4f4d\u4e5f\u4e0d\u4e00\u6837\u3002Mockito\u662f\u901a\u8fc7\u5bf9\u88ab\u6a21\u62df\u7684\u7c7b\u8fdb\u884c\u5b57\u8282\u7801\u5904\u7406\u6765\u5b9e\u73b0\u4e00\u4e2a\u4ee3\u7406\u7c7b\u7684\uff0c\u7528\u4e8e\u63a7\u5236\u9884\u7f6e\u7684\u6240\u6709\u903b\u8f91\u3002PowerMock\u5219\u662f\u5bf9\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u8fdb\u884c\u5904\u7406\uff0c\u901a\u8fc7\u66ff\u6362\u88ab\u6d4b\u8bd5\u4ee3\u7801\u7684\u5b57\u8282\u7801\u6765\u5b9e\u73b0\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\u3002\u56e0\u6b64\u5b83\u4e5f\u989d\u5916\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5bf9\u79c1\u6709\u65b9\u6cd5\u3001\u53d8\u91cf\u8bbf\u95ee\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u8bbf\u95ee\u88ab\u6d4b\u8bd5\u7c7b\u7684\u5185\u90e8\u72b6\u6001\u3002 \u8fd9\u90e8\u5206\u7684\u793a\u4f8b\u4ee3\u7801\u89c1 https://github.com//java-self-testing/java-self-testing-example/tree/master/powermock \u3002","title":"4.3 \u589e\u5f3a\u6d4b\u8bd5\uff1a\u9759\u6001\u3001\u79c1\u6709\u65b9\u6cd5\u7684\u5904\u7406"},{"location":"04-testing-doubles/#431","text":"\u4e3a\u4e86\u4fbf\u4e8e\u6f14\u793a\u6a21\u62df\u9759\u6001\u65b9\u6cd5\u7684\u8fc7\u7a0b\uff0c\u4e0b\u9762\u4f1a\u7ed9\u524d\u9762\u793a\u4f8b\u4e2d\u7684User\u5bf9\u8c61\u589e\u52a0createAt \u5b57\u6bb5\uff0ccreateAt\u5b57\u6bb5\u5728register\u65b9\u6cd5\u5185\u88ab\u586b\u5145\uff0c\u7136\u540e\u8fdb\u884c\u6301\u4e45\u5316\u3002 \u66f4\u65b0\u540e\u7684User\u5bf9\u8c61\u5982\u4e0b\uff1a public class User { private String email; private String username; private String password; private Instant createAt; public User(String email, String username, String password, Instant createAt) { this.email = email; this.username = username; this.password = password; this.createAt = createAt; } ... } \u5e76\u7ed9user\u5bf9\u8c61\u8bbe\u7f6e\u5bf9\u5e94\u7684\u503c\uff0c\u4e5f\u5c31\u662fInstant.now() \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u5373\u7cfb\u7edf\u5f53\u524d\u7684\u65f6\u95f4\u3002 user.setCreateAt(Instant.now()); \u4f9d\u636e\u524d\u9762\u7684\u6d4b\u8bd5\u53ef\u77e5\uff0c\u8fd9\u4f1a\u7ed9\u6d4b\u8bd5\u5e26\u6765\u4e0d\u4fbf\uff0c\u56e0\u6b64\u9700\u8981\u60f3\u529e\u6cd5\u6a21\u62dfInstant.now \u8fd9\u4e2a\u65b9\u6cd5\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a assertEquals(\"\", argument.getValue().getCreateAt()); \u9996\u5148\uff0c\u5f15\u5165PowerMock\u7684\u76f8\u5173\u4f9d\u8d56\u3002PowerMock\u6709\u4e24\u4e2a\u6a21\u5757\uff0c\u4e00\u4e2a\u662f\u5bf9JUnit\u7684\u5c01\u88c5\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u5bf9Mockito\u7684\u5c01\u88c5\u3002\u5b83\u4eec\u95f4\u63a5\u5730\u4f9d\u8d56\u4e86JUnit\u548cMockito\uff0c\u56e0\u6b64\u53ef\u4ee5\u5148\u628a\u539f\u6765\u7684\u6d4b\u8bd5\u4f9d\u8d56\u79fb\u9664\uff0c\u518d\u6dfb\u52a0\u8fd9\u4e24\u4e2a\u4f9d\u8d56\u3002\u7531\u4e8e powermock-api-mockito2\u5bf9Mockito\u7684\u7248\u672c\u6709\u4e00\u5b9a\u7684\u517c\u5bb9\u6027\u8981\u6c42\uff0c\u6240\u4ee5\u5efa\u8bae\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u6dfb\u52a0\u4f9d\u8d56\uff0c\u907f\u514d\u51b2\u7a81\u3002 <dependency> <groupId>org.powermock</groupId> <artifactId>powermock-module-junit4</artifactId> <version>2.0.2</version> <scope>test</scope> </dependency> <dependency> <groupId>org.powermock</groupId> <artifactId>powermock-api-mockito2</artifactId> <version>2.0.2</version> <scope>test</scope> </dependency> \u7136\u540e\uff0c\u4f7f\u7528PowerMockRunner\u4ee3\u66ffMockito\u7684Runner\uff0c\u5e76\u4f7f\u7528@PrepareForTest\u5bf9\u7528\u5230\u8be5\u9759\u6001\u65b9\u6cd5\u7684\u5730\u65b9\u8fdb\u884c\u521d\u59cb\u5316\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @RunWith(PowerMockRunner.class) @PrepareForTest(UserService.class) \u5982\u6b64\uff0c\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6a21\u62dfInstant\u7c7b\u4e2d\u7684\u9759\u6001\u65b9\u6cd5\u4e86\uff0c\u5e76\u4e14\u4f1a\u5f71\u54cdUserService \u4e2d\u4f7f\u7528\u5b83\u7684\u5730\u65b9\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a Instant moment = Instant.ofEpochSecond(1596494464); PowerMockito.mockStatic(Instant.class); PowerMockito.when(Instant.now()).thenReturn(moment); \u6a21\u62df\u5b8c\u6210\u540e\uff0cInstant.now() \u5c31\u4f1a\u6309\u7167\u6211\u4eec\u671f\u671b\u7684\u503c\u8fd4\u56de\u7ed3\u679c\uff0c\u6d4b\u8bd5\u4ee3\u7801\u81ea\u7136\u4e5f\u5c31\u53ef\u4ee5\u6309\u7167\u9884\u5148\u8bbe\u5b9a\u7684\u503c\u6765\u8fdb\u884c\u65ad\u8a00\u4e86\u3002\u7531\u4e8ePowerMock\u4e0eMockito\u80fd\u5f88\u597d\u5730\u5728\u4e00\u8d77\u5de5\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528 Mockito \u7684 API\u6765\u7f16\u5199\u6d4b\u8bd5\u3002\u5bf9\u4e8e\u7279\u6b8a\u7684\u6a21\u62df\u884c\u4e3a\uff0c\u4f7f\u7528 PowerMock \u4e2d\u7684\u8bed\u6cd5\u4ee3\u66ffMockito\u4e2d\u7684\u8bed\u6cd5\u5373\u53ef\u3002\u5b8c\u6574\u7684\u6d4b\u8bd5\u5982\u4e0b\uff1a @RunWith(PowerMockRunner.class) // \u4f7f\u7528 PrepareForTest \u8ba9\u6a21\u62df\u884c\u4e3a\u5728\u88ab\u6d4b\u8bd5\u4ee3\u7801\u4e2d\u751f\u6548 @PrepareForTest({UserService.class}) public class UserServiceAnnotationTest { @Mock UserRepository mockedUserRepository; @Mock EmailService mockedEmailService; @Spy EncryptionService mockedEncryptionService = new EncryptionService(); @InjectMocks UserService userService; @Test public void should_register() { // \u6a21\u62df\u524d\u751f\u6210\u4e00\u4e2a Instant \u5b9e\u4f8b Instant moment = Instant.ofEpochSecond(1596494464); // \u6a21\u62df\u5e76\u8bbe\u5b9a\u671f\u671b\u8fd4\u56de\u503c PowerMockito.mockStatic(Instant.class); PowerMockito.when(Instant.now()).thenReturn(moment); // Given User user = new User(\"admin@test.com\", \"admin\", \"xxx\", null); // When userService.register(user); // Then verify(mockedEmailService).sendEmail( eq(\"admin@test.com\"), eq(\"Register Notification\"), eq(\"Register Account successful! your username is admin\")); ArgumentCaptor<User> argument = ArgumentCaptor.forClass(User.class); verify(mockedUserRepository).saveUser(argument.capture()); assertEquals(\"admin@test.com\", argument.getValue().getEmail()); assertEquals(\"admin\", argument.getValue().getUsername()); assertEquals(\"cd2eb0837c9b4c962c22d2ff8b5441b7b45805887f051d39bf133b583baf6860\", argument.getValue().getPassword()); assertEquals(moment, argument.getValue().getCreateAt()); } } \u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b\u4f7f\u7528PowerMock \u65f6\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u5730\u65b9\uff0c\u4ece\u800c\u907f\u514d\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u78b0\u5230\u95ee\u9898\u3002@PrepareForTest\u4e2d\u7684\u53c2\u6570\u4e3a\u4e00\u4e2a\u88ab\u5904\u7406\u7684\u76ee\u6807\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u4e0d\u662f\u88ab\u6a21\u62df\u7684\u7c7b\uff0c\u800c\u662f\u88ab\u6d4b\u8bd5\u7684\u7c7b\uff08\u4e1a\u52a1\u4ee3\u7801\uff09\uff0c\u76ee\u7684\u662f\u8ba9\u88ab\u6d4b\u8bd5\u4ee3\u7801\u4e2d\u7684\u7279\u6b8a\u6a21\u62df\u751f\u6548\u3002\u4f8b\u5982\uff0c\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u5b50\u4e2d\uff0c\u88ab\u6d4b\u8bd5\u7684\u7c7b\u662fUserService\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u7684\u662fInstant.now\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8981\u5728UserService\u4e2d\u4f7f\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u7c7b\u662fUserService\u800c\u4e0d\u662fInstant\u3002\u8fd9\u662f\u4f7f\u7528PowerMock \u7684\u8fc7\u7a0b\u4e2d\u6700\u5e38\u89c1\u7684\u4e00\u4e2a\u9677\u9631\uff0c\u539f\u56e0\u662f\u9759\u6001\u65b9\u6cd5\u662f\u7c7b\u7ea7\u522b\u7684\u65b9\u6cd5\uff0c\u9700\u8981\u5728\u88ab\u6d4b\u8bd5\u7c7b\u52a0\u8f7d\u524d\u51c6\u5907\u5b8c\u6bd5\u3002\u60f3\u8981\u7279\u6b8a\u6a21\u62df\u5728\u88ab\u6d4b\u8bd5\u4ee3\u7801\u4e2d\u751f\u6548\uff0c\u5c31\u9700\u8981\u4f7f\u7528@PrepareForTest\u8fdb\u884c\u5904\u7406\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u662f\u5728PowerMockRunner\u4e2d\u5b8c\u6210\u7684\uff0c\u5176\u4e2d\u7528\u4e86\u5f88\u591a\u5b57\u8282\u7801\u7ea7\u522b\u7684\u6280\u672f\uff0c\u60f3\u8981\u5173\u5fc3\u5177\u4f53\u5b9e\u73b0\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003\u6e90\u7801\u3002 \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u9a8c\u8bc1Instant.now\u65b9\u6cd5\u7684\u8c03\u7528\u60c5\u51b5\u3002\u5982\u679c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u9a8c\u8bc1\u9759\u6001\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528PowerMock\u7684verifyStatic\u65b9\u6cd5\u91cd\u65b0\u52a0\u8f7d\u4fee\u6539\u540e\u7684\u7c7b\uff0c\u7136\u540e\u8fdb\u884c\u9a8c\u8bc1\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a PowerMockito.verifyStatic(Static.class); Static.thirdStaticMethod(Mockito.anyInt()); \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u9a8c\u8bc1\u90fd\u9700\u8981\u8c03\u7528verifyStatic\uff0c\u56e0\u4e3a\u8fd9\u4e24\u53e5\u4ee3\u7801\u662f\u6210\u5bf9\u51fa\u73b0\u7684\u3002","title":"4.3.1 \u6a21\u62df\u9759\u6001\u65b9\u6cd5"},{"location":"04-testing-doubles/#432","text":"\u6709\u65f6\u5019\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u4e2d\u53ef\u80fd\u4f1a\u76f4\u63a5\u4f7f\u7528new \u5173\u952e\u5b57\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u4e0d\u592a\u597d\u9694\u79bb\u88ab\u521b\u5efa\u7684\u5bf9\u8c61\u4e86\u3002\u5982\u679c\u4e0d\u4f7f\u7528PowerMock\uff0c\u751a\u81f3\u8fd9\u6bb5\u4ee3\u7801\u90fd\u4e0d\u80fd\u88ab\u6d4b\u8bd5\u3002\u5bf9\u6b64\uff0c\u6709\u4e24\u4e2a\u9014\u5f84\u53ef\u89e3\u51b3\uff1a\u4e00\u662f\u4f7f\u7528\u5de5\u5382\u65b9\u6cd5\u8fdb\u884c\u89e3\u8026\uff0c\u5373\u7528\u4f9d\u8d56\u6ce8\u5165\u4ee3\u66ff\u76f4\u63a5\u4f7f\u7528new \u5173\u952e\u5b57\uff1a\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528PowerMock\u5bf9\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u6a21\u62df\u3002 \u7b2c\u4e00\u79cd\u65b9\u6cd5\u76f8\u5f53\u4e8e\u4fee\u6539\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\uff0c\u5728\u91cd\u6784\u65f6\u8fd9\u6837\u505a\u4e0d\u592a\u5b89\u5168\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002\u5728PowerMock\u4e2d\u4f7f\u7528whenNew\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u62e6\u622a\u6784\u9020\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u76f4\u63a5\u8fd4\u56de\u5176\u4ed6\u5bf9\u8c61\u6216\u8005\u5f02\u5e38\u3002\u5bf9\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u6a21\u62df\u662fPowerMock\u4e2d\u6700\u5e38\u7528\u7684\u7279\u6027\u4e4b\u4e00\u3002 \u5982\u679c\u5728\u5904\u7406\u4e00\u4e2a\u9057\u7559\u7cfb\u7edf\u65f6\uff0c\u5728UserService\u4e2d\u7684register\u65b9\u6cd5\u4e2d\u53d1\u73b0\u4e86\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff1a public void register(User user) { user.setPassword(encryptionService.sha256(user.getPassword())); user.setCreateAt(Instant.now()); userRepository.saveUser(user); sendEmail(user); // \u4ee3\u7801\u4e2d\u6709\u4e00\u4e2a\u76f4\u63a5\u88ab new \u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u8ba9\u8fd9\u4e2a\u65b9\u6cd5\u65e0\u6cd5\u88ab\u8f7b\u6613\u6a21\u62df (new LogService()).log(\"finished register action\"); } \u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528whenNew\u65b9\u6cd5\u4f20\u5165\u4e00\u4e2a\u51c6\u5907\u597d\u7684\u6a21\u62df\u5bf9\u8c61\uff0c\u4ee5\u6b64\u66ff\u6362\u539f\u6709\u7684\u5b9e\u73b0\uff0c\u4ece\u800c\u8fbe\u5230\u53ef\u6d4b\u8bd5\u7684\u76ee\u7684\u3002 // Given User user = new User(\"admin@test.com\", \"admin\", \"xxx\", null); LogService mockedLogService = mock(LogService.class); whenNew(LogService.class).withNoArguments().thenReturn(mockedLogService); // When userService.register(user); // Then Mockito.verify(mockedLogService).log(any()); \u4f7f\u7528Mockito\u51c6\u5907\u4e00\u4e2a\u6a21\u62df\u5bf9\u8c61\uff0c\u5728 new \u8bed\u53e5\u6267\u884c\u65f6\uff0cPowerMock\u4f1a\u5c06\u8fd9\u4e2a\u6a21\u62df\u5bf9\u8c61\u8fd4\u56de\uff0c\u8fd9\u6837\u540e\u7eed\u7684\u65ad\u8a00\u5c31\u53ef\u4ee5\u5f97\u5230\u4fdd\u969c\uff0c\u628a\u4e0d\u53ef\u6d4b\u7684\u4ee3\u7801\u53d8\u6210\u4e86\u53ef\u6d4b\u8bd5\u7684\u4ee3\u7801\u3002 \u81ea\u7136\u5730\uff0c\u5982\u679c\u9700\u8981\u9a8c\u8bc1\u6784\u9020\u65b9\u6cd5\u662f\u5426\u88ab\u8c03\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528verifyNew(LogService.class). withNoArguments()\u3002","title":"4.3.2 \u6a21\u62df\u6784\u9020\u65b9\u6cd5"},{"location":"04-testing-doubles/#433","text":"\u4e0e\u524d\u9762\u7684\u95ee\u9898\u7c7b\u4f3c\uff0c\u5728\u8fdb\u884c\u91cd\u6784\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u7c7b\u4e2d\u6709\u4e00\u4e9b\u7279\u522b\u957f\u7684\u79c1\u6709\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u79c1\u6709\u65b9\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u4f7f\u5f97\u6d4b\u8bd5\u6210\u672c\u5f88\u9ad8\u3002 \u4e00\u79cd\u89e3\u51b3\u65b9\u5f0f\u662f\u901a\u8fc7\u91cd\u6784\u5c06\u8fd9\u4e9b\u79c1\u6709\u65b9\u6cd5\u642c\u5230\u53e6\u5916\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u4f7f\u5f97\u7c7b\u7684\u79c1\u6709\u65b9\u6cd5\u6570\u91cf\u5904\u4e8e\u8f83\u5c11\u7684\u72b6\u6001\u3002\u53e6\u5916\u4e00\u79cd\u662f\u901a\u8fc7PowerMock\u5bf9\u79c1\u6709\u65b9\u6cd5\u8fdb\u884c\u6a21\u62df\u64cd\u4f5c\u3002\u4f7f\u7528PowerMock\u6a21\u62df\u79c1\u6709\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4f7f\u7528PowerMockito\u7c7b\u4e2d\u7684when\u65b9\u6cd5\u4ee3\u66ffMockito\u4e2d\u7684\u540c\u540d\u65b9\u6cd5\u5373\u53ef\u3002\u56e0\u4e3a\u76f4\u63a5\u8c03\u7528\u79c1\u6709\u65b9\u6cd5\u4f1a\u51fa\u73b0Java\u8bed\u6cd5\u62a5\u9519\uff0c\u6240\u4ee5PowerMockito\u7c7b\u4e2d\u7684when\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e0eMockito\u7c7b\u4f3c\u7684API\uff0c\u4f46\u662f\u5b83\u7684\u65b9\u6cd5\u540d\u9700\u8981\u4ee5\u5b57\u7b26\u4e32\u4f5c\u4e3a\u989d\u5916\u7684\u53c2\u6570\u4f20\u4eba\u3002 \u5047\u5982LogService\u5bf9\u8c61\u4e2d\u6709\u4e00\u4e2a\u79c1\u6709\u65b9\u6cd5 _log\u7528\u4e8e\u53d1\u9001\u65e5\u5fd7\u5230\u65e5\u5fd7\u5e73\u53f0\uff0c\u7531\u4e8e\u4e00\u4e9b\u57fa\u7840\u8bbe\u65bd\u7684\u539f\u56e0\u5bfc\u81f4\u6d4b\u8bd5\u5931\u8d25\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528PowerMock\u5c06\u5176\u9694\u79bb\uff0c\u8ba9\u5176\u4ed6\u7684\u6d4b\u8bd5\u903b\u8f91\u6b63\u5e38\u8fdb\u884c\u3002 \u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 PowerMock \u6a21\u62df\u79c1\u6709\u65b9\u6cd5\u3002 public class LogService { public void log(String content) { _log(content); } private void _log(String content) { System.out.println(content); } } \u4e0b\u9762\u7684\u4ee3\u7801\u7528\u4e8e\u5f53 _log\u88ab\u8c03\u7528\u65f6\u4e0d\u8ba9\u5176\u6709\u526f\u4f5c\u7528\uff1a @RunWith(PowerMockRunner.class) @PrepareForTest({LogService.class}) public class PrivateTest { @Test public void private_test() throws Exception { LogService logService = mock(LogService.class); PowerMockito.doNothing().when(logService, \"_log\", any()); logService.log(\"test data\"); } } \u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5904\u7406\u79c1\u6709\u65b9\u6cd5\u65f6\u8981\u5904\u7406\u4ee5\u4e0b\u4e24\u4e2a\u5bf9\u8c61\uff1a\u88ab\u6a21\u62df\u7684\u5bf9\u8c61\u548c\u88ab\u6d4b\u8bd5\u7684\u5bf9\u8c61\u3002\u5728\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cUserService\u662f\u88ab\u6d4b\u8bd5\u7684\u5bf9\u8c61\uff0cLogService\u662f\u9700\u8981\u88ab\u6a21\u62df\u7684\u5bf9\u8c61\u3002\u5982\u679c\u662fLogService\u4e2d\u7684\u79c1\u6709\u65b9\u6cd5\u9700\u8981\u88ab\u9694\u79bb\u6389\uff0c@PrepareForTest\u4e2d\u7684\u53c2\u6570\u5219\u5e94\u8be5\u8bbe\u7f6e\u4e3aLogService\u800c\u4e0d\u662fUserservice\u3002\u540c\u7406\uff0c\u5982\u679cUserService\u4e2d\u6709\u4e00\u4e2a\u79c1\u6709\u65b9\u6cd5\uff0c\u6211\u4eec\u60f3\u505a\u4e00\u4e9b\u5904\u7406\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f\u9996\u5148\uff0c\u9700\u8981\u5c06@PrepareForTest\u7684\u53c2\u6570\u8bbe\u7f6e\u4e3aUserService\uff0c\u5176\u6b21\uff0c\u7531\u4e8eUserService\u662f\u88ab\u6d4b\u8bd5\u5bf9\u8c61\uff0c\u65e0\u6cd5\u5e94\u7528when\u65b9\u6cd5\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528spy\u65b9\u6cd5\u5305\u88c5\u5904\u7406\u3002","title":"4.3.3 \u6a21\u62df\u79c1\u6709\u65b9\u6cd5"},{"location":"04-testing-doubles/#434","text":"\u5982\u679c\u4e00\u4e2a\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u6709\u4e00\u4e2a\u79c1\u6709\u5c5e\u6027\uff0c\u4f46\u662f\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u65e0\u6cd5\u8d4b\u4e88\u6a21\u62df\u5bf9\u8c61\uff0c\u5bfc\u81f4\u6d4b\u8bd5\u56f0\u96be\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u53cd\u5c04\u65b9\u5f0f\u4fee\u6539\u5b83\u7684\u53ef\u8bbf\u95ee\u6027\u3002\u4f8b\u5982\uff0c\u67d0Person\u7c7b\u4e0a\u6709\u4e00\u4e2a\u79c1\u6709\u5c5e\u6027name\uff0c\u73b0\u5728\u9700\u8981\u4e3a\u5176\u8d4b\u4e88\u4e00\u4e2a\u65b0\u7684\u503c\uff0c\u90a3\u4e48\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u7f16\u5199\u4ee3\u7801\uff1a Person person = new Person(); Class<?> clazz = Person.class; Field field = clazz.getDeclaredField(\"name\"); field.setAccessible(true); // \u8d4b\u503c field.set(person, \"new name\"); \u4e0a\u8ff0\u4ee3\u7801\u6bd4\u8f83\u70e6\u7410\uff0cMockito\u548cPowerMock\u90fd\u63d0\u4f9b\u4e86\u4e00\u7ec4\u53cd\u5c04\u5de5\u5177\u7c7b\uff0c\u7528\u4e8e\u8bbf\u95ee\u79c1\u6709\u6210\u5458\uff0c\u6bd4 Java \u672c\u8eab\u7684\u53cd\u5c04\u80fd\u529b\u8981\u5f3a\u4e00\u4e9b\u3002","title":"4.3.4 \u53cd\u5c04\u5de5\u5177\u7bb1"},{"location":"04-testing-doubles/#1_1","text":"\u6bd4\u5982\uff0c\u6211\u4eec\u5728LogService\u4e2d\u589e\u52a0\u4e86\u4e00\u4e2aprefix\u5c5e\u6027\uff0c\u7528\u4e8e\u6253\u5370\u65e5\u5fd7\u7684\u524d\u7f00\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a private String prefix = \"warning: \"; ... private void _log(String content) { System.out.println(prefix + content); } \u90a3\u4e48\u4f7f\u7528Mockito\uff08\u975ePowerMock\uff09\u7684FieldSetter\u5de5\u5177\u7c7b\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u79c1\u6709\u5c5e\u6027\uff1a LogService logService = new LogService(); FieldSetter.setField( logService, LogService.class.getDeclaredField(\"prefix\"), \"error: \" ); logService.log(\"test data\");","title":"1. \u8bbf\u95ee\u79c1\u6709\u5c5e\u6027"},{"location":"04-testing-doubles/#2_1","text":"\u5982\u679c\u6211\u4eec\u9047\u5230\u67d0\u4e2a\u79c1\u6709\u65b9\u6cd5\u65f6\uff0c\u60f3\u8981\u6d4b\u8bd5\u5b83\uff0c\u4e00\u79cd\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u79c1\u6709\u65b9\u6cd5\u4fee\u6539\u4e3a\u5305\u7ea7\u522b\u79c1\u6709\uff0c\u5e76\u5c06\u6d4b\u8bd5\u4ee3\u7801\u653e\u5230\u540c\u4e00\u4e2a\u5305\u4e0b\uff0c\u4f46\u662f\u5b83\u5904\u4e8etest\u76ee\u5f55\u4e0b\uff08\u6bd4\u5982\uff0c\u5f85\u6d4b\u8bd5\u7684\u79c1\u6709\u65b9\u6cd5\u4f4d\u4e8esrc/main/java\u4e2d\uff0c\u6d4b\u8bd5\u4ee3\u7801\u4f4d\u4e8esrc/test/java\u4e2d\uff09\uff0c\u8fd9\u6837\u6d4b\u8bd5\u4ee3\u7801\u5c31\u80fd\u8bbf\u95ee\u5230\u8be5\u65b9\u6cd5\u4e86\u3002 \u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u4f7f\u7528\u4e00\u4e9b\u8f85\u52a9\u5de5\u5177\uff0c\u4f8b\u5982\uff0c\u4f7f\u7528PowerMock\u4e2d\u7684Whitebox\u7c7b\u7b49\uff0c\u63d0\u4f9b\u5bf9\u79c1\u6709\u65b9\u6cd5\u3001\u5c5e\u6027\u7684\u8bbf\u95ee\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a Whitebox.invokeMethod(testObj, \"method1\", new Long(10L)); \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5efa\u8bae\u907f\u514d\u4f7f\u7528\u53cd\u5c04\u65b9\u5f0f\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5927\u5927\u7834\u574f\u5c01\u88c5\u6027\u3002\u4e0d\u8fc7\uff0c\u5728\u5904\u7406\u9057\u7559\u7cfb\u7edf\u65f6\uff0c\u5982\u679c\u56e0\u4e3a\u6ca1\u6709\u6d4b\u8bd5\u4fdd\u62a4\u800c\u4e0d\u6562\u8d38\u7136\u4fee\u6539\u6e90\u4ee3\u7801\uff0c\u4e14\u9057\u7559\u7cfb\u7edf\u4e2d\u4f1a\u6709\u5f88\u591a\u4ee3\u7801\u4e0d\u5177\u5907\u53ef\u6d4b\u8bd5\u6027\uff0c\u90a3\u4e48\u53ef\u4ee5\u914c\u60c5\u4f7f\u7528\u8fd9\u7c7b\u65b9\u6cd5\u6dfb\u52a0\u4e00\u4e9b\u6d4b\u8bd5\u5b88\u62a4\u91cd\u6784\u3002 \u5bf9\u4e8e\u65b0\u5b9e\u73b0\u7684\u4ee3\u7801\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u9700\u8981\u7528\u5230\u53cd\u5c04\u624d\u80fd\u5b8c\u6210\u6d4b\u8bd5\u7684\u60c5\u51b5\uff0c\u5219\u8bf4\u660e\u4ee3\u7801\u4e2d\u5b58\u5728\u574f\u5473\u9053\uff0c\u9700\u8981\u53ca\u65f6\u5904\u7406\u3002","title":"2. \u6d4b\u8bd5\u79c1\u6709\u65b9\u6cd5"},{"location":"04-testing-doubles/#44","text":"\u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\u540e\uff0c\u6d4b\u8bd5\u4ee3\u7801\u7684\u7ed3\u6784\u4f1a\u53d8\u5f97\u6709\u4e9b\u590d\u6742\uff0c\u5bf9\u4e8e\u5982\u4f55\u826f\u597d\u5730\u7ec4\u7ec7\u6d4b\u8bd5\u4ee3\u7801\u7684\u7ed3\u6784\uff0c\u4e00\u4e9b\u4e13\u5bb6\u4e5f\u603b\u7ed3\u4e86\u51e0\u79cd\u6a21\u5f0f\u3002","title":"4.4 \u6d4b\u8bd5\u4ee3\u7801\u7684\u7ed3\u6784\u6a21\u5f0f"},{"location":"04-testing-doubles/#441-","text":"\u51c6\u5907-\u6267\u884c-\u65ad\u8a00\uff08Arrange-Act-Assert\uff09\u662f\u4e00\u79cd\u4e3b\u6d41\u7684\u5355\u5143\u6d4b\u8bd5\u4ee3\u7801\u7ed3\u6784\u6a21\u5f0f\uff0c\u5b83\u975e\u5e38\u7c7b\u4f3c \"\u4e09\u6bb5\u8bba\" \u7684\u6587\u7ae0\u7ed3\u6784\uff1a \u51c6\u5907\uff1a\u51c6\u5907\u6d4b\u8bd5\u6570\u636e\u3001\u6a21\u62df\u4f9d\u8d56\u5bf9\u8c61\u3001\u521d\u59cb\u5316\u6d4b\u8bd5\u72b6\u6001\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002 \u6267\u884c\uff1a\u5bf9\u6d4b\u8bd5\u76ee\u6807\u8fdb\u884c\u8c03\u7528\uff0c\u6267\u884c\u76f8\u5173\u65b9\u6cd5\u548c\u903b\u8f91\u3002 \u65ad\u8a00\uff1a\u9a8c\u8bc1\u6267\u884c\u7684\u7ed3\u679c\u662f\u5426\u6ee1\u8db3\u9884\u671f\uff0c\u5305\u62ec\u8fdb\u884c\u65ad\u8a00\u3001\u5bf9Mock\u4e2d\u7684\u4e0b\u6e38\u5bf9\u8c61\u53c2\u6570\u8fdb\u884c\u9a8c\u8bc1\u7b49\u3002 \u5176\u5b9e\u4ece\u672c\u7ae0\u7684\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u662f\u6309\u7167\u8fd9\u79cd\u7ed3\u6784\u6765\u4ecb\u7ecd\u5355\u5143\u6d4b\u8bd5\u7684\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u57fa\u672c\u5177\u6709\u7c7b\u4f3c\u7684\u7ed3\u6784\u3002\u5728BDD\u4e2d\uff0cGiven...When...Then\u7684\u8bed\u6cd5\u7ed3\u6784\u4e5f\u4e0e\u4e4b\u7c7b\u4f3c\u3002 \u5728\u654f\u6377\u5f00\u53d1\u4e2d\uff0c\u7528\u6237\u6545\u4e8b\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u529f\u80fd\u7279\u6027\u5355\u4f4d\uff0c\u8bc4\u4ef7\u4e00\u4e2a\u7528\u6237\u6545\u4e8b\u662f\u5426\u5b8c\u6210\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u9a8c\u6536\u6761\u4ef6\u3002\u9a8c\u6536\u6761\u4ef6\u53ef\u4ee5\u770b\u4f5c\u529f\u80fd\u6d4b\u8bd5\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5355\u5143\u6d4b\u8bd5\u53ea\u4e0d\u8fc7\u662f\u5176\u5fae\u89c2\u5f62\u6001\u3002 \u8fd9\u79cd\u6a21\u5f0f\u975e\u5e38\u7b80\u5355\uff0c\u5f88\u5bb9\u6613\u548c\u56e2\u961f\u8fbe\u6210\u4e00\u81f4\uff0c\u4ece\u800c\u5199\u51fa\u7ed3\u6784\u5408\u7406\u3001\u7edf\u4e00\u7684\u5355\u5143\u6d4b\u8bd5\u6765\u3002","title":"4.4.1 \u51c6\u5907-\u6267\u884c-\u65ad\u8a00"},{"location":"04-testing-doubles/#442","text":"\u56db\u9636\u6bb5\u6d4b\u8bd5\uff08Four-Phase Test\uff09\u662f\u51c6\u5907-\u6267\u884c-\u65ad\u8a00\u7684\u62d3\u5c55\uff0c\u8be5\u6a21\u5f0f\u63cf\u8ff0\u4e86\u521b\u5efa\u7b80\u6d01\u3001\u53ef\u8bfb\u4e14\u7ed3\u6784\u826f\u597d\u7684\u6d4b\u8bd5\u9700\u8981\u5177\u5907\u5982\u4e0b4\u4e2a\u9636\u6bb5\u3002 \u8bbe\u7f6e\uff1a\u5efa\u7acb\u6d4b\u8bd5\u7684\u5148\u51b3\u6761\u4ef6\uff0c\u5305\u62ec\u6a21\u62df\u4f9d\u8d56\u5bf9\u8c61\u3001\u51c6\u5907\u6d4b\u8bd5\u6570\u636e\u3002 \u6267\u884c\uff1a\u5bf9\u7cfb\u7edf\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u5bf9\u6d4b\u8bd5\u76ee\u6807\u8fdb\u884c\u8c03\u7528\u3002 \u9a8c\u8bc1\uff1a\u68c0\u67e5\u9884\u671f\u7ed3\u679c\uff0c\u65ad\u8a00\u548c\u5bf9\u6a21\u62df\u5bf9\u8c61\u4e2d\u7684\u4e0b\u6e38\u5bf9\u8c61\u53c2\u6570\u8fdb\u884c\u9a8c\u8bc1\u3002 \u6e05\u7406\uff1a\u6d4b\u8bd5\u7ed3\u675f\u540e\u5c06\u88ab\u6d4b\u7cfb\u7edf\u6062\u590d\u5230\u521d\u59cb\u72b6\u6001\u3002 \u770b\u8d77\u6765\u548c\u51c6\u5907-\u6267\u884c-\u65ad\u8a00\u6a21\u5f0f\u7c7b\u4f3c\uff0c\u5bf9\u5427\uff1f\u5176\u5b9e\u53ea\u662f\u5bf9\u5b83\u505a\u4e86\u4e00\u4e9b\u8865\u5145\uff0c\u5bf9\u6d4b\u8bd5\u5404\u90e8\u5206\u7684\u804c\u8d23\u8fdb\u884c\u4e86\u5212\u5206\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u6d4b\u8bd5\u6846\u67b6\u4e5f\u5728\u53c2\u8003\u8fd9\u79cd\u6a21\u5f0f\u7684\u5b9e\u73b0\u3002 \u5728JUnit\u4e2d\uff0c@Beforexxx\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e9b\u901a\u7528\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5176\u89c6\u4f5c\u8bbe\u7f6e\u7684\u4e00\u90e8\u5206\u3002\u524d\u9762\u63d0\u5230\u8fc7\u53e6\u5916\u4e00\u4e2a\u6982\u5ff5Fixture\uff0c\u6b64\u6982\u5ff5\u5728\u5f88\u591a\u6d4b\u8bd5\u4e2d\u90fd\u80fd\u770b\u5230\uff0c\u7ffb\u8bd1\u4e3a\u4e2d\u6587\u662f\u6d4b\u8bd5\u5939\u5177\u6216\u6d4b\u8bd5\u5de5\u5177\u7c7b\uff0c\u610f\u601d\u662f\u5728\u8bbe\u7f6e\u9636\u6bb5\u8fdb\u884c\u7684\u901a\u7528\u7684\u51c6\u5907\u5de5\u4f5c\uff08\u5c01\u88c5\u4e3a\u6d4b\u8bd5Fixture\uff09\u3002 JUnit\u7684@Afterxxx\u65b9\u6cd5\u5bf9\u5e94\u7684\u662f\u6e05\u7406\u5de5\u4f5c\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u3002\u56fe4-3\u5c55\u793a\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\uff08\u4e00\u822c\u4e5f\u662f\u4e00\u4e2a\u6d4b\u5957\u4ef6\uff09\u548c\u591a\u4e2a\u6d4b\u8bd5\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u56fe 4-3 \u6d4b\u8bd5\u4ee3\u7801\u7684\u7ed3\u6784","title":"4.4.2 \u56db\u9636\u6bb5\u6d4b\u8bd5"},{"location":"04-testing-doubles/#45","text":"\u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\u7f16\u5199\u6d4b\u8bd5\uff0c\u4f1a\u9a71\u4f7f\u6211\u4eec\u53bb\u601d\u8003\u5982\u4f55\u8bbe\u8ba1\u51fa\u66f4\u597d\u7684\u4e1a\u52a1\u4ee3\u7801\u7ed3\u6784\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4eba\u4eec\u5bb9\u6613\u5bf9\u4ed6\u4eba\u4e25\u82db\uff0c\u5bf9\u81ea\u5df1\u5bbd\u5bb9\uff0c\u4f46\u7f16\u5199\u6d4b\u8bd5\u7684\u65f6\u5019\u662f\u96be\u5f97\u7684\u5bf9\u81ea\u5df1\"\u4e25\u82db\"\u7684\u65f6\u5019\u3002\u53ef\u6d4b\u8bd5\u7684\u4e1a\u52a1\u4ee3\u7801\u4e00\u822c\u90fd\u5177\u6709\u6e05\u6670\u7684\u5c42\u6b21\u7ed3\u6784\u3002","title":"4.5 \u57fa\u4e8e\u6d4b\u8bd5\u66ff\u8eab\u7684\u53cd\u601d"},{"location":"04-testing-doubles/#451","text":"\"\u5927\u6ce5\u7403\"\u662f\u4e00\u4e2a\u7528\u6765\u6bd4\u55bb\u7cdf\u7cd5\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u672f\u8bed\u3002\u4e00\u4efd\u4e0d\u7ecf\u8fc7\u8bbe\u8ba1\u3001\u968f\u610f\u5806\u780c\u7684\u4ee3\u7801\uff0c\u6ca1\u6709\u6e05\u6670\u7684\u7ed3\u6784\u7279\u5f81\uff0c\u5c31\u50cf\u4e00\u4e2a\u6ce5\u7403\u4e00\u6837\uff0c\u6beb\u65e0\u7ed3\u6784\u53ef\u8a00\u3002 \u6240\u8c13\u7684\u5927\u6ce5\u7403\u5c31\u662f\u4e00\u4e2a\u968f\u610f\u7ed3\u6784\u5316\u3001\u8513\u5ef6\u7684\u3001\u4e0d\u7ecf\u5fc3\u7684\u3001\u610f\u5927\u5229\u9762\u6761\u5f0f\u7684\u4ee3\u7801\u6df7\u5408\u4f53\u3002\u7cfb\u7edf\u5c55\u73b0\u4e86\u65e0\u53ef\u4e89\u8bae\u7684\u8868\u8c61\uff1a\u4e0d\u53d7\u7ba1\u5236\u7684\u589e\u957f\u3001\u91cd\u590d\u3001\u6743\u5b9c\u4e4b\u8ba1\u7684\u4fee\u8865\u3002\u4fe1\u606f\u88ab\u7cfb\u7edf\u4e2d\u76f8\u8ddd\u5f88\u8fdc\u7684\u6a21\u5757\u6742\u4e71\u5730\u5171\u4eab\uff0c\u91cd\u8981\u4fe1\u606f\u5e38\u53d8\u4e3a\u5168\u5c40\u7684\u6216\u8005\u91cd\u590d\u7684\u3002 ------ Brian Foote & Joseph Yoder \u4ea7\u751f\"\u5927\u6ce5\u7403\"\u7684\u539f\u56e0\u53ef\u80fd\u6709\uff1a \u5f00\u53d1\u8005\u5f80\u5f80\u53ea\u662f\u5173\u6ce8\u5982\u4f55\u7f16\u5199\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u5173\u6ce8\u8bbe\u8ba1\u3002\u7531\u4e8e\u7f3a\u4e4f\u524d\u671f\u7684\u8bbe\u8ba1\uff0c\u9047\u5230\u95ee\u9898\u6216\u8005\u65b0\u7279\u6027\u65f6\u76f4\u63a5\u8fdb\u884c\u788e\u7247\u5f0f\u7684\u4fee\u6539\uff0c\u8ba9\u4ee3\u7801\u53d8\u5f97\u6df7\u4e71\u548c\u6df7\u6c8c\u3002 \u7528\u6237\u7684\u9700\u6c42\u53d1\u751f\u53d8\u5316\uff0c\u4f46\u662f\u67b6\u6784\u7684\u6f14\u8fdb\u6ca1\u6709\u8ddf\u4e0a\uff0c\u7cfb\u7edf\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u7ef4\u62a4\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u6602\u8d35\u3002 \u5f00\u53d1\u8005\u53d7\u8bbe\u8ba1\u80fd\u529b\u7684\u5236\u7ea6\u3002 \"\u5927\u6ce5\u7403\"\u7684\u4ee3\u7801\u975e\u5e38\u96be\u6d4b\u8bd5\uff0c\u8fd9\u4e9b\u4ee3\u7801\u5f80\u5f80\u6e90\u81ea\u4e00\u4e9b\u9057\u7559\u7cfb\u7edf\uff0c\u9700\u8981\u4f7f\u7528\u5927\u91cf\u7684\u6d4b\u8bd5\u66ff\u8eab\u6280\u5de7\u624d\u80fd\u52c9\u5f3a\u7f16\u5199\u51fa\u4e00\u4e9b\u6d4b\u8bd5\u6765\u4fdd\u62a4\u4ee3\u7801\u3002 \u4e3a\u4e86\u89e3\u51b3\"\u5927\u6ce5\u7403\"\u7684\u95ee\u9898\uff0c\u9664\u4e86\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684SOLID\u539f\u5219\u589e\u5f3a\u8bbe\u8ba1\u548c\u5f00\u53d1\u4ee5\u5916\uff0c\u8fd8\u9700\u8981\u6ce8\u610f\u4f7f\u7528\"\u7f16\u6392\u548c\u590d\u7528\u5206\u79bb\"\u7684\u6280\u5de7\u3002\u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u65e0\u8bba\u8ba9\u65b9\u6cd5\u5206\u89e3\u5f97\u591a\u5c0f\uff0c\u90fd\u5f88\u96be\u7edd\u5bf9\u5730\u6d88\u9664\u91cd\u590d\uff0c\u6216\u8005\u6d88\u9664\u91cd\u590d\u7684\u4ee3\u4ef7\u662f\u53c8\u9020\u6210\u4e86\u5176\u4ed6\u65b9\u9762\u7684\u8026\u5408\u3002\u8fd9\u65f6\uff0c\u6839\u636e\u4ee3\u7801\u7684\u804c\u8d23\u8fdb\u884c\u7b80\u5355\u7684\u5212\u5206\uff0c\u5c31\u53ef\u4ee5\u8ba9\u5176\u804c\u8d23\u53d8\u6e05\u6670\uff0c\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4ee3\u7801\u5206\u4e3a\u7f16\u6392\u903b\u8f91\u548c\u590d\u7528\u903b\u8f91\u3002 \u7f16\u6392\u903b\u8f91\u6307\u7684\u662f\u7528\u4e8e\u7ec4\u7ec7\u539f\u5b50\u65b9\u6cd5\u7684\u903b\u8f91\uff0c\u4f8b\u5982\u7528\u6237\u5728\u6ce8\u518c\u65f6\u4f1a\u7ec4\u5408\u8c03\u7528\u5b58\u50a8\u3001\u53d1\u9001\u90ae\u4ef6\u3001\u52a0\u5bc6\u7b49\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u770b\u4f5c\u662f\u7f16\u6392\u903b\u8f91\u3002\u7f16\u6392\u903b\u8f91\u5173\u6ce8\u4e8e\u573a\u666f\uff0c\u800c\u975e\u5177\u4f53\u7684\u4e8b\u60c5\u3002\u5bf9\u4e8e\u7f16\u6392\u903b\u8f91\u6765\u8bf4\uff0c\u91cd\u590d\u4f18\u4e8e\u590d\u7528\u3002\u56e0\u4e3a\u7f16\u6392\u672c\u8eab\u5177\u6709\u4e1a\u52a1\u542b\u4e49\uff0c\u5982\u679c\u590d\u7528\u7f16\u6392\u903b\u8f91\u4f1a\u8ba9\u8fd9\u4e9b\u4e1a\u52a1\u542b\u4e49\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u90a3\u4e48\u8fd9\u79cd\u590d\u7528\u5e76\u6ca1\u6709\u5e26\u6765\u597d\u5904\u3002\u6b64\u5916\uff0c\u7f16\u6392\u76f8\u5173\u7684\u65b9\u6cd5\u5f7c\u6b64\u4e4b\u95f4\u4e5f\u4e0d\u5e94\u8be5\u4e92\u76f8\u8c03\u7528\u3002 \u590d\u7528\u903b\u8f91\u6307\u7684\u662f\u53ef\u4ee5\u88ab\u591a\u4e2a\u573a\u666f\u4f7f\u7528\u7684\u901a\u7528\u903b\u8f91\uff0c\u4f8b\u5982\u53d1\u9001\u90ae\u4ef6\u65f6\uff0c\u53ea\u9700\u8981\u5173\u6ce8\u53d1\u9001\u90ae\u4ef6\u8fd9\u4e2a\u52a8\u4f5c\u5373\u53ef\uff0c\u81f3\u4e8e\u53d1\u9001\u4e4b\u540e\u662f\u5426\u9700\u8981\u5b58\u50a8\uff0c\u5219\u4ea4\u7531\u7f16\u6392\u903b\u8f91\u6765\u5904\u7406\u3002 \u5728\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u65f6\uff0c\u590d\u7528\u903b\u8f91\u51e0\u4e4e\u4e0d\u9700\u8981\u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\uff0c\u56e0\u4e3a\u5b83\u8db3\u591f\u539f\u5b50\u5316\uff1a\u7f16\u6392\u903b\u8f91\u5219\u9700\u8981\u4f7f\u7528\u5927\u91cf\u7684\u6d4b\u8bd5\u66ff\u8eab\uff0c\u597d\u5728\u8fd9\u5176\u4e2d\u6ca1\u6709\u591a\u5c11\u903b\u8f91\uff0c\u6240\u4ee5\u5355\u5143\u6d4b\u8bd5\u4e5f\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u5b9e\u73b0\u3002\u53e6\u5916\uff0cE2E\u6d4b\u8bd5\u5e94\u8be5\u66f4\u5173\u6ce8\u7f16\u6392\u903b\u8f91\u8fd9\u4e00\u90e8\u5206\uff0c\u5982\u679c\u5355\u5143\u6d4b\u8bd5\u5904\u7406\u8fd9\u90e8\u5206\u903b\u8f91\u7684\u6210\u672c\u8fc7\u9ad8\uff0c\u4e5f\u53ef\u4ee5\u4ea4\u7ed9E2E\u6d4b\u8bd5\u3002","title":"4.5.1 \"\u5927\u6ce5\u7403\""},{"location":"04-testing-doubles/#452","text":"\u53e6\u5916\u4e00\u79cd\u4ee3\u7801\u7ed3\u6784\u4e5f\u4f1a\u8ba9\u6d4b\u8bd5\u53d8\u5f97\u56f0\u96be\uff0c\u5c31\u662f\u5206\u5c42\u8fc7\u591a\u7684\u4ee3\u7801\u7ed3\u6784\u3002\u8fd9\u79cd\u4ee3\u7801\u53ef\u80fd\u5b58\u5728\u8fc7\u5ea6\u8bbe\u8ba1\uff0c\u6bd4\u5982\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u529f\u80fd\u75313\uff5e4\u5c42\u4ee3\u7801\u5b9e\u73b0\u3002\u5982\u679c\u6839\u636e\u5206\u5c42\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u4f1a\u9020\u6210\u6d4b\u8bd5\u548c\u66ff\u8eab\u6570\u91cf\u8fdc\u8fdc\u591a\u4e8e\u6e90\u4ee3\u7801\u3002 \u5206\u5c42\u8fc7\u591a\u4e3b\u8981\u662f\u56e0\u4e3a\u8bbe\u8ba1\u8005\u6ca1\u6709\u6e05\u6670\u5730\u8ba4\u8bc6\u6bcf\u4e2a\u7c7b\u7684\u804c\u8d23\uff0c\u4ed6\u8ba4\u4e3a\u5206\u5c42\u8d8a\u591a\u8d8a\u6e05\u6670\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u505a\u6cd5\u53cd\u800c\u8ba9\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u4e0b\u964d\u4e86\u3002\u56e0\u4e3a\u9605\u8bfb\u8005\u5f80\u5f80\u9700\u8981\u8ffd\u6eaf\u975e\u5e38\u591a\u7684\u65b9\u6cd5\u624d\u80fd\u627e\u5230\u771f\u6b63\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\u7684\u5730\u65b9\u3002 \u5206\u5c42\u8fc7\u591a\u7684\u95ee\u9898\u5982\u4f55\u89e3\u51b3\uff1f\u8fd9\u53d6\u51b3\u4e8e\u8bbe\u8ba1\u8005\u5bf9\u4e1a\u52a1\u903b\u8f91\u7684\u8ba4\u77e5\uff0c\u53e6\u5916\u4e5f\u53ef\u4ee5\u501f\u9274\u4e00\u4e9b\u601d\u7ef4\u65b9\u6cd5\u3002\u901a\u8fc7\u8ba4\u8bc6\u8bba\u6211\u4eec\u77e5\u9053\uff0c\u5bf9\u4e8e\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4e00\u4e2a\u884c\u4e3a\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\"\u4e3b\u4f53\"\u548c\"\u5ba2\u4f53\"\u6765\u8fdb\u884c\u5206\u6790\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u4e3b\u4f53\u901a\u8fc7\u64cd\u4f5c\u5ba2\u4f53\u6765\u5b8c\u6210\u4e00\u9879\u4efb\u52a1\u3002\u800c\u5728\u9762\u5411\u5bf9\u8c61\u4e2d\uff0c\u5177\u6709\u884c\u4e3a\u7684Service\u901a\u5e38\u4f1a\u64cd\u4f5c\u4e00\u4e9bEntity\u3001DTO\u7b49\u5177\u6709\u5c5e\u6027\u548c\u6570\u636e\u7684\u5bf9\u8c61\uff0c\u5b83\u4eec\u4e4b\u95f4\u4e5f\u6784\u6210\u4e86\u4e3b\u5ba2\u5173\u7cfb\u3002 \u5728\u5206\u5c42\u8bbe\u8ba1\u4e2d\uff0c\u9996\u5148\u9700\u8981\u5f04\u6e05\u695a\"\u4e3b\u4f53\"\u7c7b\u7684\u804c\u8d23\u662f\u4ec0\u4e48\uff0c\u5982\u679c\u67d0\u4e9b\"\u4e3b\u4f53\"\u7c7b\u7684\u804c\u8d23\u4e00\u81f4\u6216\u8005\u7c7b\u4f3c\uff0c\u5219\u5e94\u8be5\u8003\u8651\u5408\u5e76\u3002","title":"4.5.2 \u5206\u5c42\u8fc7\u591a"},{"location":"04-testing-doubles/#453","text":"\u8fc7\u591a\u5730\u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\u4e5f\u4f1a\u5e26\u6765\u95ee\u9898\uff0c\u6bd4\u5982\uff0c\u5c01\u88c5\u6027\u4f1a\u53d7\u5230\u7834\u574f\uff0c\u6d4b\u8bd5\u4ee3\u7801\u6bd4\u4e1a\u52a1\u4ee3\u7801\u8fd8\u957f\u5f88\u591a\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\u53cd\u800c\u4f1a\u66f4\u52a0\u7b80\u5355\u548c\u9ad8\u6548\u3002 \u6ee5\u7528\u6d4b\u8bd5\u66ff\u8eab\u4f1a\u5e26\u6765\u5982\u4e0b\u95ee\u9898\u3002 \u6d4b\u8bd5\u96be\u4ee5\u7406\u89e3\u3002\u8fc7\u4e8e\u590d\u6742\u7684\u6a21\u62df\u884c\u4e3a\u8ba9\u6d4b\u8bd5\u4ee3\u7801\u53d8\u5f97\u6781\u5176\u96be\u4ee5\u7406\u89e3\uff0c\u5c24\u5176\u662f\u5177\u6709\u5168\u5c40\u72b6\u6001\u518d\u914d\u5408\u6a21\u62df\u884c\u4e3a\u7684\u6d4b\u8bd5\u3002\u590d\u6742\u7684\u6d4b\u8bd5\u6709\u53ef\u80fd\u4f1a\u8ba9\u4e0d\u719f\u6089\u4ee3\u7801\u7684\u5f00\u53d1\u8005\u82b1\u4e0a\u4e00\u6574\u5929\u7684\u65f6\u95f4\u6765\u4fee\u590d\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u6781\u5927\u5730\u964d\u4f4e\u4e86\u5f00\u53d1\u6548\u7387\u3002 \u91cd\u6784\u6210\u672c\u589e\u52a0\u3002\u5982\u679c\u91cd\u6784\u7684\u76ee\u6807\u4ee3\u7801\u91cc\u5305\u542b\u5177\u6709\u6d4b\u8bd5\u66ff\u8eab\u7684\u6d4b\u8bd5\u4ee3\u7801\uff0c\u90a3\u4e48\u4f1a\u5bfc\u81f4\u4e00\u7cfb\u5217\u6d4b\u8bd5\u9700\u8981\u91cd\u65b0\u4fee\u6539\u3002 \u6ee5\u7528\u6d4b\u8bd5\u66ff\u8eab\u5f80\u5f80\u662f\u4e3a\u4e86\u8ffd\u6c42\u5b8c\u7f8e\u7684\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\uff0c\u6bd4\u5982\u8bd5\u56fe\u8ba9\u5355\u5143\u6d4b\u8bd5\u8fbe\u5230100%\uff0c\u4ece\u800c\u60f3\u5c3d\u529e\u6cd5\u8fdb\u884c\u6781\u7aef\u7684\u6a21\u62df\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u548c\u56e2\u961f\u8fbe\u6210\u4e00\u5b9a\u7684\u5171\u8bc6\uff0c\u4f18\u5148\u8986\u76d6\u6700\u91cd\u8981\u7684\u903b\u8f91\uff0c\u4e3a\u771f\u6b63\u9700\u8981\u6d4b\u8bd5\u7684\u5730\u65b9\u6dfb\u52a0\u5355\u5143\u6d4b\u8bd5\u3002","title":"4.5.3 \u6ee5\u7528\u6d4b\u8bd5\u66ff\u8eab"},{"location":"04-testing-doubles/#46","text":"\u672c\u7ae0\u4ecb\u7ecd\u4e86\u4ec0\u4e48\u662f\u6d4b\u8bd5\u66ff\u8eab\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u6d4b\u8bd5\u66ff\u8eab\u6765\u8ba9\u5355\u5143\u6d4b\u8bd5\u66f4\u4e3a\u7b80\u5355\u3002\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u4e0d\u4e00\u5b9a\u5bb9\u6613\u88ab\u6a21\u62df\u548c\u6d4b\u8bd5\u3002\u901a\u8fc7\u5173\u6ce8\u524d\u671f\u8bbe\u8ba1\u3001\u53d8\u66f4\u9002\u914d\u9700\u6c42\u8ba9\u4ee3\u7801\u5177\u6709\u5f88\u597d\u7684\u6d4b\u8bd5\u6027\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4ef6\u4e8b\u3002 \u5f53\u6211\u4eec\u786e\u5b9e\u9700\u8981\u5bf9\u79c1\u6709\u65b9\u6cd5\u8fdb\u884c\u6d4b\u8bd5\u4ee5\u53ca\u884c\u4e3a\u6a21\u62df\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528PowerMock\u5bf9\u79c1\u6709\u65b9\u6cd5\u8fdb\u884c\u6a21\u62df\u548c\u9a8c\u8bc1\uff0c\u5e76\u4f7f\u7528\u53cd\u5c04\u5de5\u5177\uff08\u4f8b\u5982Whitebox\u3001FieldSetter\u7b49\uff09\u6765\u8bbf\u95ee\u79c1\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 \u5f53\u6211\u4eec\u7684\u6d4b\u8bd5\u53d8\u5f97\u975e\u5e38\u590d\u6742\u65f6\uff0c\u56e2\u961f\u6210\u5458\u9700\u8981\u5c31\u6d4b\u8bd5\u4ee3\u7801\u7684\u7ec4\u7ec7\u7ed3\u6784\u8fbe\u6210\u5951\u7ea6\uff0c\u8fd9\u65f6\uff0c\u53ef\u4ee5\u53c2\u8003\u4e00\u4e9b\u6d4b\u8bd5\u4ee3\u7801\u7684\u7ed3\u6784\u6a21\u5f0f\u3002\u901a\u8fc7\u9075\u5faa\u540c\u6837\u7684\u7f16\u5199\u98ce\u683c\u548c\u6a21\u5f0f\uff0c\u53ef\u4ee5\u8ba9\u56e2\u961f\u4e2d\u7684\u4ee3\u7801\u98ce\u683c\u66f4\u7edf\u4e00\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u548c\u4f53\u9a8c\u3002 \u6700\u540e\u4ecb\u7ecd\u4e86\u5982\u4f55\u901a\u8fc7\u5355\u5143\u6d4b\u8bd5\u6765\u611f\u53d7\u6e90\u4ee3\u7801\u7684\u8bbe\u8ba1\u8d28\u91cf\uff0c\u4ee5\u53ca\u5982\u4f55\u901a\u8fc7\u6d4b\u8bd5\u66ff\u8eab\u7684\u5b9e\u73b0\u96be\u5ea6\u6765\u53cd\u601d\u4ee3\u7801\u8bbe\u8ba1\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\u3002 \u6211\u4eec\u5e94\u8be5\u907f\u514d\u4f7f\u7528\"\u5927\u6ce5\u7403\"\u6837\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u5728\u8bbe\u8ba1\u4ee3\u7801\u65f6\uff0c\u4e5f\u8981\u6ce8\u610f\u514d\u53bb\u4e0d\u5fc5\u8981\u7684\u5206\u5c42\uff0c\u5f53\u7136\u66f4\u4e0d\u80fd\u6ee5\u7528\u6d4b\u8bd5\u66ff\u8eab\uff0c\u4ee5\u514d\u964d\u4f4e\u6d4b\u8bd5\u7684\u53ef\u9605\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002","title":"4.6 \u5c0f\u7ed3"},{"location":"05-testing-with-spring/","text":"\u7b2c 5 \u7ae0 Spring \u5e94\u7528\u7684\u6d4b\u8bd5 \u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3Spring\u76f8\u5173\u7684\u6d4b\u8bd5\u5185\u5bb9\uff0c\u8fd9\u91cc\u5ef6\u7eed\u524d\u9762\u8d2d\u4e70\u706f\u6ce1\u7684\u7c7b\u6bd4\u3002\u5728\u73b0\u4ee3\u793e\u4f1a\u4e2d\uff0c\u4eba\u4eec\u5927\u90fd\u4f7f\u7528\u4e00\u4e9b\u5177\u6709\u88c5\u9970\u6027\u6216\u8005\u529f\u80fd\u6027\u7684\u706f\u5177\u3002\u5728\u8fd9\u79cd\u706f\u5177\u4e2d\uff0c\u706f\u6ce1\u6709\u53ef\u80fd\u88ab\u653e\u5230\u67d0\u4e2a\u706f\u69fd\u4e2d\uff0c\u6216\u8005\u88ab\u5305\u88f9\u5728\u5bcc\u6709\u827a\u672f\u611f\u7684\u91d1\u5c5e\u6750\u6599\u91cc\u9762\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e5f\u5c31\u4e0d\u5f97\u4e0d\u6309\u7167\u5382\u5546\u7684\u8981\u6c42\u6765\u6d4b\u8bd5\u6216\u8005\u7ec4\u88c5\uff0c\u4ee5\u5b9e\u73b0\u76f8\u5e94\u7684\u529f\u80fd\u3002 \u8f6f\u4ef6\u5f00\u53d1\u4e5f\u662f\u4e00\u6837\uff0c\u638c\u63e1\u4e86JUnit\u548cMockito\u7684\u76f8\u5173\u77e5\u8bc6\u540e\uff0c\u867d\u7136\u53ef\u4ee5\u7f16\u5199\u5927\u90e8\u5206\u6d4b\u8bd5\uff0c\u4f46\u662f\u5982\u679c\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86Spring\uff0c\u5b83\u72ec\u7279\u7684\u4f9d\u8d56\u6ce8\u5165\u65b9\u6cd5\u8fd8\u662f\u53ef\u80fd\u4f1a\u8ba9\u6211\u4eec\u6709\u4e9b\u65e0\u6240\u9002\u4ece\u3002\u5ba2\u89c2\u5730\u8bf4\uff0c\u6d4b\u8bd5\u9700\u8981\u4e0e\u4e1a\u52a1\u4ee3\u7801\u6240\u5904\u7684\u751f\u6001\u73af\u5883\u76f8\u7ed3\u5408\uff0c\u8fd9\u662f\u65e0\u6cd5\u9003\u907f\u7684\u4e8b\u5b9e\uff0c\u6211\u4eec\u5f97\u60f3\u529e\u6cd5\u89e3\u51b3\u5b83\u3002 Java\u5f00\u53d1\u4e2d\u76ee\u524d\u6700\u6d41\u884c\u7684\u4f53\u7cfb\u5c31\u662fSpring\u751f\u6001\uff0c\u65e5\u5e38\u5de5\u4f5c\u4e2d\u9700\u8981\u7ed3\u5408Spring\u6765\u5b9e\u73b0\u7684\u6d4b\u8bd5\u9700\u6c42\u975e\u5e38\u591a\uff0c\u800c\u4e14\u6bd4\u8f83\u91cd\u8981\uff0c\u4f46\u5927\u90e8\u5206\u8bb2\u89e3\u5355\u5143\u6d4b\u8bd5\u6216TDD\u7684\u56fe\u4e66\u90fd\u5f88\u5c11\u6d89\u53caSpring\u76f8\u5173\u77e5\u8bc6\u3002\u57fa\u4e8e\u6b64\uff0c\u672c\u7ae0\u5c06\u56f4\u7ed5Spring\u3001Spring Boot\u6765\u8bb2\u89e3\u5982\u4f55\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u76ee\u6807\u662f\u5728 Spring Boot \u8fd9\u79cd\u4e3b\u6d41\u7684 Spring\u6846\u67b6\u4e0b\uff0c\u5145\u5206\u5229\u7528\u5176\u6280\u672f\u4f53\u7cfb\u6765\u5b8c\u6210\u6d4b\u8bd5\uff08\u4e0d\u4e00\u5b9a\u53ea\u662f\u5355\u5143\u6d4b\u8bd5\uff09\u3002 \u6211\u5728\u5199\u8fd9\u7ae0\u5185\u5bb9\u65f6\u4f7f\u7528\u7684Spring Boot\u7248\u672c\u662f2.4\uff0c\u5728\u8be5\u7248\u672c\u4e2d\uff0c\u5bf9\u5e94\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u5df2\u7ecf\u662fJUnit 5\uff0c\u56e0\u6b64\uff0c\u4ece\u672c\u7ae0\u5f00\u59cb\u4f1a\u5c06JUnit\u7248\u672c\u5207\u6362\u5230JUnit 5\u3002\u5982\u679c\u8bfb\u8005\u4e0d\u719f\u6089 JUnit 5\uff0c\u53ef\u4ee5\u5230\u7b2c3\u7ae0\u67e5\u770bJUnit 4\u548cJUnit5\u7684\u533a\u522b\u3002 \u672c\u7ae0\u6db5\u76d6\u7684\u5185\u5bb9\u6709\uff1a Spring\u6d4b\u8bd5\u7684\u914d\u7f6e\u3002 \u5206\u5c42\u6d4b\u8bd5\u3002 \u6d4b\u8bd5\u5de5\u5177\u96c6\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4ece\u672c\u7ae0\u5f00\u59cb\uff0c\u5c06\u4f1a\u6162\u6162\u8131\u79bb\u5355\u5143\u6d4b\u8bd5\u7684\u8303\u56f4\uff0c\u5728\u5c06\u4f9d\u8d56\u6ce8\u5165\u5bb9\u5668\u3001\u6280\u672f\u8bbe\u65bd\u7b49\u7ec4\u4ef6\u7ed3\u5408\u5230\u4e00\u8d77\u540e\uff0c\u6211\u4eec\u7684\u6d4b\u8bd5\u4f1a\u66f4\u52a0\"\u63a5\u5730\u6c14\"\uff0c\u4e5f\u4e0d\u518d\u662f\u7eaf\u7cb9\u7684\u5355\u5143\u6d4b\u8bd5\u4e86\u3002 \u672c\u7ae0\u793a\u4f8b\u4ee3\u7801\u89c1 https://github.com/java-self-testing/java-self-testing-example/tree/master/spring \u3002 5.1 \u7406\u89e3 Spring \u6d4b\u8bd5\u4f53\u7cfb \u5728Spring\u6280\u672f\u4f53\u7cfb\u4e0b\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u6709\u65f6\u5019\u4f1a\u89c9\u5f97\u6982\u5ff5\u6bd4\u8f83\u6df7\u4e71\uff0c\u96be\u4ee5\u7406\u89e3\u3002\u8bd5\u7740\u4ece\u7f51\u4e0a\u627e\u4e00\u4e9b\u4ee3\u7801\u8d34\u4e0a\u53bb\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7a0b\u5e8f\u5c31\u5de5\u4f5c\u4e86\uff0c\u51fa\u73b0\u95ee\u9898\u81ea\u7136\u4e5f\u4e0d\u77e5\u9053\u8981\u600e\u4e48\u89e3\u51b3\u3002Spring\u7684\u6bcf\u4e00\u4e2a\u5b50\u9879\u76ee\uff08\u7ec4\u4ef6\uff09\u7684\u6d4b\u8bd5\u6a21\u5757\u90fd\u4f1a\u63d0\u4f9b\u76f8\u5e94\u7684\u6d4b\u8bd5\u5de5\u5177\uff0c\u6bd4\u5982 Spring\u5bf9\u5e94\u7684\u6709Spring Test\u6a21\u5757\uff0cSpring Boot\u5bf9\u5e94\u7684\u6709 Spring Boot Testing\u6a21\u5757\u3002\u5bf9\u4e8e\u521a\u521a\u5f00\u59cb\u4f9d\u8d56\u8fd9\u4e9b\u5305\u7f16\u5199\u6d4b\u8bd5\u7684\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u6709\u65f6\u5206\u4e0d\u6e05\u54ea\u4e9b\u7c7b\u6765\u81ea\u54ea\u4e2a\u5305\uff0c\u5f88\u5bb9\u6613\u611f\u5230\u56f0\u60d1\u3002 \u56fe5-1\u662fSpring\u7684\u751f\u6001\u4f53\u7cfb\u548c\u5bf9\u5e94\u7684\u6d4b\u8bd5\u4f53\u7cfb\u7684\u5305\u5173\u7cfb\u56fe\u3002 \u56fe 5-1 Spring \u751f\u6001\u548c\u6d4b\u8bd5\u4f53\u7cfb \u56fe5-1\u7684\u5de6\u8fb9\u7ed9\u51fa\u4e86Spring\u751f\u6001\u4e0b\u5e38\u7528\u7684\u5305\uff0c\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\u3002 spring-core\u662f\u4e00\u4e2a\u4f9d\u8d56\u6ce8\u5165\u5e93\uff0c\u901a\u8fc7\u4f9d\u8d56\u6ce8\u4eba\u529f\u80fd\u7ba1\u7406\u5404\u79cd\u7c7b\u3002 spring-mvc\u63d0\u4f9b\u4e86\u4e0eWeb\u670d\u52a1\u5668\u7f16\u7a0b\u76f8\u5173\u7684\u529f\u80fd\u53caMVC\u6a21\u5f0f\u7684\u5b9e\u73b0\u3002 spring-security-core\u662f\u5b89\u5168\u6846\u67b6\u7684\u6838\u5fc3\u5305\uff0c\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u8fc7\u6ee4\u5668\u6765\u5b9e\u73b0Web\u5b89\u5168\u548c\u9274\u6743\u3002 spring-boot \u662f Spring \u751f\u6001\u7684\u811a\u624b\u67b6\uff0c\u5b83\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u6846\u67b6\uff0c\u7528\u4e8e\u96c6\u6210\u6574\u4e2aSpring\u751f\u6001\u4f53\u7cfb\uff0c\u901a\u8fc7spring-boot-autoconfigure\u6765\u5b9e\u73b0\u81ea\u52a8\u5316\u7684\u914d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u7528\u81ea\u5df1\u914d\u7f6e\u4e86\u3002 spring-boot-starter\u53d1\u5e03\u4e86\u5404\u79cd\u4f9d\u8d56\u7684Pom\u96c6\u5408\uff0c\u65b9\u4fbf\u5c06\u5404\u79cd\u4f9d\u8d56\u5305\u5f15\u5165\u9879\u76ee\u4e2d\u3002 \u56fe5-1\u7684\u53f3\u4fa7\u662f\u4e0a\u8ff0\u5305\u63d0\u4f9b\u7684\u76f8\u5e94\u6d4b\u8bd5\u6a21\u5757\uff0c\u4ee5\u53ca\u7528\u4e8e\u6d4b\u8bd5\u7684\u5de5\u5177\u3002\u6bd4\u5982\uff0cspring-test \u63d0\u4f9b\u4e86\u7528\u4e8e\u5355\u5143\u6d4b\u8bd5\u7684Runner\uff0cMockMvc\u76f8\u5173\u7684\u7c7b\uff08spring-mvc\u5c5e\u4e8eSpring Framework\uff0c\u6ca1\u6709\u5355\u72ec\u7684\u6d4b\u8bd5\u6a21\u5757\uff09\uff1bspring-boot-test\u63d0\u4f9b\u4e86@SpringBootTest\u8fd9\u7c7b\u81ea\u52a8\u5316\u914d\u7f6e\u7684\u6ce8\u89e3\u53ca\u81ea\u52a8\u5316\u6d4b\u8bd5\u914d\u7f6e\uff1bspring-security-test\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6a21\u62df\u7528\u6237\u7684\u5de5\u5177\u3002 \u9664\u4e86Spring\u4f53\u7cfb\u4e0b\u7684\u8fd9\u4e9b\u5305\uff0c\u6211\u4eec\u8fd8\u53ef\u80fd\u4f1a\u7528\u5230\u5176\u4ed6\u4e00\u4e9b\u5de5\u5177\uff0c\u8fd9\u4e9b\u5de5\u5177\u4e8e\u4e0d\u540c\u7684\u5c42\u6b21\u63d0\u4f9b\u4e0d\u540c\u7684\u529f\u80fd\uff1a JUnit\uff1a\u4f5c\u4e3a\u5355\u5143\u6d4b\u8bd5\u5de5\u5177\u5b83\u5df2\u7ecf\u6210\u4e3aJava\u5355\u5143\u6d4b\u8bd5\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\u3002 Hamcrest\uff1aJUnit\u5185\u7f6e\u7684\u4f9d\u8d56\u7684\u65ad\u8a00\u5e93\u3002 AssertJ\uff1a\u6d41\u5f0f\u65ad\u8a00\u5e93\u3002 Mockito\uff1a\u6a21\u62df\u5de5\u5177\uff0c\u7528\u4e8e\u5b9e\u73b0\u6d4b\u8bd5\u66ff\u8eab\u3002 JSONassert\uff1a\u7528\u4e8e\u65ad\u8a00JSON\u8282\u70b9\uff0c\u505aAPI\u6d4b\u8bd5\u65f6\u7528\u5f97\u6bd4\u8f83\u591a\u3002 JsonPath\uff1a\u53ef\u4ee5\u901a\u8fc7XPath \u8bed\u6cd5\u8bbf\u95eeJSON\u3002 \u867d\u7136 Spring Boot \u4e5f\u80fd\u7528\u4e8e\u5b9e\u73b0\u547d\u4ee4\u884c\u3001\u684c\u9762\u5de5\u5177\u7684\u5f00\u53d1\uff08\u6bd4\u5982 JavaFX\u53ef\u4ee5\u548c Spring Boot\u7ed3\u5408\u5f00\u53d1\u684c\u9762\u5e94\u7528\uff09\uff0c\u4f46\u5b83\u4e3b\u8981\u5e94\u7528\u4e8e\u670d\u52a1\u7aef\u5e94\u7528\u5f00\u53d1\uff0c\u6240\u4ee5\u5927\u90e8\u5206\u76f8\u5173\u7684\u6d4b\u8bd5\u5de5\u5177\u90fd\u662f\u4e3a\u670d\u52a1\u7aef\u5f00\u53d1\u51c6\u5907\u7684\u3002\u603b\u5730\u6765\u8bf4\uff0c\u6211\u4eec\u8ba8\u8bba Spring Boot\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u5c06\u66f4\u591a\u7684\u5173\u6ce8\u653e\u5728\u670d\u52a1\u7aef\u5e94\u7528\u5f00\u53d1\u4e0a\u3002 \u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u6d4b\u8bd5\u7c7b\u578b\uff1a \u53ea\u4f7f\u7528JUnit\u5c31\u53ef\u4ee5\u6d4b\u8bd5\u7684\u7b80\u5355\u5bf9\u8c61\u3001\u9759\u6001\u65b9\u6cd5\u7c7b\u3002 \u542f\u52a8Spring\u4e0a\u4e0b\u6587\u6765\u8fdb\u884c\u6d4b\u8bd5\u3002\u5982\u679c\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u662f\u7eb3\u5165IOC\u5bb9\u5668\u7ba1\u7406\u7684Bean\u5bf9\u8c61\uff0c \u9700\u8981\u4f7f\u7528Spring Test \u7684Runner+Mockito \u9694\u79bb\u88ab\u6d4b\u8bd5\u7684\u5bf9\u8c61\uff0c\u867d\u7136\u8fd9\u65f6\u9700\u8981\u542f\u52a8Spring \u4e0a\u4e0b\u6587\uff0c\u4f46\u662f\u5bb9\u5668\u4e2d\u53ea\u653e\u4e86\u5fc5\u8981\u7684\u88ab\u6d4b\u8bd5\u5bf9\u8c61\uff0c\u56e0\u6b64\u4ecd\u7136\u53ef\u4ee5\u770b\u4f5c\u662f\u5355\u5143\u6d4b\u8bd5\u3002 \u542f\u52a8Spring Boot\u4e0a\u4e0b\u6587\u6765\u8fdb\u884c\u6d4b\u8bd5\u3002\u4f8b\u5982\u60f3\u8981\u6d4b\u8bd5Controller\u662f\u5426\u80fd\u771f\u6b63\u53cd\u9988\u6211\u4eec \u9700\u8981\u7684\u54cd\u5e94\uff0c\u53ef\u4ee5\u4f7f\u7528Spring Boot Test\u8fd9\u4e2a\u6846\u67b6\u542f\u52a8\u4e00\u4e2a\u6a21\u62df\u7684Spring Boot\u4e0a\u4e0b\u6587\uff0c\u4e0d\u8fc7\u8fd9\u63a5\u8fd1\u4e8e\u96c6\u6210\u6d4b\u8bd5\uff0cSpring Boot\u6587\u6863\u4e2d\u4e5f\u5c06\u8fd9\u90e8\u5206\u5185\u5bb9\u5212\u5206\u4e3a\u96c6\u6210\u6d4b\u8bd5\u4e86\u3002 \u8fd9\u4e09\u79cd\u6d4b\u8bd5\u7c7b\u578b\uff0c\u6d4b\u8bd5\u7684\u7c92\u5ea6\u7531\u4f4e\u5230\u9ad8\uff0c\u6d4b\u8bd5\u8fd0\u884c\u7684\u65f6\u95f4\u4e5f\u662f\u7531\u5c11\u5230\u591a\u3002\u6211\u4eec\u9700\u8981\u5c3d\u53ef\u80fd\u5730\u9009\u7528\u4f4e\u6210\u672c\u7684\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u5728\u7f29\u77ed\u6d4b\u8bd5\u8fd0\u884c\u65f6\u95f4\u7684\u540c\u65f6\u51cf\u5c11\u6837\u677f\u4ee3\u7801\u3002 \u5982\u679c\u9700\u8981\u5728 Spring Boot\u9879\u76ee\u52a0\u5165\u6d4b\u8bd5\u4f9d\u8d56\uff0c\u53ea\u9700\u8981\u5f15\u5165 spring-boot-starter-test \u5305\u5373\u53ef\u3002spring-boot-starter-test\u57fa\u672c\u4e0a\u5f15\u5165\u4e86\u9700\u8981\u7528\u5230\u7684\u6240\u6709\u6d4b\u8bd5\u529f\u80fd\uff0c\u5df2\u7ecf\u95f4\u63a5\u4f9d\u8d56\u4e86JUnit\u3001Mockito\uff0c\u5f00\u7bb1\u5373\u7528\u3002 \u81f3\u4e8e\u6d4b\u8bd5\u9700\u8981\u4f7f\u7528\u7684\u5176\u4ed6\u4f9d\u8d56\u5305\uff0c\u5219\u9700\u8981\u5355\u72ec\u6dfb\u52a0\uff0c\u5728\u540e\u9762\u7684\u793a\u4f8b\u4e2d\u4e5f\u4f1a\u9010\u6b65\u8865\u5145\u8bf4\u660e\u3002\u7531\u4e8eSpring\u4f7f\u7528\u7684\u662f\u7edf\u4e00\u7684\u4f9d\u8d56\u7248\u672c\u7ba1\u7406\u5668\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u4e3aSpring\u7ec4\u4ef6\u8bbe\u7f6e\u7248\u672c\uff0c\u5982\u679c\u5e0c\u671b\u548c\u672c\u4e66\u7684\u4ee3\u7801\u4fdd\u6301\u4e00\u81f4\uff0c\u53ef\u4ee5\u9009\u62e92.4\u7cfb\u5217\u7684\u7248\u672c\u3002\u5982\u679c\u662f\u5df2\u7ecf\u5b58\u5728\u7684\u9879\u76ee\uff0c\u52a0\u5165\u4e0b\u9762\u7684\u4f9d\u8d56\u5230Pom\u6587\u4ef6\u4e2d\u5373\u53ef\u5f00\u7bb1\u4f7f\u7528\uff1a <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId> <scope>test</scope> </dependency> \u4e0a\u9762\u4ecb\u7ecd\u4e86Spring\u4e0b\u7684\u4e09\u79cd\u6d4b\u8bd5\u7c7b\u578b\uff0c\u5bf9\u4e8e\u53ea\u4f7f\u7528JUnit\u5c31\u53ef\u4ee5\u6d4b\u8bd5\u7684\u7b80\u5355\u5bf9\u8c61\u3001\u9759\u6001\u65b9\u6cd5\u7c7b\uff0c\u76f4\u63a5\u4f7f\u7528JUnit\u548cMockito\u5b8c\u6210\u6d4b\u8bd5\u5373\u53ef\uff0c\u65e0\u987b\u518d\u8ba8\u8bba\u3002\u4e0b\u9762\u804a\u804a\u5982\u4f55\u4f7f\u7528Spring\u5bb9\u5668\u52a0\u8f7dBean\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u548c\u5168\u91cf\u542f\u52a8Spring Boot\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u914d\u7f6e\u3002 5.2 \u542f\u52a8Spring\u4e0a\u4e0b\u6587\u6d4b\u8bd5 \u5047\u8bbe\u6709\u4e00\u4e2a\u7b80\u5355\u7684Spring Boot\u540e\u7aef Web\u9879\u76ee\uff0c\u91cc\u9762\u5305\u542bController\u3001Service\u3001Entity\u3001Mapper\u7b49\u5206\u5c42\u548c\u6a21\u5757\u3002\u4e3a\u4e86\u63a5\u8fd1\u56fd\u5185\u4e3b\u6d41\u5f00\u53d1\u98ce\u683c\uff0c\u5176\u4e2d\u7684\u6301\u4e45\u5316\u5e93\u9009\u62e9\u4e86MyBatis\u3002\u56fe5-2\u4e3a\u793a\u4f8b\u4ee3\u7801\u7684\u5305\u7ed3\u6784\u56fe\u3002 \u56fe 5-2 \u793a\u4f8b\u4ee3\u7801\u7684\u7ed3\u6784 \u4e00\u822c\u6765\u8bf4\uff0c\u4e3b\u8981\u903b\u8f91\u90fd\u4f1a\u5199\u5728Service\u4e2d\uff0c\u56e0\u6b64\uff0cService \u4e5f\u5c31\u6210\u4e86\u6211\u4eec\u7684\u4e3b\u8981\u6d4b\u8bd5\u76ee\u6807\u3002\u4e0b\u9762\u5c06\u5bf9\u5176\u7f16\u5199\u6d4b\u8bd5\u3002 UserService\u4e2d\u7684\u4e3b\u8981\u903b\u8f91\u7528\u4e8e\u5b9e\u73b0\u6dfb\u52a0\u7528\u6237\u3001\u5217\u51fa\u7528\u6237\u7b49\u529f\u80fd\uff0cUserService\u4f9d\u8d56\u4e8eUserMapper\uff0c\u5982\u679c\u53ea\u662f\u6d4b\u8bd5UserService\uff0c\u7136\u540e\u6a21\u62df\u4f9d\u8d56\u7684Mapper\u5176\u5b9e\u975e\u5e38\u5bb9\u6613\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Service public class UserService { public static final String KEY = \"ea416ed0759d46a8de58f63a59077499\"; @Autowired private UserMapper userMapper; public User add(User user) { user.setCreateAt(Instant.now()); user.setUpdateAt(Instant.now()); user.setPassword(hash(user.getPassword())); userMapper.insert(user); return user; } public List<User> listAll() { return userMapper.selectAll(); } private String hash(String text) { return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, KEY).hmacHex(text); } } \u5728 Spring \u4e2d\uff0c\u5e38\u89c4\u7684\u505a\u6cd5\u662f\u4f7f\u7528@Autowired\u6ce8\u89e3\u6765\u6ce8\u5165\u4f9d\u8d56\u7684 UserMapper\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u79c1\u6709\u5c5e\u6027\u3002\u8fd9\u65f6\u9700\u8981\u6a21\u62dfUserMapper\uff0c\u4f46\u7531\u4e8e\u51fa\u73b0\u4e86\u79c1\u6709\u6210\u5458\uff0c\u56e0\u6b64\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528Mockito \u8fdb\u884c\u6a21\u62df\u3002 \u5728\u6d4b\u8bd5\u66ff\u8eab\u90e8\u5206\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u6cd5\u6765\u89e3\u51b3\u79c1\u6709\u6210\u5458\u7684\u6a21\u62df\u95ee\u9898\u3002\u53ef\u4ee5\u4f7f\u7528PowerMock \u6216\u8005\u53cd\u5c04\u5de5\u5177\u6765\u5b9e\u73b0\u6a21\u62df\uff0c\u6bd4\u5982FieldSetter\u3002\u5728Spring Test\u7684\u5de5\u5177\u96c6\u4e2d\u8fd8\u53ef\u4ee5\u4f7f\u7528 Reflection-TestUtils\u5b9e\u73b0\u7c7b\u4f3c\u7684\u6548\u679c\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528Spring\u7684\u6784\u9020\u65b9\u6cd5\u6765\u6ce8\u5165\u65b0\u6a21\u62df\u7684\u5bf9\u8c61\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a private final UserMapper userMapper; public UserService(UserMapper userMapper) { this.userMapper = userMapper; } \u5f53\u9700\u8981\u88ab\u4f9d\u8d56\u7684\u5bf9\u8c61\u975e\u5e38\u591a\u7684\u65f6\u5019\uff0c\u8fd9\u6837\u7f16\u5199\u4ee3\u7801\u4f1a\u7a0d\u7a0d\u6709\u70b9\u9ebb\u70e6\uff0c\u4e5f\u65e0\u6cd5\u89e3\u51b3\u4e0e@Value\u7b49\u7c7b\u4f3c\u7684\u6ce8\u89e3\u95ee\u9898\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5728Spring\u4e2d\u53ef\u4ee5\u4f7f\u7528SpringExtension\u6765\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5e76\u96c6\u6210Spring\u7684\u4f9d\u8d56\u6ce8\u5165\u529f\u80fd\u3002 \u6ce8\u610f\uff1a\u5728\u5355\u5143\u6d4b\u8bd5\u90e8\u5206\u6211\u4eec\u63d0\u5230\u4e86\uff0cJUnit 5 \u4e2d Runner \u88ab\u66ff\u6362\u6210\u4e86 Extension\uff0c\u6ce8\u89e3 @RunWith \u4e5f\u88ab\u66ff\u6362\u6210\u4e86 @ExtendWith\u3002 \u4e0b\u9762\u521b\u5efa\u4e00\u4e2aUserServiceTest\u6d4b\u8bd5\u5e76\u4f7f\u7528SpringExtension\u4f5c\u4e3a\u6d4b\u8bd5\u7684JUnit\u62d3\u5c55\u3002\u7531\u4e8e\u8fd9\u4e2a\u62d3\u5c55\u521d\u59cb\u5316\u4e86Mockito\u6ce8\u89e3\u7684\u76f8\u5173\u884c\u4e3a\uff0c\u56e0\u6b64\u53ef\u4ee5\u5b9e\u73b0\u4e0eMockitoExtension\u76f8\u4f3c\u7684\u529f\u80fd\uff0c\u6b64\u5916\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u4e0eSpring\u7ed3\u5408\u66f4\u4e3a\u7d27\u5bc6\u7684\u5176\u4ed6\u529f\u80fd\u3002 \u521b\u5efa\u7684\u57fa\u7840\u6d4b\u8bd5\u73af\u5883\u5982\u4e0b\uff1a @ExtendWith(SpringExtension.class) public class UserServiceTest { @InjectMocks private UserService userService; @Mock private UserMapper userMapper; ... } \u4e0b\u9762\u6dfb\u52a02\u4e2a\u6d4b\u8bd5\uff0c\u7528\u6765\u6d4b\u8bd5\u5217\u51fa\u3001\u6dfb\u52a0\u7528\u6237\u8fd9\u4e24\u4e2a\u529f\u80fd\uff1a @Test public void should_list_users() { userService.listAll(); Mockito.verify(userMapper).selectAll(); } @Test public void should_add_user() { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); }}; userService.add(user); ArgumentCaptor<User> argument = ArgumentCaptor.forClass(User.class); Mockito.verify(userMapper).insert(argument.capture()); assertEquals(\"zhangsan\", argument.getValue().getUsername()); assertEquals(\"667f1213e4a57dbee7cd9e8993b82adef1032f7681a5d5c941c30281f90e7eceba629cc9ccf3f133fb478f3f54d9537c2dd50895380f659370c2a14147449ac4\", argument.getValue().getPassword()); assertNotNull(argument.getValue().getCreateAt()); assertNotNull(argument.getValue().getUpdateAt()); } \u5982\u4e0a\uff0c\u4e00\u7ec4\u57fa\u672c\u7684\u6d4b\u8bd5\u5c31\u5b8c\u6210\u4e86\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528SpringExtension\uff0bMockito\u80fd\u5b8c\u6210\u5927\u90e8\u5206\u7684\u6d4b\u8bd5\u5de5\u4f5c\u3002SpringExtension\u8d77\u5230\u4e86\u4e0eMockitoExtension\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u53c8\u80fd\u4e0eSpring\u4f9d\u8d56\u6ce8\u5165\u4e00\u8d77\u4f7f\u7528\uff0c\u975e\u5e38\u9002\u5408Service\u7684\u6d4b\u8bd5\u5de5\u4f5c\u3002 SpringExtension\u662fspring-test\u6a21\u5757\u4e2d\u7684\u7c7b\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5f15\u5165\u7684\u76f8\u5173\u5e93\u4e0eSpring Boot\u8fd8\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e5f\u4e0d\u4f1a\u542f\u52a8\u6574\u4e2a\u4e0a\u4e0b\u6587\uff0c\u51e0\u4e4e\u4e0d\u4f1a\u5f71\u54cd\u6d4b\u8bd5\u6548\u7387\u3002 \u5728JUnit 4\u4e2d\uff0c\u6d4b\u8bd5\u4e0d\u662f\u901a\u8fc7Extension\u8fd0\u884c\u7684\uff0c\u53ea\u9700\u8981\u5c06@ExtendWith\uff08SpringExtension. class\uff09\u66ff\u6362\u4e3a@RunWith\uff08SpringRunner.class\uff09\u5373\u53ef\u5b9e\u73b0\u517c\u5bb9\u3002SpringRunner\u662fSpringJUnit4 ClassRunner\u7684\u5b50\u7c7b\uff0c\u5b83\u662f\u4e00\u4e2afinal\u7c7b\uff0c\u4e0d\u80fd\u88ab\u7ee7\u627f\u7528\u4e8e\u62d3\u5c55\u3002\u5982\u679c\u5e0c\u671b\u62d3\u5c55Runner\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 SpringJUnit4ClassRunner \u6216\u8005\u62d3\u5c55 SpringJunit4ClassRunner \u7c7b\u6765\u5b9e\u73b0\u3002 5.3 \u542f\u52a8Spring Boot \u4e0a\u4e0b\u6587\u6d4b\u8bd5 \u4f7f\u7528SpringExtension\u540e\u5373\u53ef\u4f7f\u7528@Autowired\u6765\u52a0\u8f7d\u5176\u4ed6\u7684\u5bf9\u8c61\uff0c\u8fd9\u662fSpring Test\u6846\u67b6\u63d0\u4f9b\u7684\u529f\u80fd\u3002\u6211\u4eec\u77e5\u9053\uff0cSpring Boot \u7684\u4f5c\u7528\u662f\u5b9e\u73b0\u81ea\u52a8\u5316\u914d\u7f6e\uff0c\u901a\u8fc7\u81ea\u52a8\u5316\u914d\u7f6e\u53ef\u5b9a\u4e49\u5927\u91cf\u7684Bean\u3002 \u5982\u679c\u4ec5\u4ec5\u8981\u6d4b\u8bd5Service\u7684\u903b\u8f91\u800c\u6a21\u62dfMapper\uff0c\u770b\u8d77\u6765\u597d\u50cf\u65e0\u6cd5\u9a8c\u8bc1\u6570\u636e\u662f\u5426\u88ab\u771f\u6b63\u5730\u5199\u5165\u6570\u636e\u5e93\u4e2d\u4e86\uff0c\u8fd9\u6837\u7684\u6d4b\u8bd5\u663e\u5f97\u5f88\u9e21\u808b\u3002\u4e8e\u662f\u4eba\u4eec\u60f3\u5230\uff0c\u65e2\u7136\u53ef\u4ee5\u5c06Service\u548cMapper \u4e00\u8d77\u6d4b\u8bd5\uff0c\u4e3a\u4f55\u4e0d\u542f\u52a8Spring Boot\u5462\uff1f 5.3.1 @SpringBootTest \u65e2\u7136\u542f\u52a8Spring Boot\u4e0a\u4e0b\u6587\u5c31\u53ef\u4ee5\u4f7f\u7528Spring Boot\u5b8c\u6574\u7684\u529f\u80fd\u8fdb\u884c\u6d4b\u8bd5\uff0c\u90a3\u4e48\u9700\u8981\u6a21\u62df\u7684\u4e1c\u897f\u81ea\u7136\u76f8\u5bf9\u8f83\u5c11\uff0c\u56e0\u4e3a@SpringBootTest\u5e2e\u6211\u4eec\u542f\u52a8\u4e86Spring MVC\u3001\u521d\u59cb\u5316\u6570\u636e\u5e93\u8fde\u63a5\u3001\u65e5\u5fd7\u7b49\u4e00\u7cfb\u5217\u914d\u7f6e\u3002 \u5229\u7528\u4e0a\u8ff0\u7279\u6027\uff0cUserServiceTest\u5c31\u4e0d\u7528\u6a21\u62dfUserMapper\u4e86\uff0cSpring Boot Test\u4f1a\u81ea\u52a8\u5b8c\u6210\u4e00\u7cfb\u5217\u914d\u7f6e\uff0c\u4ee5\u8fdb\u884c\u66f4\u771f\u5b9e\u7684\u6d4b\u8bd5\u3002 \u5728 test \u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u4e0eApplication \u8def\u5f84\u76f8\u540c\u7684\u5305\u548c\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\uff0c\u4f7f\u7528@SpringBootTest \u4fee\u9970\u8fd9\u4e2a\u6d4b\u8bd5\u7c7b\u3002\u7531\u4e8e@SpringBootTest\u4e2d\u5df2\u7ecf\u9ed8\u8ba4\u5305\u542b\u4e86@ExtendWith\uff08{SpringExtension. class}\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u7701\u7565\u8fd9\u4e00\u884c\u6ce8\u89e3\uff0c\u4f46\u5728JUnit4\u4e2d\u4f9d\u7136\u9700\u8981\u7528\u5230@RunWith\u6ce8\u89e3\uff1a @SpringBootTest public class ApplicationTest { @Autowired private UserService userService; @Test public void should_list_users() { userService.listAll(); } @Test public void should_add_user() { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); }}; userService.add(user); } } userService\u662f\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u4e2d\u771f\u5b9e\u7684\u5bf9\u8c61\uff0c\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c@SpringBootTest\u4f1a\u521b\u5efa\u4f9d\u8d56\u7684UserMapper\uff0c\u4ee5\u4fbf\u6211\u4eec\u8bbf\u95ee\u6570\u636e\u5e93\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u53ea\u662f\u9a8c\u8bc1\u4e86\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u80fd\u5426\u8fd0\u884c\uff0c\u8fd8\u6ca1\u6709\u65ad\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u4e00\u4e9b\u6d4b\u8bd5\u6570\u636e\u8fdb\u884c\u65ad\u8a00\u3002 \u4e25\u683c\u6765\u8bf4\uff0c\u8fd9\u79cd\u6d4b\u8bd5\u4e0d\u7b97\u5355\u5143\u6d4b\u8bd5\u3002\u867d\u7136\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u8d77\u70b9\u662fService\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u6a21\u62df Mapper\uff0c\u800c\u662f\u4f7f\u7528\u4e86\u771f\u5b9e\u7684 Mapper\u5c06\u6570\u636e\u5199\u5165\u5185\u5b58\u6570\u636e\u5e93\u4e2d\u3002\u6574\u4e2a\u8fc7\u7a0b\u4f1a\u52a0\u8f7d\u6240\u6709\u9700\u8981\u7528\u5230\u7684Bean\uff0c\u4f1a\u542f\u52a8\u5168\u90e8\u7684\u4e0a\u4e0b\u6587\uff0c\u4e00\u822c\u8fd9\u79cd\u914d\u7f6e\u65b9\u5f0f\u4f1a\u7528\u4e8eE2E\u6d4b\u8bd5\u3002 \u5728\u6301\u4e45\u5e93\u9009\u62e9\u4e86MyBatis\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u5904\u7406MyBatis\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528mybatis-spring-boot-starter\u5305\u548cH2\u5185\u5d4c\u6570\u636e\u5e93\uff0c\u5728Pom\u6587\u4ef6\u4e2d\u52a0\u5165\u76f8\u5173\u7684\u4f9d\u8d56\u5373\u53ef\u5b9e\u73b0\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <dependency> <groupId>org.mybatis.spring.boot</groupId> <artifactId>mybatis-spring-boot-starter</artifactId> <version>2.1.0</version> </dependency> <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> <scope>test</scope> </dependency> mybatis-spring-boot-starter\u5728\u8fd9\u91cc\u7528\u4e8e\u5904\u7406\u4e0eMapper\u76f8\u5173\u7684\u903b\u8f91\uff0cH2\u5145\u5f53\u4e86\u5185\u5b58\u6570\u636e\u5e93\uff0cStarter\u5219\u4f1a\u6839\u636e\u73af\u5883\u9700\u8981\u81ea\u52a8\u8fdb\u884c\u914d\u7f6e\u3002 \u7531\u4e8e\u8fd9\u79cd\u65b9\u5f0f\u6ca1\u6709\u6a21\u62df\u4f9d\u8d56\u7684\u5bf9\u8c61\uff0c\u56e0\u6b64\u4e0d\u80fd\u8fdb\u884c\u65ad\u8a00\uff0c\u9700\u8981\u76f4\u63a5\u83b7\u53d6\u5e76\u5224\u65ad\u6570\u636e\u5e93\u7684\u6570\u636e\uff08\u5982\u679c\u662fAPI\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u901a\u8fc7API\u67e5\u8be2\u6765\u8fdb\u884c\u9a8c\u8bc1\uff09\u3002 Spring Test\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u4f46\u662f\u5e38\u7528\u7684\u7c7b JdbcTestUtils\uff0c\u8be5\u7c7b\u53ef\u4ee5\u4f7f\u7528JdbcTemplate \u6765\u7edf\u8ba1\u548c\u64cd\u4f5c\u6570\u636e\u5e93\u8868\u3002\u5f53\u6267\u884c\u6dfb\u52a0\u7528\u6237\u7684\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528JdbcTestUtils \u7edf\u8ba1\u6570\u636e\u5e93\u7528\u6237\u8868\u8bb0\u5f55\u884c\u6570\u6765\u8fdb\u884c\u65ad\u8a00\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7JdbcTemplate\u67e5\u8be2\u5177\u4f53\u7684\u6570\u636e\u6765\u8fdb\u884c\u9a8c\u8bc1\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Autowired private JdbcTemplate jdbcTemplate; @Test public void should_add_user() { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); }}; userService.add(user); int count = JdbcTestUtils.countRowsInTable(jdbcTemplate, \"user\"); assertEquals(1, count); } \u8981\u8bf4@SpringBootTest\u542f\u52a8\u4e86\u5168\u90e8\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u4e5f\u4e0d\u7b97\u5bf9\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c@SpringBootTest \u6ca1\u6709\u542f\u52a8 Web \u670d\u52a1\u5668\uff0c\u53ea\u662f\u542f\u52a8\u4e86\u5e94\u7528\u4e0a\u4e0b\u6587\u548c\u6a21\u62df\u7684\u670d\u52a1\u5668\u73af\u5883\u3002\u901a\u8fc7webEnvironment \u5c5e\u6027\u53ef\u4ee5\u4fee\u6539\u8bbe\u7f6e\uff0c\u542f\u52a8\u968f\u673a\u7aef\u53e3\u3001\u56fa\u5b9a\u7aef\u53e3\u7684Web\u670d\u52a1\u5668\uff0c\u6216\u8005\u5f7b\u5e95\u4e0d\u4f7f\u7528Web\u73af\u5883\u3002 \u542f\u52a8\u4e00\u4e2a\u968f\u673a\u7aef\u53e3\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @SpringBootTest( webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT ) \u76f8\u5e94\u7684\u6a21\u5f0f\u8bf4\u660e\u5982\u4e0b\u3002 MOCK\uff1a\u9ed8\u8ba4\u6a21\u5f0f\uff0c\u52a0\u8f7dWeb\u7c7b\u578b\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff0c\u4f46\u662f\u63d0\u4f9b\u7684\u662f\u6a21\u62df\u7684\u8fd0\u884c\u73af\u5883\uff0c\u4e0d\u542f\u52a8 Web\u670d\u52a1\u5668\u3002 RANDOM_PORT\uff1a\u542f\u52a8\u771f\u5b9e\u7684\u5185\u5d4c\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528\u968f\u673a\u7aef\u53e3\uff0c\u53ef\u4ee5\u907f\u514d\u6d4b\u8bd5\u65f6\u4e0e\u5176\u4ed6\u5e94\u7528\u7aef\u53e3\u51b2\u7a81\u3002 DEFINED_PORT\uff1a\u542f\u52a8\u771f\u5b9e\u7684\u5185\u5d4c\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528\u5b9a\u4e49\u7684\u7aef\u53e3\uff0c\u7aef\u53e3\u53ef\u4ee5\u5728\u6d4b\u8bd5\u7684\u914d\u7f6e\u4e2d\u6dfb\u52a0\u3002 NONE\uff1a\u4e0d\u52a0\u8f7dWeb\u7c7b\u578b\u7684\u4e0a\u4e0b\u6587\uff0c\u4e5f\u4e0d\u6a21\u62df\u4efb\u4f55Web\u73af\u5883\u3002 \u53e6\u5916\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a classes \u53c2\u6570\u6765\u786e\u5b9a\u5305\u626b\u63cf\u7684\u4f4d\u7f6e\u3002 @ContextConfiguration(classes=...)}\uff1a @SpringBootTest( webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = {Application.class} ) \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSpring Boot\u4f1a\u901a\u8fc7\u626b\u63cf\u5165\u53e3\u7c7b\u5305\u4e0b\u7684\u6240\u6709\u7c7b\u6765\u6ce8\u518c\u76f8\u5173\u7684Bean\u3002\u4f46\u662f\u5982\u679c\u56e0\u67d0\u4e9b\u539f\u56e0\u65e0\u6cd5\u505a\u5230\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528classes\u53c2\u6570\u6765\u914d\u7f6e\u9700\u8981\u626b\u63cf\u7684\u76ee\u6807\u7c7b\u3002\u4f8b\u5982\uff0c\u5728\u591a\u6a21\u5757\u9879\u76ee\u4e0b\uff0c\u914d\u7f6e\u4e86\u591a\u4e2a\u542f\u52a8\u5e94\u7528\uff08\u6bd4\u5982\u524d\u53f0\u3001Admin\u53ef\u4ee5\u72ec\u7acb\u542f\u52a8\uff0c\u4f46\u662f\u5b83\u4eec\u5728\u4e00\u4e2a\u4ee3\u7801\u5e93\u4e2d\uff09\uff0c\u5b83\u4eec\u5171\u4eab\u4e00\u4e2acommon\u6a21\u5757\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u5404\u81ea\u7684\u542f\u52a8\u5e94\u7528\u4e2d\u72ec\u7acb\u8fd0\u884c\u6d4b\u8bd5\uff0c\u53ea\u8981\u66ff\u6362classes\u4e2d\u7684\u503c\u5373\u53ef\u5b9e\u73b0\u76f8\u4e92\u4e4b\u95f4\u4e0d\u53d7\u5e72\u6270\u3002 \u53e6\u5916\uff0c@SpringBootTest\u6ce8\u89e3\u4e5f\u53ef\u4ee5\u901a\u8fc7value\u53c2\u6570\u6ce8\u5165\u914d\u7f6e\uff0c\u7528\u4e8e\u6fc0\u6d3b\u4e0e\u6d4b\u8bd5\u76f8\u5173\u7684Profile\u6216\u8005\u5b9a\u4e49\u7aef\u53e3\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @SpringBootTest( value = {\"server.port=9090\"} ) 5.3.2 \u5bf9 Bean \u7684\u6a21\u62df\u548c\u76d1\u89c6 \u901a\u8fc7\u6d4b\u8bd5\u66ff\u8eab\u90e8\u5206\u7684\u4ecb\u7ecd\u6211\u4eec\u77e5\u9053\uff0c\u6a21\u62df\u548c\u76d1\u89c6\u76f8\u5173\u6ce8\u89e3\u7684\u4f7f\u7528\u4e0eRunner\u5bc6\u5207\u76f8\u5173\uff0c\u5373\u5fc5\u987b\u6709\u76f8\u5e94\u7684Runner\u624d\u53ef\u4ee5\uff0c\u5728JUnit5\u4e2dSpringExtension\u5e2e\u6211\u4eec\u5b8c\u6210\u4e86\u76f8\u5173\u5de5\u4f5c\u3002 \u4f7f\u7528Spring\u4e4b\u540e\uff0c\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u662f\u901a\u8fc7Bean\u5b8c\u6210\u7684\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u7684\u8d4b\u503c\uff0c\u6240\u4ee5\u5728Spring\u7684\u6d4b\u8bd5\u4e2d\u4f7f\u7528@Mock\u540e\uff0c\u4f9d\u7136\u4f1a\u4fdd\u7559@Autowired\u65b9\u5f0f\u6765\u6ce8\u4eba\u88ab\u6a21\u62df\u7684\u5bf9\u8c61\uff0c\u4e0d\u8fc7\u4e5f\u4ec5\u6b64\u800c\u5df2\u3002 \u800c\u5728Spring Boot\u7684\u6d4b\u8bd5\u4e2d\uff0c\u8fd8\u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u4e2a\u6ce8\u89e3@MockBean\u3002@MockBean\u5fc5\u987b\u5728SpringBoot\u7684\u6d4b\u8bd5\u4e0a\u4e0b\u6587\u4e2d\u5de5\u4f5c\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5c06@MockBean\u7406\u89e3\u4e3a\u4ee5\u6a21\u62df\u5bf9\u8c61\u7684\u65b9\u5f0f\u5b9a\u4e49\u4e00\u4e2aBean\uff0c\u7136\u540e\u5c06\u6a21\u62df\u5bf9\u8c61\u65e0\u5dee\u522b\u5730\u653e\u5230\u4e86\u5bb9\u5668\u4e2d\u3002\u5b83\u7684\u751f\u547d\u5468\u671f\u4e0e\u666e\u901a\u7684Bean\u7c7b\u4f3c\u3002\u6bd4\u5982\uff0c\u5728\u4f7f\u7528SpringExtension\u7684UserServiceTest\u4e2d\uff0cUserMapper\u662f\u901a\u8fc7\u6ce8\u89e3@InjectMocks \u7684\u65b9\u5f0f\u52a0\u8f7d\u5230UserService\u4e2d\u7684\uff0c\u5728\u8fd9\u4e2a\u573a\u666f\u4e0b\u4e0d\u4f1a\u6709\u989d\u5916\u7684Bean\u88ab\u52a0\u8f7d\u8fdb\u6765\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @ExtendWith(SpringExtension.class) public class UserServiceTest { @InjectMocks private UserService userService; @Mock private UserMapper userMapper; } \u8fd9\u91cc\u5982\u679c\u4f7f\u7528\u4e86@MockBean\u5c31\u53ef\u4ee5\u7701\u7565\u6389@InjectMocks\uff0c\u53ea\u662f\u8fd9\u6837\u4e00\u6765\uff0c\u5c31\u9700\u8981\u4f7f\u7528@Autowired\u6765\u83b7\u53d6UserService\u7684Bean\u4e86\u3002\u8bf7\u6ce8\u610f\u533a\u5206\u8fd9\u4e24\u79cd\u5f62\u5f0f\u7684\u5199\u6cd5\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @SpringBootTest public class UserServiceMockBeanTest { @Autowired private UserService userService; @MockBean // \u6ce8\u610f\uff0c\u8981\u6c42 UserMapper \u6ca1\u6709\u88ab\u5b9a\u4e49\u8fc7\u624d\u80fd\u88ab\u6a21\u62df private UserMapper userMapper; @Test public void should_list_users() { userService.listAll(); Mockito.verify(userMapper).selectAll(); } } \u4f7f\u7528@MockBean\u6ce8\u89e3\u65f6\uff0c\u5185\u90e8\u521b\u5efa\u7684\u4f9d\u7136\u662fMockito\u7684\u6a21\u62df\u5bf9\u8c61\uff0c\u4e0d\u8fc7\u5b83\u662f\u4ee5Bean\u7684\u65b9\u5f0f\u5b58\u5728\u7684\uff0c\u5e76\u4e14\u4f1a\u4ee5\u6b64\u5f62\u5f0f\u521d\u59cb\u5316 ApplicationContext\u4e0a\u4e0b\u6587\u3002@MockBean \u53ef\u7528\u4e8e\u4efb\u4f55\u6d4b\u8bd5\u7c7b\u7684\u5c5e\u6027\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e@Configuration\u4fee\u9970\u7684\u7c7b\u7684\u5c5e\u6027\u4e0a\uff08\u7528\u6765\u51c6\u5907\u6d4b\u8bd5\u914d\u7f6e\uff09\u3002Spring \u63d0\u4f9b\u7684ApplicationContext\u4e0a\u4e0b\u6587\u4f1a\u88ab\u7f13\u5b58\uff0c\u8fd9\u662f\u4e3a\u4e86\u8282\u7701\u6d4b\u8bd5\u7684\u65f6\u95f4\u3002\u4f7f\u7528@MockBean \u521b\u5efa\u7684\u5bf9\u8c61\u4f1a\u81ea\u52a8\u5728\u6d4b\u8bd5\u5b8c\u6210\u540e\u91cd\u7f6e\u3002\u5982\u679c\u662f\u81ea\u5df1\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u8981\u6ce8\u610f\u662f\u5426\u9700\u8981\u6e05\u7406\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\u6539\u53d8\u3002 \u4f7f\u7528@MockBean\u7684\u524d\u63d0\u662f\u5bb9\u5668\u4e2d\u4e0d\u5b58\u5728\u540c\u7c7b\u578b\u7684 Bean\uff0c\u5982\u679c Bean \u5df2\u7ecf\u5b58\u5728\uff0c@MockBean \u5c31\u4f1a\u5931\u6548\u3002\u4e0b\u6587\u4f1a\u4ecb\u7ecd\u5982\u4f55\u6307\u5b9a\u6d4b\u8bd5\u9700\u8981\u7684\u90e8\u5206Bean\uff0c\u800c\u4e0d\u662f\u52a0\u8f7d\u5168\u90e8\u7684Bean\u3002\u5982\u679c\u4e00\u4e2aBean\u5df2\u7ecf\u88ab\u5176\u4ed6\u914d\u7f6e\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528@SpyBean\u5bf9\u8fd9\u4e2aBean\u8fdb\u884c\u5305\u88c5\u548c\u76d1\u89c6\uff0c\u4ece\u800c\u8fbe\u5230\u5b8c\u6210\u6d4b\u8bd5\u7684\u76ee\u7684\u3002 \u4f7f\u7528Spring Testing\u65f6\uff0c\u89e3\u51b3\u4e1a\u52a1\u4ee3\u7801\u4e2d\u7684Bean\u548c\u6d4b\u8bd5\u4e2d\u9700\u8981\u6a21\u62df\u7684Bean\u7684\u51b2\u7a81\u6709\u65f6\u4f1a\u975e\u5e38\u9ebb\u70e6\uff0c\u4f46\u501f\u52a9Spring Boot\u5f3a\u5927\u7684\u914d\u7f6e\u53ef\u4ee5\u6709\u5f88\u591a\u65b9\u6cd5\u7ed5\u8fc7\u8fd9\u4e9b\u95ee\u9898\u3002 \u4f7f\u7528Profile\u673a\u5236\u4e13\u95e8\u4e3a\u6d4b\u8bd5\u542f\u52a8\u4e00\u4e2aProfile\uff0c\u88ab\u6a21\u62df\u7684Bean\u5728\u7279\u5b9a\u7684Profile\u4e0b\u4e0d\u542f\u52a8\uff0c\u907f\u514d\u4e0e\u6a21\u62df\u7684Bean\u53d1\u751f\u51b2\u7a81\u3002 \u4f7f\u7528\u4e0d\u540c\u7684YAML\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\uff0c\u6e90\u4ee3\u7801\u4e2d\u7684YAML\u7528\u4e8e\u6b63\u5e38\u7684\u4e1a\u52a1\uff0c\u5728\u6d4b\u8bd5\u76ee\u5f55\u4e0b\u4f7f\u7528\u4e13\u95e8\u7684YAML\u6587\u4ef6\u6765\u5f00\u542f\u548c\u5173\u95ed\u67d0\u4e9b\u7279\u6027\u3002 \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u4f7f\u7528\u4e86\u4e13\u95e8\u7684\u6587\u4ef6\u6765\u914d\u7f6e\u5185\u5b58\u6570\u636e\u5e93\u3001\u65e5\u5fd7\u7ea7\u522b\u3001\u7aef\u53e3\u7b49\uff0c\u907f\u514d\u6d4b\u8bd5\u65f6\u5f71\u54cd\u6b63\u5e38\u7684\u542f\u52a8\u3002 // application.yml \u4f4d\u4e8e /test/resources \u4e0b server: port: 8080 logging.file: logs/application.log logging: level: org: springframework: web: DEBUG spring: datasource: url: jdbc:h2:mem:unit_testing_db h2: console: enabled: true mybatis: mapper-locations: classpath:mapper/*.xml 5.3.3 Spring Boot \u5207\u7247\u914d\u7f6e \u6b63\u56e0\u4e3a@SpringBootTest\u5e2e\u6211\u4eec\u542f\u52a8\u4e86\u6240\u6709\u9700\u8981\u7684\u914d\u7f6e\uff0c\u56e0\u6b64\u4f7f\u7528\u4e86@SpringBootTest \u5c31\u610f\u5473\u7740\u6211\u4eec\u7684\u6d4b\u8bd5\u53d8\u6210\u4e86\u4e00\u4e2a\u96c6\u6210\u6d4b\u8bd5\uff0c\u8fd9\u4f1a\u62d6\u6162\u6d4b\u8bd5\u901f\u5ea6\u3002\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u9700\u542f\u7528\u3002\u5982\u679c\u9700\u8981\u6d4b\u8bd5 MyBatis Mapper\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528@MybatisTest \u53ea\u52a0\u8f7d\u5fc5\u8981\u7684\u914d\u7f6e\u3002 @SpringBootTest\u9ed8\u8ba4\u4f1a\u542f\u52a8\u6240\u6709\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u4f8b\u5982\uff1a Web\u670d\u52a1\u5668\uff08\u6bd4\u5982 Tomcat\uff0c\u53d6\u51b3\u4e8e\u914d\u7f6e\uff09\u3002 \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u3002 MyBatis\u6216\u8005\u4e0eJPA\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u8fd9\u53d6\u51b3\u4e8e\u76f8\u5e94\u7684\u81ea\u52a8\u5316\u914d\u7f6e\u662f\u5426\u88ab\u5f15\u5165\u3002 \u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u6837\u7684\u914d\u7f6e\u5bf9\u4e8e\u5355\u5143\u6d4b\u8bd5\u6765\u8bf4\u592a\u91cd\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u53ea\u60f3\u8981\u6d4b\u8bd5Controller\uff0c\u5176\u5b9e\u6ca1\u5fc5\u8981\u542f\u52a8Web\u670d\u52a1\u5668\uff08\u4f7f\u7528MockMvc\u5c31\u884c\uff09\uff0c\u6d4b\u8bd5Repository\u6216\u8005Mapper\u4e5f\u53ea\u9700\u8981\u914d\u7f6e\u4e0e\u6570\u636e\u5e93\u76f8\u5173\u7684Bean\u5373\u53ef\u3002 spring-boot-test-autoconfigure\u6a21\u5757\u63d0\u4f9b\u4e86\u5f88\u591a@...Test\u7684\u6ce8\u89e3\u4ee3\u66ff@SpringBootTest\u6765\u63d0\u4f9b\u5c40\u90e8\u7684\u81ea\u52a8\u5316\u914d\u7f6e\u3002@...Test\u4f1a\u542f\u52a8\u5e94\u7528\u4e0a\u4e0b\u6587\uff0c\u5e76\u5f15\u5165\u6709\u9650\u7684@AutoConfigure...\u3002\u8fd9\u4e9b@...Test\u76f8\u5f53\u4e8e\u5e2e\u4f60\u914d\u7f6e\u4e86\u4e00\u4e9bBean\u6765\u771f\u5b9e\u5730\u9a8c\u8bc1\u90e8\u5206\u57fa\u7840\u8bbe\u65bd\u3002\u5b98\u65b9\u4f7f\u7528Testing Slices\u6765\u63cf\u8ff0\u8fd9\u7c7b\u6d4b\u8bd5\uff0c\u5e76\u901a\u8fc7\u5206\u5c42\u5c06\u4ee3\u7801\u8fdb\u884c\u5206\u7247\u52a0\u8f7d\uff0c\u4ee5\u8fbe\u5230\u521a\u597d\u6ee1\u8db3\u6d4b\u8bd5\u9700\u6c42\u7684\u76ee\u7684\u3002 \u4f8b\u5982@WebMvcTest\u5c31\u53ea\u4f1a\u542f\u52a8\u4e0eRequestMapping\u76f8\u5173\u7684Bean\uff0c\u6bd4\u5982@Controller\u3001@ControllerAdvice\u3001@JsonComponent\u3001Converter\u3001GenericConverter\u3001Filter\u3001WebMvcConfigurer\u548cHandlerMethodArgumentResolver\u7b49\u3002 \u4f7f\u7528@WebMvcTest\u5c31\u53ef\u4ee5\u53ea\u6d4b\u8bd5\u5f15\u5165\u7684Controller\uff0c\u800c\u4e0d\u5fc5\u542f\u52a8\u5176\u4ed6\u76f8\u5173\u7684Bean\uff0c\u5e76\u4e14\u4e5f\u80fd\u8ba9Controller\u4e0a\u7684\u90a3\u4e9b\u6ce8\u89e3\u751f\u6548\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @WebMvcTest(UserController.class) public class ApplicationTestOnlyController { @Autowired private MockMvc mvc; @MockBean private UserService userService; @Test public void should_list_users() throws Exception { Instant createAndUpdateInstant = Instant.parse(\"2021-11-07T00:55:32.026Z\"); given(this.userService.listAll()) .willReturn(Lists.newArrayList(new User(1L, \"James\", \"123456\", createAndUpdateInstant, createAndUpdateInstant))); this.mvc.perform(MockMvcRequestBuilders.get(\"/users\") .accept(MediaType.APPLICATION_JSON_VALUE)) .andExpect(status().isOk()).andExpect( content().string(\"[{\\\"id\\\":1,\\\"username\\\":\\\"James\\\",\\\"password\\\":\\\"123456\\\",\\\"createAt\\\":\\\"2021-11-07T00:55:32.026Z\\\",\\\"updateAt\\\":\\\"2021-11-07T00:55:32.026Z\\\"}]\") ); } } \u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u53ea\u662f\u521d\u59cb\u5316\u4e86Spring Boot\u57fa\u672c\u7684\u4e0a\u4e0b\u6587\u548c\u4e0eSpring MVC\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u4ece\u65e5\u5fd7\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0cSpring Boot\u5e76\u6ca1\u6709\u542f\u52a8\u4e0e\u6570\u636e\u5e93\u76f8\u5173\u7684\u8bbe\u65bd\u3002\u8fd9\u91cc\u7684UserService\u6709\u88ab\u6a21\u62df\uff0c\u56e0\u6b64\u80fd\u6b63\u5e38\u5730\u8fd4\u56de\u6570\u636e\uff0c\u88ab\u8be5\u6d4b\u8bd5\u5f71\u54cd\u7684\u6709\u6548\u7684\u4ee3\u7801\u8303\u56f4\u662f\uff1a Spring MVC\u76f8\u5173\u7684\u903b\u8f91\uff08\u65e0Web\u670d\u52a1\u5668\uff09\u3002 Controller \u4e2d\u7684\u6ce8\u89e3\u548c\u903b\u8f91\u3002 \u9664\u6b64\u4e4b\u5916\uff0c@WebMvcTest\u52a0\u8f7d\u7684Bean\u4e5f\u975e\u5e38\u6709\u9650\uff0c\u57fa\u672c\u53ea\u6709UserController\uff0c\u56e0\u6b64\u4ecd\u7136\u53ef\u4ee5\u8ba4\u4e3a\u662fController\u5c42\u7684\u5355\u5143\u6d4b\u8bd5\u3002 \u67e5\u9605@WebMvcTest\u548c@SpringBootTest\u7684\u90e8\u5206\u6e90\u7801\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u4eec\u7684\u4e0d\u540c\u4e4b\u5904\u3002@WebMvcTest\u76f8\u5f53\u4e8e\u57fa\u4e8eSpring\u6240\u8fdb\u884c\u7684\u6d4b\u8bd5\uff0c\u5b83\u7ec4\u5408\u4e86\u5f88\u591a\u81ea\u52a8\u5316\u914d\u7f6e\u7684\u6ce8\u89e3\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a // @WebMvcTest \u7684\u5173\u952e\u6ce8\u89e3 @BootstrapWith(WebMvcTestContextBootstrapper.class) @ExtendWith({SpringExtension.class}) @OverrideAutoConfiguration( enabled = false ) @TypeExcludeFilters({WebMvcTypeExcludeFilter.class}) @AutoConfigureCache @AutoConfigureWebMvc @AutoConfigureMockMvc @ImportAutoConfiguration \u800c@SpringBootTest\u5219\u4f7f\u7528SpringBootTestContextBootstrapper\u6784\u5efa\u4e86\u5b8c\u6574\u7684\u6d4b\u8bd5\u4e0a\u4e0b\u6587\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a // @SpringBootTest \u7684\u5173\u952e\u6ce8\u89e3 @BootstrapWith(SpringBootTestContextBootstrapper.class) @ExtendWith(SpringExtension.class) \u5982\u679c\u6211\u4eec\u53ea\u662f\u60f3\u6d4b\u8bd5\u4e0e\u6846\u67b6\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u6bd4\u5982MyBatis Mapper\u3001Redis\u8fde\u63a5\u3001Spring Data JPA\u7b49\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u76f8\u5e94\u7684\u5c40\u90e8\u6d4b\u8bd5\u6ce8\u89e3\u3002 1. @MybatisTest MyBatis\u4e0d\u5728\u9ed8\u8ba4\u7684\u81ea\u52a8\u914d\u7f6e\u4e2d\uff0c\u5982\u679c\u4f60\u662f\u901a\u8fc7mybatis-spring-boot-autoconfigure\u5305\u81ea\u52a8\u914d\u7f6e\u7684MyBatis\uff0c\u53ef\u4ee5\u5f15\u5165 mybatis-spring-boot-test-autoconfigure\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <dependency> <groupId>org.mybatis.spring.boot</groupId> <artifactId>mybatis-spring-boot-starter-test</artifactId> <version>2.1.0</version> </dependency> \u82e5\u60f3\u5b9e\u73b0\u53ea\u6d4b\u8bd5 Mapper \u7684\u903b\u8f91\uff0c\u53ef\u4ee5\u5728\u4f7f\u7528@MybatisTest \u65f6\u53ea\u521b\u5efa\u4e0e Mapper \u76f8\u5173\u7684Bean\uff0c\u5e76\u542f\u52a8\u5185\u5b58\u6a21\u62df\u6570\u636e\u7684\u5b58\u50a8\uff08\u5982\u679c\u5f15\u5165\u4e86\u5185\u5b58\u6570\u636e\u5e93\u7684Starter\uff09\uff0c\u4ee5\u4fbf\u8fdb\u884c\u65ad\u8a00\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @MybatisTest public class TestForMapper { @Autowired private UserMapper userMapper; @Test void should_save_user() { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); setCreateAt(Instant.now()); setUpdateAt(Instant.now()); }}; userMapper.insert(user); // \u4e0b\u9762\u53ef\u4ee5\u662f\u4e00\u4e9b\u65ad\u8a00 } } 2. @JsonTest \u5728\u670d\u52a1\u5668\u4e0a\u8fdb\u884c\u5f00\u53d1\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u53cd\u590d\u8c03\u8bd5JSON\u7684\u5e8f\u5217\u5316\u3002\u5982\u679c\u6ca1\u6709\u53d6\u5f97\u9884\u671f\u7684\u6548\u679c\uff0c\u53ef\u4ee5\u4e3a\u5176\u7f16\u5199\u5355\u72ec\u7684\u6d4b\u8bd5\uff0c\u6709\u9488\u5bf9\u6027\u5730\u8fdb\u884c\u8c03\u8bd5\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u4f7f\u7528@JsonTest\u52a0\u8f7d\u4e86\u4e0eJSON\u76f8\u5173\u7684\u81ea\u52a8\u5316\u914d\u7f6e\uff0c\u7136\u540e\u68c0\u67e5\u5176\u4e0e\u9884\u671f\u7684\u662f\u5426\u5339\u914d\u3002 @JsonTest public class TestForJson { @Autowired private ObjectMapper objectMapper; @Test void should_serialize_properly() throws JsonProcessingException { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); setCreateAt(Instant.now()); setUpdateAt(Instant.now()); }}; assertEquals(\"{\\\"id\\\":0,\\\"username\\\":\\\"zhangsan\\\",\\\"password\\\":\\\"123456\\\",\\\"createAt\\\":\\\"2021-11-07T02:00:45.126Z\\\",\\\"updateAt\\\":\\\"2021-11-07T02:00:45.126Z\\\"}\", this.objectMapper.writeValueAsString(user)); } } Spring Boot \u5f15\u5165\u4e86AssertJ\u3001JSONAssert\u53caJsonPath\u6765\u5b9e\u73b0\u66f4\u597d\u7684\u65ad\u8a00\uff0c\u5176\u65ad\u8a00\u65b9\u5f0f\u662f\u4f7f\u7528Path\u8def\u5f84\u83b7\u53d6JSON\u4e2d\u7684\u503c\u3002\u4f7f\u7528JacksonTester\u53ef\u4ee5\u83b7\u53d6\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u7684JSON\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u7ed3\u5408Helper\u6765\u7f16\u5199\u65ad\u8a00\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Autowired private JacksonTester<User> userJacksonTester; @Test void should_serialize_properly_with_tester() throws IOException { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); setCreateAt(Instant.now()); setUpdateAt(Instant.now()); }}; assertThat(this.userJacksonTester.write(user)).hasJsonPath(\"@.username\"); assertThat(this.userJacksonTester.write(user)) .extractingJsonPathStringValue(\"@.username\") .isEqualTo(\"zhangsan\"); } \u7531\u4e8e@...Test\u4e0d\u80fd\u7ec4\u5408\u4f7f\u7528\uff0c\u56e0\u6b64\u5982\u679c\u60f3\u8981\u5728@WebMvcTest\u91cc\u914d\u7f6e\u5176\u4ed6\u7684Bean\uff0c\u53ef\u4ee5\u901a\u8fc7@AutoConfigure...\u6ce8\u89e3\u9009\u62e9\u6027\u5730\u5f15\u5165\u81ea\u52a8\u914d\u7f6e\uff0c\u6216\u8005\u81ea\u5df1\u76f4\u63a5\u521b\u5efa\u76f8\u5173\u7684Bean\u3002\u521b\u5efa\u7684\u65b9\u5f0f\u662f\u7f16\u5199\u4e00\u4e2a@Configuration\u4fee\u9970\u7684\u914d\u7f6e\u7c7b\uff0c\u5e76\u653e\u7f6e\u5230Spring Boot\u80fd\u626b\u63cf\u5230\u7684\u5730\u65b9\u3002 5.4 \u5206\u5c42\u6d4b\u8bd5\u548c\u6d4b\u8bd5\u7b56\u7565 \u5728\u4f7f\u7528Spring\u505a\u6d4b\u8bd5\u65f6\uff0c\u6bd4\u8f83\u5934\u75bc\u7684\u662f\u5b83\u7684\u4ee3\u7801\u5206\u5c42\u6240\u9700\u5339\u914d\u7684\u6d4b\u8bd5\u7b56\u7565\u3002SpringBoot\u9879\u76ee\u4e00\u822c\u4f1a\u5206\u4e3aController\u3001Service\u3001Repository\uff08\u6216\u53ebDAO\u3001Mapper\uff09\u8fd9\u4e09\u5c42\u3002\u5728\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u65f6\uff0c\u9700\u8981\u8003\u8651\u5206\u5c42\u9694\u79bb\u6d4b\u8bd5\u3002 \u5982\u679c\u6211\u4eec\u6bcf\u5c42\u90fd\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u4f1a\u51fa\u73b0\u5927\u91cf\u65e0\u610f\u4e49\u7684\u6837\u677f\u4ee3\u7801\uff1b\u5982\u679c\u4e0d\u5206\u5c42\u6d4b\u8bd5\uff0c\u4e3a\u4e86\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\u9700\u8981\u7f16\u5199\u7684\u6d4b\u8bd5\u7528\u4f8b\u7684\u7ec4\u5408\u5c31\u975e\u5e38\u591a\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5145\u5206\u8003\u8651\u5206\u5c42\u6d4b\u8bd5\u7684\u7b56\u7565\u95ee\u9898\u3002\u4e0b\u9762\u8ba8\u8bba\u4e00\u4e0b\u5728Web\u670d\u52a1\u5668\u4e0a\u5f00\u53d1\u65f6\u5e38\u89c1\u7684\u5206\u5c42\u6d4b\u8bd5\u7b56\u7565\u3002 5.4.1 \u6d4b\u8bd5\u7b56\u7565 \u901a\u8fc7\u5bf9\u4e00\u4e9bSpring\u9879\u76ee\u8fdb\u884c\u89c2\u5bdf\uff0c\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u4e9b\u6a21\u5f0f\u53ef\u4ee5\u53c2\u80031.\u4e25\u683c\u7684\u5355\u5143\u6d4b\u8bd5 1. \u4e25\u683c\u7684\u5355\u5143\u6d4b\u8bd5 \u5f88\u591a\u5355\u5143\u6d4b\u8bd5\u7231\u597d\u8005\uff0c\u6216\u8005\u8bf4\u6709\u4ee3\u7801\u6d01\u7656\u7684\u5f00\u53d1\u8005\u5e0c\u671b\u628a\u6bcf\u5c42\u90fd\u62c6\u5f00\u6d4b\u8bd5\u3002\u7f16\u5199\u5404\u81ea\u72ec\u7acb\u7684\u6d4b\u8bd5\u65f6\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u6587\u4ef6\u7684\u4f4d\u7f6e\u9700\u8981\u4e0e\u6e90\u4ee3\u7801\u7684\u4f4d\u7f6e\u4fdd\u6301\u4e25\u683c\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u57fa\u4e8e\u8fd9\u79cd\u89c2\u5ff5\uff0cSpring\u7684\u6d4b\u8bd5\u5e93\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u53ea\u9700\u8981\u4f7f\u7528JUnit\u548cMockito\u3002 \u8fd1\u5e74\u6765\uff0c\u4e25\u683c\u7684\u5206\u5c42\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u8d28\u7591\uff0c\u539f\u56e0\u662fSpring\u6846\u67b6\u901a\u8fc7\u6ce8\u89e3\u5e2e\u6211\u4eec\u5b8c\u6210\u4e86\u5927\u91cf\u7684\u57fa\u7840\u64cd\u4f5c\uff0c\u6bd4\u5982\u6570\u636e\u7684\u6301\u4e45\u5316\u3001\u6570\u636e\u7684\u6821\u9a8c\u7b49\uff0c\u800c\u5bf9\u8fd9\u4e9b\u903b\u8f91\u7684\u9a8c\u8bc1\u5374\u5b8c\u5168\u8d77\u4e0d\u5230\u6d4b\u8bd5\u7684\u4f5c\u7528\u3002 \u4e0d\u8ba9Controller\u4e0a\u7684\u6ce8\u89e3\u53d1\u751f\u4f5c\u7528\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u51e0\u4e4e\u6ca1\u6709\u6d4b\u8bd5\u7684\u5185\u5bb9\u548c\u4ef7\u503c\u3002 2. \u5173\u952e\u5355\u5143\u6d4b\u8bd5\u4e0e API \u6d4b\u8bd5 \u53e6\u4e00\u90e8\u5206\u5f00\u53d1\u8005\u8ba4\u4e3a\u4e0d\u5e94\u8be5\u901a\u8fc7\u7eaf\u7cb9\u7684\u5355\u5143\u6d4b\u8bd5\u6765\u9a8c\u8bc1API\u63a5\u53e3\u548c\u6570\u636e\u5e93\u8bbf\u95ee\uff0c\u5f00\u53d1\u8005\u5e94\u8be5\u53ea\u5173\u6ce8\u4e1a\u52a1\u903b\u8f91\u7684\u6b63\u786e\u6027\uff0c\u4e0e\u6846\u67b6\u76f8\u5173\u7684\u6d4b\u8bd5\u5de5\u4f5c\u901a\u8fc7API\u6d4b\u8bd5\u53ef\u4ee5\u8986\u76d6\u3001\u9a8c\u8bc1\uff0c\u5f00\u53d1\u8005\u53ea\u9700\u8981\u9488\u5bf9Service\u5c42\u7684\u903b\u8f91\u8fdb\u884c\u5145\u5206\u6d4b\u8bd5\u5373\u53ef\uff0c\u4e0e\u6846\u67b6\u3001\u6280\u672f\u8bbe\u65bd\u76f8\u5173\u7684\u6d4b\u8bd5\u5219\u4ea4\u7ed9API\u6d4b\u8bd5\u6765\u5904\u7406\u3002API\u6d4b\u8bd5\u53ef\u4ee5\u7531\u5f00\u53d1\u4eba\u5458\u548c\u6d4b\u8bd5\u4eba\u5458\u5171\u540c\u7ef4\u62a4\uff0c\u6d4b\u8bd5\u4eba\u5458\u4e0d\u5fc5\u5355\u72ec\u7ef4\u62a4\u4e00\u5957API\u6d4b\u8bd5\uff0c\u5f00\u53d1\u4eba\u5458\u4e5f\u4e0d\u5fc5\u5173\u6ce8\u57fa\u7840\u8bbe\u65bd\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u96c6\u6210\u95ee\u9898\u3002 \u57fa\u4e8eWeb\u670d\u52a1\u7aef\u5f00\u53d1\u7684\u6027\u8d28\uff0c\u5f00\u53d1\u4eba\u5458\u5f80\u5f80\u9700\u8981\u4e0eWeb\u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u5927\u91cf\u6253\u4ea4\u9053\uff0c\u4f46\u662f\uff0c\u5982\u679c\u4ec5\u4ec5\u8ba9\u5f00\u53d1\u4eba\u5458\u5173\u5fc3\u5355\u5143\u6d4b\u8bd5\uff0c\u90a3\u4e48\u4ed6\u4eec\u6d4b\u8bd5\u4e0d\u5230Web\u8bf7\u6c42\u53ca\u4e0e\u6570\u636e\u5e93\u76f8\u5173\u7684\u64cd\u4f5c\u3002\u6bd4\u5982\uff0cMyBatis\u7684Mapper\u4e2d\u6709\u5b57\u6bb5\u9519\u8bef\uff0c\u5f00\u53d1\u4eba\u5458\u662f\u65e0\u6cd5\u53ca\u65f6\u53d1\u73b0\u7684\u3002\u6b64\u5916\uff0c\u4e1a\u52a1\u903b\u8f91\u4e0e\u6570\u636e\u7d27\u5bc6\u76f8\u5173\uff0c\u5982\u679c\u7f3a\u4e4f\u6570\u636e\u5e93\u76f8\u5173\u7684\u903b\u8f91\uff0c\u6d4b\u8bd5\u7684\u6027\u4ef7\u6bd4\u4e0d\u9ad8\u3002 3. \u8f7b\u91cf\u7ea7\u96c6\u6210\u6d4b\u8bd5 \u53e6\u5916\u4e00\u79cd\u601d\u8def\u662f\u57fa\u4e8e\u524d\u9762\u4e24\u4e2a\u7b56\u7565\u505a\u51fa\u4e00\u4e9b\u53d6\u820d\uff0c\u628a\u90e8\u5206\u4e0eSpring\u6846\u67b6\u7684\u7ed3\u5408\u70b9\u4e5f\u7b97\u4f5c\u5355\u5143\u6d4b\u8bd5\u7684\u4e00\u90e8\u5206\uff0c\u5373\u770b\u4f5c\u8f7b\u91cf\u7ea7\u7684\u96c6\u6210\u6d4b\u8bd5\u3002 \u5bf9Controller\u5c42\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff0c\u53ef\u4f7f\u7528MockMvc\u6d4b\u8bd5Controller\u76f8\u5173\u903b\u8f91\u662f\u5426\u6b63\u786e\uff0c\u5305\u62ec\u8f93\u51fa\u683c\u5f0f\u3001\u5934\u90e8\u548c\u5f02\u5e38\u7b49\u3002\u4e3a\u4e86\u907f\u514d\u6d4b\u4e0d\u5230\u5927\u91cf\u6ce8\u89e3\uff0c\u4e0d\u8981\u76f4\u63a5\u901a\u8fc7new \u5173\u952e\u5b57\u521b\u5efaController\u5bf9\u8c61\uff0c\u8fd9\u6837\u6d4b\u4e0d\u5230\u5927\u91cf\u7684\u6ce8\u89e3\u3002\u4f7f\u7528MockMvc\u53ef\u4ee5\u505a\u5230\u4e0d\u542f\u52a8\u771f\u6b63\u7684Web\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u6d4b\u8bd5Controller\u4e0a\u7684\u6ce8\u89e3\u3002 \u5bf9Service\u5c42\u548c\u6301\u4e45\u5c42\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff0c\u53ef\u4f7f\u7528@DataJpaTest\u6216@MybatisTest\u81ea\u52a8\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u6570\u636e\u5e93\u5219\u4f7f\u7528H2\u7b49\u5185\u5b58\u6570\u636e\u5e93\u3002\u81f3\u4e8e\u6d4b\u8bd5\u6570\u636e\uff0c\u4e0d\u8981\u76f4\u63a5\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u6570\u636e\uff0c\u5efa\u8bae\u4f7f\u7528\u4e0a\u6e38\u7684\u65b9\u6cd5\u64cd\u4f5c\u6570\u636e\u3002\u6bd4\u5982\u6d4b\u8bd5\u7528\u6237\u5217\u51fa\u7684\u65b9\u6cd5\u65f6\uff0c\u5e94\u8be5\u5148\u786e\u4fdd\u7528\u6237\u6dfb\u52a0\u7684\u65b9\u6cd5\u6ca1\u6709\u95ee\u9898\uff0c\u7136\u540e\u4f7f\u7528\u8be5\u65b9\u6cd5\u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u7528\u6237\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u6d4b\u8bd5\u6210\u672c\u3002\u56fe5-3\u5c55\u793a\u4e86\u8fd9\u79cd\u6d4b\u8bd5\u7b56\u7565\u3002 \u56fe 5-3 \u4e00\u79cd\u5206\u5c42\u6d4b\u8bd5\u7b56\u7565\u7684\u793a\u610f\u56fe \u5982\u679c\u5bf9Service\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6a21\u62df\u57fa\u7840\u8bbe\u65bd\u505a\u7eaf\u7cb9\u7684\u5355\u5143\u6d4b\u8bd5\u5b8c\u5168\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u57fa\u7840\u8bbe\u65bd\u7684\u7279\u6027\u5e76\u6ca1\u6709\u88ab\u7eb3\u5165\u6d4b\u8bd5\u7684\u8303\u56f4\uff0c\u4f1a\u9020\u6210\u6d4b\u8bd5\u6027\u4ef7\u6bd4\u4f4e\u3002\u6743\u8861\u4e4b\u4e0b\uff0c\u5728\u73b0\u5b9e\u9879\u76ee\u4e2d\u5f80\u5f80\u4f1a\u91c7\u53d6\u5c3d\u53ef\u80fd\u5730\u8ba9\u57fa\u7840\u8bbe\u65bd\u901a\u8fc7\u5185\u5d4c\u7684\u65b9\u5f0f\u53c2\u4e0e\u5230\u6d4b\u8bd5\u4e2d\u7684\u65b9\u5f0f\uff0c\u5982\u679c\u5b9e\u5728\u4e0d\u80fd\u901a\u8fc7\u5185\u5d4c\u89e3\u51b3\uff08\u4f8b\u5982\u4e00\u4e9b\u4e91\u57fa\u7840\u8bbe\u65bd\uff09\uff0c\u5219\u901a\u8fc7\u6a21\u62df\u5904\u7406\u3002 \u901a\u8fc7\u4e0a\u9762\u7684\u65b9\u6848\uff0c\u5c31\u4e0d\u9700\u8981\u5b8c\u6574\u5730\u542f\u52a8Spring Boot\u7684\u4e0a\u4e0b\u6587\u4e86\uff0c\u88c5\u8f7d\u5bf9\u5e94\u7684Bean\u5373\u53ef\u3002\u6bd4\u5982\u5bf9UserService\u8fdb\u884c\u6d4b\u8bd5\uff0c\u53ea\u9700\u8981\u52a0\u8f7dUserService\u7684Bean\u4ee5\u53caMapper\u5c42\uff0c\u914d\u5408\u5185\u5b58\u6570\u636e\u5e93\u5373\u53ef\u5b8c\u6210\u6d4b\u8bd5\u3002 4. \u5355\u5143\u6d4b\u8bd5\u4e0e\u96c6\u6210\u6d4b\u8bd5\u76f8\u7ed3\u5408 \u5982\u679c\u5e0c\u671b\u6d4b\u8bd5\u4ee3\u7801\u7684\u6709\u6548\u6027\u548c\u53ef\u9760\u6027\u975e\u5e38\u9ad8\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u5143\u6d4b\u8bd5\u4e0e\u96c6\u6210\u6d4b\u8bd5\u76f8\u7ed3\u5408\u7684\u7b56\u7565\u3002\u8fd9\u79cd\u7b56\u7565\u80fd\u517c\u987e\u6d4b\u8bd5\u8d28\u91cf\u548c\u6548\u7387\uff0c\u5bf9\u8d28\u91cf\u4fdd\u969c\u5f88\u6709\u5e2e\u52a9\uff0c\u5f53\u7136\uff0c\u80fd\u505a\u5230\u7684\u56e2\u961f\u4e5f\u6bd4\u8f83\u5c11\u3002\u7b56\u7565\u5185\u5bb9\u5982\u4e0b\uff1a \u5bf9Controller\u8fdb\u884cMockMvc\u6d4b\u8bd5\u3002 \u5bf9Service\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u6821\u9a8c\u6240\u6709\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u6a21\u62df\u57fa\u7840\u8bbe\u65bd\u3002 \u4f7f\u7528\u5185\u5d4c\u7684\u57fa\u7840\u8bbe\u65bd\u5feb\u901f\u9a8c\u8bc1Mapper\u6216\u8005Repository\u4e2d\u4e0e\u6570\u636e\u5e93\u76f8\u5173\u7684\u903b\u8f91\u3002 \u989d\u5916\u7684\u4ee3\u7801\u53ef\u7531QA\u7f16\u5199\u72ec\u7acb\u7684API\u6d4b\u8bd5\uff0c\u4ece\u800c\u6784\u5efa\u5b8c\u6574\u7684\u4ee3\u7801\u4fdd\u62a4\u7f51\u3002 5.4.2 Controller \u7684\u6d4b\u8bd5 \u5982\u679c\u6211\u4eec\u53ea\u5173\u6ce8Controller\u7684\u6d4b\u8bd5\uff0cMockMvc\u662f\u975e\u5e38\u597d\u7684\u9009\u62e9\u3002\u5728\u4e4b\u524d\u4ecb\u7ecd\u5207\u7247\u6d4b\u8bd5\u65f6\u4f7f\u7528\u4e00\u4e2a\u793a\u4f8b\u8bf4\u660e\u4e86MockMvc\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u4e0b\u9762\u6765\u8be6\u7ec6\u8bf4\u4e00\u4e0b MockMve\u7684\u6267\u884c\u539f\u7406\u3002 @WebMvcTest\u542f\u52a8\u76f8\u5e94\u7684Bean\u5e76\u628aUserController\u52a0\u5165\u6a21\u62df\u7684RequestMapping\u4e2d\u3002 \u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2dMockMvc\u4e0d\u4f1a\u53d1\u8d77\u771f\u5b9e\u7684HTTP\u8bf7\u6c42\uff0c\u56e0\u6b64\u9700\u8981\u6ce8\u5165\u4e00\u4e2aMockMvc\u5bf9\u8c61\u6765\u6784\u9020\u8bf7\u6c42\u3002 \u6211\u4eec\u77e5\u9053\uff0c@WebMvcTest\u4e0d\u4f1a\u542f\u52a8\u6574\u4e2a\u5e94\u7528\u7684\u4e0a\u4e0b\u6587\uff0cUserController\u4f9d\u8d56\u7684Service \u6ca1\u6709\u521d\u59cb\u5316\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528@MockBean\u6765\u6a21\u62df\uff0c\u5426\u5219\u4f1a\u62a5\u627e\u4e0d\u5230Bean\u7684\u9519\u8bef\u3002\u901a\u8fc7@MockBean\u5f97\u5230\u6a21\u62df\u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u7528Mockito \u5185\u90e8\u7684given\u7b49\u9759\u6001\u65b9\u6cd5\u8fdb\u884c\u64cd\u4f5c\uff0c\u5b9a\u4e49\u8fd4\u56de\u503c\u7b49\u3002\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528MockMvc\u7684\u5b9e\u4f8b\u6784\u5efa\u8bf7\u6c42\u3001\u53d1\u9001\u8bf7\u6c42\u5e76\u9a8c\u8bc1\u8fd4\u56de\u503c\u3002 \u6b64\u5904\u4f7f\u7528\u7684\u662f@WebMvcTest\uff08MockMvc\uff09\u800c\u975e@SpringBootTest\uff0c\u5b83\u4eec\u975e\u5e38\u5bb9\u6613\u88ab\u5f04\u6df7\u3002\u56fe5-4\u5c55\u793a\u4e86\u8fd9\u4e24\u79cd\u6d4b\u8bd5\u7684\u5dee\u5f02\u3002 \u56fe 5-4 MockMVC \u548c SpringBootTest \u7684\u533a\u522b \u6ce8\uff1a\u56fe\u7247\u6765\u6e90\u4e8e https://docs.spring.io/\u3002 \u4ece\u56fe5-4\u53ef\u4ee5\u770b\u51fa\uff0cMockMvc\u7684\u6d4b\u8bd5\u66f4\u52a0\u8f7b\u91cf\u7ea7\u548c\u7b80\u5355\uff0c\u4f46\u662f\u5fc5\u8981\u65f6\u9700\u8981\u624b\u52a8\u6a21\u62df\u6216\u8005\u914d\u7f6e\u4e00\u4e9b\u4f9d\u8d56\u7684 Bean\u3002MockMvc\u6a21\u62df\u7684\u662fWeb\u670d\u52a1\u5668\u548cHTTP\u534f\u8bae\u8bf7\u6c42\uff0c\u4ee5\u53ca\u63a5\u6536\u3001\u89e3\u6790\u4e00\u7cfb\u5217\u5173\u4e8e\u7f51\u7edc\u7684\u903b\u8f91\uff0c\u6bd5\u7adf\u8fd9\u90e8\u5206\u662fWeb\u670d\u52a1\u5668\u5e94\u8be5\u5145\u5206\u6d4b\u8bd5\u7684\u3002 \u5728\u4e0b\u9762\u7684\u6d4b\u8bd5\u793a\u4f8b\u4e2d\uff0cshould_list_users\u4e2d\u4e3b\u8981\u6d89\u53ca\u4e24\u90e8\u5206\u5185\u5bb9\uff0c\u4e00\u90e8\u5206\u662f\u5bf9\u6a21\u62df\u7684\u5bf9\u8c61\u7ed9\u4e88\u8fd4\u56de\u503c\uff0c\u53e6\u5916\u4e00\u90e8\u5206\u5c31\u662f\u53d1\u51fa\u8bf7\u6c42\u548c\u9a8c\u8bc1\u8bf7\u6c42\u3002 @Test public void should_list_users() throws Exception { // \u6a21\u62df UserService given(userService.listAll()).willReturn( Arrays.asList(new User() {{ setId(01L); setUsername(\"Test user\"); setPassword(\"123456\"); setCreateAt(Instant.now()); setUpdateAt(Instant.now()); }}) ); // \u8fdb\u884c\u6d4b\u8bd5\u8c03\u7528\u548c\u65ad\u8a00 this.mvc.perform(get(\"/users\").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()); } this.mvc.perform \u8fd9\u4e2a\u94fe\u5f0f\u8c03\u7528\u8bed\u53e5\u7684\u5de5\u4f5c\u8303\u56f4\u5305\u62ec\uff08\u7ed5\u8fc7Web\u670d\u52a1\u5668\u540e\u7684\u4ee3\u7801\u6267\u884c\u8fc7\u7a0b\uff09\uff1a MockMvc \u6784\u9020\u4e00\u4e9b\u5047\u7684HTTP\u8bf7\u6c42\u5bf9\u8c61\u3002 TestDispatcherServlet \u54cd\u5e94\u6d4b\u8bd5\u7684 Servlet\u3002 RequestMappingHandlerAdapter\u6839\u636e\u8bf7\u6c42\u7684\u8def\u5f84\u5339\u914d\u5408\u9002\u7684Controller\u3002 \u8fdb\u884c\u6d4b\u8bd5\u8c03\u7528\u548c\u65ad\u8a00\u7684\u8fd9\u90e8\u5206\u94fe\u5f0f\u8c03\u7528\u4e0d\u6613\u7406\u89e3\uff0c\u73b0\u5728\u62c6\u89e3\u5f00\u6765\u770b\u4e00\u4e0b\u6574\u4e2a\u8fc7\u7a0b\uff0c\u91cc\u9762\u5b9e\u9645\u4e0a\u6709\u5f88\u591a\u6b65\u9aa4\u3002 // 1. \u6784\u5efa\u4e00\u4e2a\u6a21\u62df\u8bf7\u6c42\uff0cget \u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u8bf7\u6c42\u7684\u8def\u5f84\uff0c\u5e76\u8bbe\u7f6e accept \u5934\u90e8\u503c\u4e3a application-json MockHttpServletRequestBuilder builder = MockMvcRequestBuilders .get(\"/users\") .accept(MediaType.APPLICATION_JSON); // 2. \u6267\u884c\u8fd9\u4e2a\u8bf7\u6c42\uff0c\u751f\u6210\u4e00\u4e2a ResultAction ResultActions perform = this.mvc.perform(builder); // 3. \u5b9a\u4e49\u4e00\u4e2a\u5339\u914d\u5668 ResultMatcher okMatcher = MockMvcResultMatchers.status().isOk(); // 4. \u6267\u884c\u8fd9\u4e2a\u5339\u914d\u5668\u8fdb\u884c\u65ad\u8a00 perform.andExpect(okMatcher); MockHttpServletRequestBuilder\u53ef\u4ee5\u521b\u5efa\u51faGET\u3001POST\u3001PUT\u3001DELETE\u7b49HTP\u8bf7\u6c42\uff0c\u5982\u679c\u9700\u8981\u5728URL\u4e0a\u5e26\u53c2\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u91cd\u8f7d\u65b9\u6cd5get\uff08String urITemplate\uff0cObject...uriVars\uff09\u3002\u8981\u4f7f\u7528POST\u53ef\u4ee5\u901a\u8fc7content\u65b9\u6cd5\u8bbe\u7f6e\u8bf7\u6c42\u7684\u5185\u5bb9\u53c2\u6570\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7multipart\u65b9\u6cd5\u8bbe\u7f6e\u6587\u4ef6\u53c2\u6570\uff0c\u7528\u4e8e\u6d4b\u8bd5\u6587\u4ef6\u4e0a\u4f20\u529f\u80fd\u3002 \u6267\u884c\u6784\u9020\u51fa\u6765\u7684\u8bf7\u6c42\uff0c\u83b7\u5f97\u4e00\u4e2aResultActions\u5e76\u7528\u4e8e\u540e\u9762\u7684\u65ad\u8a00\uff0c\u4ee5\u786e\u8ba4\u6d4b\u8bd5\u7ed3\u679c\u3002\u6267\u884c\u5b8c\u6210\u540e\uff0c\u65ad\u8a00\u524d\u4f7f\u7528ResultMatcher\u6784\u9020\u4e00\u4e2a\u5339\u914d\u5668\u3002\u5b83\u9664\u4e86\u5339\u914d\u72b6\u6001\u5916\uff0c\u8fd8\u53ef\u4ee5\u5339\u914d\u8fd4\u56de\u5934\u6d88\u606f\u3001\u6d88\u606f\u4f53\u7b49\u3002\u5982\u679c\u8fd4\u56de\u7684\u662fJSON\u76f8\u5173\u5185\u5bb9\uff0c\u5219\u8fd8\u53ef\u4ee5\u4f7f\u7528JsonPath\u6765\u65ad\u8a00JSON\u6570\u636e\u7ed3\u6784\u3002 \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5fc5\u8981\u65f6\u53ef\u5728\u591a\u6b21\u8bf7\u6c42\u4e4b\u95f4\u901a\u8fc7Cookies\u65b9\u5f0f\u4f20\u9012\u8ba4\u8bc1\u4fe1\u606f\u3002 5.4.3 \u5185\u5d4c\u57fa\u7840\u8bbe\u65bd \u5e38\u89c1\u7684\u53ef\u4ee5\u88ab\u5185\u5d4c\u5904\u7406\u7684\u57fa\u7840\u8bbe\u65bd\u6709\u6570\u636e\u5e93\u3001Redis\u3001MongoDB\u7b49\u3002\u4e00\u822c\u8fd9\u4e9b\u5185\u5d4c\u7684\u5e93\u53c8\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a \u4f7f\u7528Java\u5f00\u53d1\uff0c\u901a\u8fc7Jar\u5305\u5f15\u4eba\uff0c\u4e0eJava\u7684\u5f00\u53d1\u4f53\u7cfb\u878d\u5408\u826f\u597d\u3002 \u4f7f\u7528C\u6216\u8005\u5176\u4ed6\u8bed\u8a00\u5f00\u53d1\uff0c\u901a\u8fc7\u68c0\u6d4b\u8fd0\u884c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6765\u8fd0\u884c\u76f8\u5e94\u7684\u539f\u751f\u53d1\u5e03\u7248\u3002 \u4f8b\u5982\uff0c\u5185\u5d4cRedis\u662f\u901a\u8fc7\u4e0b\u8f7d\u5bf9\u5e94\u7684Redis\u53d1\u5e03\u7248\uff0c\u7136\u540e\u901a\u8fc7Java\u7684ProcessBuilder API \u5b9e\u73b0\u7684\u3002 1. \u5185\u5b58\u6570\u636e\u5e93 \u53ef\u4ee5\u9009\u62e9\u7684\u5185\u5b58\u6570\u636e\u5e93\u6709HSQL\u3001H2\uff0cH2\u76f8\u5bf9\u4e8eHSQL\u6765\u8bf4\u529f\u80fd\u66f4\u4e3a\u5b8c\u6574\uff0c\u4f46\u662f\u7a0d\u6162\u3002Spring Boot\u5bf9H2\u7684\u652f\u6301\u4e5f\u6bd4\u8f83\u597d\uff0c\u76f8\u5173\u7684\u81ea\u52a8\u914d\u7f6e\u5df2\u7ecf\u88ab\u7eb3\u5165\u7248\u672c\u7ba1\u7406\u5668\u4e2d\u3002 \u4ee5H2\u4e3a\u4f8b\uff0c\u5982\u679c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u4f7f\u7528H2\uff0c\u5148\u5728Pom\u6587\u4ef6\u4e2d\u52a0\u5165\u76f8\u5173\u4f9d\u8d56\uff0c\u5e76\u5728\u6d4b\u8bd5\u7684\u8d44\u6e90\u76ee\u5f55\u4e0b\u589e\u52a0\u76f8\u5173\u914d\u7f6e\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> <scope>test</scope> </dependency> \u7136\u540e\u8bbe\u7f6e\u6570\u636e\u6e90\u8fde\u63a5\u4e32\uff0c\u5e76\u5f00\u542fH2\u63a7\u5236\u53f0\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a spring: datasource: url: jdbc:h2:mem:unit_testing_db h2: console: enabled: true H2\u9ed8\u8ba4\u63a7\u5236\u53f0\u7684\u8bbf\u95ee\u8def\u5f84\u662f\uff08h2-console\uff0c\u53ef\u4ee5\u901a\u8fc7spring.h2.console.path\u5c5e\u6027\u4fee\u6539\u8def\u5f84\u3002\u5b9e\u9645\u4e0a\u6d4b\u8bd5\u524d\u548c\u6d4b\u8bd5\u540e\u63a7\u5236\u53f0\u4e0a\u90fd\u4e0d\u4f1a\u6709\u6570\u636e\uff0c\u53ef\u4ee5\u901a\u8fc7\u65ad\u70b9\u4e2d\u65ad\u6d4b\u8bd5\uff0c\u5e76\u8bbf\u95eeH2\u63a7\u5236\u53f0\u8def\u5f84\u3002 \u5982\u679c\u4f7f\u7528\u4e86Flyway\u7b49\u6570\u636e\u8fc1\u79fb\u5de5\u5177\uff0c\u90a3\u4e48\u5728\u6d4b\u8bd5\u542f\u52a8\u65f6\u5b83\u4e5f\u4f1a\u751f\u6548\uff0c\u4f46\u7531\u4e8e\u6570\u636e\u5e93\u5728\u5185\u5b58\u4e2d\uff0c\u91cd\u542f\u4f1a\u4e22\u5931\u6570\u636e\uff0c\u56e0\u6b64\u4e0d\u4f1a\u91cd\u590d\u6267\u884c\u8fc1\u79fb\u4efb\u52a1\u3002 H2\u4e5f\u652f\u6301\u5c06\u6570\u636e\u843d\u76d8\uff0c\u4f7f\u7528\u7684\u65b9\u5f0f\u662f\u4fee\u6539\u8fde\u63a5\u5b57\u7b26\u4e32\uff0c\u5373\u5c06\u8fde\u63a5\u5b57\u7b26\u4e32\u4e2d\u7684mem\u4fee\u6539\u6210\u6307\u5b9a\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a spring: datasource: url: jdbc:h2:file:/data/h2:unit_testing_db 2. \u5185\u5d4c Redis \u5982\u679c\u4e1a\u52a1\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86Redis\uff0c\u4e14Redis\u7684\u5ba2\u6237\u7aef\u662f\u6a21\u62df\u7684\uff0c\u90a3\u4e48\u6d4b\u8bd5\u4e0d\u5230\u4e0eRedis\u76f8\u5173\u7684\u7279\u6027\uff0c\u6d4b\u8bd5\u6027\u4ef7\u6bd4\u964d\u4f4e\u3002\u5bf9\u6b64\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5185\u5d4c Redis\u7684\u65b9\u5f0f\u6765\u5145\u5206\u6d4b\u8bd5\u4e0eRedis\u76f8\u5173\u7684\u903b\u8f91\uff0c\u6d4b\u8bd5\u6548\u7387\u4f1a\u5927\u5927\u63d0\u9ad8\u3002 \u76ee\u524dSpring Boot\u6ca1\u6709\u652f\u6301\u5185\u5d4cRedis\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u56e0\u6b64\u9700\u8981\u624b\u52a8\u914d\u7f6e\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <dependency> <groupId>redis.embedded</groupId> <artifactId>embedded-redis</artifactId> <version>0.5</version> </dependency> \u53ef\u4ee5\u901a\u8fc7\u5728\u6d4b\u8bd5\u57fa\u7c7b\u4e2d\u7f16\u5199 setup \u548c teardown \u65b9\u6cd5\u6765\u8bbe\u7f6e\u5185\u5d4c Redis\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class SpringBaseTest { private RedisServer redisServer; @BeforeClass public void setup() throws Exception { redisServer = new RedisServer(6379); redisServer.start(); } @AfterClass public void teardown() throws Exception { redisServer.stop(); } } 3. \u5185\u5d4c MongoDB Spring Boot\u9ed8\u8ba4\u652f\u6301\u4e86\u5185\u5d4cMongoDB\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\u3002\u53ea\u9700\u8981\u589e\u52a0\u4f9d\u8d56\uff0c\u6dfb\u52a0\u4fee\u6539YAML\u914d\u7f6e\u5373\u53ef\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <dependency> <groupId>de.flapdoodle.embed</groupId> <artifactId>de.flapdoodle.embed.mongo</artifactId> <version>2.2.1-SNAPSHOT</version> </dependency> Spring Boot\u901a\u8fc7 MongoAutoConfiguration\u7c7b\u521d\u59cb\u5316\u4e86\u5185\u5d4c\u7684 MongoDB \u4ee5\u53ca MongoClient \u7684\u914d\u7f6e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u968f\u673a\u7aef\u53e3\uff0c\u5e76\u5bf9\u5f00\u53d1\u4eba\u5458\u900f\u660e\u3002\u5982\u679c\u5e0c\u671b\u4fee\u6539\u7aef\u53e3\uff0c\u53ef\u4ee5\u5728\u6d4b\u8bd5\u76ee\u5f55\u4e0b\u7684YAML\u6587\u4ef6\u4e2d\u4fee\u6539\u5c5e\u6027spring.data.mongodb.port\u3002 5.5 \u5e38\u7528\u7684\u6d4b\u8bd5\u5de5\u5177\u96c6 spring-boot-test-starter\u96c6\u6210\u4e86spring-boot-test\u3001spring-test\u3001Mockito\u3001JsonPath\u7b49\u5e93\uff0c\u63d0\u4f9b\u4e86\u4e0d\u5c11\u5bf9\u6d4b\u8bd5\u975e\u5e38\u6709\u5e2e\u52a9\u7684\u5de5\u5177\u96c6\u3002\u7531\u4e8e\u9605\u8bfb\u5b8c\u6240\u6709\u7684\u6587\u6863\u8f83\u4e3a\u8d39\u65f6\uff0c\u4e14\u90e8\u5206\u6280\u5de7\u9700\u8981\u6df1\u5165\u63a2\u67e5\u6e90\u7801\u624d\u80fd\u627e\u5230\uff0c\u56e0\u6b64\u8fd9\u91cc\u6574\u7406\u4e86\u90e8\u5206\u5de5\u5177\u96c6\u76f8\u5173\u77e5\u8bc6\u4f9b\u53c2\u8003\u3002 5.5.1 spring-test \u63d0\u4f9b\u7684\u5de5\u5177\u96c6 spring-test \u63d0\u4f9b\u4e86\u6570\u636e\u5e93\u7edf\u8ba1\u5de5\u5177\u548c\u6d4b\u8bd5\u53cd\u5c04\u5de5\u5177\u3002 1. JdbcTestUtils JdbcTestUtils\u662fSpring Test\u5e93\u4e2d\u975e\u5e38\u5b9e\u7528\u7684\u5de5\u5177\uff0c\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u7528\u4e8e\u64cd\u4f5c\u3001\u7edf\u8ba1\u8868\u4e2d\u7684\u6570\u636e\u3002\u4f7f\u7528JdbcTestUtils \u65f6\uff0c\u9700\u8981\u4f20\u5165\u4e00\u4e2aJdbcTemplate\u4f5c\u4e3a\u5b9e\u9645\u64cd\u4f5c\u6570\u636e\u5e93\u7684\u6e20\u9053\u3002 \u5b83\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u65b9\u6cd5\uff1a countRowslnTable\u3001countRowslnTableWhere\uff1a\u7528\u4e8e\u7edf\u8ba1\uff08\u6216\u5e26\u6761\u4ef6\uff09\u7ed9\u5b9a\u6570\u636e\u5e93\u8868\u7684\u884c\u6570\u3002 deleteFromTables\u3001deleteFromTableWhere\uff1a\u7528\u4e8e\u6e05\u9664\uff08\u6216\u5e26\u6761\u4ef6\uff09\u7ed9\u5b9a\u8868\u4e2d\u7684\u6570\u636e\u3002 dropTables\uff1a\u7528\u4e8e\u5220\u9664\u7ed9\u5b9a\u8868\u3002 2. ReflectionTestUtils \u5728\u6d4b\u8bd5\u4e2d\u4e0d\u53ef\u907f\u514d\u5730\u8981\u5bf9\u79c1\u6709\u5c5e\u6027\u3001\u65b9\u6cd5\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u7528PowerMock\u7b49\u5de5\u5177\u6765\u5b8c\u6210\uff0c\u4f46\u662f\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u6ca1\u6709\u5fc5\u8981\u5f15\u5165\u8fd9\u4e48\u591a\u5e93\u3002\u5176\u5b9eSpring Test \u5e93\u4e5f\u4e19\u7f6e\u4e86\u4e00\u4e2a\u5de5\u5177\uff0c\u53ef\u901a\u8fc7\u53cd\u5c04\u7b80\u5316\u6b64\u7c7b\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u7ed9\u79c1\u6709\u5c5e\u6027\u8bbe\u7f6e\u65b0\u7684\u503c\uff1a User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); }}; ReflectionTestUtils.setField(user, \"username\", \"wang\"); assertThat(user.getUsername(), equalTo(\"wang\")); \u8bbf\u95ee\u79c1\u6709\u5c5e\u6027\uff1a assertThat(ReflectionTestUtils.getField(user, \"username\"), equalTo(\"wang\")); \u8c03\u7528\u79c1\u6709\u65b9\u6cd5\uff1a // user \u5bf9\u8c61\u4e2d\u6709\u4e00\u4e2a testPrivateMethod \u79c1\u6709\u65b9\u6cd5 assertThat( ReflectionTestUtils.invokeMethod(user, \"testPrivateMethod\"), equalTo(\"this is private method\") ); \u5728\u65b9\u4fbf\u7684\u65f6\u5019\uff0cReflectionTestUtils\u4e5f\u53ef\u4ee5\u4fee\u6539@Autowired\u4fee\u9970\u7684\u79c1\u6709\u65b9\u6cd5\uff0c\u5feb\u901f\u641e\u5b9a\u4f9d\u8d56\u6ce8\u5165\uff0c\u5e76\u4e14\u53ef\u7528\u4e8e@Value\u6ce8\u89e3\u4fee\u9970\u7684\u65b9\u6cd5\u3002 5.5.2 spring-boot-test \u63d0\u4f9b\u7684\u5de5\u5177\u96c6 spring-boot-test \u4e3b\u8981\u662f\u63d0\u4f9b\u4e86\u4e0e\u81ea\u52a8\u914d\u7f6e\u76f8\u5173\u7684\u5de5\u5177\u3002 1. TestPropertyValues \u4e00\u822c\u6765\u8bf4\u5f88\u591a\u88ab@Value\u6ce8\u89e3\u4fee\u9970\u7684\u5c5e\u6027\u90fd\u662f\u79c1\u6709\u7684\uff0c\u8fd9\u4f1a\u7ed9\u6d4b\u8bd5\u9020\u6210\u56f0\u96be\u3002Spring Boot \u63d0\u4f9b\u4e86TestProperty Values \u5de5\u5177\u7c7b\u6765\u6ce8\u5165\u914d\u7f6e\u5c5e\u6027\u3002\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u9700\u8981\u914d\u5408@ContextCon-figuration\u6765\u4f7f\u7528\uff0c\u5728\u6d4b\u8bd5\u521d\u59cb\u5316\u7684\u65f6\u5019\u901a\u8fc7TestProperty Values \u63d2\u5165\u9700\u8981\u7684\u5c5e\u6027\u3002 @SpringBootTest @ContextConfiguration(initializers = PropertyTest.MyPropertyInitializer.class) public class PropertyTest { @Autowired private ApplicationContext context; @Value(\"${testProperty}\") private String testProperty; @Test public void test() { assertThat(testProperty).isEqualTo(\"foo\"); assertThat(this.context.getEnvironment().getProperty(\"testProperty\")).isEqualTo(\"foo\"); } static class MyPropertyInitializer implements ApplicationContextInitializer<ConfigurableApplicationContext> { @Override public void initialize(ConfigurableApplicationContext applicationContext) { TestPropertyValues.of(\"testProperty=foo\").applyTo(applicationContext); } } } \u8fd9\u4e2a\u5de5\u5177\u6211\u4eec\u65e5\u5e38\u7528\u5f97\u4e0d\u591a\uff0c\u5728\u52a8\u6001\u63d2\u5165\u5c5e\u6027\u65f6\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u3002\u5982\u679c\u662f\u9759\u6001\u63d2\u5165\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528@SpringBootTest\u6ce8\u89e3\u7684value\u3001properties\u3001args\u53c2\u6570\u3002 2. OutputCapture Spring Boot\u63d0\u4f9b\u4e86OutputCaptureExtension\u6765\u6355\u83b7\u63a7\u5236\u53f0\u4fe1\u606f\uff0c\u5982\u679c\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86System.out \u6216\u8005System.err\u8f93\u51fa\u4fe1\u606f\u5230\u63a7\u5236\u53f0\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u6b64\u5de5\u5177\u6765\u6355\u83b7\u63a7\u5236\u53f0\u4fe1\u606f\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @ExtendWith(OutputCaptureExtension.class) public class OutputCaptureTest { @Test public void test_capture(CapturedOutput output) throws Exception { System.out.println(\"Hello world!\"); assertThat(output).contains(\"world\"); } } 3. TestRestTemplate TestRestTemplate\u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u6d4b\u8bd5\u7684RestTemplate\uff0c\u4e3b\u8981\u7684\u529f\u80fd\u662f\u9047\u5230400\u3001500\u8fd4\u56de\u7684\u65f6\u5019\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u662f\u5c06\u5f02\u5e38\u4fe1\u606f\u653e\u5230\u8fd4\u56de\u7684ResponseEntity\u5bf9\u8c61\u4e2d\uff0c\u4ee5\u4fbf\u8fdb\u884c\u65ad\u8a00\u548c\u505a\u8fdb\u4e00\u6b65\u5904\u7406\u3002 \u5b83\u9ed8\u8ba4\u4f7f\u7528Apache HTTP Client\u4f5c\u4e3aHTTP\u5ba2\u6237\u7aef\uff0c\u4f46\u4e0d\u662f\u5f3a\u5236\u6027\u7684\u3002\u5982\u679c\u4f7f\u7528\u7684\u662fApache HTTP Client\u5ba2\u6237\u7aef\uff0c\u5219\u8fd8\u6709\u4e24\u4e2a\u989d\u5916\u7684\u7279\u6027\uff1a \u4e0d\u4f1a\u81ea\u52a8\u53d1\u751f\u8df3\u8f6c\uff0c\u4f8b\u5982302\u54cd\u5e94\u4e00\u822c\u4f1a\u5728\u8fd4\u56de\u7684\u5934\u90e8\u4e2d\u52a0\u5165location\u5c5e\u6027\uff0c\u8868\u660e\u671f\u671b\u7684\u4e0b\u4e00\u8df3\uff0c\u53ef\u4ee5\u4f7f\u7528TestRestTemplate\u6765\u65ad\u8a00\u3002 Cookies\u4f1a\u88ab\u5ffd\u7565\uff0c\u5e76\u4e14\u4f1a\u88ab\u5f53\u4f5c\u65e0\u72b6\u6001\u7684HTTP\u5ba2\u6237\u7aef\u3002 5.6 \u5c0f\u7ed3 \u4f7f\u7528Spring Boot\u4f1a\u5927\u5927\u7b80\u5316\u6d4b\u8bd5\u73af\u5883\u7684\u642d\u5efa\uff0c\u8fd9\u90fd\u5f52\u529f\u4e8espring-boot-test\uff1aspring-boot-autoconfigure\u3001spring-test\u8fd9\u4e09\u4e2a\u5305\u3002\u4e00\u4e9b\u6a21\u62df\u6ce8\u89e3\u548c\u5de5\u5177\u7531 Spring Test\u548cMockito \u5171\u540c\u63d0\u4f9b\u3002 \u6b63\u56e0\u5982\u6b64\uff0cSpring Boot\u73af\u5883\u4e2d\u7684\u5404\u79cd\u6d4b\u8bd5\u5de5\u5177\u53d8\u5f97\u96be\u4ee5\u7406\u89e3\u3002\u6211\u4eec\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u6ce8\u610f\u76f8\u5173\u7684\u7279\u6027\u90fd\u662f\u7531\u54ea\u4e00\u4e2a\u5177\u4f53\u7684\u7ec4\u4ef6\u63d0\u4f9b\u7684\uff0c\u8fd9\u6837\u6392\u67e5\u95ee\u9898\u65f6\u4f1a\u9ad8\u6548\u5f88\u591a\u3002 \u5728Java\u5f00\u53d1\u4e2d\uff0c\u7eaf\u7cb9\u7684\u5355\u5143\u6d4b\u8bd5\u5f80\u5f80\u66f4\u9002\u5408\u516c\u5171\u5e93\u3001\u6846\u67b6\u7c7b\u7684\u4ee3\u7801\u3002\u4f46\u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u4e0d\u5f97\u4e0d\u548c\u5f88\u591a\u57fa\u7840\u8bbe\u65bd\u6253\u4ea4\u9053\uff0c\u56e0\u6b64\u5355\u5143\u6d4b\u8bd5\u9700\u8981\u6a21\u62df\u5927\u91cf\u7684\u7c7b\u548c\u7ec4\u4ef6\uff0c\u5de5\u4f5c\u91cf\u53d8\u5927\u5374\u6536\u76ca\u751a\u5fae\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u8003\u8651\u901a\u8fc7\u5185\u5d4c\u57fa\u7840\u8bbe\u65bd\u7684\u65b9\u5f0f\u5c40\u90e8\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\uff0c\u4ece\u800c\u6709\u6548\u51cf\u5c11\u6d4b\u8bd5\u4ee3\u7801\uff0c\u8282\u7701\u5927\u91cf\u7684\u7f16\u7a0b\u65f6\u95f4\u3002","title":"\u7b2c 5 \u7ae0 Spring \u5e94\u7528\u7684\u6d4b\u8bd5"},{"location":"05-testing-with-spring/#5-spring","text":"\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3Spring\u76f8\u5173\u7684\u6d4b\u8bd5\u5185\u5bb9\uff0c\u8fd9\u91cc\u5ef6\u7eed\u524d\u9762\u8d2d\u4e70\u706f\u6ce1\u7684\u7c7b\u6bd4\u3002\u5728\u73b0\u4ee3\u793e\u4f1a\u4e2d\uff0c\u4eba\u4eec\u5927\u90fd\u4f7f\u7528\u4e00\u4e9b\u5177\u6709\u88c5\u9970\u6027\u6216\u8005\u529f\u80fd\u6027\u7684\u706f\u5177\u3002\u5728\u8fd9\u79cd\u706f\u5177\u4e2d\uff0c\u706f\u6ce1\u6709\u53ef\u80fd\u88ab\u653e\u5230\u67d0\u4e2a\u706f\u69fd\u4e2d\uff0c\u6216\u8005\u88ab\u5305\u88f9\u5728\u5bcc\u6709\u827a\u672f\u611f\u7684\u91d1\u5c5e\u6750\u6599\u91cc\u9762\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e5f\u5c31\u4e0d\u5f97\u4e0d\u6309\u7167\u5382\u5546\u7684\u8981\u6c42\u6765\u6d4b\u8bd5\u6216\u8005\u7ec4\u88c5\uff0c\u4ee5\u5b9e\u73b0\u76f8\u5e94\u7684\u529f\u80fd\u3002 \u8f6f\u4ef6\u5f00\u53d1\u4e5f\u662f\u4e00\u6837\uff0c\u638c\u63e1\u4e86JUnit\u548cMockito\u7684\u76f8\u5173\u77e5\u8bc6\u540e\uff0c\u867d\u7136\u53ef\u4ee5\u7f16\u5199\u5927\u90e8\u5206\u6d4b\u8bd5\uff0c\u4f46\u662f\u5982\u679c\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86Spring\uff0c\u5b83\u72ec\u7279\u7684\u4f9d\u8d56\u6ce8\u5165\u65b9\u6cd5\u8fd8\u662f\u53ef\u80fd\u4f1a\u8ba9\u6211\u4eec\u6709\u4e9b\u65e0\u6240\u9002\u4ece\u3002\u5ba2\u89c2\u5730\u8bf4\uff0c\u6d4b\u8bd5\u9700\u8981\u4e0e\u4e1a\u52a1\u4ee3\u7801\u6240\u5904\u7684\u751f\u6001\u73af\u5883\u76f8\u7ed3\u5408\uff0c\u8fd9\u662f\u65e0\u6cd5\u9003\u907f\u7684\u4e8b\u5b9e\uff0c\u6211\u4eec\u5f97\u60f3\u529e\u6cd5\u89e3\u51b3\u5b83\u3002 Java\u5f00\u53d1\u4e2d\u76ee\u524d\u6700\u6d41\u884c\u7684\u4f53\u7cfb\u5c31\u662fSpring\u751f\u6001\uff0c\u65e5\u5e38\u5de5\u4f5c\u4e2d\u9700\u8981\u7ed3\u5408Spring\u6765\u5b9e\u73b0\u7684\u6d4b\u8bd5\u9700\u6c42\u975e\u5e38\u591a\uff0c\u800c\u4e14\u6bd4\u8f83\u91cd\u8981\uff0c\u4f46\u5927\u90e8\u5206\u8bb2\u89e3\u5355\u5143\u6d4b\u8bd5\u6216TDD\u7684\u56fe\u4e66\u90fd\u5f88\u5c11\u6d89\u53caSpring\u76f8\u5173\u77e5\u8bc6\u3002\u57fa\u4e8e\u6b64\uff0c\u672c\u7ae0\u5c06\u56f4\u7ed5Spring\u3001Spring Boot\u6765\u8bb2\u89e3\u5982\u4f55\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u76ee\u6807\u662f\u5728 Spring Boot \u8fd9\u79cd\u4e3b\u6d41\u7684 Spring\u6846\u67b6\u4e0b\uff0c\u5145\u5206\u5229\u7528\u5176\u6280\u672f\u4f53\u7cfb\u6765\u5b8c\u6210\u6d4b\u8bd5\uff08\u4e0d\u4e00\u5b9a\u53ea\u662f\u5355\u5143\u6d4b\u8bd5\uff09\u3002 \u6211\u5728\u5199\u8fd9\u7ae0\u5185\u5bb9\u65f6\u4f7f\u7528\u7684Spring Boot\u7248\u672c\u662f2.4\uff0c\u5728\u8be5\u7248\u672c\u4e2d\uff0c\u5bf9\u5e94\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u5df2\u7ecf\u662fJUnit 5\uff0c\u56e0\u6b64\uff0c\u4ece\u672c\u7ae0\u5f00\u59cb\u4f1a\u5c06JUnit\u7248\u672c\u5207\u6362\u5230JUnit 5\u3002\u5982\u679c\u8bfb\u8005\u4e0d\u719f\u6089 JUnit 5\uff0c\u53ef\u4ee5\u5230\u7b2c3\u7ae0\u67e5\u770bJUnit 4\u548cJUnit5\u7684\u533a\u522b\u3002 \u672c\u7ae0\u6db5\u76d6\u7684\u5185\u5bb9\u6709\uff1a Spring\u6d4b\u8bd5\u7684\u914d\u7f6e\u3002 \u5206\u5c42\u6d4b\u8bd5\u3002 \u6d4b\u8bd5\u5de5\u5177\u96c6\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4ece\u672c\u7ae0\u5f00\u59cb\uff0c\u5c06\u4f1a\u6162\u6162\u8131\u79bb\u5355\u5143\u6d4b\u8bd5\u7684\u8303\u56f4\uff0c\u5728\u5c06\u4f9d\u8d56\u6ce8\u5165\u5bb9\u5668\u3001\u6280\u672f\u8bbe\u65bd\u7b49\u7ec4\u4ef6\u7ed3\u5408\u5230\u4e00\u8d77\u540e\uff0c\u6211\u4eec\u7684\u6d4b\u8bd5\u4f1a\u66f4\u52a0\"\u63a5\u5730\u6c14\"\uff0c\u4e5f\u4e0d\u518d\u662f\u7eaf\u7cb9\u7684\u5355\u5143\u6d4b\u8bd5\u4e86\u3002 \u672c\u7ae0\u793a\u4f8b\u4ee3\u7801\u89c1 https://github.com/java-self-testing/java-self-testing-example/tree/master/spring \u3002","title":"\u7b2c 5 \u7ae0 Spring \u5e94\u7528\u7684\u6d4b\u8bd5"},{"location":"05-testing-with-spring/#51-spring","text":"\u5728Spring\u6280\u672f\u4f53\u7cfb\u4e0b\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u6709\u65f6\u5019\u4f1a\u89c9\u5f97\u6982\u5ff5\u6bd4\u8f83\u6df7\u4e71\uff0c\u96be\u4ee5\u7406\u89e3\u3002\u8bd5\u7740\u4ece\u7f51\u4e0a\u627e\u4e00\u4e9b\u4ee3\u7801\u8d34\u4e0a\u53bb\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7a0b\u5e8f\u5c31\u5de5\u4f5c\u4e86\uff0c\u51fa\u73b0\u95ee\u9898\u81ea\u7136\u4e5f\u4e0d\u77e5\u9053\u8981\u600e\u4e48\u89e3\u51b3\u3002Spring\u7684\u6bcf\u4e00\u4e2a\u5b50\u9879\u76ee\uff08\u7ec4\u4ef6\uff09\u7684\u6d4b\u8bd5\u6a21\u5757\u90fd\u4f1a\u63d0\u4f9b\u76f8\u5e94\u7684\u6d4b\u8bd5\u5de5\u5177\uff0c\u6bd4\u5982 Spring\u5bf9\u5e94\u7684\u6709Spring Test\u6a21\u5757\uff0cSpring Boot\u5bf9\u5e94\u7684\u6709 Spring Boot Testing\u6a21\u5757\u3002\u5bf9\u4e8e\u521a\u521a\u5f00\u59cb\u4f9d\u8d56\u8fd9\u4e9b\u5305\u7f16\u5199\u6d4b\u8bd5\u7684\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u6709\u65f6\u5206\u4e0d\u6e05\u54ea\u4e9b\u7c7b\u6765\u81ea\u54ea\u4e2a\u5305\uff0c\u5f88\u5bb9\u6613\u611f\u5230\u56f0\u60d1\u3002 \u56fe5-1\u662fSpring\u7684\u751f\u6001\u4f53\u7cfb\u548c\u5bf9\u5e94\u7684\u6d4b\u8bd5\u4f53\u7cfb\u7684\u5305\u5173\u7cfb\u56fe\u3002 \u56fe 5-1 Spring \u751f\u6001\u548c\u6d4b\u8bd5\u4f53\u7cfb \u56fe5-1\u7684\u5de6\u8fb9\u7ed9\u51fa\u4e86Spring\u751f\u6001\u4e0b\u5e38\u7528\u7684\u5305\uff0c\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\u3002 spring-core\u662f\u4e00\u4e2a\u4f9d\u8d56\u6ce8\u5165\u5e93\uff0c\u901a\u8fc7\u4f9d\u8d56\u6ce8\u4eba\u529f\u80fd\u7ba1\u7406\u5404\u79cd\u7c7b\u3002 spring-mvc\u63d0\u4f9b\u4e86\u4e0eWeb\u670d\u52a1\u5668\u7f16\u7a0b\u76f8\u5173\u7684\u529f\u80fd\u53caMVC\u6a21\u5f0f\u7684\u5b9e\u73b0\u3002 spring-security-core\u662f\u5b89\u5168\u6846\u67b6\u7684\u6838\u5fc3\u5305\uff0c\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u8fc7\u6ee4\u5668\u6765\u5b9e\u73b0Web\u5b89\u5168\u548c\u9274\u6743\u3002 spring-boot \u662f Spring \u751f\u6001\u7684\u811a\u624b\u67b6\uff0c\u5b83\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u6846\u67b6\uff0c\u7528\u4e8e\u96c6\u6210\u6574\u4e2aSpring\u751f\u6001\u4f53\u7cfb\uff0c\u901a\u8fc7spring-boot-autoconfigure\u6765\u5b9e\u73b0\u81ea\u52a8\u5316\u7684\u914d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u7528\u81ea\u5df1\u914d\u7f6e\u4e86\u3002 spring-boot-starter\u53d1\u5e03\u4e86\u5404\u79cd\u4f9d\u8d56\u7684Pom\u96c6\u5408\uff0c\u65b9\u4fbf\u5c06\u5404\u79cd\u4f9d\u8d56\u5305\u5f15\u5165\u9879\u76ee\u4e2d\u3002 \u56fe5-1\u7684\u53f3\u4fa7\u662f\u4e0a\u8ff0\u5305\u63d0\u4f9b\u7684\u76f8\u5e94\u6d4b\u8bd5\u6a21\u5757\uff0c\u4ee5\u53ca\u7528\u4e8e\u6d4b\u8bd5\u7684\u5de5\u5177\u3002\u6bd4\u5982\uff0cspring-test \u63d0\u4f9b\u4e86\u7528\u4e8e\u5355\u5143\u6d4b\u8bd5\u7684Runner\uff0cMockMvc\u76f8\u5173\u7684\u7c7b\uff08spring-mvc\u5c5e\u4e8eSpring Framework\uff0c\u6ca1\u6709\u5355\u72ec\u7684\u6d4b\u8bd5\u6a21\u5757\uff09\uff1bspring-boot-test\u63d0\u4f9b\u4e86@SpringBootTest\u8fd9\u7c7b\u81ea\u52a8\u5316\u914d\u7f6e\u7684\u6ce8\u89e3\u53ca\u81ea\u52a8\u5316\u6d4b\u8bd5\u914d\u7f6e\uff1bspring-security-test\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6a21\u62df\u7528\u6237\u7684\u5de5\u5177\u3002 \u9664\u4e86Spring\u4f53\u7cfb\u4e0b\u7684\u8fd9\u4e9b\u5305\uff0c\u6211\u4eec\u8fd8\u53ef\u80fd\u4f1a\u7528\u5230\u5176\u4ed6\u4e00\u4e9b\u5de5\u5177\uff0c\u8fd9\u4e9b\u5de5\u5177\u4e8e\u4e0d\u540c\u7684\u5c42\u6b21\u63d0\u4f9b\u4e0d\u540c\u7684\u529f\u80fd\uff1a JUnit\uff1a\u4f5c\u4e3a\u5355\u5143\u6d4b\u8bd5\u5de5\u5177\u5b83\u5df2\u7ecf\u6210\u4e3aJava\u5355\u5143\u6d4b\u8bd5\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\u3002 Hamcrest\uff1aJUnit\u5185\u7f6e\u7684\u4f9d\u8d56\u7684\u65ad\u8a00\u5e93\u3002 AssertJ\uff1a\u6d41\u5f0f\u65ad\u8a00\u5e93\u3002 Mockito\uff1a\u6a21\u62df\u5de5\u5177\uff0c\u7528\u4e8e\u5b9e\u73b0\u6d4b\u8bd5\u66ff\u8eab\u3002 JSONassert\uff1a\u7528\u4e8e\u65ad\u8a00JSON\u8282\u70b9\uff0c\u505aAPI\u6d4b\u8bd5\u65f6\u7528\u5f97\u6bd4\u8f83\u591a\u3002 JsonPath\uff1a\u53ef\u4ee5\u901a\u8fc7XPath \u8bed\u6cd5\u8bbf\u95eeJSON\u3002 \u867d\u7136 Spring Boot \u4e5f\u80fd\u7528\u4e8e\u5b9e\u73b0\u547d\u4ee4\u884c\u3001\u684c\u9762\u5de5\u5177\u7684\u5f00\u53d1\uff08\u6bd4\u5982 JavaFX\u53ef\u4ee5\u548c Spring Boot\u7ed3\u5408\u5f00\u53d1\u684c\u9762\u5e94\u7528\uff09\uff0c\u4f46\u5b83\u4e3b\u8981\u5e94\u7528\u4e8e\u670d\u52a1\u7aef\u5e94\u7528\u5f00\u53d1\uff0c\u6240\u4ee5\u5927\u90e8\u5206\u76f8\u5173\u7684\u6d4b\u8bd5\u5de5\u5177\u90fd\u662f\u4e3a\u670d\u52a1\u7aef\u5f00\u53d1\u51c6\u5907\u7684\u3002\u603b\u5730\u6765\u8bf4\uff0c\u6211\u4eec\u8ba8\u8bba Spring Boot\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u5c06\u66f4\u591a\u7684\u5173\u6ce8\u653e\u5728\u670d\u52a1\u7aef\u5e94\u7528\u5f00\u53d1\u4e0a\u3002 \u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u6d4b\u8bd5\u7c7b\u578b\uff1a \u53ea\u4f7f\u7528JUnit\u5c31\u53ef\u4ee5\u6d4b\u8bd5\u7684\u7b80\u5355\u5bf9\u8c61\u3001\u9759\u6001\u65b9\u6cd5\u7c7b\u3002 \u542f\u52a8Spring\u4e0a\u4e0b\u6587\u6765\u8fdb\u884c\u6d4b\u8bd5\u3002\u5982\u679c\u88ab\u6d4b\u8bd5\u5bf9\u8c61\u662f\u7eb3\u5165IOC\u5bb9\u5668\u7ba1\u7406\u7684Bean\u5bf9\u8c61\uff0c \u9700\u8981\u4f7f\u7528Spring Test \u7684Runner+Mockito \u9694\u79bb\u88ab\u6d4b\u8bd5\u7684\u5bf9\u8c61\uff0c\u867d\u7136\u8fd9\u65f6\u9700\u8981\u542f\u52a8Spring \u4e0a\u4e0b\u6587\uff0c\u4f46\u662f\u5bb9\u5668\u4e2d\u53ea\u653e\u4e86\u5fc5\u8981\u7684\u88ab\u6d4b\u8bd5\u5bf9\u8c61\uff0c\u56e0\u6b64\u4ecd\u7136\u53ef\u4ee5\u770b\u4f5c\u662f\u5355\u5143\u6d4b\u8bd5\u3002 \u542f\u52a8Spring Boot\u4e0a\u4e0b\u6587\u6765\u8fdb\u884c\u6d4b\u8bd5\u3002\u4f8b\u5982\u60f3\u8981\u6d4b\u8bd5Controller\u662f\u5426\u80fd\u771f\u6b63\u53cd\u9988\u6211\u4eec \u9700\u8981\u7684\u54cd\u5e94\uff0c\u53ef\u4ee5\u4f7f\u7528Spring Boot Test\u8fd9\u4e2a\u6846\u67b6\u542f\u52a8\u4e00\u4e2a\u6a21\u62df\u7684Spring Boot\u4e0a\u4e0b\u6587\uff0c\u4e0d\u8fc7\u8fd9\u63a5\u8fd1\u4e8e\u96c6\u6210\u6d4b\u8bd5\uff0cSpring Boot\u6587\u6863\u4e2d\u4e5f\u5c06\u8fd9\u90e8\u5206\u5185\u5bb9\u5212\u5206\u4e3a\u96c6\u6210\u6d4b\u8bd5\u4e86\u3002 \u8fd9\u4e09\u79cd\u6d4b\u8bd5\u7c7b\u578b\uff0c\u6d4b\u8bd5\u7684\u7c92\u5ea6\u7531\u4f4e\u5230\u9ad8\uff0c\u6d4b\u8bd5\u8fd0\u884c\u7684\u65f6\u95f4\u4e5f\u662f\u7531\u5c11\u5230\u591a\u3002\u6211\u4eec\u9700\u8981\u5c3d\u53ef\u80fd\u5730\u9009\u7528\u4f4e\u6210\u672c\u7684\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u5728\u7f29\u77ed\u6d4b\u8bd5\u8fd0\u884c\u65f6\u95f4\u7684\u540c\u65f6\u51cf\u5c11\u6837\u677f\u4ee3\u7801\u3002 \u5982\u679c\u9700\u8981\u5728 Spring Boot\u9879\u76ee\u52a0\u5165\u6d4b\u8bd5\u4f9d\u8d56\uff0c\u53ea\u9700\u8981\u5f15\u5165 spring-boot-starter-test \u5305\u5373\u53ef\u3002spring-boot-starter-test\u57fa\u672c\u4e0a\u5f15\u5165\u4e86\u9700\u8981\u7528\u5230\u7684\u6240\u6709\u6d4b\u8bd5\u529f\u80fd\uff0c\u5df2\u7ecf\u95f4\u63a5\u4f9d\u8d56\u4e86JUnit\u3001Mockito\uff0c\u5f00\u7bb1\u5373\u7528\u3002 \u81f3\u4e8e\u6d4b\u8bd5\u9700\u8981\u4f7f\u7528\u7684\u5176\u4ed6\u4f9d\u8d56\u5305\uff0c\u5219\u9700\u8981\u5355\u72ec\u6dfb\u52a0\uff0c\u5728\u540e\u9762\u7684\u793a\u4f8b\u4e2d\u4e5f\u4f1a\u9010\u6b65\u8865\u5145\u8bf4\u660e\u3002\u7531\u4e8eSpring\u4f7f\u7528\u7684\u662f\u7edf\u4e00\u7684\u4f9d\u8d56\u7248\u672c\u7ba1\u7406\u5668\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u4e3aSpring\u7ec4\u4ef6\u8bbe\u7f6e\u7248\u672c\uff0c\u5982\u679c\u5e0c\u671b\u548c\u672c\u4e66\u7684\u4ee3\u7801\u4fdd\u6301\u4e00\u81f4\uff0c\u53ef\u4ee5\u9009\u62e92.4\u7cfb\u5217\u7684\u7248\u672c\u3002\u5982\u679c\u662f\u5df2\u7ecf\u5b58\u5728\u7684\u9879\u76ee\uff0c\u52a0\u5165\u4e0b\u9762\u7684\u4f9d\u8d56\u5230Pom\u6587\u4ef6\u4e2d\u5373\u53ef\u5f00\u7bb1\u4f7f\u7528\uff1a <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId> <scope>test</scope> </dependency> \u4e0a\u9762\u4ecb\u7ecd\u4e86Spring\u4e0b\u7684\u4e09\u79cd\u6d4b\u8bd5\u7c7b\u578b\uff0c\u5bf9\u4e8e\u53ea\u4f7f\u7528JUnit\u5c31\u53ef\u4ee5\u6d4b\u8bd5\u7684\u7b80\u5355\u5bf9\u8c61\u3001\u9759\u6001\u65b9\u6cd5\u7c7b\uff0c\u76f4\u63a5\u4f7f\u7528JUnit\u548cMockito\u5b8c\u6210\u6d4b\u8bd5\u5373\u53ef\uff0c\u65e0\u987b\u518d\u8ba8\u8bba\u3002\u4e0b\u9762\u804a\u804a\u5982\u4f55\u4f7f\u7528Spring\u5bb9\u5668\u52a0\u8f7dBean\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u548c\u5168\u91cf\u542f\u52a8Spring Boot\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u914d\u7f6e\u3002","title":"5.1 \u7406\u89e3 Spring \u6d4b\u8bd5\u4f53\u7cfb"},{"location":"05-testing-with-spring/#52-spring","text":"\u5047\u8bbe\u6709\u4e00\u4e2a\u7b80\u5355\u7684Spring Boot\u540e\u7aef Web\u9879\u76ee\uff0c\u91cc\u9762\u5305\u542bController\u3001Service\u3001Entity\u3001Mapper\u7b49\u5206\u5c42\u548c\u6a21\u5757\u3002\u4e3a\u4e86\u63a5\u8fd1\u56fd\u5185\u4e3b\u6d41\u5f00\u53d1\u98ce\u683c\uff0c\u5176\u4e2d\u7684\u6301\u4e45\u5316\u5e93\u9009\u62e9\u4e86MyBatis\u3002\u56fe5-2\u4e3a\u793a\u4f8b\u4ee3\u7801\u7684\u5305\u7ed3\u6784\u56fe\u3002 \u56fe 5-2 \u793a\u4f8b\u4ee3\u7801\u7684\u7ed3\u6784 \u4e00\u822c\u6765\u8bf4\uff0c\u4e3b\u8981\u903b\u8f91\u90fd\u4f1a\u5199\u5728Service\u4e2d\uff0c\u56e0\u6b64\uff0cService \u4e5f\u5c31\u6210\u4e86\u6211\u4eec\u7684\u4e3b\u8981\u6d4b\u8bd5\u76ee\u6807\u3002\u4e0b\u9762\u5c06\u5bf9\u5176\u7f16\u5199\u6d4b\u8bd5\u3002 UserService\u4e2d\u7684\u4e3b\u8981\u903b\u8f91\u7528\u4e8e\u5b9e\u73b0\u6dfb\u52a0\u7528\u6237\u3001\u5217\u51fa\u7528\u6237\u7b49\u529f\u80fd\uff0cUserService\u4f9d\u8d56\u4e8eUserMapper\uff0c\u5982\u679c\u53ea\u662f\u6d4b\u8bd5UserService\uff0c\u7136\u540e\u6a21\u62df\u4f9d\u8d56\u7684Mapper\u5176\u5b9e\u975e\u5e38\u5bb9\u6613\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Service public class UserService { public static final String KEY = \"ea416ed0759d46a8de58f63a59077499\"; @Autowired private UserMapper userMapper; public User add(User user) { user.setCreateAt(Instant.now()); user.setUpdateAt(Instant.now()); user.setPassword(hash(user.getPassword())); userMapper.insert(user); return user; } public List<User> listAll() { return userMapper.selectAll(); } private String hash(String text) { return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, KEY).hmacHex(text); } } \u5728 Spring \u4e2d\uff0c\u5e38\u89c4\u7684\u505a\u6cd5\u662f\u4f7f\u7528@Autowired\u6ce8\u89e3\u6765\u6ce8\u5165\u4f9d\u8d56\u7684 UserMapper\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u79c1\u6709\u5c5e\u6027\u3002\u8fd9\u65f6\u9700\u8981\u6a21\u62dfUserMapper\uff0c\u4f46\u7531\u4e8e\u51fa\u73b0\u4e86\u79c1\u6709\u6210\u5458\uff0c\u56e0\u6b64\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528Mockito \u8fdb\u884c\u6a21\u62df\u3002 \u5728\u6d4b\u8bd5\u66ff\u8eab\u90e8\u5206\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u6cd5\u6765\u89e3\u51b3\u79c1\u6709\u6210\u5458\u7684\u6a21\u62df\u95ee\u9898\u3002\u53ef\u4ee5\u4f7f\u7528PowerMock \u6216\u8005\u53cd\u5c04\u5de5\u5177\u6765\u5b9e\u73b0\u6a21\u62df\uff0c\u6bd4\u5982FieldSetter\u3002\u5728Spring Test\u7684\u5de5\u5177\u96c6\u4e2d\u8fd8\u53ef\u4ee5\u4f7f\u7528 Reflection-TestUtils\u5b9e\u73b0\u7c7b\u4f3c\u7684\u6548\u679c\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528Spring\u7684\u6784\u9020\u65b9\u6cd5\u6765\u6ce8\u5165\u65b0\u6a21\u62df\u7684\u5bf9\u8c61\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a private final UserMapper userMapper; public UserService(UserMapper userMapper) { this.userMapper = userMapper; } \u5f53\u9700\u8981\u88ab\u4f9d\u8d56\u7684\u5bf9\u8c61\u975e\u5e38\u591a\u7684\u65f6\u5019\uff0c\u8fd9\u6837\u7f16\u5199\u4ee3\u7801\u4f1a\u7a0d\u7a0d\u6709\u70b9\u9ebb\u70e6\uff0c\u4e5f\u65e0\u6cd5\u89e3\u51b3\u4e0e@Value\u7b49\u7c7b\u4f3c\u7684\u6ce8\u89e3\u95ee\u9898\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5728Spring\u4e2d\u53ef\u4ee5\u4f7f\u7528SpringExtension\u6765\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5e76\u96c6\u6210Spring\u7684\u4f9d\u8d56\u6ce8\u5165\u529f\u80fd\u3002 \u6ce8\u610f\uff1a\u5728\u5355\u5143\u6d4b\u8bd5\u90e8\u5206\u6211\u4eec\u63d0\u5230\u4e86\uff0cJUnit 5 \u4e2d Runner \u88ab\u66ff\u6362\u6210\u4e86 Extension\uff0c\u6ce8\u89e3 @RunWith \u4e5f\u88ab\u66ff\u6362\u6210\u4e86 @ExtendWith\u3002 \u4e0b\u9762\u521b\u5efa\u4e00\u4e2aUserServiceTest\u6d4b\u8bd5\u5e76\u4f7f\u7528SpringExtension\u4f5c\u4e3a\u6d4b\u8bd5\u7684JUnit\u62d3\u5c55\u3002\u7531\u4e8e\u8fd9\u4e2a\u62d3\u5c55\u521d\u59cb\u5316\u4e86Mockito\u6ce8\u89e3\u7684\u76f8\u5173\u884c\u4e3a\uff0c\u56e0\u6b64\u53ef\u4ee5\u5b9e\u73b0\u4e0eMockitoExtension\u76f8\u4f3c\u7684\u529f\u80fd\uff0c\u6b64\u5916\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u4e0eSpring\u7ed3\u5408\u66f4\u4e3a\u7d27\u5bc6\u7684\u5176\u4ed6\u529f\u80fd\u3002 \u521b\u5efa\u7684\u57fa\u7840\u6d4b\u8bd5\u73af\u5883\u5982\u4e0b\uff1a @ExtendWith(SpringExtension.class) public class UserServiceTest { @InjectMocks private UserService userService; @Mock private UserMapper userMapper; ... } \u4e0b\u9762\u6dfb\u52a02\u4e2a\u6d4b\u8bd5\uff0c\u7528\u6765\u6d4b\u8bd5\u5217\u51fa\u3001\u6dfb\u52a0\u7528\u6237\u8fd9\u4e24\u4e2a\u529f\u80fd\uff1a @Test public void should_list_users() { userService.listAll(); Mockito.verify(userMapper).selectAll(); } @Test public void should_add_user() { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); }}; userService.add(user); ArgumentCaptor<User> argument = ArgumentCaptor.forClass(User.class); Mockito.verify(userMapper).insert(argument.capture()); assertEquals(\"zhangsan\", argument.getValue().getUsername()); assertEquals(\"667f1213e4a57dbee7cd9e8993b82adef1032f7681a5d5c941c30281f90e7eceba629cc9ccf3f133fb478f3f54d9537c2dd50895380f659370c2a14147449ac4\", argument.getValue().getPassword()); assertNotNull(argument.getValue().getCreateAt()); assertNotNull(argument.getValue().getUpdateAt()); } \u5982\u4e0a\uff0c\u4e00\u7ec4\u57fa\u672c\u7684\u6d4b\u8bd5\u5c31\u5b8c\u6210\u4e86\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528SpringExtension\uff0bMockito\u80fd\u5b8c\u6210\u5927\u90e8\u5206\u7684\u6d4b\u8bd5\u5de5\u4f5c\u3002SpringExtension\u8d77\u5230\u4e86\u4e0eMockitoExtension\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u53c8\u80fd\u4e0eSpring\u4f9d\u8d56\u6ce8\u5165\u4e00\u8d77\u4f7f\u7528\uff0c\u975e\u5e38\u9002\u5408Service\u7684\u6d4b\u8bd5\u5de5\u4f5c\u3002 SpringExtension\u662fspring-test\u6a21\u5757\u4e2d\u7684\u7c7b\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5f15\u5165\u7684\u76f8\u5173\u5e93\u4e0eSpring Boot\u8fd8\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e5f\u4e0d\u4f1a\u542f\u52a8\u6574\u4e2a\u4e0a\u4e0b\u6587\uff0c\u51e0\u4e4e\u4e0d\u4f1a\u5f71\u54cd\u6d4b\u8bd5\u6548\u7387\u3002 \u5728JUnit 4\u4e2d\uff0c\u6d4b\u8bd5\u4e0d\u662f\u901a\u8fc7Extension\u8fd0\u884c\u7684\uff0c\u53ea\u9700\u8981\u5c06@ExtendWith\uff08SpringExtension. class\uff09\u66ff\u6362\u4e3a@RunWith\uff08SpringRunner.class\uff09\u5373\u53ef\u5b9e\u73b0\u517c\u5bb9\u3002SpringRunner\u662fSpringJUnit4 ClassRunner\u7684\u5b50\u7c7b\uff0c\u5b83\u662f\u4e00\u4e2afinal\u7c7b\uff0c\u4e0d\u80fd\u88ab\u7ee7\u627f\u7528\u4e8e\u62d3\u5c55\u3002\u5982\u679c\u5e0c\u671b\u62d3\u5c55Runner\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 SpringJUnit4ClassRunner \u6216\u8005\u62d3\u5c55 SpringJunit4ClassRunner \u7c7b\u6765\u5b9e\u73b0\u3002","title":"5.2 \u542f\u52a8Spring\u4e0a\u4e0b\u6587\u6d4b\u8bd5"},{"location":"05-testing-with-spring/#53-spring-boot","text":"\u4f7f\u7528SpringExtension\u540e\u5373\u53ef\u4f7f\u7528@Autowired\u6765\u52a0\u8f7d\u5176\u4ed6\u7684\u5bf9\u8c61\uff0c\u8fd9\u662fSpring Test\u6846\u67b6\u63d0\u4f9b\u7684\u529f\u80fd\u3002\u6211\u4eec\u77e5\u9053\uff0cSpring Boot \u7684\u4f5c\u7528\u662f\u5b9e\u73b0\u81ea\u52a8\u5316\u914d\u7f6e\uff0c\u901a\u8fc7\u81ea\u52a8\u5316\u914d\u7f6e\u53ef\u5b9a\u4e49\u5927\u91cf\u7684Bean\u3002 \u5982\u679c\u4ec5\u4ec5\u8981\u6d4b\u8bd5Service\u7684\u903b\u8f91\u800c\u6a21\u62dfMapper\uff0c\u770b\u8d77\u6765\u597d\u50cf\u65e0\u6cd5\u9a8c\u8bc1\u6570\u636e\u662f\u5426\u88ab\u771f\u6b63\u5730\u5199\u5165\u6570\u636e\u5e93\u4e2d\u4e86\uff0c\u8fd9\u6837\u7684\u6d4b\u8bd5\u663e\u5f97\u5f88\u9e21\u808b\u3002\u4e8e\u662f\u4eba\u4eec\u60f3\u5230\uff0c\u65e2\u7136\u53ef\u4ee5\u5c06Service\u548cMapper \u4e00\u8d77\u6d4b\u8bd5\uff0c\u4e3a\u4f55\u4e0d\u542f\u52a8Spring Boot\u5462\uff1f","title":"5.3 \u542f\u52a8Spring Boot \u4e0a\u4e0b\u6587\u6d4b\u8bd5"},{"location":"05-testing-with-spring/#531-springboottest","text":"\u65e2\u7136\u542f\u52a8Spring Boot\u4e0a\u4e0b\u6587\u5c31\u53ef\u4ee5\u4f7f\u7528Spring Boot\u5b8c\u6574\u7684\u529f\u80fd\u8fdb\u884c\u6d4b\u8bd5\uff0c\u90a3\u4e48\u9700\u8981\u6a21\u62df\u7684\u4e1c\u897f\u81ea\u7136\u76f8\u5bf9\u8f83\u5c11\uff0c\u56e0\u4e3a@SpringBootTest\u5e2e\u6211\u4eec\u542f\u52a8\u4e86Spring MVC\u3001\u521d\u59cb\u5316\u6570\u636e\u5e93\u8fde\u63a5\u3001\u65e5\u5fd7\u7b49\u4e00\u7cfb\u5217\u914d\u7f6e\u3002 \u5229\u7528\u4e0a\u8ff0\u7279\u6027\uff0cUserServiceTest\u5c31\u4e0d\u7528\u6a21\u62dfUserMapper\u4e86\uff0cSpring Boot Test\u4f1a\u81ea\u52a8\u5b8c\u6210\u4e00\u7cfb\u5217\u914d\u7f6e\uff0c\u4ee5\u8fdb\u884c\u66f4\u771f\u5b9e\u7684\u6d4b\u8bd5\u3002 \u5728 test \u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u4e0eApplication \u8def\u5f84\u76f8\u540c\u7684\u5305\u548c\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\uff0c\u4f7f\u7528@SpringBootTest \u4fee\u9970\u8fd9\u4e2a\u6d4b\u8bd5\u7c7b\u3002\u7531\u4e8e@SpringBootTest\u4e2d\u5df2\u7ecf\u9ed8\u8ba4\u5305\u542b\u4e86@ExtendWith\uff08{SpringExtension. class}\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u7701\u7565\u8fd9\u4e00\u884c\u6ce8\u89e3\uff0c\u4f46\u5728JUnit4\u4e2d\u4f9d\u7136\u9700\u8981\u7528\u5230@RunWith\u6ce8\u89e3\uff1a @SpringBootTest public class ApplicationTest { @Autowired private UserService userService; @Test public void should_list_users() { userService.listAll(); } @Test public void should_add_user() { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); }}; userService.add(user); } } userService\u662f\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u4e2d\u771f\u5b9e\u7684\u5bf9\u8c61\uff0c\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c@SpringBootTest\u4f1a\u521b\u5efa\u4f9d\u8d56\u7684UserMapper\uff0c\u4ee5\u4fbf\u6211\u4eec\u8bbf\u95ee\u6570\u636e\u5e93\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u53ea\u662f\u9a8c\u8bc1\u4e86\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u80fd\u5426\u8fd0\u884c\uff0c\u8fd8\u6ca1\u6709\u65ad\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u4e00\u4e9b\u6d4b\u8bd5\u6570\u636e\u8fdb\u884c\u65ad\u8a00\u3002 \u4e25\u683c\u6765\u8bf4\uff0c\u8fd9\u79cd\u6d4b\u8bd5\u4e0d\u7b97\u5355\u5143\u6d4b\u8bd5\u3002\u867d\u7136\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u8d77\u70b9\u662fService\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u6a21\u62df Mapper\uff0c\u800c\u662f\u4f7f\u7528\u4e86\u771f\u5b9e\u7684 Mapper\u5c06\u6570\u636e\u5199\u5165\u5185\u5b58\u6570\u636e\u5e93\u4e2d\u3002\u6574\u4e2a\u8fc7\u7a0b\u4f1a\u52a0\u8f7d\u6240\u6709\u9700\u8981\u7528\u5230\u7684Bean\uff0c\u4f1a\u542f\u52a8\u5168\u90e8\u7684\u4e0a\u4e0b\u6587\uff0c\u4e00\u822c\u8fd9\u79cd\u914d\u7f6e\u65b9\u5f0f\u4f1a\u7528\u4e8eE2E\u6d4b\u8bd5\u3002 \u5728\u6301\u4e45\u5e93\u9009\u62e9\u4e86MyBatis\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u5904\u7406MyBatis\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528mybatis-spring-boot-starter\u5305\u548cH2\u5185\u5d4c\u6570\u636e\u5e93\uff0c\u5728Pom\u6587\u4ef6\u4e2d\u52a0\u5165\u76f8\u5173\u7684\u4f9d\u8d56\u5373\u53ef\u5b9e\u73b0\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <dependency> <groupId>org.mybatis.spring.boot</groupId> <artifactId>mybatis-spring-boot-starter</artifactId> <version>2.1.0</version> </dependency> <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> <scope>test</scope> </dependency> mybatis-spring-boot-starter\u5728\u8fd9\u91cc\u7528\u4e8e\u5904\u7406\u4e0eMapper\u76f8\u5173\u7684\u903b\u8f91\uff0cH2\u5145\u5f53\u4e86\u5185\u5b58\u6570\u636e\u5e93\uff0cStarter\u5219\u4f1a\u6839\u636e\u73af\u5883\u9700\u8981\u81ea\u52a8\u8fdb\u884c\u914d\u7f6e\u3002 \u7531\u4e8e\u8fd9\u79cd\u65b9\u5f0f\u6ca1\u6709\u6a21\u62df\u4f9d\u8d56\u7684\u5bf9\u8c61\uff0c\u56e0\u6b64\u4e0d\u80fd\u8fdb\u884c\u65ad\u8a00\uff0c\u9700\u8981\u76f4\u63a5\u83b7\u53d6\u5e76\u5224\u65ad\u6570\u636e\u5e93\u7684\u6570\u636e\uff08\u5982\u679c\u662fAPI\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u901a\u8fc7API\u67e5\u8be2\u6765\u8fdb\u884c\u9a8c\u8bc1\uff09\u3002 Spring Test\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u4f46\u662f\u5e38\u7528\u7684\u7c7b JdbcTestUtils\uff0c\u8be5\u7c7b\u53ef\u4ee5\u4f7f\u7528JdbcTemplate \u6765\u7edf\u8ba1\u548c\u64cd\u4f5c\u6570\u636e\u5e93\u8868\u3002\u5f53\u6267\u884c\u6dfb\u52a0\u7528\u6237\u7684\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528JdbcTestUtils \u7edf\u8ba1\u6570\u636e\u5e93\u7528\u6237\u8868\u8bb0\u5f55\u884c\u6570\u6765\u8fdb\u884c\u65ad\u8a00\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7JdbcTemplate\u67e5\u8be2\u5177\u4f53\u7684\u6570\u636e\u6765\u8fdb\u884c\u9a8c\u8bc1\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Autowired private JdbcTemplate jdbcTemplate; @Test public void should_add_user() { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); }}; userService.add(user); int count = JdbcTestUtils.countRowsInTable(jdbcTemplate, \"user\"); assertEquals(1, count); } \u8981\u8bf4@SpringBootTest\u542f\u52a8\u4e86\u5168\u90e8\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u4e5f\u4e0d\u7b97\u5bf9\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c@SpringBootTest \u6ca1\u6709\u542f\u52a8 Web \u670d\u52a1\u5668\uff0c\u53ea\u662f\u542f\u52a8\u4e86\u5e94\u7528\u4e0a\u4e0b\u6587\u548c\u6a21\u62df\u7684\u670d\u52a1\u5668\u73af\u5883\u3002\u901a\u8fc7webEnvironment \u5c5e\u6027\u53ef\u4ee5\u4fee\u6539\u8bbe\u7f6e\uff0c\u542f\u52a8\u968f\u673a\u7aef\u53e3\u3001\u56fa\u5b9a\u7aef\u53e3\u7684Web\u670d\u52a1\u5668\uff0c\u6216\u8005\u5f7b\u5e95\u4e0d\u4f7f\u7528Web\u73af\u5883\u3002 \u542f\u52a8\u4e00\u4e2a\u968f\u673a\u7aef\u53e3\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @SpringBootTest( webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT ) \u76f8\u5e94\u7684\u6a21\u5f0f\u8bf4\u660e\u5982\u4e0b\u3002 MOCK\uff1a\u9ed8\u8ba4\u6a21\u5f0f\uff0c\u52a0\u8f7dWeb\u7c7b\u578b\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff0c\u4f46\u662f\u63d0\u4f9b\u7684\u662f\u6a21\u62df\u7684\u8fd0\u884c\u73af\u5883\uff0c\u4e0d\u542f\u52a8 Web\u670d\u52a1\u5668\u3002 RANDOM_PORT\uff1a\u542f\u52a8\u771f\u5b9e\u7684\u5185\u5d4c\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528\u968f\u673a\u7aef\u53e3\uff0c\u53ef\u4ee5\u907f\u514d\u6d4b\u8bd5\u65f6\u4e0e\u5176\u4ed6\u5e94\u7528\u7aef\u53e3\u51b2\u7a81\u3002 DEFINED_PORT\uff1a\u542f\u52a8\u771f\u5b9e\u7684\u5185\u5d4c\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528\u5b9a\u4e49\u7684\u7aef\u53e3\uff0c\u7aef\u53e3\u53ef\u4ee5\u5728\u6d4b\u8bd5\u7684\u914d\u7f6e\u4e2d\u6dfb\u52a0\u3002 NONE\uff1a\u4e0d\u52a0\u8f7dWeb\u7c7b\u578b\u7684\u4e0a\u4e0b\u6587\uff0c\u4e5f\u4e0d\u6a21\u62df\u4efb\u4f55Web\u73af\u5883\u3002 \u53e6\u5916\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a classes \u53c2\u6570\u6765\u786e\u5b9a\u5305\u626b\u63cf\u7684\u4f4d\u7f6e\u3002 @ContextConfiguration(classes=...)}\uff1a @SpringBootTest( webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = {Application.class} ) \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSpring Boot\u4f1a\u901a\u8fc7\u626b\u63cf\u5165\u53e3\u7c7b\u5305\u4e0b\u7684\u6240\u6709\u7c7b\u6765\u6ce8\u518c\u76f8\u5173\u7684Bean\u3002\u4f46\u662f\u5982\u679c\u56e0\u67d0\u4e9b\u539f\u56e0\u65e0\u6cd5\u505a\u5230\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528classes\u53c2\u6570\u6765\u914d\u7f6e\u9700\u8981\u626b\u63cf\u7684\u76ee\u6807\u7c7b\u3002\u4f8b\u5982\uff0c\u5728\u591a\u6a21\u5757\u9879\u76ee\u4e0b\uff0c\u914d\u7f6e\u4e86\u591a\u4e2a\u542f\u52a8\u5e94\u7528\uff08\u6bd4\u5982\u524d\u53f0\u3001Admin\u53ef\u4ee5\u72ec\u7acb\u542f\u52a8\uff0c\u4f46\u662f\u5b83\u4eec\u5728\u4e00\u4e2a\u4ee3\u7801\u5e93\u4e2d\uff09\uff0c\u5b83\u4eec\u5171\u4eab\u4e00\u4e2acommon\u6a21\u5757\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u5404\u81ea\u7684\u542f\u52a8\u5e94\u7528\u4e2d\u72ec\u7acb\u8fd0\u884c\u6d4b\u8bd5\uff0c\u53ea\u8981\u66ff\u6362classes\u4e2d\u7684\u503c\u5373\u53ef\u5b9e\u73b0\u76f8\u4e92\u4e4b\u95f4\u4e0d\u53d7\u5e72\u6270\u3002 \u53e6\u5916\uff0c@SpringBootTest\u6ce8\u89e3\u4e5f\u53ef\u4ee5\u901a\u8fc7value\u53c2\u6570\u6ce8\u5165\u914d\u7f6e\uff0c\u7528\u4e8e\u6fc0\u6d3b\u4e0e\u6d4b\u8bd5\u76f8\u5173\u7684Profile\u6216\u8005\u5b9a\u4e49\u7aef\u53e3\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @SpringBootTest( value = {\"server.port=9090\"} )","title":"5.3.1 @SpringBootTest"},{"location":"05-testing-with-spring/#532-bean","text":"\u901a\u8fc7\u6d4b\u8bd5\u66ff\u8eab\u90e8\u5206\u7684\u4ecb\u7ecd\u6211\u4eec\u77e5\u9053\uff0c\u6a21\u62df\u548c\u76d1\u89c6\u76f8\u5173\u6ce8\u89e3\u7684\u4f7f\u7528\u4e0eRunner\u5bc6\u5207\u76f8\u5173\uff0c\u5373\u5fc5\u987b\u6709\u76f8\u5e94\u7684Runner\u624d\u53ef\u4ee5\uff0c\u5728JUnit5\u4e2dSpringExtension\u5e2e\u6211\u4eec\u5b8c\u6210\u4e86\u76f8\u5173\u5de5\u4f5c\u3002 \u4f7f\u7528Spring\u4e4b\u540e\uff0c\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u662f\u901a\u8fc7Bean\u5b8c\u6210\u7684\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u7684\u8d4b\u503c\uff0c\u6240\u4ee5\u5728Spring\u7684\u6d4b\u8bd5\u4e2d\u4f7f\u7528@Mock\u540e\uff0c\u4f9d\u7136\u4f1a\u4fdd\u7559@Autowired\u65b9\u5f0f\u6765\u6ce8\u4eba\u88ab\u6a21\u62df\u7684\u5bf9\u8c61\uff0c\u4e0d\u8fc7\u4e5f\u4ec5\u6b64\u800c\u5df2\u3002 \u800c\u5728Spring Boot\u7684\u6d4b\u8bd5\u4e2d\uff0c\u8fd8\u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u4e2a\u6ce8\u89e3@MockBean\u3002@MockBean\u5fc5\u987b\u5728SpringBoot\u7684\u6d4b\u8bd5\u4e0a\u4e0b\u6587\u4e2d\u5de5\u4f5c\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5c06@MockBean\u7406\u89e3\u4e3a\u4ee5\u6a21\u62df\u5bf9\u8c61\u7684\u65b9\u5f0f\u5b9a\u4e49\u4e00\u4e2aBean\uff0c\u7136\u540e\u5c06\u6a21\u62df\u5bf9\u8c61\u65e0\u5dee\u522b\u5730\u653e\u5230\u4e86\u5bb9\u5668\u4e2d\u3002\u5b83\u7684\u751f\u547d\u5468\u671f\u4e0e\u666e\u901a\u7684Bean\u7c7b\u4f3c\u3002\u6bd4\u5982\uff0c\u5728\u4f7f\u7528SpringExtension\u7684UserServiceTest\u4e2d\uff0cUserMapper\u662f\u901a\u8fc7\u6ce8\u89e3@InjectMocks \u7684\u65b9\u5f0f\u52a0\u8f7d\u5230UserService\u4e2d\u7684\uff0c\u5728\u8fd9\u4e2a\u573a\u666f\u4e0b\u4e0d\u4f1a\u6709\u989d\u5916\u7684Bean\u88ab\u52a0\u8f7d\u8fdb\u6765\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @ExtendWith(SpringExtension.class) public class UserServiceTest { @InjectMocks private UserService userService; @Mock private UserMapper userMapper; } \u8fd9\u91cc\u5982\u679c\u4f7f\u7528\u4e86@MockBean\u5c31\u53ef\u4ee5\u7701\u7565\u6389@InjectMocks\uff0c\u53ea\u662f\u8fd9\u6837\u4e00\u6765\uff0c\u5c31\u9700\u8981\u4f7f\u7528@Autowired\u6765\u83b7\u53d6UserService\u7684Bean\u4e86\u3002\u8bf7\u6ce8\u610f\u533a\u5206\u8fd9\u4e24\u79cd\u5f62\u5f0f\u7684\u5199\u6cd5\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @SpringBootTest public class UserServiceMockBeanTest { @Autowired private UserService userService; @MockBean // \u6ce8\u610f\uff0c\u8981\u6c42 UserMapper \u6ca1\u6709\u88ab\u5b9a\u4e49\u8fc7\u624d\u80fd\u88ab\u6a21\u62df private UserMapper userMapper; @Test public void should_list_users() { userService.listAll(); Mockito.verify(userMapper).selectAll(); } } \u4f7f\u7528@MockBean\u6ce8\u89e3\u65f6\uff0c\u5185\u90e8\u521b\u5efa\u7684\u4f9d\u7136\u662fMockito\u7684\u6a21\u62df\u5bf9\u8c61\uff0c\u4e0d\u8fc7\u5b83\u662f\u4ee5Bean\u7684\u65b9\u5f0f\u5b58\u5728\u7684\uff0c\u5e76\u4e14\u4f1a\u4ee5\u6b64\u5f62\u5f0f\u521d\u59cb\u5316 ApplicationContext\u4e0a\u4e0b\u6587\u3002@MockBean \u53ef\u7528\u4e8e\u4efb\u4f55\u6d4b\u8bd5\u7c7b\u7684\u5c5e\u6027\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e@Configuration\u4fee\u9970\u7684\u7c7b\u7684\u5c5e\u6027\u4e0a\uff08\u7528\u6765\u51c6\u5907\u6d4b\u8bd5\u914d\u7f6e\uff09\u3002Spring \u63d0\u4f9b\u7684ApplicationContext\u4e0a\u4e0b\u6587\u4f1a\u88ab\u7f13\u5b58\uff0c\u8fd9\u662f\u4e3a\u4e86\u8282\u7701\u6d4b\u8bd5\u7684\u65f6\u95f4\u3002\u4f7f\u7528@MockBean \u521b\u5efa\u7684\u5bf9\u8c61\u4f1a\u81ea\u52a8\u5728\u6d4b\u8bd5\u5b8c\u6210\u540e\u91cd\u7f6e\u3002\u5982\u679c\u662f\u81ea\u5df1\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u8981\u6ce8\u610f\u662f\u5426\u9700\u8981\u6e05\u7406\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\u6539\u53d8\u3002 \u4f7f\u7528@MockBean\u7684\u524d\u63d0\u662f\u5bb9\u5668\u4e2d\u4e0d\u5b58\u5728\u540c\u7c7b\u578b\u7684 Bean\uff0c\u5982\u679c Bean \u5df2\u7ecf\u5b58\u5728\uff0c@MockBean \u5c31\u4f1a\u5931\u6548\u3002\u4e0b\u6587\u4f1a\u4ecb\u7ecd\u5982\u4f55\u6307\u5b9a\u6d4b\u8bd5\u9700\u8981\u7684\u90e8\u5206Bean\uff0c\u800c\u4e0d\u662f\u52a0\u8f7d\u5168\u90e8\u7684Bean\u3002\u5982\u679c\u4e00\u4e2aBean\u5df2\u7ecf\u88ab\u5176\u4ed6\u914d\u7f6e\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528@SpyBean\u5bf9\u8fd9\u4e2aBean\u8fdb\u884c\u5305\u88c5\u548c\u76d1\u89c6\uff0c\u4ece\u800c\u8fbe\u5230\u5b8c\u6210\u6d4b\u8bd5\u7684\u76ee\u7684\u3002 \u4f7f\u7528Spring Testing\u65f6\uff0c\u89e3\u51b3\u4e1a\u52a1\u4ee3\u7801\u4e2d\u7684Bean\u548c\u6d4b\u8bd5\u4e2d\u9700\u8981\u6a21\u62df\u7684Bean\u7684\u51b2\u7a81\u6709\u65f6\u4f1a\u975e\u5e38\u9ebb\u70e6\uff0c\u4f46\u501f\u52a9Spring Boot\u5f3a\u5927\u7684\u914d\u7f6e\u53ef\u4ee5\u6709\u5f88\u591a\u65b9\u6cd5\u7ed5\u8fc7\u8fd9\u4e9b\u95ee\u9898\u3002 \u4f7f\u7528Profile\u673a\u5236\u4e13\u95e8\u4e3a\u6d4b\u8bd5\u542f\u52a8\u4e00\u4e2aProfile\uff0c\u88ab\u6a21\u62df\u7684Bean\u5728\u7279\u5b9a\u7684Profile\u4e0b\u4e0d\u542f\u52a8\uff0c\u907f\u514d\u4e0e\u6a21\u62df\u7684Bean\u53d1\u751f\u51b2\u7a81\u3002 \u4f7f\u7528\u4e0d\u540c\u7684YAML\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\uff0c\u6e90\u4ee3\u7801\u4e2d\u7684YAML\u7528\u4e8e\u6b63\u5e38\u7684\u4e1a\u52a1\uff0c\u5728\u6d4b\u8bd5\u76ee\u5f55\u4e0b\u4f7f\u7528\u4e13\u95e8\u7684YAML\u6587\u4ef6\u6765\u5f00\u542f\u548c\u5173\u95ed\u67d0\u4e9b\u7279\u6027\u3002 \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u4f7f\u7528\u4e86\u4e13\u95e8\u7684\u6587\u4ef6\u6765\u914d\u7f6e\u5185\u5b58\u6570\u636e\u5e93\u3001\u65e5\u5fd7\u7ea7\u522b\u3001\u7aef\u53e3\u7b49\uff0c\u907f\u514d\u6d4b\u8bd5\u65f6\u5f71\u54cd\u6b63\u5e38\u7684\u542f\u52a8\u3002 // application.yml \u4f4d\u4e8e /test/resources \u4e0b server: port: 8080 logging.file: logs/application.log logging: level: org: springframework: web: DEBUG spring: datasource: url: jdbc:h2:mem:unit_testing_db h2: console: enabled: true mybatis: mapper-locations: classpath:mapper/*.xml","title":"5.3.2 \u5bf9 Bean \u7684\u6a21\u62df\u548c\u76d1\u89c6"},{"location":"05-testing-with-spring/#533-spring-boot","text":"\u6b63\u56e0\u4e3a@SpringBootTest\u5e2e\u6211\u4eec\u542f\u52a8\u4e86\u6240\u6709\u9700\u8981\u7684\u914d\u7f6e\uff0c\u56e0\u6b64\u4f7f\u7528\u4e86@SpringBootTest \u5c31\u610f\u5473\u7740\u6211\u4eec\u7684\u6d4b\u8bd5\u53d8\u6210\u4e86\u4e00\u4e2a\u96c6\u6210\u6d4b\u8bd5\uff0c\u8fd9\u4f1a\u62d6\u6162\u6d4b\u8bd5\u901f\u5ea6\u3002\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u9700\u542f\u7528\u3002\u5982\u679c\u9700\u8981\u6d4b\u8bd5 MyBatis Mapper\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528@MybatisTest \u53ea\u52a0\u8f7d\u5fc5\u8981\u7684\u914d\u7f6e\u3002 @SpringBootTest\u9ed8\u8ba4\u4f1a\u542f\u52a8\u6240\u6709\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u4f8b\u5982\uff1a Web\u670d\u52a1\u5668\uff08\u6bd4\u5982 Tomcat\uff0c\u53d6\u51b3\u4e8e\u914d\u7f6e\uff09\u3002 \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u3002 MyBatis\u6216\u8005\u4e0eJPA\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u8fd9\u53d6\u51b3\u4e8e\u76f8\u5e94\u7684\u81ea\u52a8\u5316\u914d\u7f6e\u662f\u5426\u88ab\u5f15\u5165\u3002 \u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u6837\u7684\u914d\u7f6e\u5bf9\u4e8e\u5355\u5143\u6d4b\u8bd5\u6765\u8bf4\u592a\u91cd\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u53ea\u60f3\u8981\u6d4b\u8bd5Controller\uff0c\u5176\u5b9e\u6ca1\u5fc5\u8981\u542f\u52a8Web\u670d\u52a1\u5668\uff08\u4f7f\u7528MockMvc\u5c31\u884c\uff09\uff0c\u6d4b\u8bd5Repository\u6216\u8005Mapper\u4e5f\u53ea\u9700\u8981\u914d\u7f6e\u4e0e\u6570\u636e\u5e93\u76f8\u5173\u7684Bean\u5373\u53ef\u3002 spring-boot-test-autoconfigure\u6a21\u5757\u63d0\u4f9b\u4e86\u5f88\u591a@...Test\u7684\u6ce8\u89e3\u4ee3\u66ff@SpringBootTest\u6765\u63d0\u4f9b\u5c40\u90e8\u7684\u81ea\u52a8\u5316\u914d\u7f6e\u3002@...Test\u4f1a\u542f\u52a8\u5e94\u7528\u4e0a\u4e0b\u6587\uff0c\u5e76\u5f15\u5165\u6709\u9650\u7684@AutoConfigure...\u3002\u8fd9\u4e9b@...Test\u76f8\u5f53\u4e8e\u5e2e\u4f60\u914d\u7f6e\u4e86\u4e00\u4e9bBean\u6765\u771f\u5b9e\u5730\u9a8c\u8bc1\u90e8\u5206\u57fa\u7840\u8bbe\u65bd\u3002\u5b98\u65b9\u4f7f\u7528Testing Slices\u6765\u63cf\u8ff0\u8fd9\u7c7b\u6d4b\u8bd5\uff0c\u5e76\u901a\u8fc7\u5206\u5c42\u5c06\u4ee3\u7801\u8fdb\u884c\u5206\u7247\u52a0\u8f7d\uff0c\u4ee5\u8fbe\u5230\u521a\u597d\u6ee1\u8db3\u6d4b\u8bd5\u9700\u6c42\u7684\u76ee\u7684\u3002 \u4f8b\u5982@WebMvcTest\u5c31\u53ea\u4f1a\u542f\u52a8\u4e0eRequestMapping\u76f8\u5173\u7684Bean\uff0c\u6bd4\u5982@Controller\u3001@ControllerAdvice\u3001@JsonComponent\u3001Converter\u3001GenericConverter\u3001Filter\u3001WebMvcConfigurer\u548cHandlerMethodArgumentResolver\u7b49\u3002 \u4f7f\u7528@WebMvcTest\u5c31\u53ef\u4ee5\u53ea\u6d4b\u8bd5\u5f15\u5165\u7684Controller\uff0c\u800c\u4e0d\u5fc5\u542f\u52a8\u5176\u4ed6\u76f8\u5173\u7684Bean\uff0c\u5e76\u4e14\u4e5f\u80fd\u8ba9Controller\u4e0a\u7684\u90a3\u4e9b\u6ce8\u89e3\u751f\u6548\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @WebMvcTest(UserController.class) public class ApplicationTestOnlyController { @Autowired private MockMvc mvc; @MockBean private UserService userService; @Test public void should_list_users() throws Exception { Instant createAndUpdateInstant = Instant.parse(\"2021-11-07T00:55:32.026Z\"); given(this.userService.listAll()) .willReturn(Lists.newArrayList(new User(1L, \"James\", \"123456\", createAndUpdateInstant, createAndUpdateInstant))); this.mvc.perform(MockMvcRequestBuilders.get(\"/users\") .accept(MediaType.APPLICATION_JSON_VALUE)) .andExpect(status().isOk()).andExpect( content().string(\"[{\\\"id\\\":1,\\\"username\\\":\\\"James\\\",\\\"password\\\":\\\"123456\\\",\\\"createAt\\\":\\\"2021-11-07T00:55:32.026Z\\\",\\\"updateAt\\\":\\\"2021-11-07T00:55:32.026Z\\\"}]\") ); } } \u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u53ea\u662f\u521d\u59cb\u5316\u4e86Spring Boot\u57fa\u672c\u7684\u4e0a\u4e0b\u6587\u548c\u4e0eSpring MVC\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u4ece\u65e5\u5fd7\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0cSpring Boot\u5e76\u6ca1\u6709\u542f\u52a8\u4e0e\u6570\u636e\u5e93\u76f8\u5173\u7684\u8bbe\u65bd\u3002\u8fd9\u91cc\u7684UserService\u6709\u88ab\u6a21\u62df\uff0c\u56e0\u6b64\u80fd\u6b63\u5e38\u5730\u8fd4\u56de\u6570\u636e\uff0c\u88ab\u8be5\u6d4b\u8bd5\u5f71\u54cd\u7684\u6709\u6548\u7684\u4ee3\u7801\u8303\u56f4\u662f\uff1a Spring MVC\u76f8\u5173\u7684\u903b\u8f91\uff08\u65e0Web\u670d\u52a1\u5668\uff09\u3002 Controller \u4e2d\u7684\u6ce8\u89e3\u548c\u903b\u8f91\u3002 \u9664\u6b64\u4e4b\u5916\uff0c@WebMvcTest\u52a0\u8f7d\u7684Bean\u4e5f\u975e\u5e38\u6709\u9650\uff0c\u57fa\u672c\u53ea\u6709UserController\uff0c\u56e0\u6b64\u4ecd\u7136\u53ef\u4ee5\u8ba4\u4e3a\u662fController\u5c42\u7684\u5355\u5143\u6d4b\u8bd5\u3002 \u67e5\u9605@WebMvcTest\u548c@SpringBootTest\u7684\u90e8\u5206\u6e90\u7801\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u4eec\u7684\u4e0d\u540c\u4e4b\u5904\u3002@WebMvcTest\u76f8\u5f53\u4e8e\u57fa\u4e8eSpring\u6240\u8fdb\u884c\u7684\u6d4b\u8bd5\uff0c\u5b83\u7ec4\u5408\u4e86\u5f88\u591a\u81ea\u52a8\u5316\u914d\u7f6e\u7684\u6ce8\u89e3\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a // @WebMvcTest \u7684\u5173\u952e\u6ce8\u89e3 @BootstrapWith(WebMvcTestContextBootstrapper.class) @ExtendWith({SpringExtension.class}) @OverrideAutoConfiguration( enabled = false ) @TypeExcludeFilters({WebMvcTypeExcludeFilter.class}) @AutoConfigureCache @AutoConfigureWebMvc @AutoConfigureMockMvc @ImportAutoConfiguration \u800c@SpringBootTest\u5219\u4f7f\u7528SpringBootTestContextBootstrapper\u6784\u5efa\u4e86\u5b8c\u6574\u7684\u6d4b\u8bd5\u4e0a\u4e0b\u6587\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a // @SpringBootTest \u7684\u5173\u952e\u6ce8\u89e3 @BootstrapWith(SpringBootTestContextBootstrapper.class) @ExtendWith(SpringExtension.class) \u5982\u679c\u6211\u4eec\u53ea\u662f\u60f3\u6d4b\u8bd5\u4e0e\u6846\u67b6\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u6bd4\u5982MyBatis Mapper\u3001Redis\u8fde\u63a5\u3001Spring Data JPA\u7b49\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u76f8\u5e94\u7684\u5c40\u90e8\u6d4b\u8bd5\u6ce8\u89e3\u3002 1. @MybatisTest MyBatis\u4e0d\u5728\u9ed8\u8ba4\u7684\u81ea\u52a8\u914d\u7f6e\u4e2d\uff0c\u5982\u679c\u4f60\u662f\u901a\u8fc7mybatis-spring-boot-autoconfigure\u5305\u81ea\u52a8\u914d\u7f6e\u7684MyBatis\uff0c\u53ef\u4ee5\u5f15\u5165 mybatis-spring-boot-test-autoconfigure\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <dependency> <groupId>org.mybatis.spring.boot</groupId> <artifactId>mybatis-spring-boot-starter-test</artifactId> <version>2.1.0</version> </dependency> \u82e5\u60f3\u5b9e\u73b0\u53ea\u6d4b\u8bd5 Mapper \u7684\u903b\u8f91\uff0c\u53ef\u4ee5\u5728\u4f7f\u7528@MybatisTest \u65f6\u53ea\u521b\u5efa\u4e0e Mapper \u76f8\u5173\u7684Bean\uff0c\u5e76\u542f\u52a8\u5185\u5b58\u6a21\u62df\u6570\u636e\u7684\u5b58\u50a8\uff08\u5982\u679c\u5f15\u5165\u4e86\u5185\u5b58\u6570\u636e\u5e93\u7684Starter\uff09\uff0c\u4ee5\u4fbf\u8fdb\u884c\u65ad\u8a00\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @MybatisTest public class TestForMapper { @Autowired private UserMapper userMapper; @Test void should_save_user() { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); setCreateAt(Instant.now()); setUpdateAt(Instant.now()); }}; userMapper.insert(user); // \u4e0b\u9762\u53ef\u4ee5\u662f\u4e00\u4e9b\u65ad\u8a00 } } 2. @JsonTest \u5728\u670d\u52a1\u5668\u4e0a\u8fdb\u884c\u5f00\u53d1\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u53cd\u590d\u8c03\u8bd5JSON\u7684\u5e8f\u5217\u5316\u3002\u5982\u679c\u6ca1\u6709\u53d6\u5f97\u9884\u671f\u7684\u6548\u679c\uff0c\u53ef\u4ee5\u4e3a\u5176\u7f16\u5199\u5355\u72ec\u7684\u6d4b\u8bd5\uff0c\u6709\u9488\u5bf9\u6027\u5730\u8fdb\u884c\u8c03\u8bd5\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u4f7f\u7528@JsonTest\u52a0\u8f7d\u4e86\u4e0eJSON\u76f8\u5173\u7684\u81ea\u52a8\u5316\u914d\u7f6e\uff0c\u7136\u540e\u68c0\u67e5\u5176\u4e0e\u9884\u671f\u7684\u662f\u5426\u5339\u914d\u3002 @JsonTest public class TestForJson { @Autowired private ObjectMapper objectMapper; @Test void should_serialize_properly() throws JsonProcessingException { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); setCreateAt(Instant.now()); setUpdateAt(Instant.now()); }}; assertEquals(\"{\\\"id\\\":0,\\\"username\\\":\\\"zhangsan\\\",\\\"password\\\":\\\"123456\\\",\\\"createAt\\\":\\\"2021-11-07T02:00:45.126Z\\\",\\\"updateAt\\\":\\\"2021-11-07T02:00:45.126Z\\\"}\", this.objectMapper.writeValueAsString(user)); } } Spring Boot \u5f15\u5165\u4e86AssertJ\u3001JSONAssert\u53caJsonPath\u6765\u5b9e\u73b0\u66f4\u597d\u7684\u65ad\u8a00\uff0c\u5176\u65ad\u8a00\u65b9\u5f0f\u662f\u4f7f\u7528Path\u8def\u5f84\u83b7\u53d6JSON\u4e2d\u7684\u503c\u3002\u4f7f\u7528JacksonTester\u53ef\u4ee5\u83b7\u53d6\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u7684JSON\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u7ed3\u5408Helper\u6765\u7f16\u5199\u65ad\u8a00\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Autowired private JacksonTester<User> userJacksonTester; @Test void should_serialize_properly_with_tester() throws IOException { User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); setCreateAt(Instant.now()); setUpdateAt(Instant.now()); }}; assertThat(this.userJacksonTester.write(user)).hasJsonPath(\"@.username\"); assertThat(this.userJacksonTester.write(user)) .extractingJsonPathStringValue(\"@.username\") .isEqualTo(\"zhangsan\"); } \u7531\u4e8e@...Test\u4e0d\u80fd\u7ec4\u5408\u4f7f\u7528\uff0c\u56e0\u6b64\u5982\u679c\u60f3\u8981\u5728@WebMvcTest\u91cc\u914d\u7f6e\u5176\u4ed6\u7684Bean\uff0c\u53ef\u4ee5\u901a\u8fc7@AutoConfigure...\u6ce8\u89e3\u9009\u62e9\u6027\u5730\u5f15\u5165\u81ea\u52a8\u914d\u7f6e\uff0c\u6216\u8005\u81ea\u5df1\u76f4\u63a5\u521b\u5efa\u76f8\u5173\u7684Bean\u3002\u521b\u5efa\u7684\u65b9\u5f0f\u662f\u7f16\u5199\u4e00\u4e2a@Configuration\u4fee\u9970\u7684\u914d\u7f6e\u7c7b\uff0c\u5e76\u653e\u7f6e\u5230Spring Boot\u80fd\u626b\u63cf\u5230\u7684\u5730\u65b9\u3002","title":"5.3.3 Spring Boot \u5207\u7247\u914d\u7f6e"},{"location":"05-testing-with-spring/#54","text":"\u5728\u4f7f\u7528Spring\u505a\u6d4b\u8bd5\u65f6\uff0c\u6bd4\u8f83\u5934\u75bc\u7684\u662f\u5b83\u7684\u4ee3\u7801\u5206\u5c42\u6240\u9700\u5339\u914d\u7684\u6d4b\u8bd5\u7b56\u7565\u3002SpringBoot\u9879\u76ee\u4e00\u822c\u4f1a\u5206\u4e3aController\u3001Service\u3001Repository\uff08\u6216\u53ebDAO\u3001Mapper\uff09\u8fd9\u4e09\u5c42\u3002\u5728\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u65f6\uff0c\u9700\u8981\u8003\u8651\u5206\u5c42\u9694\u79bb\u6d4b\u8bd5\u3002 \u5982\u679c\u6211\u4eec\u6bcf\u5c42\u90fd\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u4f1a\u51fa\u73b0\u5927\u91cf\u65e0\u610f\u4e49\u7684\u6837\u677f\u4ee3\u7801\uff1b\u5982\u679c\u4e0d\u5206\u5c42\u6d4b\u8bd5\uff0c\u4e3a\u4e86\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\u9700\u8981\u7f16\u5199\u7684\u6d4b\u8bd5\u7528\u4f8b\u7684\u7ec4\u5408\u5c31\u975e\u5e38\u591a\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5145\u5206\u8003\u8651\u5206\u5c42\u6d4b\u8bd5\u7684\u7b56\u7565\u95ee\u9898\u3002\u4e0b\u9762\u8ba8\u8bba\u4e00\u4e0b\u5728Web\u670d\u52a1\u5668\u4e0a\u5f00\u53d1\u65f6\u5e38\u89c1\u7684\u5206\u5c42\u6d4b\u8bd5\u7b56\u7565\u3002","title":"5.4 \u5206\u5c42\u6d4b\u8bd5\u548c\u6d4b\u8bd5\u7b56\u7565"},{"location":"05-testing-with-spring/#541","text":"\u901a\u8fc7\u5bf9\u4e00\u4e9bSpring\u9879\u76ee\u8fdb\u884c\u89c2\u5bdf\uff0c\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u4e9b\u6a21\u5f0f\u53ef\u4ee5\u53c2\u80031.\u4e25\u683c\u7684\u5355\u5143\u6d4b\u8bd5 1. \u4e25\u683c\u7684\u5355\u5143\u6d4b\u8bd5 \u5f88\u591a\u5355\u5143\u6d4b\u8bd5\u7231\u597d\u8005\uff0c\u6216\u8005\u8bf4\u6709\u4ee3\u7801\u6d01\u7656\u7684\u5f00\u53d1\u8005\u5e0c\u671b\u628a\u6bcf\u5c42\u90fd\u62c6\u5f00\u6d4b\u8bd5\u3002\u7f16\u5199\u5404\u81ea\u72ec\u7acb\u7684\u6d4b\u8bd5\u65f6\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u6587\u4ef6\u7684\u4f4d\u7f6e\u9700\u8981\u4e0e\u6e90\u4ee3\u7801\u7684\u4f4d\u7f6e\u4fdd\u6301\u4e25\u683c\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u57fa\u4e8e\u8fd9\u79cd\u89c2\u5ff5\uff0cSpring\u7684\u6d4b\u8bd5\u5e93\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u53ea\u9700\u8981\u4f7f\u7528JUnit\u548cMockito\u3002 \u8fd1\u5e74\u6765\uff0c\u4e25\u683c\u7684\u5206\u5c42\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u8d28\u7591\uff0c\u539f\u56e0\u662fSpring\u6846\u67b6\u901a\u8fc7\u6ce8\u89e3\u5e2e\u6211\u4eec\u5b8c\u6210\u4e86\u5927\u91cf\u7684\u57fa\u7840\u64cd\u4f5c\uff0c\u6bd4\u5982\u6570\u636e\u7684\u6301\u4e45\u5316\u3001\u6570\u636e\u7684\u6821\u9a8c\u7b49\uff0c\u800c\u5bf9\u8fd9\u4e9b\u903b\u8f91\u7684\u9a8c\u8bc1\u5374\u5b8c\u5168\u8d77\u4e0d\u5230\u6d4b\u8bd5\u7684\u4f5c\u7528\u3002 \u4e0d\u8ba9Controller\u4e0a\u7684\u6ce8\u89e3\u53d1\u751f\u4f5c\u7528\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u51e0\u4e4e\u6ca1\u6709\u6d4b\u8bd5\u7684\u5185\u5bb9\u548c\u4ef7\u503c\u3002 2. \u5173\u952e\u5355\u5143\u6d4b\u8bd5\u4e0e API \u6d4b\u8bd5 \u53e6\u4e00\u90e8\u5206\u5f00\u53d1\u8005\u8ba4\u4e3a\u4e0d\u5e94\u8be5\u901a\u8fc7\u7eaf\u7cb9\u7684\u5355\u5143\u6d4b\u8bd5\u6765\u9a8c\u8bc1API\u63a5\u53e3\u548c\u6570\u636e\u5e93\u8bbf\u95ee\uff0c\u5f00\u53d1\u8005\u5e94\u8be5\u53ea\u5173\u6ce8\u4e1a\u52a1\u903b\u8f91\u7684\u6b63\u786e\u6027\uff0c\u4e0e\u6846\u67b6\u76f8\u5173\u7684\u6d4b\u8bd5\u5de5\u4f5c\u901a\u8fc7API\u6d4b\u8bd5\u53ef\u4ee5\u8986\u76d6\u3001\u9a8c\u8bc1\uff0c\u5f00\u53d1\u8005\u53ea\u9700\u8981\u9488\u5bf9Service\u5c42\u7684\u903b\u8f91\u8fdb\u884c\u5145\u5206\u6d4b\u8bd5\u5373\u53ef\uff0c\u4e0e\u6846\u67b6\u3001\u6280\u672f\u8bbe\u65bd\u76f8\u5173\u7684\u6d4b\u8bd5\u5219\u4ea4\u7ed9API\u6d4b\u8bd5\u6765\u5904\u7406\u3002API\u6d4b\u8bd5\u53ef\u4ee5\u7531\u5f00\u53d1\u4eba\u5458\u548c\u6d4b\u8bd5\u4eba\u5458\u5171\u540c\u7ef4\u62a4\uff0c\u6d4b\u8bd5\u4eba\u5458\u4e0d\u5fc5\u5355\u72ec\u7ef4\u62a4\u4e00\u5957API\u6d4b\u8bd5\uff0c\u5f00\u53d1\u4eba\u5458\u4e5f\u4e0d\u5fc5\u5173\u6ce8\u57fa\u7840\u8bbe\u65bd\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u96c6\u6210\u95ee\u9898\u3002 \u57fa\u4e8eWeb\u670d\u52a1\u7aef\u5f00\u53d1\u7684\u6027\u8d28\uff0c\u5f00\u53d1\u4eba\u5458\u5f80\u5f80\u9700\u8981\u4e0eWeb\u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u5927\u91cf\u6253\u4ea4\u9053\uff0c\u4f46\u662f\uff0c\u5982\u679c\u4ec5\u4ec5\u8ba9\u5f00\u53d1\u4eba\u5458\u5173\u5fc3\u5355\u5143\u6d4b\u8bd5\uff0c\u90a3\u4e48\u4ed6\u4eec\u6d4b\u8bd5\u4e0d\u5230Web\u8bf7\u6c42\u53ca\u4e0e\u6570\u636e\u5e93\u76f8\u5173\u7684\u64cd\u4f5c\u3002\u6bd4\u5982\uff0cMyBatis\u7684Mapper\u4e2d\u6709\u5b57\u6bb5\u9519\u8bef\uff0c\u5f00\u53d1\u4eba\u5458\u662f\u65e0\u6cd5\u53ca\u65f6\u53d1\u73b0\u7684\u3002\u6b64\u5916\uff0c\u4e1a\u52a1\u903b\u8f91\u4e0e\u6570\u636e\u7d27\u5bc6\u76f8\u5173\uff0c\u5982\u679c\u7f3a\u4e4f\u6570\u636e\u5e93\u76f8\u5173\u7684\u903b\u8f91\uff0c\u6d4b\u8bd5\u7684\u6027\u4ef7\u6bd4\u4e0d\u9ad8\u3002 3. \u8f7b\u91cf\u7ea7\u96c6\u6210\u6d4b\u8bd5 \u53e6\u5916\u4e00\u79cd\u601d\u8def\u662f\u57fa\u4e8e\u524d\u9762\u4e24\u4e2a\u7b56\u7565\u505a\u51fa\u4e00\u4e9b\u53d6\u820d\uff0c\u628a\u90e8\u5206\u4e0eSpring\u6846\u67b6\u7684\u7ed3\u5408\u70b9\u4e5f\u7b97\u4f5c\u5355\u5143\u6d4b\u8bd5\u7684\u4e00\u90e8\u5206\uff0c\u5373\u770b\u4f5c\u8f7b\u91cf\u7ea7\u7684\u96c6\u6210\u6d4b\u8bd5\u3002 \u5bf9Controller\u5c42\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff0c\u53ef\u4f7f\u7528MockMvc\u6d4b\u8bd5Controller\u76f8\u5173\u903b\u8f91\u662f\u5426\u6b63\u786e\uff0c\u5305\u62ec\u8f93\u51fa\u683c\u5f0f\u3001\u5934\u90e8\u548c\u5f02\u5e38\u7b49\u3002\u4e3a\u4e86\u907f\u514d\u6d4b\u4e0d\u5230\u5927\u91cf\u6ce8\u89e3\uff0c\u4e0d\u8981\u76f4\u63a5\u901a\u8fc7new \u5173\u952e\u5b57\u521b\u5efaController\u5bf9\u8c61\uff0c\u8fd9\u6837\u6d4b\u4e0d\u5230\u5927\u91cf\u7684\u6ce8\u89e3\u3002\u4f7f\u7528MockMvc\u53ef\u4ee5\u505a\u5230\u4e0d\u542f\u52a8\u771f\u6b63\u7684Web\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u6d4b\u8bd5Controller\u4e0a\u7684\u6ce8\u89e3\u3002 \u5bf9Service\u5c42\u548c\u6301\u4e45\u5c42\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff0c\u53ef\u4f7f\u7528@DataJpaTest\u6216@MybatisTest\u81ea\u52a8\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u6570\u636e\u5e93\u5219\u4f7f\u7528H2\u7b49\u5185\u5b58\u6570\u636e\u5e93\u3002\u81f3\u4e8e\u6d4b\u8bd5\u6570\u636e\uff0c\u4e0d\u8981\u76f4\u63a5\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u6570\u636e\uff0c\u5efa\u8bae\u4f7f\u7528\u4e0a\u6e38\u7684\u65b9\u6cd5\u64cd\u4f5c\u6570\u636e\u3002\u6bd4\u5982\u6d4b\u8bd5\u7528\u6237\u5217\u51fa\u7684\u65b9\u6cd5\u65f6\uff0c\u5e94\u8be5\u5148\u786e\u4fdd\u7528\u6237\u6dfb\u52a0\u7684\u65b9\u6cd5\u6ca1\u6709\u95ee\u9898\uff0c\u7136\u540e\u4f7f\u7528\u8be5\u65b9\u6cd5\u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u7528\u6237\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u6d4b\u8bd5\u6210\u672c\u3002\u56fe5-3\u5c55\u793a\u4e86\u8fd9\u79cd\u6d4b\u8bd5\u7b56\u7565\u3002 \u56fe 5-3 \u4e00\u79cd\u5206\u5c42\u6d4b\u8bd5\u7b56\u7565\u7684\u793a\u610f\u56fe \u5982\u679c\u5bf9Service\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6a21\u62df\u57fa\u7840\u8bbe\u65bd\u505a\u7eaf\u7cb9\u7684\u5355\u5143\u6d4b\u8bd5\u5b8c\u5168\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u57fa\u7840\u8bbe\u65bd\u7684\u7279\u6027\u5e76\u6ca1\u6709\u88ab\u7eb3\u5165\u6d4b\u8bd5\u7684\u8303\u56f4\uff0c\u4f1a\u9020\u6210\u6d4b\u8bd5\u6027\u4ef7\u6bd4\u4f4e\u3002\u6743\u8861\u4e4b\u4e0b\uff0c\u5728\u73b0\u5b9e\u9879\u76ee\u4e2d\u5f80\u5f80\u4f1a\u91c7\u53d6\u5c3d\u53ef\u80fd\u5730\u8ba9\u57fa\u7840\u8bbe\u65bd\u901a\u8fc7\u5185\u5d4c\u7684\u65b9\u5f0f\u53c2\u4e0e\u5230\u6d4b\u8bd5\u4e2d\u7684\u65b9\u5f0f\uff0c\u5982\u679c\u5b9e\u5728\u4e0d\u80fd\u901a\u8fc7\u5185\u5d4c\u89e3\u51b3\uff08\u4f8b\u5982\u4e00\u4e9b\u4e91\u57fa\u7840\u8bbe\u65bd\uff09\uff0c\u5219\u901a\u8fc7\u6a21\u62df\u5904\u7406\u3002 \u901a\u8fc7\u4e0a\u9762\u7684\u65b9\u6848\uff0c\u5c31\u4e0d\u9700\u8981\u5b8c\u6574\u5730\u542f\u52a8Spring Boot\u7684\u4e0a\u4e0b\u6587\u4e86\uff0c\u88c5\u8f7d\u5bf9\u5e94\u7684Bean\u5373\u53ef\u3002\u6bd4\u5982\u5bf9UserService\u8fdb\u884c\u6d4b\u8bd5\uff0c\u53ea\u9700\u8981\u52a0\u8f7dUserService\u7684Bean\u4ee5\u53caMapper\u5c42\uff0c\u914d\u5408\u5185\u5b58\u6570\u636e\u5e93\u5373\u53ef\u5b8c\u6210\u6d4b\u8bd5\u3002 4. \u5355\u5143\u6d4b\u8bd5\u4e0e\u96c6\u6210\u6d4b\u8bd5\u76f8\u7ed3\u5408 \u5982\u679c\u5e0c\u671b\u6d4b\u8bd5\u4ee3\u7801\u7684\u6709\u6548\u6027\u548c\u53ef\u9760\u6027\u975e\u5e38\u9ad8\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u5143\u6d4b\u8bd5\u4e0e\u96c6\u6210\u6d4b\u8bd5\u76f8\u7ed3\u5408\u7684\u7b56\u7565\u3002\u8fd9\u79cd\u7b56\u7565\u80fd\u517c\u987e\u6d4b\u8bd5\u8d28\u91cf\u548c\u6548\u7387\uff0c\u5bf9\u8d28\u91cf\u4fdd\u969c\u5f88\u6709\u5e2e\u52a9\uff0c\u5f53\u7136\uff0c\u80fd\u505a\u5230\u7684\u56e2\u961f\u4e5f\u6bd4\u8f83\u5c11\u3002\u7b56\u7565\u5185\u5bb9\u5982\u4e0b\uff1a \u5bf9Controller\u8fdb\u884cMockMvc\u6d4b\u8bd5\u3002 \u5bf9Service\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u6821\u9a8c\u6240\u6709\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u6a21\u62df\u57fa\u7840\u8bbe\u65bd\u3002 \u4f7f\u7528\u5185\u5d4c\u7684\u57fa\u7840\u8bbe\u65bd\u5feb\u901f\u9a8c\u8bc1Mapper\u6216\u8005Repository\u4e2d\u4e0e\u6570\u636e\u5e93\u76f8\u5173\u7684\u903b\u8f91\u3002 \u989d\u5916\u7684\u4ee3\u7801\u53ef\u7531QA\u7f16\u5199\u72ec\u7acb\u7684API\u6d4b\u8bd5\uff0c\u4ece\u800c\u6784\u5efa\u5b8c\u6574\u7684\u4ee3\u7801\u4fdd\u62a4\u7f51\u3002","title":"5.4.1 \u6d4b\u8bd5\u7b56\u7565"},{"location":"05-testing-with-spring/#542-controller","text":"\u5982\u679c\u6211\u4eec\u53ea\u5173\u6ce8Controller\u7684\u6d4b\u8bd5\uff0cMockMvc\u662f\u975e\u5e38\u597d\u7684\u9009\u62e9\u3002\u5728\u4e4b\u524d\u4ecb\u7ecd\u5207\u7247\u6d4b\u8bd5\u65f6\u4f7f\u7528\u4e00\u4e2a\u793a\u4f8b\u8bf4\u660e\u4e86MockMvc\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u4e0b\u9762\u6765\u8be6\u7ec6\u8bf4\u4e00\u4e0b MockMve\u7684\u6267\u884c\u539f\u7406\u3002 @WebMvcTest\u542f\u52a8\u76f8\u5e94\u7684Bean\u5e76\u628aUserController\u52a0\u5165\u6a21\u62df\u7684RequestMapping\u4e2d\u3002 \u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2dMockMvc\u4e0d\u4f1a\u53d1\u8d77\u771f\u5b9e\u7684HTTP\u8bf7\u6c42\uff0c\u56e0\u6b64\u9700\u8981\u6ce8\u5165\u4e00\u4e2aMockMvc\u5bf9\u8c61\u6765\u6784\u9020\u8bf7\u6c42\u3002 \u6211\u4eec\u77e5\u9053\uff0c@WebMvcTest\u4e0d\u4f1a\u542f\u52a8\u6574\u4e2a\u5e94\u7528\u7684\u4e0a\u4e0b\u6587\uff0cUserController\u4f9d\u8d56\u7684Service \u6ca1\u6709\u521d\u59cb\u5316\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528@MockBean\u6765\u6a21\u62df\uff0c\u5426\u5219\u4f1a\u62a5\u627e\u4e0d\u5230Bean\u7684\u9519\u8bef\u3002\u901a\u8fc7@MockBean\u5f97\u5230\u6a21\u62df\u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u7528Mockito \u5185\u90e8\u7684given\u7b49\u9759\u6001\u65b9\u6cd5\u8fdb\u884c\u64cd\u4f5c\uff0c\u5b9a\u4e49\u8fd4\u56de\u503c\u7b49\u3002\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528MockMvc\u7684\u5b9e\u4f8b\u6784\u5efa\u8bf7\u6c42\u3001\u53d1\u9001\u8bf7\u6c42\u5e76\u9a8c\u8bc1\u8fd4\u56de\u503c\u3002 \u6b64\u5904\u4f7f\u7528\u7684\u662f@WebMvcTest\uff08MockMvc\uff09\u800c\u975e@SpringBootTest\uff0c\u5b83\u4eec\u975e\u5e38\u5bb9\u6613\u88ab\u5f04\u6df7\u3002\u56fe5-4\u5c55\u793a\u4e86\u8fd9\u4e24\u79cd\u6d4b\u8bd5\u7684\u5dee\u5f02\u3002 \u56fe 5-4 MockMVC \u548c SpringBootTest \u7684\u533a\u522b \u6ce8\uff1a\u56fe\u7247\u6765\u6e90\u4e8e https://docs.spring.io/\u3002 \u4ece\u56fe5-4\u53ef\u4ee5\u770b\u51fa\uff0cMockMvc\u7684\u6d4b\u8bd5\u66f4\u52a0\u8f7b\u91cf\u7ea7\u548c\u7b80\u5355\uff0c\u4f46\u662f\u5fc5\u8981\u65f6\u9700\u8981\u624b\u52a8\u6a21\u62df\u6216\u8005\u914d\u7f6e\u4e00\u4e9b\u4f9d\u8d56\u7684 Bean\u3002MockMvc\u6a21\u62df\u7684\u662fWeb\u670d\u52a1\u5668\u548cHTTP\u534f\u8bae\u8bf7\u6c42\uff0c\u4ee5\u53ca\u63a5\u6536\u3001\u89e3\u6790\u4e00\u7cfb\u5217\u5173\u4e8e\u7f51\u7edc\u7684\u903b\u8f91\uff0c\u6bd5\u7adf\u8fd9\u90e8\u5206\u662fWeb\u670d\u52a1\u5668\u5e94\u8be5\u5145\u5206\u6d4b\u8bd5\u7684\u3002 \u5728\u4e0b\u9762\u7684\u6d4b\u8bd5\u793a\u4f8b\u4e2d\uff0cshould_list_users\u4e2d\u4e3b\u8981\u6d89\u53ca\u4e24\u90e8\u5206\u5185\u5bb9\uff0c\u4e00\u90e8\u5206\u662f\u5bf9\u6a21\u62df\u7684\u5bf9\u8c61\u7ed9\u4e88\u8fd4\u56de\u503c\uff0c\u53e6\u5916\u4e00\u90e8\u5206\u5c31\u662f\u53d1\u51fa\u8bf7\u6c42\u548c\u9a8c\u8bc1\u8bf7\u6c42\u3002 @Test public void should_list_users() throws Exception { // \u6a21\u62df UserService given(userService.listAll()).willReturn( Arrays.asList(new User() {{ setId(01L); setUsername(\"Test user\"); setPassword(\"123456\"); setCreateAt(Instant.now()); setUpdateAt(Instant.now()); }}) ); // \u8fdb\u884c\u6d4b\u8bd5\u8c03\u7528\u548c\u65ad\u8a00 this.mvc.perform(get(\"/users\").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()); } this.mvc.perform \u8fd9\u4e2a\u94fe\u5f0f\u8c03\u7528\u8bed\u53e5\u7684\u5de5\u4f5c\u8303\u56f4\u5305\u62ec\uff08\u7ed5\u8fc7Web\u670d\u52a1\u5668\u540e\u7684\u4ee3\u7801\u6267\u884c\u8fc7\u7a0b\uff09\uff1a MockMvc \u6784\u9020\u4e00\u4e9b\u5047\u7684HTTP\u8bf7\u6c42\u5bf9\u8c61\u3002 TestDispatcherServlet \u54cd\u5e94\u6d4b\u8bd5\u7684 Servlet\u3002 RequestMappingHandlerAdapter\u6839\u636e\u8bf7\u6c42\u7684\u8def\u5f84\u5339\u914d\u5408\u9002\u7684Controller\u3002 \u8fdb\u884c\u6d4b\u8bd5\u8c03\u7528\u548c\u65ad\u8a00\u7684\u8fd9\u90e8\u5206\u94fe\u5f0f\u8c03\u7528\u4e0d\u6613\u7406\u89e3\uff0c\u73b0\u5728\u62c6\u89e3\u5f00\u6765\u770b\u4e00\u4e0b\u6574\u4e2a\u8fc7\u7a0b\uff0c\u91cc\u9762\u5b9e\u9645\u4e0a\u6709\u5f88\u591a\u6b65\u9aa4\u3002 // 1. \u6784\u5efa\u4e00\u4e2a\u6a21\u62df\u8bf7\u6c42\uff0cget \u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u8bf7\u6c42\u7684\u8def\u5f84\uff0c\u5e76\u8bbe\u7f6e accept \u5934\u90e8\u503c\u4e3a application-json MockHttpServletRequestBuilder builder = MockMvcRequestBuilders .get(\"/users\") .accept(MediaType.APPLICATION_JSON); // 2. \u6267\u884c\u8fd9\u4e2a\u8bf7\u6c42\uff0c\u751f\u6210\u4e00\u4e2a ResultAction ResultActions perform = this.mvc.perform(builder); // 3. \u5b9a\u4e49\u4e00\u4e2a\u5339\u914d\u5668 ResultMatcher okMatcher = MockMvcResultMatchers.status().isOk(); // 4. \u6267\u884c\u8fd9\u4e2a\u5339\u914d\u5668\u8fdb\u884c\u65ad\u8a00 perform.andExpect(okMatcher); MockHttpServletRequestBuilder\u53ef\u4ee5\u521b\u5efa\u51faGET\u3001POST\u3001PUT\u3001DELETE\u7b49HTP\u8bf7\u6c42\uff0c\u5982\u679c\u9700\u8981\u5728URL\u4e0a\u5e26\u53c2\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u91cd\u8f7d\u65b9\u6cd5get\uff08String urITemplate\uff0cObject...uriVars\uff09\u3002\u8981\u4f7f\u7528POST\u53ef\u4ee5\u901a\u8fc7content\u65b9\u6cd5\u8bbe\u7f6e\u8bf7\u6c42\u7684\u5185\u5bb9\u53c2\u6570\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7multipart\u65b9\u6cd5\u8bbe\u7f6e\u6587\u4ef6\u53c2\u6570\uff0c\u7528\u4e8e\u6d4b\u8bd5\u6587\u4ef6\u4e0a\u4f20\u529f\u80fd\u3002 \u6267\u884c\u6784\u9020\u51fa\u6765\u7684\u8bf7\u6c42\uff0c\u83b7\u5f97\u4e00\u4e2aResultActions\u5e76\u7528\u4e8e\u540e\u9762\u7684\u65ad\u8a00\uff0c\u4ee5\u786e\u8ba4\u6d4b\u8bd5\u7ed3\u679c\u3002\u6267\u884c\u5b8c\u6210\u540e\uff0c\u65ad\u8a00\u524d\u4f7f\u7528ResultMatcher\u6784\u9020\u4e00\u4e2a\u5339\u914d\u5668\u3002\u5b83\u9664\u4e86\u5339\u914d\u72b6\u6001\u5916\uff0c\u8fd8\u53ef\u4ee5\u5339\u914d\u8fd4\u56de\u5934\u6d88\u606f\u3001\u6d88\u606f\u4f53\u7b49\u3002\u5982\u679c\u8fd4\u56de\u7684\u662fJSON\u76f8\u5173\u5185\u5bb9\uff0c\u5219\u8fd8\u53ef\u4ee5\u4f7f\u7528JsonPath\u6765\u65ad\u8a00JSON\u6570\u636e\u7ed3\u6784\u3002 \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5fc5\u8981\u65f6\u53ef\u5728\u591a\u6b21\u8bf7\u6c42\u4e4b\u95f4\u901a\u8fc7Cookies\u65b9\u5f0f\u4f20\u9012\u8ba4\u8bc1\u4fe1\u606f\u3002","title":"5.4.2 Controller \u7684\u6d4b\u8bd5"},{"location":"05-testing-with-spring/#543","text":"\u5e38\u89c1\u7684\u53ef\u4ee5\u88ab\u5185\u5d4c\u5904\u7406\u7684\u57fa\u7840\u8bbe\u65bd\u6709\u6570\u636e\u5e93\u3001Redis\u3001MongoDB\u7b49\u3002\u4e00\u822c\u8fd9\u4e9b\u5185\u5d4c\u7684\u5e93\u53c8\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a \u4f7f\u7528Java\u5f00\u53d1\uff0c\u901a\u8fc7Jar\u5305\u5f15\u4eba\uff0c\u4e0eJava\u7684\u5f00\u53d1\u4f53\u7cfb\u878d\u5408\u826f\u597d\u3002 \u4f7f\u7528C\u6216\u8005\u5176\u4ed6\u8bed\u8a00\u5f00\u53d1\uff0c\u901a\u8fc7\u68c0\u6d4b\u8fd0\u884c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6765\u8fd0\u884c\u76f8\u5e94\u7684\u539f\u751f\u53d1\u5e03\u7248\u3002 \u4f8b\u5982\uff0c\u5185\u5d4cRedis\u662f\u901a\u8fc7\u4e0b\u8f7d\u5bf9\u5e94\u7684Redis\u53d1\u5e03\u7248\uff0c\u7136\u540e\u901a\u8fc7Java\u7684ProcessBuilder API \u5b9e\u73b0\u7684\u3002 1. \u5185\u5b58\u6570\u636e\u5e93 \u53ef\u4ee5\u9009\u62e9\u7684\u5185\u5b58\u6570\u636e\u5e93\u6709HSQL\u3001H2\uff0cH2\u76f8\u5bf9\u4e8eHSQL\u6765\u8bf4\u529f\u80fd\u66f4\u4e3a\u5b8c\u6574\uff0c\u4f46\u662f\u7a0d\u6162\u3002Spring Boot\u5bf9H2\u7684\u652f\u6301\u4e5f\u6bd4\u8f83\u597d\uff0c\u76f8\u5173\u7684\u81ea\u52a8\u914d\u7f6e\u5df2\u7ecf\u88ab\u7eb3\u5165\u7248\u672c\u7ba1\u7406\u5668\u4e2d\u3002 \u4ee5H2\u4e3a\u4f8b\uff0c\u5982\u679c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u4f7f\u7528H2\uff0c\u5148\u5728Pom\u6587\u4ef6\u4e2d\u52a0\u5165\u76f8\u5173\u4f9d\u8d56\uff0c\u5e76\u5728\u6d4b\u8bd5\u7684\u8d44\u6e90\u76ee\u5f55\u4e0b\u589e\u52a0\u76f8\u5173\u914d\u7f6e\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> <scope>test</scope> </dependency> \u7136\u540e\u8bbe\u7f6e\u6570\u636e\u6e90\u8fde\u63a5\u4e32\uff0c\u5e76\u5f00\u542fH2\u63a7\u5236\u53f0\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a spring: datasource: url: jdbc:h2:mem:unit_testing_db h2: console: enabled: true H2\u9ed8\u8ba4\u63a7\u5236\u53f0\u7684\u8bbf\u95ee\u8def\u5f84\u662f\uff08h2-console\uff0c\u53ef\u4ee5\u901a\u8fc7spring.h2.console.path\u5c5e\u6027\u4fee\u6539\u8def\u5f84\u3002\u5b9e\u9645\u4e0a\u6d4b\u8bd5\u524d\u548c\u6d4b\u8bd5\u540e\u63a7\u5236\u53f0\u4e0a\u90fd\u4e0d\u4f1a\u6709\u6570\u636e\uff0c\u53ef\u4ee5\u901a\u8fc7\u65ad\u70b9\u4e2d\u65ad\u6d4b\u8bd5\uff0c\u5e76\u8bbf\u95eeH2\u63a7\u5236\u53f0\u8def\u5f84\u3002 \u5982\u679c\u4f7f\u7528\u4e86Flyway\u7b49\u6570\u636e\u8fc1\u79fb\u5de5\u5177\uff0c\u90a3\u4e48\u5728\u6d4b\u8bd5\u542f\u52a8\u65f6\u5b83\u4e5f\u4f1a\u751f\u6548\uff0c\u4f46\u7531\u4e8e\u6570\u636e\u5e93\u5728\u5185\u5b58\u4e2d\uff0c\u91cd\u542f\u4f1a\u4e22\u5931\u6570\u636e\uff0c\u56e0\u6b64\u4e0d\u4f1a\u91cd\u590d\u6267\u884c\u8fc1\u79fb\u4efb\u52a1\u3002 H2\u4e5f\u652f\u6301\u5c06\u6570\u636e\u843d\u76d8\uff0c\u4f7f\u7528\u7684\u65b9\u5f0f\u662f\u4fee\u6539\u8fde\u63a5\u5b57\u7b26\u4e32\uff0c\u5373\u5c06\u8fde\u63a5\u5b57\u7b26\u4e32\u4e2d\u7684mem\u4fee\u6539\u6210\u6307\u5b9a\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a spring: datasource: url: jdbc:h2:file:/data/h2:unit_testing_db 2. \u5185\u5d4c Redis \u5982\u679c\u4e1a\u52a1\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86Redis\uff0c\u4e14Redis\u7684\u5ba2\u6237\u7aef\u662f\u6a21\u62df\u7684\uff0c\u90a3\u4e48\u6d4b\u8bd5\u4e0d\u5230\u4e0eRedis\u76f8\u5173\u7684\u7279\u6027\uff0c\u6d4b\u8bd5\u6027\u4ef7\u6bd4\u964d\u4f4e\u3002\u5bf9\u6b64\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5185\u5d4c Redis\u7684\u65b9\u5f0f\u6765\u5145\u5206\u6d4b\u8bd5\u4e0eRedis\u76f8\u5173\u7684\u903b\u8f91\uff0c\u6d4b\u8bd5\u6548\u7387\u4f1a\u5927\u5927\u63d0\u9ad8\u3002 \u76ee\u524dSpring Boot\u6ca1\u6709\u652f\u6301\u5185\u5d4cRedis\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u56e0\u6b64\u9700\u8981\u624b\u52a8\u914d\u7f6e\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <dependency> <groupId>redis.embedded</groupId> <artifactId>embedded-redis</artifactId> <version>0.5</version> </dependency> \u53ef\u4ee5\u901a\u8fc7\u5728\u6d4b\u8bd5\u57fa\u7c7b\u4e2d\u7f16\u5199 setup \u548c teardown \u65b9\u6cd5\u6765\u8bbe\u7f6e\u5185\u5d4c Redis\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class SpringBaseTest { private RedisServer redisServer; @BeforeClass public void setup() throws Exception { redisServer = new RedisServer(6379); redisServer.start(); } @AfterClass public void teardown() throws Exception { redisServer.stop(); } } 3. \u5185\u5d4c MongoDB Spring Boot\u9ed8\u8ba4\u652f\u6301\u4e86\u5185\u5d4cMongoDB\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\u3002\u53ea\u9700\u8981\u589e\u52a0\u4f9d\u8d56\uff0c\u6dfb\u52a0\u4fee\u6539YAML\u914d\u7f6e\u5373\u53ef\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a <dependency> <groupId>de.flapdoodle.embed</groupId> <artifactId>de.flapdoodle.embed.mongo</artifactId> <version>2.2.1-SNAPSHOT</version> </dependency> Spring Boot\u901a\u8fc7 MongoAutoConfiguration\u7c7b\u521d\u59cb\u5316\u4e86\u5185\u5d4c\u7684 MongoDB \u4ee5\u53ca MongoClient \u7684\u914d\u7f6e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u968f\u673a\u7aef\u53e3\uff0c\u5e76\u5bf9\u5f00\u53d1\u4eba\u5458\u900f\u660e\u3002\u5982\u679c\u5e0c\u671b\u4fee\u6539\u7aef\u53e3\uff0c\u53ef\u4ee5\u5728\u6d4b\u8bd5\u76ee\u5f55\u4e0b\u7684YAML\u6587\u4ef6\u4e2d\u4fee\u6539\u5c5e\u6027spring.data.mongodb.port\u3002","title":"5.4.3 \u5185\u5d4c\u57fa\u7840\u8bbe\u65bd"},{"location":"05-testing-with-spring/#55","text":"spring-boot-test-starter\u96c6\u6210\u4e86spring-boot-test\u3001spring-test\u3001Mockito\u3001JsonPath\u7b49\u5e93\uff0c\u63d0\u4f9b\u4e86\u4e0d\u5c11\u5bf9\u6d4b\u8bd5\u975e\u5e38\u6709\u5e2e\u52a9\u7684\u5de5\u5177\u96c6\u3002\u7531\u4e8e\u9605\u8bfb\u5b8c\u6240\u6709\u7684\u6587\u6863\u8f83\u4e3a\u8d39\u65f6\uff0c\u4e14\u90e8\u5206\u6280\u5de7\u9700\u8981\u6df1\u5165\u63a2\u67e5\u6e90\u7801\u624d\u80fd\u627e\u5230\uff0c\u56e0\u6b64\u8fd9\u91cc\u6574\u7406\u4e86\u90e8\u5206\u5de5\u5177\u96c6\u76f8\u5173\u77e5\u8bc6\u4f9b\u53c2\u8003\u3002","title":"5.5 \u5e38\u7528\u7684\u6d4b\u8bd5\u5de5\u5177\u96c6"},{"location":"05-testing-with-spring/#551-spring-test","text":"spring-test \u63d0\u4f9b\u4e86\u6570\u636e\u5e93\u7edf\u8ba1\u5de5\u5177\u548c\u6d4b\u8bd5\u53cd\u5c04\u5de5\u5177\u3002 1. JdbcTestUtils JdbcTestUtils\u662fSpring Test\u5e93\u4e2d\u975e\u5e38\u5b9e\u7528\u7684\u5de5\u5177\uff0c\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u7528\u4e8e\u64cd\u4f5c\u3001\u7edf\u8ba1\u8868\u4e2d\u7684\u6570\u636e\u3002\u4f7f\u7528JdbcTestUtils \u65f6\uff0c\u9700\u8981\u4f20\u5165\u4e00\u4e2aJdbcTemplate\u4f5c\u4e3a\u5b9e\u9645\u64cd\u4f5c\u6570\u636e\u5e93\u7684\u6e20\u9053\u3002 \u5b83\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u65b9\u6cd5\uff1a countRowslnTable\u3001countRowslnTableWhere\uff1a\u7528\u4e8e\u7edf\u8ba1\uff08\u6216\u5e26\u6761\u4ef6\uff09\u7ed9\u5b9a\u6570\u636e\u5e93\u8868\u7684\u884c\u6570\u3002 deleteFromTables\u3001deleteFromTableWhere\uff1a\u7528\u4e8e\u6e05\u9664\uff08\u6216\u5e26\u6761\u4ef6\uff09\u7ed9\u5b9a\u8868\u4e2d\u7684\u6570\u636e\u3002 dropTables\uff1a\u7528\u4e8e\u5220\u9664\u7ed9\u5b9a\u8868\u3002 2. ReflectionTestUtils \u5728\u6d4b\u8bd5\u4e2d\u4e0d\u53ef\u907f\u514d\u5730\u8981\u5bf9\u79c1\u6709\u5c5e\u6027\u3001\u65b9\u6cd5\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u7528PowerMock\u7b49\u5de5\u5177\u6765\u5b8c\u6210\uff0c\u4f46\u662f\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u6ca1\u6709\u5fc5\u8981\u5f15\u5165\u8fd9\u4e48\u591a\u5e93\u3002\u5176\u5b9eSpring Test \u5e93\u4e5f\u4e19\u7f6e\u4e86\u4e00\u4e2a\u5de5\u5177\uff0c\u53ef\u901a\u8fc7\u53cd\u5c04\u7b80\u5316\u6b64\u7c7b\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u7ed9\u79c1\u6709\u5c5e\u6027\u8bbe\u7f6e\u65b0\u7684\u503c\uff1a User user = new User() {{ setUsername(\"zhangsan\"); setPassword(\"123456\"); }}; ReflectionTestUtils.setField(user, \"username\", \"wang\"); assertThat(user.getUsername(), equalTo(\"wang\")); \u8bbf\u95ee\u79c1\u6709\u5c5e\u6027\uff1a assertThat(ReflectionTestUtils.getField(user, \"username\"), equalTo(\"wang\")); \u8c03\u7528\u79c1\u6709\u65b9\u6cd5\uff1a // user \u5bf9\u8c61\u4e2d\u6709\u4e00\u4e2a testPrivateMethod \u79c1\u6709\u65b9\u6cd5 assertThat( ReflectionTestUtils.invokeMethod(user, \"testPrivateMethod\"), equalTo(\"this is private method\") ); \u5728\u65b9\u4fbf\u7684\u65f6\u5019\uff0cReflectionTestUtils\u4e5f\u53ef\u4ee5\u4fee\u6539@Autowired\u4fee\u9970\u7684\u79c1\u6709\u65b9\u6cd5\uff0c\u5feb\u901f\u641e\u5b9a\u4f9d\u8d56\u6ce8\u5165\uff0c\u5e76\u4e14\u53ef\u7528\u4e8e@Value\u6ce8\u89e3\u4fee\u9970\u7684\u65b9\u6cd5\u3002","title":"5.5.1 spring-test \u63d0\u4f9b\u7684\u5de5\u5177\u96c6"},{"location":"05-testing-with-spring/#552-spring-boot-test","text":"spring-boot-test \u4e3b\u8981\u662f\u63d0\u4f9b\u4e86\u4e0e\u81ea\u52a8\u914d\u7f6e\u76f8\u5173\u7684\u5de5\u5177\u3002 1. TestPropertyValues \u4e00\u822c\u6765\u8bf4\u5f88\u591a\u88ab@Value\u6ce8\u89e3\u4fee\u9970\u7684\u5c5e\u6027\u90fd\u662f\u79c1\u6709\u7684\uff0c\u8fd9\u4f1a\u7ed9\u6d4b\u8bd5\u9020\u6210\u56f0\u96be\u3002Spring Boot \u63d0\u4f9b\u4e86TestProperty Values \u5de5\u5177\u7c7b\u6765\u6ce8\u5165\u914d\u7f6e\u5c5e\u6027\u3002\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u9700\u8981\u914d\u5408@ContextCon-figuration\u6765\u4f7f\u7528\uff0c\u5728\u6d4b\u8bd5\u521d\u59cb\u5316\u7684\u65f6\u5019\u901a\u8fc7TestProperty Values \u63d2\u5165\u9700\u8981\u7684\u5c5e\u6027\u3002 @SpringBootTest @ContextConfiguration(initializers = PropertyTest.MyPropertyInitializer.class) public class PropertyTest { @Autowired private ApplicationContext context; @Value(\"${testProperty}\") private String testProperty; @Test public void test() { assertThat(testProperty).isEqualTo(\"foo\"); assertThat(this.context.getEnvironment().getProperty(\"testProperty\")).isEqualTo(\"foo\"); } static class MyPropertyInitializer implements ApplicationContextInitializer<ConfigurableApplicationContext> { @Override public void initialize(ConfigurableApplicationContext applicationContext) { TestPropertyValues.of(\"testProperty=foo\").applyTo(applicationContext); } } } \u8fd9\u4e2a\u5de5\u5177\u6211\u4eec\u65e5\u5e38\u7528\u5f97\u4e0d\u591a\uff0c\u5728\u52a8\u6001\u63d2\u5165\u5c5e\u6027\u65f6\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u3002\u5982\u679c\u662f\u9759\u6001\u63d2\u5165\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528@SpringBootTest\u6ce8\u89e3\u7684value\u3001properties\u3001args\u53c2\u6570\u3002 2. OutputCapture Spring Boot\u63d0\u4f9b\u4e86OutputCaptureExtension\u6765\u6355\u83b7\u63a7\u5236\u53f0\u4fe1\u606f\uff0c\u5982\u679c\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86System.out \u6216\u8005System.err\u8f93\u51fa\u4fe1\u606f\u5230\u63a7\u5236\u53f0\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u6b64\u5de5\u5177\u6765\u6355\u83b7\u63a7\u5236\u53f0\u4fe1\u606f\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @ExtendWith(OutputCaptureExtension.class) public class OutputCaptureTest { @Test public void test_capture(CapturedOutput output) throws Exception { System.out.println(\"Hello world!\"); assertThat(output).contains(\"world\"); } } 3. TestRestTemplate TestRestTemplate\u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u6d4b\u8bd5\u7684RestTemplate\uff0c\u4e3b\u8981\u7684\u529f\u80fd\u662f\u9047\u5230400\u3001500\u8fd4\u56de\u7684\u65f6\u5019\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u662f\u5c06\u5f02\u5e38\u4fe1\u606f\u653e\u5230\u8fd4\u56de\u7684ResponseEntity\u5bf9\u8c61\u4e2d\uff0c\u4ee5\u4fbf\u8fdb\u884c\u65ad\u8a00\u548c\u505a\u8fdb\u4e00\u6b65\u5904\u7406\u3002 \u5b83\u9ed8\u8ba4\u4f7f\u7528Apache HTTP Client\u4f5c\u4e3aHTTP\u5ba2\u6237\u7aef\uff0c\u4f46\u4e0d\u662f\u5f3a\u5236\u6027\u7684\u3002\u5982\u679c\u4f7f\u7528\u7684\u662fApache HTTP Client\u5ba2\u6237\u7aef\uff0c\u5219\u8fd8\u6709\u4e24\u4e2a\u989d\u5916\u7684\u7279\u6027\uff1a \u4e0d\u4f1a\u81ea\u52a8\u53d1\u751f\u8df3\u8f6c\uff0c\u4f8b\u5982302\u54cd\u5e94\u4e00\u822c\u4f1a\u5728\u8fd4\u56de\u7684\u5934\u90e8\u4e2d\u52a0\u5165location\u5c5e\u6027\uff0c\u8868\u660e\u671f\u671b\u7684\u4e0b\u4e00\u8df3\uff0c\u53ef\u4ee5\u4f7f\u7528TestRestTemplate\u6765\u65ad\u8a00\u3002 Cookies\u4f1a\u88ab\u5ffd\u7565\uff0c\u5e76\u4e14\u4f1a\u88ab\u5f53\u4f5c\u65e0\u72b6\u6001\u7684HTTP\u5ba2\u6237\u7aef\u3002","title":"5.5.2 spring-boot-test \u63d0\u4f9b\u7684\u5de5\u5177\u96c6"},{"location":"05-testing-with-spring/#56","text":"\u4f7f\u7528Spring Boot\u4f1a\u5927\u5927\u7b80\u5316\u6d4b\u8bd5\u73af\u5883\u7684\u642d\u5efa\uff0c\u8fd9\u90fd\u5f52\u529f\u4e8espring-boot-test\uff1aspring-boot-autoconfigure\u3001spring-test\u8fd9\u4e09\u4e2a\u5305\u3002\u4e00\u4e9b\u6a21\u62df\u6ce8\u89e3\u548c\u5de5\u5177\u7531 Spring Test\u548cMockito \u5171\u540c\u63d0\u4f9b\u3002 \u6b63\u56e0\u5982\u6b64\uff0cSpring Boot\u73af\u5883\u4e2d\u7684\u5404\u79cd\u6d4b\u8bd5\u5de5\u5177\u53d8\u5f97\u96be\u4ee5\u7406\u89e3\u3002\u6211\u4eec\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u6ce8\u610f\u76f8\u5173\u7684\u7279\u6027\u90fd\u662f\u7531\u54ea\u4e00\u4e2a\u5177\u4f53\u7684\u7ec4\u4ef6\u63d0\u4f9b\u7684\uff0c\u8fd9\u6837\u6392\u67e5\u95ee\u9898\u65f6\u4f1a\u9ad8\u6548\u5f88\u591a\u3002 \u5728Java\u5f00\u53d1\u4e2d\uff0c\u7eaf\u7cb9\u7684\u5355\u5143\u6d4b\u8bd5\u5f80\u5f80\u66f4\u9002\u5408\u516c\u5171\u5e93\u3001\u6846\u67b6\u7c7b\u7684\u4ee3\u7801\u3002\u4f46\u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u4e0d\u5f97\u4e0d\u548c\u5f88\u591a\u57fa\u7840\u8bbe\u65bd\u6253\u4ea4\u9053\uff0c\u56e0\u6b64\u5355\u5143\u6d4b\u8bd5\u9700\u8981\u6a21\u62df\u5927\u91cf\u7684\u7c7b\u548c\u7ec4\u4ef6\uff0c\u5de5\u4f5c\u91cf\u53d8\u5927\u5374\u6536\u76ca\u751a\u5fae\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u8003\u8651\u901a\u8fc7\u5185\u5d4c\u57fa\u7840\u8bbe\u65bd\u7684\u65b9\u5f0f\u5c40\u90e8\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\uff0c\u4ece\u800c\u6709\u6548\u51cf\u5c11\u6d4b\u8bd5\u4ee3\u7801\uff0c\u8282\u7701\u5927\u91cf\u7684\u7f16\u7a0b\u65f6\u95f4\u3002","title":"5.6 \u5c0f\u7ed3"},{"location":"06-api-testing/","text":"\u7b2c 6 \u7ae0 RESTful API \u6d4b\u8bd5 API \u6d4b\u8bd5\u5c5e\u4e8e\u96c6\u6210\u6d4b\u8bd5\u7684\u8303\u7574\uff0c\u624b\u52a8\u8fdb\u884c API \u6d4b\u8bd5\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a \u4f7f\u7528Curl \u547d\u4ee4\u3002 \u4f7f\u7528 Postman\u3002 \u4f7f\u7528 Swagger \u9644\u5e26\u7684 UI \uff08\u7528\u6237\u754c\u9762\uff09\u5de5\u5177\u3002 \u8fd9\u4e9b\u65b9\u6cd5\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7684\u95ee\u9898\uff0c\u5c31\u662f\u5b9e\u73b0\u81ea\u52a8\u5316\u7684\u53cd\u590d\u6267\u884c\u6bd4\u8f83\u56f0\u96be\u3002\u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\u901a\u8fc7\u7f16\u7801\u7684\u65b9\u5f0f\u8fdb\u884cAPI\u6d4b\u8bd5\uff0c\u6700\u597d\u653e\u5230\u4ee3\u7801\u4ed3\u5e93\u4e2d\u4ee5\u81ea\u52a8\u5316\u7684\u5f62\u5f0f\u5b8c\u6210\uff0c\u5e76\u96c6\u6210\u5728CI \uff08\u6301\u7eed\u96c6\u6210\uff09\u6d41\u6c34\u7ebf\u4e2d\u3002 \u5728\u4e00\u4e9b\u4f01\u4e1a\u4e2d\u6709\u4e13\u95e8\u7684API\u6d4b\u8bd5\u5e73\u53f0\u7ba1\u7406\u76f8\u5173\u6d4b\u8bd5\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u7075\u6d3b\u6027\u4f1a\u7a0d\u5f31\u5e76\u4e0e\u4f01\u4e1a\u5185\u90e8\u7684\u57fa\u7840\u8bbe\u65bd\u5f3a\u5173\u8054\uff0c\u56e0\u6b64\u672c\u7ae0\u9009\u7528\u7684\u5de5\u5177\u90fd\u662f\u57fa\u4e8e\u5f00\u6e90\u8f6f\u4ef6\u5b9e\u73b0\u7684\u3002 \u672c\u7ae0\u7684\u76ee\u6807\u662f\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e\u6e90\u4ee3\u7801\u7f16\u5199\u53ef\u4ee5\u7ef4\u62a4\u7684API\u6d4b\u8bd5\uff0c\u6db5\u76d6\u7684\u5185\u5bb9\u6709\uff1a RESTful API \u6d4b\u8bd5\u5de5\u5177\u96c6\u3002 \u7b2c\u4e09\u65b9 API \u7684\u5904\u7406\u3002 6.1 RESTful API \u6d4b\u8bd5\u5de5\u5177\u96c6 Spring Boot \u7684spring-boot-starter-test Starter\u9879\u76ee\u5df2\u7ecf\u4e3a\u6211\u4eec\u51c6\u5907\u4e86\u4e00\u5957\u6d4b\u8bd5\u5de5\u5177\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u8ba9API\u6d4b\u8bd5\u66f4\u6709\u6548\u548c\u4fbf\u5229\uff0c\u9664\u4e86Spring\u6d4b\u8bd5\u5957\u4ef6\u4ee5\u5916\uff0c\u8fd8\u9700\u8981\u51c6\u5907\u4e00\u4e9b\u989d\u5916\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u4f8b\u5982\uff0cREST Assured\u53ef\u4ee5\u4f5c\u4e3aAPI\u6d4b\u8bd5\u7684\u57fa\u672c\u6846\u67b6\uff0cDbUnit\u53ef\u4ee5\u7528\u6765\u5728\u591a\u4e2a\u6d4b\u8bd5\u4e4b\u95f4\u9694\u79bb\u6570\u636e\u5e93\u7684\u72b6\u6001\uff0cWireMock\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u7b2c\u4e09\u65b9\u4f9d\u8d56\u7684API\u3002\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u5b8c\u6210\u6d4b\u8bd5\u7528\u4f8b\u7684\u7f16\u5199\u548c\u8fd0\u884c\uff0c\u4f46\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u4e0d\u662f\u5fc5\u9009\u7684\u3002 \u5728Spring\u7684\u6d4b\u8bd5\u4f53\u7cfb\u4e0b\uff0cMockMvc\u4e5f\u662fAPI\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u4e00\u4e2a\u91cd\u8981\u5de5\u5177\uff0c\u4f46\u662f\u6211\u4eec\u5e38\u5e38\u5e76\u6ca1\u6709\u9009\u7528\u5b83\u4f5c\u4e3aAPI\u6d4b\u8bd5\u7684\u5de5\u5177\u3002\u8fd9\u662f\u56e0\u4e3aAPI\u6d4b\u8bd5\u5df2\u7ecf\u662f\u4e00\u4e2aE2E\u6d4b\u8bd5\u4e86\uff0cAPI\u6d4b\u8bd5\u5173\u6ce8\u7684\u662f\u670d\u52a1\u662f\u5426\u80fd\u63d0\u4f9b\u5b8c\u6574\u7684\u529f\u80fd\uff0c\u6211\u4eec\u4f1a\u5e0c\u671b\u542f\u52a8\u5b8c\u6574\u7684\u4e0a\u4e0b\u6587\u6765\u8fdb\u884c\u7aef\u5230\u7aef\u7684\u6d4b\u8bd5\u3002 MockMvc\u5728\u524d\u9762\u7ae0\u8282\u4ecb\u7ecd\u8fc7\uff0c\u7528\u6765\u6a21\u62dfWeb\u670d\u52a1\u5668\uff0c\u4ee5\u4fbf\u8ba9Controller\u4e0a\u7684\u6ce8\u89e3\u53ef\u4ee5\u88ab\u6d4b\u8bd5\u5230\uff0c\u6240\u4ee5\u5e38\u5e38\u5728\u5206\u5c42\u7684\u5355\u5143\u6d4b\u8bd5\u4e2d\u7528\u4e8e\u9a8c\u8bc1Controller\u90e8\u5206\u7684\u903b\u8f91\u3002 \u66f4\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u9009\u7528\u4e13\u4e1a\u7684API\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\uff0c\u6bd4\u5982REST Assured\u3001Karate DSL\u7b49\u3002\u672c\u4e66\u57fa\u4e8e\u5e02\u573a\u5360\u6709\u91cf\u9009\u62e9\u4e86\u4ee5REST Assured\u4e3a\u4f8b\u8be6\u7ec6\u8bb2\u89e3API\u6d4b\u8bd5\u3002\u5b9e\u9645\u4e0a\uff0cMockMvc\u4e5f\u53ef\u4ee5\u914d\u5408RESTAssured\u4f7f\u7528\u3002 6.1.1 REST Assured REST Assured \u7531 Johan Haleby \u5728 Jayway \u516c\u53f8\u521b\u5efa\u3002\u4e0eMockMvo \u4e0d\u540c\u7684\u662f\uff0cREST Assured \u66f4\u50cf\u662fJava\u4e2d\u5173\u4e8e\u6d4b\u8bd5\u7684\u9886\u57df\u7279\u5b9a\u8bed\u8a00\uff08DSL\uff09\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u5957\u94fe\u5f0f\u7684API\u6765\u7f16\u5199Given\u3001When\u3001Then\u98ce\u683c\u7684\u6d4b\u8bd5\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a given(). param(\"key1\", \"value1\"). param(\"key2\", \"value2\"). when(). post(\"/somewhere\"). then(). body(containsString(\"OK\")); \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7\u6d41\u5f0f\u7684\u98ce\u683c\u58f0\u660e\u4e86Given\u3001When\u3001Then\u8fd9\u4e09\u79cd\u8bed\u53e5\u5757\uff0c\u8ba9API\u6d4b\u8bd5\u5177\u6709\u4e0e\u5355\u5143\u6d4b\u8bd5\u7c7b\u4f3c\u7684\u98ce\u683c\u3002 REST Assured\u7684\u4f18\u79c0\u4e4b\u5904\u8fd8\u5728\u4e8e\u63d0\u4f9b\u4e86xml-path\u3001json-path\u8fd9\u4e24\u4e2a\u5f3a\u5927\u7684\u65ad\u8a00\u5e93\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u65ad\u8a00\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u65b9\u4fbf\u3002json-path\u4e5f\u88ab\u5438\u6536\u5230spring-boot-starter-test\u4e2d\u4e86\uff0c\u57fa\u672c\u5df2\u6210\u4e3a\u65ad\u8a00JSON\u6570\u636e\u7684\u5fc5\u5907\u5de5\u5177\u3002 REST Assured\u53ea\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u6d4b\u8bd5\u5957\u4ef6\uff0c\u5185\u542b\u4e00\u4e2aHTTP\u5ba2\u6237\u7aef\uff0c\u6d4b\u8bd5\u65f6\u9700\u8981\u542f\u52a8\u5168\u91cf\u7684Web\u670d\u52a1\uff0c\u4e14\u9700\u8981\u4f9d\u8d56@SpringBootTest\u6ce8\u89e3\u542f\u52a8\u5b8c\u6574\u7684\u5e94\u7528\u4e0a\u4e0b\u6587\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u968f\u673a\u7aef\u53e3\uff0c\u907f\u514d\u6d4b\u8bd5\u88ab\u5e72\u6270\u3002\u5982\u679c\u89c9\u5f97Web\u670d\u52a1\u5668\u542f\u52a8\u5f97\u592a\u6162\uff0cRESTAssured\u4e5f\u53ef\u4ee5\u7ed3\u5408MockMvc\u6765\u4f7f\u7528\u3002 \u521b\u5efa\u4e00\u4e2aMaven\u9879\u76ee\u6216\u8005\u6a21\u5757\uff0c\u9664\u4e86\u8981\u5f15\u4ebaSpring\u751f\u6001\u4e0b\u57fa\u672c\u7684\u4f9d\u8d56\u5916\uff0c\u8fd8\u9700\u8981\u5f15\u5165\u4e0b\u9762\u7684\u4f9d\u8d56\u5305\uff1a <dependency> <groupId>io.rest-assured</groupId> <artifactId>rest-assured</artifactId> <version>4.4.0</version> <scope>test</scope> </dependency> RESTAssured\u7684\u914d\u7f6e\u975e\u5e38\u7b80\u5355\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u811a\u672c\u5373\u53ef\u5b8c\u6210\u521d\u59cb\u5316\uff1a @SpringBootTest(webEnvironment = RANDOM_PORT, classes = {Application.class}) .... @LocalServerPort private int port; @BeforeEach public void setup() { System.out.println(\"port:\" + port); RestAssured.port = port; RestAssured.basePath = \"/api\"; RestAssured.enableLoggingOfRequestAndResponseIfValidationFails(); } @LocalServerPort\u6ce8\u89e3\u53ef\u4ee5\u8bfb\u53d6@SpringBootTest\u5728\u542f\u52a8\u65f6\u521b\u5efa\u7684\u968f\u673a\u7aef\u53e3\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u540e\u7eed\u7684\u6d4b\u8bd5\u4e2d\u3002\u5728setup \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e3aREST Assured\u914d\u7f6e\u4e86\u7aef\u53e3\u3001API\u524d\u7f00\uff0c\u5e76\u6253\u5f00\u4e86\u4e00\u4e2a\u7279\u6027\u5f00\u5173\uff0c\u4ee5\u4fbf\u6d4b\u8bd5\u5931\u8d25\u65f6\u6253\u5370\u51fa\u8bf7\u6c42\u548c\u8fd4\u56de\u7684\u8be6\u60c5\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u5c31\u662f\u542f\u7528REST Assured\u7684\u5168\u90e8\u914d\u7f6e\uff0c\u540e\u9762\u4f1a\u5728\u6d4b\u8bd5\u5b9e\u4f8b\u4e2d\u7ed9\u51fa\u5b8c\u6574\u7684\u4f7f\u7528\u793a\u4f8b\u3002\u5982\u679c\u9700\u8981\u5b9e\u73b0 MockMvc \u7684\u6548\u679c\uff0c\u53ef\u4ee5\u4f7f\u7528spring-mock-mve \u5e93\u4e2d\u7684RestAssuredMockMvc \u7c7b\u8fdb\u884c\u6865\u63a5\uff0c\u52a0\u5feb\u6d4b\u8bd5\u901f\u5ea6\u3002 6.1.2 MariaDB \u4e0a\u4e00\u7ae0\u8ba8\u8bba\u8fc7\u5355\u5143\u6d4b\u8bd5\u4e2d\u5173\u4e8e\u57fa\u7840\u8bbe\u65bd\u7684\u95ee\u9898\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6d89\u53ca\u6570\u636e\u5e93\u7684\u6d4b\u8bd5\u53ef\u4ee5\u4f7f\u7528\u5185\u5d4c\u7684\u6570\u636e\u5e93\u6bd4\u5982H2\u6765\u5b9e\u73b0\u76f8\u5e94\u7684\u6a21\u62df\u3002\u4f46\u662fH2\u7684\u529f\u80fd\u6bd4\u8f83\u6709\u9650\uff0c\u6709\u65f6\u5019\u4e0d\u4e00\u5b9a\u80fd\u6ee1\u8db3\u9700\u8981\u3002\u6bd4\u5982\uff0c\u5728\u505aE2E\u6d4b\u8bd5\u65f6\uff0cH2\u65e0\u6cd5\u6a21\u62df\u51fa\u4e0eMySQL\u540c\u6837\u7684\u529f\u80fd\uff0cSQL\u8bed\u6cd5\u4e0a\u4e5f\u4e0e\u5176\u5b58\u5728\u4e00\u5b9a\u7684\u5dee\u5f02\u3002\u8fd9\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528MariaDB\u6765\u6a21\u62dfMySQL\uff0c\u5e76\u901a\u8fc7MariaDB4j\u8fd9\u4e2a\u5de5\u5177\u4ece\u6d4b\u8bd5\u4e2d\u542f\u52a8MariaDB\u3002 MariaDB\u662f\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edfMySQL\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u4e3b\u8981\u7531\u5f00\u6e90\u793e\u533a\u7ef4\u62a4\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u5c06\u5176\u770b\u4f5cMySQL\u3002 MariaDB4j\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2a\u542f\u52a8\u5668\uff0c\u771f\u6b63\u7684\u6570\u636e\u5e93\u8fd8\u662f\u4f1a\u7531\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u7684\u4e8c\u8fdb\u5236\u5305\u542f\u52a8\u3002\u4e3a\u4e86\u4f7f\u7528\u968f\u673a\u7684\u6570\u636e\u5e93\u7aef\u53e3\uff0c\u6211\u4eec\u4e0d\u518d\u4f7f\u7528Spring Boot\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u800c\u662f\u76f4\u63a5\u7ed9\u4e0a\u4e0b\u6587\u914d\u7f6e\u4e00\u4e2aDataSource\u3002\u6765\u770b\u4e2a\u793a\u4f8b\uff0c\u8001\u89c4\u77e9\uff0c\u5148\u5f15\u5165\u4e00\u4e2a\u4f9d\u8d56\uff1a <dependency> <groupId>ch.vorburger.mariaDB4j</groupId> <artifactId>mariaDB4j</artifactId> <version>2.4.0</version> </dependency> \u7136\u540e\u5728\u6d4b\u8bd5\u6a21\u5757\u4e2d\u5f15\u5165\u4e00\u4e2a\u914d\u7f6e\u7c7b\u3002\u5728\u6d4b\u8bd5\u6a21\u5757\u4e2d\u5b9a\u4e49\u7684\u76f8\u5173Bean\u4e5f\u4f1a\u88ab\u52a0\u8f7d\u5230Spring Boot \u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4f46\u662f\u4e0d\u4f1a\u5bf9\u4e1a\u52a1\u4ee3\u7801\u4ea7\u751f\u5f71\u54cd\u3002 @Configuration public class MariaDB4jSpringConfiguration { @Autowired private DataSourceProperties dataSourceProperties; @Bean public MariaDB4jSpringService mariaDB4j() { MariaDB4jSpringService mariaDB4jSpringService = new MariaDB4jSpringService(); mariaDB4jSpringService.getConfiguration().addArg(\"--user=root\"); mariaDB4jSpringService.getConfiguration().addArg(\"--character-set-server=utf8\"); return mariaDB4jSpringService; } @Bean @Primary public DataSource dataSource() throws ManagedProcessException { String dbname = UUID.randomUUID().toString().substring(0, 8); mariaDB4j().getDB().createDB(dbname); return DataSourceBuilder.create() .driverClassName(dataSourceProperties.getDriverClassName()) .url(mariaDB4j().getConfiguration().getURL(dbname)) .username(dataSourceProperties.getUsername()) .password(dataSourceProperties.getPassword()) .build(); } } MariaDB4jSpringService\u7ee7\u627f\u4e86MariaDB4jService\uff0c\u5e76\u5b9e\u73b0\u4e86Lifecycle\u63a5\u53e3\uff0c\u5b83\u662f\u542f\u52a8MariaDB4jService\u7684\u539f\u751fAPI\uff0c\u53ef\u4ee5\u542f\u52a8\u548c\u5173\u505c\u6570\u636e\u5e93\u3002MariaDB4jSpringService\u5b9e\u73b0\u4e86Spring\u7684\u751f\u547d\u5468\u671f\u94a9\u5b50\uff0c\u8ba9\u6570\u636e\u5e93\u968f\u7740Spring\u7684\u751f\u547d\u5468\u671f\u542f\u52a8\u548c\u5173\u505c\u3002 DataSource Bean\u81ea\u5b9a\u4e49\u4e86\u6570\u636e\u5e93\u540d\u79f0\uff0c\u5e76\u83b7\u5f97\u4e86MariaDB4j\u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u7136\u540e\u4ee5\u6b64\u6765\u521b\u5efa\u6570\u636e\u6e90\u3002\u5728DataSource\u7684\u914d\u7f6e\u4e2d\u4f7f\u7528\u4e86DataSourceProperties\u7684\u914d\u7f6e\uff0c\u8be5\u914d\u7f6e\u6765\u6e90\u4e8e\u6211\u4eec\u5728YAML\u6587\u4ef6\uff08application.yml\uff09\u4e2d\u914d\u7f6e\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c06\u539f\u672c\u9700\u8981\u8fde\u63a5\u771f\u5b9e MySQL\u7684\u6570\u636e\u6e90\u5207\u6362\u6210\u5185\u7f6e\u7684\u4e34\u65f6\u6570\u636e\u5e93\u3002 6.1.3 DbUnit \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u7ed3\u5408\u6570\u636e\u5e93\u6765\u8fdb\u884cE2E\u6d4b\u8bd5\uff0c\u6bcf\u6267\u884c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6d4b\u8bd5\u6570\u636e\u5c31\u6709\u53ef\u80fd\u4f1a\u6c61\u67d3\u6570\u636e\u5e93\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0cDbUnit\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5728\u6d4b\u8bd5\u524d\u6682\u5b58\u6570\u636e\u5e93\u7684\u72b6\u6001\uff0c\u5e76\u5728\u6d4b\u8bd5\u540e\u6062\u590d\uff0c\u907f\u514d\u6d4b\u8bd5\u4e4b\u95f4\u4ea7\u751f\u5e72\u6270\u3002 \u5982\u679c\u6211\u4eec\u7684\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u521d\u59cb\u6570\u636e\uff0c\u53ef\u4ee5\u76f4\u63a5\u505a\u6e05\u7a7a\u64cd\u4f5c\uff0c\u5219\u4e0d\u9700\u8981DbUnit\u7684\u5e2e\u52a9\u3002\u4f46\u662f\uff0c\u4e00\u822c\u6765\u8bf4\u6211\u4eec\u4f1a\u4f7f\u7528Flyway\u7ba1\u7406\u6570\u636e\u5e93\u7684\u8868\u7ed3\u6784\uff0c\u800c\u4e14\u4e3a\u4e86\u5f00\u53d1\u65b9\u4fbf\uff0c\u4e5f\u4f1a\u5c06\u4e00\u4e9b\u521d\u59cb\u6570\u636e\u540c\u6b65\u5199\u5165\u3002\u7cfb\u7edf\u4e2d\u603b\u662f\u9700\u8981\u521d\u59cb\u5316\u4e00\u4e9b\u9ed8\u8ba4\u6570\u636e\uff0c\u4f8b\u5982\u8d85\u7ea7\u7ba1\u7406\u5458\u7684\u8d26\u53f7\u548c\u5bc6\u7801\u7b49\uff0c\u901a\u8fc7Flyway\u7ba1\u7406\u4f1a\u975e\u5e38\u65b9\u4fbf\u3002\u5982\u679c\u6d4b\u8bd5\u8fd0\u884c\u524d\u6570\u636e\u5e93\u4e2d\u6709\u4e00\u4e9b\u9ed8\u8ba4\u6570\u636e\uff08\u800c\u4e14\u662f\u901a\u8fc7Flyway\u7ba1\u7406\u7684\uff09\uff0c\u5c31\u4e0d\u80fd\u901a\u8fc7\u7b80\u5355\u5730\u6e05\u7a7a\u6570\u636e\u5e93\u6765\u91cd\u7f6e\u6570\u636e\u5e93\u72b6\u6001\uff0c\u8fd9\u65f6DbUnit\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002 \u6309\u7167\u60ef\u4f8b\uff0c\u5c06DbUnit\u52a0\u5165\u9879\u76ee\u4e2d\u65f6\uff0c\u5148\u5f15\u5165\u9700\u8981\u7684\u4f9d\u8d56\u5305\uff1a <dependency> <groupId>org.dbunit</groupId> <artifactId>dbunit</artifactId> <version>2.7.0</version> </dependency> \u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cDbUnit\u7684\u5b9e\u73b0\u65b9\u5f0f\u6bd4\u8f83\u6734\u7d20\uff0c\u4e3b\u8981\u63d0\u4f9b\u4e86\u4e00\u4e2aIDataSet\u63a5\u53e3\uff0c\u5b83\u901a\u8fc7CSV\u3001XML\u3001SQL\u7b49\u5b9e\u73b0\u65b9\u5f0f\u628a\u6570\u636e\u4e34\u65f6\u5b58\u50a8\u4e0b\u6765\uff0c\u5982\u56fe6-1\u6240\u793a\u3002 \u56fe 6-1 DbUnit \u6682\u5b58\u6570\u636e\u96c6\u7684\u51e0\u79cd\u65b9\u5f0f DbUnit\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5de5\u5177\u7c7bDatabaseOperation\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u64cd\u4f5c\u6570\u636e\u5e93\u548c\u6570\u636e\u96c6\uff0c\u5b9e\u73b0\u5907\u4efd\u3001\u8fd8\u539f\u548c\u6e05\u7a7a\u7b49\u529f\u80fd\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u5c01\u88c5\u597d\u7684\u670d\u52a1\uff0c\u5c06\u5176\u52a0\u8f7d\u5230\u6d4b\u8bd5\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u65b9\u6cd5\u4e2d\u5373\u53ef\u3002 @Service public class ResetDbService { private static IDatabaseConnection conn; @Autowired private DataSource dataSource; private File tempFile; // \u5907\u4efd\u6570\u636e\u72b6\u6001\u7684\u65b9\u6cd5 public void backup() throws Exception { this.getConnection(); this.backupCustom(); } // \u6062\u590d\u6570\u636e\u72b6\u6001\u7684\u65b9\u6cd5 public void rollback() throws Exception { this.reset(); this.closeConnection(); } protected void backupCustom() { try { QueryDataSet qds = new QueryDataSet(conn); // \u6307\u5b9a\u9700\u8981\u5907\u4efd\u7684\u6570\u636e\u5e93\u8868\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\u6765\u83b7\u5f97\u6570\u636e\u5e93\u4e2d\u7684\u6240\u6709\u8868 qds.addTable(\"user\"); tempFile = new File(\"temp.xml\"); // \u5199\u5165\u5230 XML \u6587\u4ef6\u4e2d FlatXmlDataSet.write(qds, new FileWriter(tempFile), \"UTF-8\"); } catch (Exception e) { e.printStackTrace(); } } void getConnection() throws DatabaseUnitException { conn = new DatabaseConnection(DataSourceUtils.getConnection(dataSource)); } protected void reset() throws FileNotFoundException, DatabaseUnitException, SQLException { FlatXmlDataSetBuilder builder = new FlatXmlDataSetBuilder(); builder.setColumnSensing(true); IDataSet ds = builder.build(new FileInputStream(tempFile)); DatabaseOperation.CLEAN_INSERT.execute(conn, ds); } protected void closeConnection() throws SQLException { if (conn != null) { conn.close(); } } } ResetDbService\u670d\u52a1\u63d0\u4f9b\u4e86backup\u3001rollback\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u3002backup\u4f1a\u5728\u6d4b\u8bd5\u542f\u52a8\u65f6\u5c06\u5f53\u524d\u6570\u636e\u5e93\u7684\u72b6\u6001\u6682\u5b58\u4e0b\u6765\uff0c\u6d4b\u8bd5\u5b8c\u6210\u65f6\u518d\u8c03\u7528rollback\u65b9\u6cd5\u6062\u590d\uff0c\u8fd9\u6837\u5c31\u80fd\u59cb\u7ec8\u4e3a\u6bcf\u4e2a\u6d4b\u8bd5\u63d0\u4f9b\u4e00\u4e2a\u4e00\u81f4\u7684\u73af\u5883\uff0c\u4e5f\u4e0d\u9700\u8981\u624b\u52a8\u5bf9\u7279\u5b9a\u7684\u6570\u636e\u8fdb\u884c\u6e05\u7406\uff0c\u907f\u514d\u9057\u5fd8\u3002 \u6211\u4eec\u53ef\u4ee5\u5728\u6d4b\u8bd5\u7684\u57fa\u7c7b\u4e2d\u7ec4\u88c5\u8fd9\u4e9b\u51c6\u5907\u3001\u6e05\u7406\u7684\u5de5\u4f5c\uff0c\u4e0b\u9762\u518d\u4ecb\u7ecd\u53e6\u5916\u4e00\u79cd\u66f4\u7075\u6d3b\u7684\u7ec4\u88c5\u65b9\u6cd5\u3002 6.2 API \u6d4b\u8bd5\u5b9e\u4f8b \u524d\u9762\u4ecb\u7ecd\u4e86\u51e0\u79cd\u5de5\u5177\u7684\u4f7f\u7528\uff0c\u8fd9\u91cc\u901a\u8fc7\u6700\u5c0f\u7684\u5b9e\u4f8b\u5c06\u5b83\u4eec\u7ec4\u88c5\u8d77\u6765\u3002\u4e3a\u4e86\u51cf\u5c11\u7bc7\u5e45\uff0c\u4e0b\u9762\u53ea\u8d34\u4e0a\u5fc5\u8981\u7684\u4ee3\u7801\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u53ef\u4ee5\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230\uff1ahttps://github.com/java-self-testing/java-self-testing-example/tree/master/api\u3002 \u793a\u4f8b\u4ee3\u7801\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u56fe6-2\u6240\u793a\u3002 \u56fe 6-2 API \u6d4b\u8bd5\u793a\u4f8b \u4e0b\u9762\u662f\u793a\u4f8b\u9879\u76ee\u7684\u4f9d\u8d56\u7684\u5305\uff1a <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"> <parent> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-parent</artifactId> <version>2.4.12</version> </parent> <modelVersion>4.0.0</modelVersion> <artifactId>api</artifactId> <dependencies> <dependency> <groupId>org.projectlombok</groupId> <artifactId>lombok</artifactId> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-web</artifactId> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-jpa</artifactId> </dependency> <dependency> <groupId>org.flywaydb</groupId> <artifactId>flyway-core</artifactId> </dependency> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>8.0.25</version> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId> <scope>test</scope> </dependency> <dependency> <groupId>ch.vorburger.mariaDB4j</groupId> <artifactId>mariaDB4j</artifactId> <version>2.4.0</version> </dependency> <dependency> <groupId>io.rest-assured</groupId> <artifactId>rest-assured</artifactId> <version>4.4.0</version> <scope>test</scope> </dependency> <dependency> <groupId>org.dbunit</groupId> <artifactId>dbunit</artifactId> <version>2.7.0</version> </dependency> </dependencies> <build> <plugins> <plugin> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-maven-plugin</artifactId> <configuration> <finalName>${project.artifactId}</finalName> <outputDirectory>../package</outputDirectory> </configuration> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> <configuration> <source>8</source> <target>8</target> </configuration> </plugin> </plugins> </build> </project> \u6e90\u7801\u4e0b\u9762\u7684\u5305\u4e2d\u5b9e\u73b0\u4e86 2 \u4e2a\u7b80\u5355\u7684 API\uff0c\u4fbf\u4e8e\u7ba1\u7406\u5458\u6dfb\u52a0\u548c\u5217\u51fa\u7528\u6237\uff1a @RestController @RequestMapping(\"/api/users\") public class UserController { @Autowired UserService userService; @GetMapping(\"\") public ResponseEntity<List<User>> getAll() { return ResponseEntity.ok(userService.listAll()); } @PostMapping(\"\") public ResponseEntity addUser(@RequestBody AddUserRequest addUserRequest) { User savedUser = userService.add(addUserRequest); return ResponseEntity.created( URI.create(\"/api/users/\" + savedUser.getId()) ).build(); } } \u5728\u6d4b\u8bd5\u76ee\u5f55\u4e2d\uff0c\u6709\u4e00\u4e2a TestBase \uff0c\u662f\u4e3a\u6240\u6709\u6d4b\u8bd5\u7c7b\u7684\u57fa\u7c7b\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u6d4b\u8bd5\u4e0a\u4e0b\u6587\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @SpringBootTest(webEnvironment = RANDOM_PORT, classes = {Application.class}) @TestExecutionListeners({ DependencyInjectionTestExecutionListener.class, ResetDbListener.class, }) public abstract class TestBase { @LocalServerPort private int port; @BeforeEach public void setUp() { System.out.println(\"port:\" + port); RestAssured.port = port; RestAssured.basePath = \"/api/\"; RestAssured.enableLoggingOfRequestAndResponseIfValidationFails(); } } @TestExecutionListeners\u6ce8\u89e3\u662fJUnit\u7684\u4e00\u79cd\u9ad8\u7ea7\u7528\u6cd5\uff0c\u53ef\u4ee5\u6ce8\u518c\u6d4b\u8bd5\u751f\u547d\u5468\u671f\u51fd\u6570\uff0c\u7c7b\u4f3c\u4e8e@BeforeEach\u548c@AfterEach\u7684\u4f5c\u7528\uff0c\u4f46\u662f\u66f4\u52a0\u7b80\u6d01\uff0c\u4f7f\u7528\u8be5\u6ce8\u89e3\u65f6\u9700\u8981\u5b9e\u73b0TestExecutionListener\u63a5\u53e3\u3002 \u4e0b\u9762\u4ecb\u7ecd\u4e24\u4e2a\u5e38\u7528\u7684TestExecutionListener\u63a5\u53e3\u7684\u5b9e\u73b0\u3002 DependencylnjectionTestExecutionListener\uff1a\u53ef\u4ee5\u5bf9\u6d4b\u8bd5\u7c7b\u4e2d\u7684\u4f9d\u8d56\u8fdb\u884c\u6ce8\u5165\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7c7b\uff0c\u5c31\u4f1a\u52a0\u8f7d\u4e0d\u5230@LocalServerPort\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a@Value\u6ce8\u89e3\u7684\u5305\u88c5\u3002 TransactionalTestExecutionListener\uff1a\u7528\u4e8e\u4fdd\u8bc1\u63d2\u5165\u6570\u636e\u5e93\u4e2d\u7684\u6d4b\u8bd5\u6570\u636e\u5728\u6d4b\u8bd5\u5b8c\u6210\u4e4b\u540e\u4f1a\u8fdb\u884c\u4e8b\u52a1\u56de\u6eda\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u76d1\u542c\u5668\u53ef\u4ee5\u5c06\u63d2\u5165\u7684\u6570\u636e\u5220\u9664\uff0c\u4fdd\u8bc1\u6570\u636e\u5e93\u5e72\u51c0\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u7c7b\u80fd\u8d77\u5230\u7c7b\u4f3cDbUnit\u7684\u4f5c\u7528\u3002\u4f46\u662f\uff0c\u5b83\u4fe9\u53c8\u6709\u6240\u4e0d\u540c\uff0cDbUnit\u53ef\u4ee5\u5b8c\u6574\u5730\u9a8c\u8bc1\u4e8b\u52a1\u7684\u7ed3\u679c\uff0c\u7136\u540e\u8fdb\u884c\u6e05\u7406\uff1aTransactionalTestExecutionListener\u5219\u662f\u8ba9\u6d4b\u8bd5\u4e2d\u7684\u4e8b\u52a1\u7edf\u7edf\u4e0d\u63d0\u4ea4\u3002\u7531\u4e8eAPI\u6d4b\u8bd5\u662f\u4e00\u4e2aE2E\u6d4b\u8bd5\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6d4b\u8bd5\u7684\u51c6\u786e\u6027\uff0c\u9700\u8981\u5c3d\u91cf\u4f7f\u7528\u5b8c\u6574\u7684\u6d4b\u8bd5\u65b9\u5f0f\uff0c\u56e0\u6b64\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u53ef\u4ee5\u914c\u60c5\u4f7f\u7528TransactionalTestExecutionListener\u3002 \u4e0b\u9762\u5b9a\u4e49\u4e00\u4e2aResetDbListener\uff0c\u7528\u6765\u6682\u5b58\u548c\u6062\u590d\u6570\u636e\u5e93\u7684\u72b6\u6001\uff1a public class ResetDbListener extends AbstractTestExecutionListener { @Override public int getOrder() { return 0; } @Override public void beforeTestMethod(TestContext testContext) throws Exception { ResetDbService resetDbService = testContext.getApplicationContext().getBean(ResetDbService.class); resetDbService.backup(); } @Override public void afterTestMethod(TestContext testContext) throws Exception { ResetDbService resetDbService = testContext.getApplicationContext().getBean(ResetDbService.class); resetDbService.rollback(); } } \u7531\u4e8eResetDbListener\u4e2d\u4e0d\u80fd\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\uff0c\u56e0\u6b64\u8981\u4f7f\u7528\u6d4b\u8bd5\u4e0a\u4e0b\u6587\u6765\u52a0\u8f7dResetDbService\u3002\u524d\u9762\u5df2\u7ecf\u5c55\u793a\u8fc7ResetDbService\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a\u5176\u4ed6\u7248\u672c\u7684ResetDbService\u3002 \u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u521b\u5efa\u6d4b\u8bd5\u4e86\uff0c\u5728UserController\u5bf9\u5e94\u7684\u6d4b\u8bd5\u76ee\u5f55\u4e0b\u521b\u5efa\u4e24\u4e2a\u6d4b\u8bd5\uff0c\u8ba9\u5b83\u4eec\u5206\u522b\u5bf9\u5e94\u5217\u51fa\u7528\u6237\u548c\u6dfb\u52a0\u7528\u6237\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a class UserControllerTest extends TestBase { @Test void should_list_all_users() { given() .contentType(\"application/json\") .when() .get(\"/users\") .then().statusCode(200); } @Test void should_add_user() { given() .contentType(\"application/json\") .body(Maps.of( \"name\", \"test-user\", \"email\", \"test@email.com\", \"password\", \"123456\" )) .when() .post(\"/users\") .then().statusCode(201); } } \u8fd9\u662f\u4e24\u4e2a\u6700\u57fa\u672c\u7684\u6d4b\u8bd5\uff0c\u7531\u4e8e\u53ea\u662f\u6f14\u793a\uff0c\u6211\u4eec\u6ca1\u6709\u7f16\u5199\u66f4\u591a\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002\u5728\u8fd9\u4e24\u4e2a\u6d4b\u8bd5\u4e2d\uff0c\u72b6\u6001\u7801\u7684\u65ad\u8a00\u6bd4\u8f83\u7b80\u5355\uff0c\u4f8b\u5982\u5728\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u4e2d\uff0c\u9a8c\u8bc1\u4e86\u6700\u7ec8\u8fd4\u56de\u7684\u662f201\u72b6\u6001\u7801\u3002\u4f46\u662f\uff0c\u5bf9\u8fd4\u56de\u503c\u7684\u65ad\u8a00\u7a0d\u663e\u590d\u6742\uff0c\u540e\u9762\u4f1a\u4e13\u95e8\u8ba8\u8bba\u5982\u4f55\u5b9e\u73b0\u590d\u6742\u7684\u65ad\u8a00\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u57fa\u4e8eREST Assured\u7684API\u6d4b\u8bd5\u5c31\u5b8c\u6210\u4e86\uff0c\u8fd9\u91cc\u9762\u7684\u6bcf\u4e2a\u6d4b\u8bd5\u91cc\u90fd\u53ea\u6709\u4e00\u4e2a\u975e\u5e38\u7b80\u6d01\u7684\u94fe\u5f0f\u7ed3\u6784\uff0c\u53ef\u7ef4\u62a4\u6027\u548c\u9605\u8bfb\u6027\u90fd\u975e\u5e38\u9ad8\u3002\u4e0b\u9762\u6211\u4eec\u6765\u5c55\u5f00\u770b\u4e00\u4e0b API\u6d4b\u8bd5\u7684\u5404\u4e2a\u9636\u6bb5\u3002 \u4ee5\u6d4b\u8bd5\u7528\u4f8bshould_add_user\u4e3a\u4f8b\uff0c\u5176\u6d4b\u8bd5\u7684\u903b\u8f91\u662f\u63d0\u4ea4\u4e00\u7ec4\u6570\u636e\u7ed9/users API\uff0c\u7528\u4e8e\u521b\u5efa\u7528\u6237\u3002given\u65b9\u6cd5\u662f\u95e8\u9762\u7c7bRestAssured\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u89c4\u683c\u5bf9\u8c61RequestSpecification\u7684\u5b9e\u4f8b\u3002\u57fa\u4e8e\u8fd9\u4e2a\u5b9e\u4f8b\uff0c\u5728\u6bcf\u6b21\u8c03\u7528\u65b0\u7684\u65b9\u6cd5\u540e\uff0c\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u7528\u4e8e\u94fe\u5f0f\u8c03\u7528\u3002 \u8fd9\u4e2a\u8c03\u7528\u94fe\u6709\u4ee5\u4e0b\u51e0\u4e2a\u660e\u663e\u7684\u9636\u6bb5\uff0c\u6bcf\u4e2a\u9636\u6bb5\u8fd4\u56de\u7684\u5bf9\u8c61\u4e0d\u540c\u3002 \uff081\uff09Given \u9636\u6bb5 \u8fd4\u56deRequestSpecification\u5b9e\u4f8b\uff0c\u7528\u4e8e\u7ec4\u7ec7\u8bf7\u6c42\u7684\u6570\u636e\u3002\u5b83\u63d0\u4f9b\u4e86\u8bbe\u7f6e\u7aef\u53e3\u3001\u63d0\u4ea4\u6570\u636e\u3001Query\u53c2\u6570\u3001Session\u3001\u8bf7\u6c42\u5934\u7b49\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u65b9\u4fbf\u6784\u5efaHTTP\u6570\u636e\u4f53\u3002 \uff082\uff09When \u9636\u6bb5 when\u65b9\u6cd5\u4e0egiven\u65b9\u6cd5\u6240\u505a\u7684\u4e8b\u60c5\u4e00\u6837\uff0c\u53ea\u662f\u5b83\u7684\u8bed\u6cd5\u66f4\u7b26\u5408BDD\u98ce\u683c\u3002\u771f\u6b63\u7684When \u9636\u6bb5\u662f\u901a\u8fc7\u4e0eHTTP\u52a8\u8bcd\uff08Method\uff09\u540c\u540d\u7684\u65b9\u6cd5get\u3001put\u3001post\u7b49\u5b9e\u73b0\u7684\u3002\u4f8b\u5982\uff0c\u8c03\u7528get\u65b9\u6cd5\u540e\u4f1a\u8fd4\u56deResponse\u5bf9\u8c61\u3002 \uff083\uff09Then \u9636\u6bb5 \u5f97\u5230\u8fd4\u56de\u503c\u540e\u53ef\u4ee5\u901a\u8fc7Response\u4e0a\u7684getBody\u3001getHeader\u7b49\u65b9\u6cd5\u76f4\u63a5\u83b7\u5f97\u6570\u636e\u5e76\u8fdb\u884c\u65ad\u8a00\uff0c\u7136\u540e\u4e2d\u65ad\u94fe\u5f0f\u8c03\u7528\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528then\u65b9\u6cd5\u83b7\u53d6ValidatableResponseOptions\u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u4f20\u5165\u5404\u79cd\u6821\u9a8c\u5668\u6821\u9a8cResponse\u4e2d\u7684\u6570\u636e\uff0c\u6821\u9a8c\u7684\u65b9\u6cd5\u6709statusCode\u3001body\u3001header\u7b49\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u83b7\u53d6\u8fd4\u56de\u7ed3\u679c\u7684\u793a\u4f8b\uff0c\u8fd9\u91cc\u57fa\u4e8e\u4ece\u5217\u8868\u63a5\u53e3\u83b7\u5f97\u7684\u6570\u636e\u8fdb\u884c\u65ad\u8a00\uff1a String body = given() .contentType(\"application/json\") .when() .get(\"/users\").getBody().print(); Assertions.assertEquals(\"[{\"id\":\"admin-id\",\"name\":\"admin\",\"role\":\"ADMIN\",\"email\":\"admin@test.com\",\"password\":\"$2a$10$Q9xt3B2Ixe0tGnbCjVWAbunD4lYdf5PpMSYGyLNrD4S38FGUt4NMC\",\"createdAt\":\"2020-12-16T21:45:41.147Z\",\"updatedAt\":\"2020-12-16T21:45:41.147Z\"}]\", body); \u4f46\u662f\u5982\u679c\u8981\u8fdb\u4e00\u6b65\u5bf9\u7ed3\u679c\u4e2d\u7684\u5c5e\u6027\u8fdb\u884c\u65ad\u8a00\uff0c\u9700\u8981\u5148\u4f7f\u7528JSON\u89e3\u6790\u5e93\u5c06\u5b57\u7b26\u4e32\u89e3\u6790\u4e3aJava\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u5bf9\u89e3\u6790\u540e\u7684\u5bf9\u8c61\u5c5e\u6027\u8fdb\u884c\u65ad\u8a00\u3002\u5982\u6b64\u4e00\u6765\uff0c\u4f9d\u8d56\u4ee3\u7801\u5c31\u662f\u5197\u957f\u7684\u3002\u867d\u7136ValidatableResponseOptions\u63d0\u4f9b\u4e86\u76f4\u63a5\u5728\u8c03\u7528\u94fe\u4e0a\u65ad\u8a00\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u5728then\u65b9\u6cd5\u540e\u9762\u8c03\u7528statusCode(201) \u65b9\u6cd5\u6765\u5224\u65ad\u72b6\u6001\u7801\uff0c\u4f46\u82e5\u9762\u5bf9\u7684\u662fbody\u65b9\u6cd5\u4e2d\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u4e0d\u80fd\u8fd9\u4e48\u7b80\u5355\u5730\u5b8c\u6210\u6821\u9a8c\u4e86\u3002 \u4e3a\u4e86\u8ba9\u65ad\u8a00\u66f4\u5bb9\u6613\uff0c\u53ef\u4ee5\u501f\u7528JsonPath\u548cXmIPath\u8fd9\u4e24\u79cd\u5de5\u5177\uff0c\u901a\u8fc7\u4f20\u5165\u4e00\u4e2aJSON \u8def\u5f84\u8868\u8fbe\u5f0f\u6765\u8bbf\u95ee\u6570\u636e\u4e2d\u7684\u7279\u5b9a\u8282\u70b9\uff0c\u4ece\u800c\u5b8c\u6210\u65ad\u8a00\u3002\u5728then\u65b9\u6cd5\u540e\uff0c\u53ef\u4ee5\u57fa\u4e8ebody\u65b9\u6cd5\u7684\u5404\u79cd\u91cd\u8f7d\u914d\u5408JSON \u8def\u5f84\u8868\u8fbe\u5f0f\u5b8c\u6210\u7b80\u6d01\u548c\u9ad8\u6548\u7684\u65ad\u8a00\u3002 6.3 \u4f7f\u7528 JsonPath \u65ad\u8a00 \u7531\u4e8e\u8d8a\u6765\u8d8a\u591a\u7684\u5e94\u7528\u90fd\u5f00\u59cb\u4f7f\u7528RESTful API\uff08RESTful API\u7684\u6570\u636e\u683c\u5f0f\u4e3aJSON\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u8868\u8fbe\u5f0f\uff08JsonPath\uff09\u6765\u8fdb\u884c\u65ad\u8a00\u3002\u8fd9\u91cc\u4e3a\u4e86\u6f14\u793aJsonPath\u7684\u4f7f\u7528\uff0c\u5c06\u7528\u6237\u5217\u8868\u7684\u63a5\u53e3\u4fee\u6539\u4e3aPage\u7c7b\u578b\u4e86\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u8fd4\u56de\u7ed3\u679c\u53d8\u5f97\u66f4\u590d\u6742\u4e00\u4e9b\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a // UserController @GetMapping(\"\") public ResponseEntity<Page<User>> getAll() { return ResponseEntity.ok(userService.listAll()); } // UserService public Page<User> listAll() { return userRepository.findAll(); } \u8fd9\u65f6\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u4f1a\u5e26\u4e0a\u5206\u9875\u4fe1\u606f\uff0c\u76f8\u5bf9\u590d\u6742\u4e86\u4e00\u4e9b\uff0c\u5177\u4f53\u5982\u4e0b\uff1a { \"content\": [ { \"id\": \"admin-id\", ... } ], \"totalPages\": 1, \"totalElements\": 1, \"size\": 15, \"number\": 0, \"numberOfElements\": 1 } REST Assured\u63d0\u4f9b\u7684body\u65b9\u6cd5\u53ef\u63a5\u6536\u4e00\u4e2aJsonPath\u548c\u4e00\u4e2aMatcher\u3002\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u5c06\u4e0d\u540c\u7684JsonPath\u548cMatcher\u7ec4\u5408\u4f7f\u7528\u5c31\u53ef\u4ee5\u5b8c\u6210\u9700\u8981\u7684\u65ad\u8a00\u3002 \u4e0b\u9762\u662f\u5e38\u89c1\u7684\u65ad\u8a00\u793a\u4f8b\uff1a \u65ad\u8a00\u5c5e\u6027\u3002\u4f8b\u5982totalPages\u5c5e\u6027\u7684\u503c\u4e3a1\uff0c\u53ef\u4ee5\u5199\u4e3a.body(\"$.totalPages\", is(1))\u3002 \u65ad\u8a00\u6570\u7ec4\u957f\u5ea6\u3002\u4f8b\u5982content\u5c5e\u6027\u7684\u5185\u5bb9\u957f\u5ea6\u4e3a1\uff0c\u53ef\u4ee5\u5199\u4e3a.body(\"$.content. size()\", is(1))\u3002 \u65ad\u8a00\u6570\u7ec4\u4e2d\u5177\u4f53\u7684\u5c5e\u6027\u3002\u4f8b\u5982content\u5c5e\u6027\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684name\u5c5e\u6027\u503c\u4e3aadmin\uff0c\u53ef\u4ee5\u5199\u4e3a.body(\"$.content[0].name\",is(\"admin\"))\u3002 \u5728JsonPath\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7279\u6b8a\u7684\u7b26\u53f7\u6765\u5339\u914d\u90e8\u5206\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e9b\u7b26\u53f7\u53eb\u4f5c\u64cd\u4f5c\u7b26\u3002\u6bd4\u5982\uff0c\u70b9\u53f7\u7528\u4e8e\u5339\u914d\u5bf9\u8c61\u7684\u5c5e\u6027\u3002\u88686-1\u5217\u51fa\u4e86\u5e38\u7528\u7684\u64cd\u4f5c\u7b26\u3002 \u8868 6-1 \u5e38\u7528 JsonPath \u64cd\u4f5c\u7b26 \u64cd\u4f5c\u7b26 \u7528\u9014 $ \u8981\u67e5\u8be2\u7684\u6839\u5143\u7d20\uff0c\u4e00\u822c\u7f6e\u4e8e\u8868\u8fbe\u5f0f\u4e4b\u524d @ \u8fed\u4ee3\u5668\u7684\u5f53\u524d\u5143\u7d20 * \u901a\u914d\u7b26\u64cd\u4f5c\u7b26\uff0c\u7528\u4e8e\u6a21\u7cca\u5339\u914d .. \u6df1\u5ea6\u5339\u914d\uff0c\u8de8\u591a\u5c42\u7ea7\u5339\u914d . \u5b50\u5c5e\u6027\u5339\u914d [' ' (, ' ')] \u4e00\u822c\u7528\u4e8e\u5339\u914d\u5bf9\u8c61\u7684\u591a\u4e2a\u5c5e\u6027 [ (, )] \u6839\u636e\u6570\u7ec4\u7d22\u5f15\u8bbf\u95ee 6.4 \u9274\u6743\u7684\u5904\u7406 API\u6d4b\u8bd5\u7684\u9274\u6743\u5904\u7406\u5e38\u7528\u5982\u4e0b\u65b9\u6cd5\uff1a \u9488\u5bf9API\u4f7f\u7528Basic\u9274\u6743\u3002\u73b0\u5b9e\u4e2d\uff0c\u5bf9\u4e8e\u66b4\u9732\u7ed9\u7528\u6237\u7684API\u51e0\u4e4e\u90fd\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u79cd\u9274\u6743\u65b9\u5f0f\uff0c\u4f46\u662f\u670d\u52a1\u4e4b\u95f4\u9274\u6743\u4f7f\u7528\u5f97\u8f83\u4e3a\u5e7f\u6cdb\u3002 \u9488\u5bf9API\u4f7f\u7528Token\u9274\u6743\u3002\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u53ef\u4ee5\u751f\u6210\u4e00\u6b21\u9274\u6743Token\uff0c\u5e76\u5728Header\u4e2d\u4f7f\u7528\u3002 \u9488\u5bf9API\u4f7f\u7528Cookie\u9274\u6743\uff1a\u4f7f\u7528Session\u65b9\u5f0f\u4f20\u9012\u9274\u6743\u4fe1\u606f\uff0cRESTAssured\u63d0\u4f9b\u7684SessionFilter\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u79cd\u66f4\u65b9\u4fbf\u7684\u65b9\u6cd5\u3002 6.4.1 Basic \u9274\u6743 \u8ba4\u8bc1\u4fe1\u606f\u90fd\u662f\u4f7f\u7528HTTP\u5934\u90e8\u6765\u4f20\u9012\u7684\uff0cBasic\u8ba4\u8bc1\u5c31\u662f\u5c06\u7528\u6237\u540d\u548c\u53e3\u4ee4\u62fc\u63a5\uff0c\u5e76\u8fdb\u884cBase64\u7f16\u7801\uff0c\u7136\u540e\u653e\u5230 Authorization\u5934\u4fe1\u606f\u4e2d\u3002 \u4f8b\u5982\uff0c\u7528\u6237\u540d\"admin\"\uff0c\u53e3\u4ee4\"123456\"\uff0c\u4f7f\u7528\"\uff1a\"\u62fc\u63a5\u5e76\u7f16\u7801\u540e\u53d8\u4e3aYWRtaW46 MTIzNDU2\u3002\u5728HTTP\u5305\u4e2d\u53d1\u9001\u7684\u6570\u636e\u5982\u4e0b\uff1a Authorization: Basic YWRtaW46MTIzNDU2 \u53ef\u4ee5\u624b\u52a8\u4f7f\u7528 header \u6765\u5b8c\u6210\u9274\u6743\uff1a given().header(\"Authorization\", \"Basic YWRtaW46MTIzNDU2\") \u4e5f\u53ef\u4ee5\u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\uff1a given().auth().basic(\"admin\", \"123456\") \u5982\u679c\u9700\u8981\u5168\u5c40\u589e\u52a0\u9274\u6743\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 RestAssured\u7c7b\u7684\u5168\u5c40\u5c5e\u6027\uff0c\u4e0d\u8fc7\u8fd9\u4f1a\u964d\u4f4e\u7075\u6d3b\u6027\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a RestAssured.authentication = basic(\"admin\", \"123456\"); 6.4.2 Token \u9274\u6743 Token \u9274\u6743\u662f\u6700\u7075\u6d3b\u7684\u65b9\u5f0f\uff0c\u4e0eBasic\u9274\u6743\u7c7b\u4f3c\uff0c\u90fd\u662f\u5728HTTP\u8bf7\u6c42\u7684\u5934\u90e8\u4f20\u4eba\u8ba4\u8bc1\u4fe1\u606f\u3002\u4e00\u822c\u4f7f\u7528Token\u9274\u6743\u65f6\u90fd\u4f1a\u4f7f\u7528Bearer\u524d\u7f00\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a Authorization: Bearer a1e1eb29-2733-4ce3-b2cc-4569df7fdf0e \u4e0eToken\u9274\u6743\u7c7b\u4f3c\u7684\u8fd8\u6709JWT\u9274\u6743\u3001OAuth\u9274\u6743\u7b49\u3002\u8fd9\u4e9b\u9274\u6743\u65b9\u5f0f\u90fd\u662f\u901a\u8fc7\u751f\u6210\u4e00\u79cd\u7b80\u5355\u7684\u51ed\u8bc1\u5b9e\u73b0\u7684\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8eJWT\u662f\u4e00\u79cd\u81ea\u5305\u542b\u51ed\u8bc1\uff0c\u5b83\u4f1a\u5c06\u9274\u6743\u4fe1\u606f\u7f16\u7801\u5230Token \u4e2d\uff0c\u800cOAuth\u4e3a\u5206\u5e03\u5f0f\u9274\u6743\uff0c\u9700\u8981\u4f7f\u7528access_token\u548crefresh token\u8fd9\u4e24\u79cdToken\u3002 \u4f7f\u7528Token\u9274\u6743\u65f6\uff0c\u53ef\u4ee5\u5728\u6d4b\u8bd5\u4e2d\u63d0\u524d\u51c6\u5907\u4e00\u4e2aToken\uff0c\u5e76\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u4e2d\u590d\u7528\u3002\u8fd9\u91cc\u56e0\u4e3a\u662f\u5728\u540c\u4e00\u4e2a\u9879\u76ee\u4e2d\u7f16\u5199\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6240\u4ee5\u4f1a\u5728\u6d4b\u8bd5\u4e2d\u76f4\u63a5\u4f7f\u7528\u6e90\u4ee3\u7801\u4e2d\u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u66f4\u65b9\u4fbf\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Autowired private AuthorizeService authorizeService; private String token; ... @BeforeEach public void setup() { // \u8c03\u7528\u7236\u7c7b\u7684\u521d\u59cb\u5316\u65b9\u6cd5 super.setup(); // \u8bbe\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u6d4b\u8bd5\u7528\u6237 ... this.token = authorizeService.login(User user); } @Test public void test() { given().contentType(\"application/json\").header(\"Authorization\",\"Bearer \" + token); ... } 6.4.3 Cookie \u9274\u6743 \u5bf9\u4e8e\u4e00\u4e9b\u4f7f\u7528Cookie\u9274\u6743\u7684API\uff0c\u53ef\u4ee5\u901a\u8fc7\u6682\u5b58Cookie\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u6d4b\u8bd5\u4e2d\u7684\u9274\u6743\u3002Cookie\u9274\u6743\u7684\u539f\u7406\u662f\u7528\u6237\u5728\u521d\u6b21\u8bbf\u95ee\u9875\u9762\u6216API\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u751f\u6210\u4e00\u4e2aSession\uff0c\u6b64Session\u7531Session ID\u6807\u8bc6\uff0c\u5e76\u8fd4\u56de\u7ed9\u7528\u6237\u5728Cookie\u4e2d\u5b58\u50a8\u3002\u7528\u6237\u767b\u5f55\u540e\uff0c\u5173\u8054\u7528\u6237\u51ed\u8bc1\u4fe1\u606f\u5230\u8fd9\u4e2aSession ID\uff0c\u53ea\u8981\u7528\u6237\u6bcf\u6b21\u8bf7\u6c42\u90fd\u5e26\u4e0a\u8fd9\u4e2aID\uff0c\u670d\u52a1\u5668\u5c31\u80fd\u8bc6\u522b\u3002 \u7531\u4e8eCookie\u7684\u81ea\u52a8\u9644\u52a0\u662f\u6d4f\u89c8\u5668\u7684\u9ed8\u8ba4\u529f\u80fd\uff0c\u56e0\u6b64\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u65f6\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u505a\u592a\u591a\u5de5\u4f5c\u3002 \u6211\u4eec\u53ef\u4ee5\u5728\u767b\u5f55\u540e\u62bd\u53d6\u51faCookie\uff0c\u7136\u540e\u5728\u4e0b\u6b21\u8bf7\u6c42\u65f6\u5e26\u4e0a\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a // 1. \u767b\u5f55\u5e76\u7559\u5b58 Cookies Map<String, String> cookies = given() .contentType(\"application/json\") .body(Maps.of(\"email\", \"test@email.com\", \"password\", \"123456\")) .when().post(\"/authorizes\") .then().statusCode(201).extract().cookies(); // 2. \u4f7f\u7528 cookies \u83b7\u53d6\u7528\u6237\u4e2a\u4eba\u4fe1\u606f given() .contentType(\"application/json\") .cookies(cookies) .when().post(\"/authorizes/me\") .then().statusCode(200); RESTAssured\u57282.0.0\u7248\u672c\u4e4b\u540e\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5feb\u6377\u65b9\u5f0f\uff0c\u5373\u53ef\u4ee5\u4f7f\u7528SessionFilter\u6765\u4fdd\u6301\u4f1a\u8bdd\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a SessionFilter sessionFilter = new SessionFilter(); given() .contentType(\"application/json\") .filter(sessionFilter) .body(Maps.of(\"email\", \"test@email.com\", \"password\", \"123456\")) .when().post(\"/authorizes\") .then().statusCode(201); \u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u6d4b\u8bd5\u4e2d\u5173\u95ed\u9274\u6743\uff0c\u4e0d\u8fc7\u8fd9\u4f1a\u8ba9\u6d4b\u8bd5\u7684\u4ef7\u503c\u964d\u4f4e\uff0c\u56e0\u6b64\u5e76\u4e0d\u63a8\u8350\u3002 6.5 \u6587\u4ef6\u5904\u7406 \u6709\u4e00\u4e9bAPI\u9700\u8981\u4e0a\u4f20\u6587\u4ef6\uff0c\u6bd4\u5982\u5bfc\u5165\u3001\u4e0a\u4f20\u56fe\u7247\u7b49\uff0c\u56e0\u6b64\u5bf9\u5176\u8fdb\u884c\u6d4b\u8bd5\u65f6\u5c31\u9700\u8981\u5904\u7406\u76f8\u5e94\u7684\u6587\u4ef6\u3002\u4e0b\u9762\u4ecb\u7ecd\u51e0\u79cd\u53ef\u4ee5\u4ece\u6d4b\u8bd5\u76ee\u5f55\u7684\u8d44\u6e90\u6587\u4ef6\u5939\u4e2d\u8bfb\u53d6\u6587\u4ef6\u7684\u65b9\u6cd5\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u3002 \u5047\u8bbe\u5728\u6d4b\u8bd5\u8d44\u6e90\u76ee\u5f55\u4e2d\u6709\u4e00\u4e2a\u6587\u4ef6\u7528\u4e8e\u6d4b\u8bd5\uff0c\u5176\u6587\u4ef6\u5730\u5740\u4e3a\"classpath:file/test.pdf\"\u3002\u7b2c\u4e00\u79cd\u8bfb\u53d6\u6587\u4ef6\u7684\u65b9\u6cd5\u662f\u4f7f\u7528ClassLoader\u3002\u8fd9\u65f6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7c7b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u76f8\u5e94\u7684\u6587\u4ef6\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a ClassLoader classLoader = getClass().getClassLoader(); File file = new File(classLoader.getResource(\"file/test.pdf\").getFile()); \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528Google\u7684Guava\u3002\u5982\u679c\u9879\u76ee\u4e2d\u5f15\u5165\u4e86Google\u7684Guava\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528Resources\u5de5\u5177\u7c7b\u6765\u5b9e\u73b0\u6587\u4ef6\u7684\u52a0\u8f7d\uff0c\u975e\u5e38\u65b9\u4fbf\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a Resources.getResource(\"file/test.pdf\").getFile(); \u5982\u679c\u662f\u6587\u672c\u6587\u4ef6\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528Resources.toString\u6765\u8bfb\u53d6\u6587\u672c\u7684\u5185\u5bb9\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a Resources.toString(Resources.getResource(\"file/test.txt\")); \u83b7\u53d6\u6587\u4ef6\u6216\u8005\u6587\u4ef6\u5185\u5bb9\u540e\uff0c\u53ef\u4ee5\u5c06\u5176\u7528\u4e8e\u540e\u7eed\u7684\u6d4b\u8bd5\uff0c\u5728given\u65b9\u6cd5\u540e\u53ef\u4ee5\u4f7f\u7528multiPart \u65b9\u6cd5\u6765\u6784\u5efa\u8868\u5355\u4e2d\u7684\u6587\u4ef6\u6570\u636e\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a given() .multiPart(Resources.getResource(\"file/test.pdf\").getFile()) .when().post(\"/upload\"); \u4e0d\u8fc7\u91c7\u7528\u8fd9\u79cd\u5199\u6cd5\u65f6\uff0c\u9ed8\u8ba4\u6587\u4ef6\u8868\u5355\u63a7\u4ef6\u7684name\u5c5e\u6027\u4e3a\"file\"\uff0c\u67d0\u4e9bAPI\u4f1a\u81ea\u5b9a\u4e49name\u5c5e\u6027\u9700\u8981\u6ce8\u610f\u589e\u52a0\u76f8\u5e94\u7684\u53c2\u6570\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a given() .multiPart(\"custom_file_name\", Resources.getResource(\"file/test.pdf\").getFile()) .when().post(\"/upload\"); 6.6 \u6a21\u62df\u7b2c\u4e09\u65b9 API \u5982\u679c\u6211\u4eec\u9700\u8981\u6d4b\u8bd5\u7684\u5e94\u7528\u4f9d\u8d56\u4e8e\u7b2c\u4e09\u65b9API\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u5148\u6a21\u62df\u6240\u4f9d\u8d56\u7684API\u624d\u80fd\u5b8c\u6210\u6d4b\u8bd5\uff0c\u5c24\u5176\u662f\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\uff0c\u5426\u5219\u4f1a\u8ba9\u6d4b\u8bd5\u53d8\u5f97\u6bd4\u8f83\u56f0\u96be\u3002 \u9664\u4e86\u642d\u5efa\u771f\u5b9e\u7684\u670d\u52a1\u4ee5\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5de5\u5177\u548c\u65b9\u6cd5\u6765\u8fdb\u884c\u6a21\u62df\u3002\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u4ece\u5f62\u5f62\u8272\u8272\u7684\u65b9\u6cd5\u4e2d\u5bfb\u627e\u4e00\u4e2a\u6210\u672c\u548c\u6548\u679c\u90fd\u80fd\u8fbe\u5230\u8bbe\u8ba1\u76ee\u6807\u7684\u65b9\u6cd5\u5373\u53ef\u3002 6.6.1 \u4f7f\u7528\u9002\u914d\u5668\u6a21\u5f0f\u6a21\u62df \u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u548c\u7b2c\u4e09\u65b9API\u5bf9\u63a5\u65f6\uff0c\u9700\u8981\u5148\u5b9a\u4e49\u4e00\u4e9b\u5ba2\u6237\u7aef\u5bf9\u8c61\uff0c\u4ee5\u4fbf\u6839\u636e\u573a\u666f\u7684\u4e0d\u540c\u628a\u4e0e\u7b2c\u4e09\u65b9\u5bf9\u63a5\u7684\u8fd9\u90e8\u5206\u903b\u8f91\u5c01\u88c5\u8d77\u6765\uff0c\u8fd9\u79cd\u6a21\u5f0f\u79f0\u4e3a\u9002\u914d\u5668\uff08Adapter\uff09\u6a21\u5f0f\u3002\u5982\u679c\u9002\u914d\u5668\u7684\u8bbe\u8ba1\u826f\u597d\uff0c\u53ea\u9700\u8981\u6a21\u62df\u5bf9\u5e94\u7684\u5bf9\u8c61\u6216\u8005Bean \u5373\u53ef\u3002 xkcd.com\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5458\u56db\u683c\u6f2b\u753b\u7f51\u7ad9\uff0c\u6211\u5728https://any-api.com\u4e2d\u53d1\u73b0\u4e86\u5b83\u7684API\u3002\u8fd9\u4e2a\u770b\u4e0a\u53bb\u6781\u5176\u7b80\u5355\u7684API\u53ef\u7528\u6765\u53d1\u5e03\u4e00\u4e9b\u6f2b\u753b\u4fe1\u606f\uff0c\u4e0b\u9762\u5c31\u7528\u5b83\u6765\u6f14\u793aAPI\u6a21\u62df\u7684\u65b9\u6cd5\u3002API\u7684\u5730\u5740\u4e3ahttps://xkcd.com/info.0.json\u3002\u8bbf\u95ee\u6b64\u5730\u5740\uff0c\u53ef\u5f97\u5230JSON\u683c\u5f0f\u7684\u8fd4\u56de\u503c\uff1a { \"month\": \"6\", \"num\": 2472, \"link\": \"\", \"year\": \"2021\", \"news\": \"\", \"safe_title\": \"Fuzzy Blob\", \"transcript\": \"\", \"alt\": \"If there's no dome, how do you explain the irregularities the board discovered in the zoning permits issued in that area!?\", \"img\": \"https://imgs.xkcd.com/comics/fuzzy_blob.png\", \"title\": \"Fuzzy Blob\", \"day\": \"4\" } \u5728Spring Boot\u7684\u751f\u6001\u4e2d\uff0c\u53ef\u4ee5\u9009\u62e9\u7684HTTP\u5ba2\u6237\u7aef\u633a\u591a\uff0c\u6bd4\u5982RestTemplate\u3001Feign\u6216\u8005\u7b80\u5355\u7684OkHttp\u7b49\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f7f\u7528\u7684\u662fRestTemplate\u3002 \u5982\u56fe6-3\u6240\u793a\uff0c\u5728\u9879\u76ee\u4e2d\u6dfb\u52a0\u4e00\u4e2aDailyComicController \u548c\u76f8\u5173\u7684\u7c7b\uff0c\u7528\u4e8e\u8c03\u7528\u8fdc\u7a0b\u7684API\u3002 \u56fe 6-3 \u66f4\u65b0\u540e\u7684\u4ee3\u7801\u7ed3\u6784 Controller\u7c7b\u4f1a\u8c03\u7528XkcdClient\uff0c\u5e76\u8fd4\u56deDailyComic-Response \u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u76ee\u524d\u53ea\u6709\u4e00\u4e2aimageLink \u5c5e\u6027\uff0c\u4eceAPI\u4e2d\u8fd4\u56de\u7684\u5bf9\u5e94\u5b57\u6bb5\u4e3aimg\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @RestController @RequestMapping(\"/api/daily-comic\") public class DailyComicController { @Autowired private XkcdClient xkcdClient; @GetMapping(\"\") public ResponseEntity<DailyComicResponse> getCurrentComic() { XkcdVO xkcdVO = xkcdClient.getXkcdResponse(); return ResponseEntity.ok(DailyComicResponse.builder().imageLink(xkcdVO.getImg()).build()); } } XkcdClient\u7c7b\u4f7f\u7528RestTemplate\u7684getForObject\u65b9\u6cd5\u6765\u83b7\u53d6\u8fdc\u7a0bAPI\u7684\u6570\u636e\u3002Spring \u6846\u67b6\u5df2\u7ecf\u5e2e\u6211\u4eec\u5c01\u88c5\u597d\u4e86HTTP\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e0bRestTemplate\u7684Bean\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Service public class XkcdClient { @Autowired private RestTemplate restTemplate; public XkcdVO getXkcdResponse() { return restTemplate.getForObject(\"https://xkcd.com/info.0.json\", XkcdVO.class); } } \u4e0b\u9762\u6765\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u9a8c\u8bc1\u8fd9\u4e2a\u63a5\u53e3\u662f\u5426\u80fd\u8fd4\u56de\u9700\u8981\u7684\u5185\u5bb9\uff1a class DailyComicControllerTest extends TestBase { @Test void get_current_comic() { given() .contentType(\"application/json\") .when() .get(\"/daily-comic\") .then().statusCode(200) .body(\"imageLink\", is(\"https://imgs.xkcd.com/comics/fuzzy_blob.png\")); } } \u5982\u679c\u4ee3\u7801\u7f16\u5199\u65e0\u8bef\uff0c\u8fd9\u4e2a\u6d4b\u8bd5\u53ef\u4ee5\u901a\u8fc7\u3002\u8fd9\u65f6\u8fd8\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55\u6a21\u62df\u5de5\u5177\uff0c\u6d4b\u8bd5\u8fd0\u884c\u65f6\u4f1a\u6709\u5982\u4e0b\u4e24\u4e2a\u95ee\u9898\u3002 \u6bcf\u6b21\u8fd0\u884c\u6d4b\u8bd5\u65f6\u90fd\u9700\u8981\u4f9d\u8d56\u5916\u90e8\u7684API\uff0c\u5e76\u4e14\u8981\u4fdd\u8bc1\u80fd\u8bbf\u95ee\u5230\u670d\u52a1\u76ee\u6807\u3002 \u5982\u679c\u5bf9\u65b9\u7684API\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6d4b\u8bd5\u5c31\u4f1a\u5931\u8d25\u3002 \u63a5\u4e0b\u6765\u6a21\u62dfXkcdClient\u7684Bean\uff0c\u9996\u5148\u5728TestBase\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff0c\u5b9e\u73b0\u5bf9Bean\u7684\u6a21\u62df\uff0c\u8fd9\u90e8\u5206\u5728\u524d\u9762\u7ae0\u8282\u5df2\u7ecf\u8bb2\u8fc7\u3002 @MockBean private XkcdClient xkcdClient; \u7136\u540e\u5728\u6d4b\u8bd5\u4e2d\u4f7f\u7528@Autowired\u83b7\u5f97\u8fd9\u4e2a\u6a21\u62df\u5bf9\u8c61\uff0c\u5e76\u7ed9\u4e88\u7279\u5b9a\u7684\u8fd4\u56de\u503c\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c@MockBean\u5fc5\u987b\u5148\u5728TestBase\u7c7b\u4e2d\u5b9a\u4e49\u597d\uff0c\u7136\u540e\u518d\u4f7f\u7528@Autowired\u3002\u4e0b\u9762\u5c31\u662f\u5b8c\u6574\u7684\u5e26\u6709Mock\u7684\u6d4b\u8bd5\u3002 class DailyComicControllerTest extends TestBase { @Autowired private XkcdClient xkcdClient; @Test void get_current_comic() { BDDMockito.given(xkcdClient.getXkcdResponse()).willReturn(new XkcdVO() {{ setImg(\"https://imgs.xkcd.com/comics/fuzzy_blob.png\"); }}); given() .contentType(\"application/json\") .when() .get(\"/daily-comic\") .then().statusCode(200) .body(\"imageLink\", is(\"https://imgs.xkcd.com/comics/fuzzy_blob.png\")); } } \u901a\u8fc7@MockBean\u7684\u65b9\u6cd5\u6a21\u62df\u7b2c\u4e09\u65b9API\uff0c\u5bf9\u6e90\u4ee3\u7801\u7684\u4fb5\u5165\u8f83\u5f3a\uff0c\u5bf9\u5b9e\u73b0\u4ee3\u7801\u6709\u4e00\u4e9b\u8981\u6c42\u3002\u4e00\u4e9b\u6bd4\u8f83\u590d\u6742\u7684\u7cfb\u7edf\u8bbf\u95ee\u7b2c\u4e09\u65b9API\u65f6\uff0c\u76f8\u5173\u7684\u5b9e\u73b0\u53ef\u80fd\u6ca1\u90a3\u4e48\u89c4\u8303\uff0c\u4f7f\u7528MockBean \u4e5f\u5c31\u6ca1\u90a3\u4e48\u65b9\u4fbf\u4e86\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528\u5916\u90e8\u7684API Mock \u5de5\u5177\u3002\u8fd9\u4e9bMock \u5de5\u5177\u7684\u539f\u7406\u662f\u901a\u8fc7\u542f\u52a8\u4e00\u4e2a\u670d\u52a1\u6765\u52a0\u8f7d\u76f8\u5e94\u7684JSON\u6587\u4ef6\uff0c\u4ece\u800c\u5b9e\u73b0\u5b9a\u5236\u7684\u8fd4\u56de\uff0c\u5b83\u4eec\u4e5f\u4f1a\u63d0\u4f9b\u7b80\u5355\u7684\u89c4\u5219\u5b9e\u73b0\u4e0d\u540c\u7684\u54cd\u5e94\u9700\u6c42\u3002 \u5f00\u6e90\u7684Mock\u5de5\u5177\u975e\u5e38\u591a\uff0c\u6bd4\u5982WireMock\u3001Moco\u3001json-server\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e2a\u6700\u5177\u6709\u4ee3\u8868\u6027\u7684Mock\u5de5\u5177------WireMock\u3002 6.6.2 WireMock WireMock\u662f\u4e00\u4e2aHTTPMock\u670d\u52a1\u5668\uff0c\u5b83\u7684\u6838\u5fc3\u662f\u4e00\u4e2aWeb\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u4e3a\u7279\u5b9a\u7684\u8bf7\u6c42\u89c4\u5219\u8fd4\u56de\u76f8\u5e94\u7684\u5185\u5bb9\u3002\u53e6\u5916\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u9a8c\u8bc1\u529f\u80fd\uff0c\u53ef\u4fdd\u8bc1\u6d4b\u8bd5\u7684\u6709\u6548\u6027\u3002 WireMock\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u5f55\u5236\u8bf7\u6c42\u7684\u529f\u80fd\uff0c\u8fd9\u9879\u529f\u80fd\u53ef\u5927\u5927\u51cf\u5c11\u6d4b\u8bd5\u7684\u5de5\u4f5c\u91cf\u3002\u5f53\u4e00\u4e2a\u8bf7\u6c42\u8fc7\u6765\u65f6\uff0cWireMock \u5de5\u5177\u4f1a\u5148\u628a\u8bf7\u6c42\u8f6c\u53d1\u5230\u670d\u52a1\u76ee\u6807\u4e0a\uff0c\u6216\u8005\u5728\u8fd4\u56de\u76f8\u5e94\u7684\u503c\u540e\u5c06\u5176\u7f13\u5b58\u4e0b\u6765\uff0c\u5e76\u4e3a\u6d4b\u8bd5\u751f\u6210\u5bf9\u5e94\u7684\u6587\u4ef6\u3002\u53e6\u5916\u4e00\u4e2a\u6bd4\u8f83\u6709\u610f\u601d\u7684\u529f\u80fd\u662f\u8fd4\u56de\u9519\u8bef\u6216\u5ef6\u8fdf\u7684\u6570\u636e\uff0c\u8fd9\u7528\u4e8e\u6d4b\u8bd5\u4e00\u4e9b\u7279\u6b8a\u7684\u573a\u666f\uff0c\u4ee5\u4fbf\u8986\u76d6\u66f4\u591a\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 \u4e66\u4e2d\u8ba8\u8bba\u7684\u662fJava API\u6d4b\u8bd5\uff0c\u521a\u597dWireMock\u6784\u5efa\u4e8eJVM\u5e73\u53f0\u4e4b\u4e0a\uff0c\u5b83\u53ef\u4ee5\u5355\u72ec\u542f\u52a8\uff0c\u4e5f\u53ef\u4ee5\u5185\u5d4c\u5728\u9879\u76ee\u4e2d\u542f\u52a8\uff0c\u7a0d\u540e\u4f1a\u6f14\u793a\u8fd9\u4e24\u79cd\u542f\u52a8\u65b9\u5f0f\u3002\u7531\u4e8e\u53ef\u4ee5\u72ec\u7acb\u542f\u52a8\uff0c\u56e0\u6b64\u53ea\u8981\u5b89\u88c5\u4e86JRE \u73af\u5883\u5c31\u53ef\u4ee5\u8fd0\u884c\uff0c\u6545\u800c\u5b83\u4e0d\u9650\u4e8e\u7528\u4e8eJava\u9879\u76ee\u4e2d\u3002 1. \u72ec\u7acb\u542f\u52a8 \u6839\u636e\u5b98\u7f51\u7684\u4ecb\u7ecd\u53ef\u77e5\uff0cWireMock\u901a\u8fc7Jar\u5305\u76f4\u63a5\u542f\u52a8\u65f6\uff0c\u4e0e\u547d\u4ee4\u884c\u7a0b\u5e8f\u6ca1\u6709\u533a\u522b\u3002\u53ef\u4ee5\u5728Maven\u4ed3\u5e93\u4e2d\u627e\u5230Jar\u6587\u4ef6\u7684\u4e0b\u8f7d\u5730\u5740https://repol.maven.org/maven2/com/github/tomakehurst/wiremock-jre8-standalone/2.28.0/wiremock-jre8-standalone-2.28.0.jar\u3002 \u542f\u52a8\u7684\u547d\u4ee4\u5982\u4e0b\uff1a java -jar wiremock-jre8-standalone-2.28.0.jar \u5b98\u7f51\u7ed9\u51fa\u7684\u53c2\u6570\u6bd4\u8f83\u591a\uff0c\u8fd9\u91cc\u9009\u62e9\u51e0\u4e2a\u5e38\u7528\u7684\u8fdb\u884c\u8bf4\u660e\u3002 --port: \u8bbe\u7f6e\u4e00\u4e2aHTTP\u7684\u7aef\u53e3\u53f7\u3002\u8fd9\u662f\u4e3a\u4e86\u4e0eHTTPS\u7684\u7aef\u53e3\u533a\u5206\u5f00\u6765\uff0c\u56e0\u4e3a\u5728Web\u670d\u52a1\u5668\u4e2d\uff0c\u4e24\u79cd\u7aef\u53e3\u662f\u4e0d\u540c\u7684\u5b9e\u73b0\u3002 --https-port: \u8bbe\u7f6e\u4e00\u4e2aHTTPS\u7aef\u53e3\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cWireMock\u4f9d\u7136\u9ed8\u8ba4\u5f00\u542fHTTP\u7aef\u53e3\uff08\u9ed8\u8ba4\u503c\u4e3a8080\uff09\uff0c\u5982\u679c\u5f00\u542f\u4e86\u591a\u4e2aWireMock\u5b9e\u4f8b\uff0c\u6700\u597d\u4e5f\u540c\u65f6\u6307\u5b9aHTTP \u7aef\u53e3\u3002\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u5e94\u7528\u4f9d\u8d56\u7684\u8fdc\u7a0b\u670d\u52a1\u5730\u5740\u90fd\u662f\u53ef\u4ee5\u914d\u7f6e\u7684\u3002\u53ef\u4ee5\u8ba9\u751f\u4ea7\u4f7f\u7528HTTPS\uff0c\u6d4b\u8bd5\u4f9d\u7136\u914d\u7f6e\u4e3aHTTP\u3002\u5982\u679c\u9700\u8981\u914d\u7f6eHTTPS\uff0c\u5219\u9700\u8981\u76f8\u5e94\u7684\u8bc1\u4e66\u548c\u5bc6\u94a5\u3002 --bind-address: \u4e3b\u673a\u9274\u5b9a\u7ed1\u5b9a\uff0c\u9ed8\u8ba4\u7ed1\u5b9a\u7684\u662f\u672c\u5730\u7f51\u7edc\u9002\u914d\u5668\uff080.0.0.0\uff09\uff0c\u5982\u679c\u6ca1\u6709\u591a\u4e2a\u7f51\u5361\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002 --root-dir: \u8bbe\u7f6e\u6a21\u62df\u6570\u636e\u6587\u4ef6\u7684\u5b58\u653e\u76ee\u5f55\uff0c\u7528\u4e8e\u5b58\u653emappings\u548c_files\u8fd9\u4e24\u4e2a\u5b50\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4e3a\u5f53\u524d\u7a0b\u5e8f\u7684\u5de5\u4f5c\u76ee\u5f55\u3002 --record-mappings: \u5f00\u542f\u8bb0\u5f55\u6a21\u5f0f\uff0c\u628a\u8bf7\u6c42\u5230\u540e\u65b9\u7684\u6570\u636e\u8bb0\u5f55\u4e0b\u6765\uff0c\u5e76\u5b58\u653e\u5230\u76ee\u5f55\u4e2d\u3002 --match-headers: \u5f00\u542f\u8bb0\u5f55\u6a21\u5f0f\u540e\uff0c\u628a\u4e00\u4e9b\u8bf7\u6c42\u5934\u4e2d\u7684\u503c\u4e5f\u8bb0\u5f55\u4e0b\u6765\u3002 --enable-stub-cors: \u5141\u8bb8\u81ea\u52a8\u53d1\u9001CORS\u54cd\u5e94\u5934\uff0c\u53ef\u4ee5\u89e3\u51b3\u524d\u7aef\u8c03\u8bd5\u65f6\u5b58\u5728\u7684\u8de8\u57df\u95ee\u9898\uff0c\u8fd9\u91cc\u9ed8\u8ba4\u4e3a\u5173\u95ed\u72b6\u6001\u3002 --help: \u663e\u793a\u547d\u4ee4\u7684\u5e2e\u52a9\u63d0\u793a\u3002 \u6b64\u5916\uff0cWireMock\u8fd8\u63d0\u4f9b\u4e86HTTPS\u8bc1\u4e66\u3001\u4ee3\u7406\u548c\u7ebf\u7a0b\u63a7\u5236\u7b49\u76f8\u5173\u53c2\u6570\uff0c\u4f46\u662f\u7528\u5f97\u4e0d\u591a\uff0c\u5982\u9700\u4f7f\u7528\uff0c\u67e5\u8be2\u624b\u518c\u5373\u53ef\u3002 \u8fd9\u91cc\u8fd8\u662f\u4ee5xkcd.com\u7684\u8bbf\u95ee\u503c\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff0c\u6211\u4eec\u4e0d\u4f7f\u7528\u4efb\u4f55\u53c2\u6570\u542f\u52a8WireMock\uff0c\u800c\u662f\u901a\u8fc7API\u52a8\u6001\u5730\u6dfb\u52a0Mock\u6570\u636e\u3002\u4e3a\u4e86\u51cf\u5c11\u4ee3\u7801\uff0c\u53ea\u8f93\u51fa\u4e00\u4e2a\"Hello World\"\u3002\u670d\u52a1\u542f\u52a8\u540e\uff0c\u7ec4\u7ec7\u4e0b\u9762\u7684API\u8bf7\u6c42\u3002 curl -X POST --data '{ \"request\": { \"url\": \"/info.0.json\", \"method\":\"GET\" }, \"response\": {\"status\": 200, \"body\":\"{\"hello\":\"world\"}\" }}' http://localhost:8080/__admin/mappings/new \u5176\u4e2d\uff0c/_admin/mappings/new API\u662fWireMock\u7684\u7ba1\u7406API\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u8bbe\u7f6e\u7279\u5b9a\u7684\u6a21\u62df\u5185\u5bb9\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u8bbe\u7f6e\u662f\u5426\u6210\u529f\uff1a curl http://localhost:8080/info.0.json {\"hello\":\"world\"} \u5927\u5bb6\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c\u6bcf\u6b21\u4f7f\u7528\u6a21\u62df\u6570\u636e\u65f6\uff0c\u90fd\u9700\u8981\u8c03\u7528\u4e00\u6b21API\u5148\u8bbe\u7f6e\u6a21\u62df\u6570\u636e\uff0c\u8fd9\u6837\u505a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u53ef\u4ee5\u76f4\u63a5\u7f16\u5199\u914d\u7f6e\u6587\u4ef6\u6765\u5b9e\u73b0\u6a21\u62df\u6570\u636e\u7684\u51c6\u5907\u5de5\u4f5c\u3002 \u5b9e\u4f8b\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u521b\u5efa_files\u548cmappings\u8fd9\u4e24\u4e2a\u76ee\u5f55\uff0c\u7f16\u5199\u7684\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u653e\u5230\u8fd9\u4e24\u4e2a\u76ee\u5f55\u4e2d\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u76ee\u5f55\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 __files: \u5f53WireMock\u542f\u52a8\u65f6\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4f1a\u88ab\u5f53\u4f5c\u4e00\u4e2a\u9759\u6001\u670d\u52a1\u5668\u7684\u6839\u8def\u5f84\u3002\u4f8b\u5982\uff0c\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7f16\u5199hello.html\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7http://localhost:8080/hello.html\u8bbf\u95ee\u3002\u901a\u5e38\uff0c\u8fd9\u4e2a\u76ee\u5f55\u7528\u4e8e\u4e00\u4e9b\u6ca1\u6709\u7279\u5b9a\u89c4\u5219\u7684\u573a\u666f\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5927\u7684\u6587\u4ef6API\uff0c\u6bd4\u5982\u9700\u8981\u5b58\u653e\u4e00\u5f20\u56fe\u7247\u65f6\u3002 mappings: \u8fd9\u4e2a\u76ee\u5f55\u53ef\u4ee5\u7528\u4e8e\u8bf7\u6c42\u6620\u5c04\u8fd4\u56de\u9700\u8981\u7684\u5185\u5bb9\uff0c\u6bd4\u5982\u5339\u914d\u8bf7\u6c42\u4e2d\u7684URL\u3001Header\uff0c\u8fd4\u56de\u7279\u5b9a\u7684\u6570\u636e\u3002\u53ef\u4ee5\u7528\u4e8e\u5b9a\u4e49\u66f4\u4e3a\u590d\u6742\u7684\u4ea4\u4e92\u573a\u666f\uff0c\u9002\u5408\u8f83\u4e3a\u52a8\u6001\u7684API\u3002\u53e6\u5916\uff0c\u5b83\u4e5f\u5177\u6709\u6bd4__files\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\u3002 mappings\u4e2d\u4e0d\u80fd\u50cf __files \u4e00\u6837\u76f4\u63a5\u653e\u9759\u6001\u6587\u4ef6\uff08\u5982\u679c\u8fd9\u6837\u5c31\u4e0d\u80fd\u53d1\u6325\u52a8\u6001\u6a21\u62df\u7684\u4ef7\u503c\u4e86\uff09\uff0c\u9700\u8981\u4f7f\u7528\u89c4\u5b9a\u7684DSL\u8bed\u6cd5\u6765\u5b9e\u73b0\u3002\u4f9d\u7136\u4f7f\u7528xkcd\u7684\u4f8b\u5b50\uff0c\u4e0d\u8fc7\u8fd9\u6b21\u662f\u901a\u8fc7\u5b9a\u4e49\u914d\u7f6e\u6587\u4ef6\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u6a21\u62df\u6570\u636e\u7684\u51c6\u5907\u3002 \u5728mappings\u76ee\u5f55\u7684info.0.json\u4e2d\u653e\u5165\u4e0b\u9762\u7684\u6587\u4ef6\u5185\u5bb9\uff0c\u6ce8\u610fbody\u65b9\u6cd5\u63a5\u6536\u7684\u8fd8\u662fString\u7c7b\u578b\uff0c\u56e0\u6b64\u9700\u8981\u8f6c\u4e49\u4e3aJSON\u7684\u5185\u5bb9\u3002 { \"request\": { \"method\": \"GET\", \"url\": \"/info.0.json\" }, \"response\": { \"status\": 200, \"body\":\"{\"month\":\"6\",\"num\":2472,\"link\":\"\",\"year\":\"2021\",\"news\":\"\",\"safe_title\":\"Fuzzy Blob\",\"transcript\":\"\",\"alt\":\"If there's no dome, how do you explain the irregularities the board discovered in the zoning permits issued in that area!?\",\"img\":\"https://imgs.xkcd.com/comics/fuzzy_blob.png\",\"title\":\"Fuzzy Blob\",\"day\":\"4\"}\" } } 2. \u5185\u5d4c\u5728 JUnit \u5e73\u53f0\u4e2d\u4f7f\u7528 WireMock\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u72ec\u7acb\u542f\u52a8\u7684\u65b9\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4f9d\u8d56\u5305\u5728\u6d4b\u8bd5\u4e2d\u542f\u52a8\u3002\u901a\u8fc7WireMock \u66b4\u9732\u51fa\u6765\u7684API\u53ef\u5b9e\u73b0\u7075\u6d3b\u7684\u914d\u7f6e\u3001\u9a8c\u8bc1\u3001\u91cd\u7f6e\u3001\u5f55\u5236\u7b49\u529f\u80fd\uff0c\u8fd9\u5c31\u4e3a\u6211\u4eec\u7684\u6d4b\u8bd5\u5e26\u6765\u65e0\u9650\u7684\u53ef\u80fd\u3002\u4e0b\u9762\u6f14\u793a\u5982\u4f55\u4f7f\u7528 WireMock \u5728\u6d4b\u8bd5\u4e2d\u52a8\u6001\u5730\u6a21\u62df\u7b2c\u4e09\u65b9\u670d\u52a1\u3002 \u9996\u5148\uff0c\u4f9d\u7136\u662f\u5728POM\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff0c\u8fd9\u91cc\u53c2\u8003\u5b98\u7f51\u7684\u4f8b\u5b50\u4f7f\u7528\u4e86wiremock-jre8 \u8fd9\u4e2a\u7248\u672c\uff0c\u5efa\u8bae\u5927\u5bb6\u6839\u636eJava\u7248\u672c\u9009\u62e9\u5408\u9002\u7684WireMock\u53d1\u884c\u7248\u3002 \u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\uff0c\u76f4\u63a5\u542f\u52a8WireMockServer\u5373\u53ef\uff0c\u8fd9\u4e0e\u524d\u9762\u4ecb\u7ecd\u7684RedisServer \u7c7b\u4f3c\uff0c\u90fd\u662f\u9700\u8981\u542f\u52a8\u4e00\u4e2a\u5b9e\u4f8b\u3002 public class UserMockServerTest extends TestBase { private WireMockServer wireMockServer; @Autowired RestTemplate restTemplate; @BeforeEach public void setUp() { super.setUp(); wireMockServer = new WireMockServer(options().port(9090)); wireMockServer.start(); } @AfterEach void tearDown() { wireMockServer.stop(); } @Test void test_mock_server() { String response = restTemplate.getForObject(\"http://localhost:9090/users\", String.class); System.out.println(response); } } \u4e3a\u4e86\u7b80\u5316\u6f14\u793a\uff0c\u8fd9\u91cc\u6ca1\u5b9e\u73b0\u6e90\u4ee3\u7801\u4e2d\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u800c\u662f\u76f4\u63a5\u4f7f\u7528RestTemplate\u8bf7\u6c42\u542f\u52a8\u4e86WireMock\u7684\u6a21\u62df\u670d\u52a1\u3002\u5728test_mock_server\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u8bbf\u95eehttp://localhost:9090/users\u4f1a\u5f97\u5230\u4e00\u4e2a404\u7684\u9519\u8bef\uff0c\u56e0\u4e3a\u8fd9\u91cc\u8fd8\u6ca1\u6709\u8bbe\u7f6e\u4efb\u4f55\u6a21\u62df\u6570\u636e\u3002 \u63a5\u4e0b\u6765\uff0c\u7f16\u5199\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u52a8\u6001\u6a21\u62df\u4ee3\u7801\uff0c\u5e76\u8bf4\u660e\u5bf9\u5e94\u65b9\u6cd5\u7684\u7528\u9014\u3002 configureFor(\"localhost\", 9090); stubFor(get(urlEqualTo(\"/users\")) .willReturn(aResponse() .withHeader(\"Content-Type\", \"text/json\") .withBody(\"{\"name\":\"john\"}\"))); configureFor(String host, int port) \u65b9\u6cd5\u7528\u4e8e\u7ed9\u540e\u7eed\u7684\u65b9\u6cd5stubFor\u914d\u7f6e\u4e00\u4e2aWireMock\u7684\u5730\u5740\u548c\u7aef\u53e3\uff0c\u800cstubFor\u7684\u539f\u7406\u53c8\u4e0e\u8c03\u7528WireMock\u7684/admin\u7aef\u53e3\u4e00\u6837\uff0c\u56e0\u6b64\u4e5f\u9700\u8981\u4e3a\u5176\u914d\u7f6e\u5bf9\u5e94\u7684\u7aef\u53e3\u3002 stubFor(MappingBuilder mappingBuilder) \u65b9\u6cd5\u7528\u4e8e\u914d\u7f6e\u6a21\u62df\u7684\u6570\u636e\uff0c\u7531\u4e8eget\u65b9\u6cd5\u7684\u91cd\u540d\u65b9\u6cd5\u592a\u591a\uff08Mockito\u3001JDK \u7b49\u5305\u4e2d\u4e5f\u6709 get \u65b9\u6cd5\uff09\uff0c\u5efa\u8bae\u5c06com.github.tomakehurst.wiremock. client.WireMock \u8fd9\u4e2a\u5305\u4f7f\u7528\"*\"\u5f15\u8fdb\u6765\u3002get\u3001urlEqualTo\u3001aResponse\u90fd\u662f\u7528\u4e8e\u6784\u5efa\u5339\u914d\u89c4\u5219\u548c\u8fd4\u56de\u503c\u7684\u76f8\u5173\u65b9\u6cd5\u3002 \u6dfb\u52a0\u4ee5\u4e0a\u7684\u65b9\u6cd5\u540e\uff0c\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u3002\u987a\u5229\u7684\u8bdd\uff0c\u6d4b\u8bd5\u4f1a\u901a\u8fc7\u5e76\u6253\u5370\u51fa\u9700\u8981\u8fd4\u56de\u7684\u6570\u636e\u5185\u5bb9\u3002\u4e0a\u9762\u901a\u8fc7Java\u8bed\u8a00\u63cf\u8ff0\u7684\u6a21\u62df\u6570\u636e\u7b49\u4ef7\u4e8e\u4e0b\u9762\u7684JSON\u6587\u4ef6\uff1a { \"request\": { \"method\": \"GET\", \"url\": \"/users\" }, \"response\": { \"status\": 200, \"body\": \"{\\\"name\\\":\\\"john\\\"}\", \"headers\": { \"Content-Type\": \"text/json\" } } } WireMock\u7c7b\u4e2d\u63d0\u4f9b\u4e86\u975e\u5e38\u591a\u7684Builder\u65b9\u6cd5\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u66f4\u52a0\u7075\u6d3b\u5730\u6784\u5efa\u6a21\u62dfAPI\uff0c\u8fd9\u5bf9\u4e8e\u6784\u5efa\u4e00\u4e9b\u5f02\u5e38\u8fd4\u56de\u7279\u522b\u6709\u7528\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u7701\u7565urlEqualTo\u65b9\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528okJson\u65b9\u6cd5\u6784\u5efaJSON\u7684\u8fd4\u56de\u5185\u5bb9\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test void test_mock_json() { configureFor(\"localhost\", 9090); stubFor(get(\"/users\") .willReturn(okJson(\"{\\\"name\\\":\\\"john\\\"}\"))); String response = restTemplate.getForObject(\"http://localhost:9090/users\", String.class); Assertions.assertEquals(\"{\\\"name\\\":\\\"john\\\"}\", response); } \u5f53\u6d4b\u8bd5\u670d\u52a1\u5f02\u5e38\u65f6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528unauthorized\u3001forbidden\u3001notFound\u7b49\u65b9\u6cd5\u6784\u5efa\u5f02\u5e38\u8fd4\u56de\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test void mock_status() { configureFor(\"localhost\", 9090); stubFor(get(\"/limited-resources\") .willReturn(unauthorized())); Assertions.assertThrows(HttpClientErrorException.Unauthorized.class, () -> { restTemplate.getForEntity(\"http://localhost:9090/limited-resources\", String.class); }); } \u8fd8\u53ef\u4ee5\u4f7f\u7528temporaryRedirect\u6784\u5efa\u8df3\u8f6c\u65b9\u6cd5\uff0c\u6bd4\u5982\u6d4b\u8bd5302\u3001301\u8df3\u8f6c\u3002\u9ed8\u8ba4\u7684RestTemplate \u5f00\u542f\u4e86\u81ea\u52a8\u83b7\u53d6\u8df3\u8f6c\u540e\u7684\u6570\u636e\u7684\u529f\u80fd\uff0c\u8fd9\u91cc\u4e3a\u4e86\u6f14\u793a\u65b9\u4fbf\uff0c\u65ad\u8a00\u4e86\u8df3\u8f6c\u5230/redirect-to\u540e\u7684\u8fd4\u56de\u503c\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test void mock_redirect() { configureFor(\"localhost\", 9090); stubFor(get(\"/redirect-to\") .willReturn(ok(\"new-url\"))); stubFor(get(\"/redirect\") .willReturn(temporaryRedirect(\"/redirect-to\"))); String response = restTemplate.getForObject(\"http://localhost:9090/redirect-to\", String.class); Assertions.assertEquals(response, \"new-url\"); } \u5982\u679c\u60f3\u5173\u95edRestTemplate\u7684\u81ea\u52a8\u8df3\u8f6c\uff0c\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2aBean\u8fdb\u884c\u914d\u7f6e\u3002\u5173\u95edRestTemplate \u7684\u81ea\u52a8\u8df3\u8f6c\uff08\u4e5f\u53ef\u4ee5\u4f7f\u7528\u524d\u9762\u4ecb\u7ecd\u7684TestRestTemplate\uff09\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528getForEntity \u83b7\u53d6\u8fd4\u56de\u7684HTTP\u5305\u5b9e\u4f53\uff0c\u5e76\u83b7\u53d6\u771f\u5b9e\u7684\u72b6\u6001\u7801\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Bean public RestTemplate restTemplate () { RestTemplate restTemplate = new RestTemplate(); final HttpComponentsClientHttpRequestFactory factory = new HttpComponentsClientHttpRequestFactory(); CloseableHttpClient build = HttpClientBuilder.create().disableRedirectHandling().build(); factory.setHttpClient(build); restTemplate.setRequestFactory(factory); return restTemplate; } 3. \u8c03\u7528\u9a8c\u8bc1 WireMock\u5b9e\u4f8b\u5728\u542f\u52a8\u540e\u4f1a\u8bb0\u5f55\u6240\u6709\u7684\u6d4b\u8bd5\u8bf7\u6c42\uff0c\u5e76\u4e14\u5728\u91cd\u7f6e\u4e4b\u524d\u90fd\u4e0d\u4f1a\u6e05\u7406\u6389\u3002\u5b83\u7684\u7528\u5904\u5c31\u662f\u83b7\u53d6\u8bf7\u6c42\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u4ece\u800c\u5224\u5b9a\u6d4b\u8bd5\u7ed3\u679c\u3002\u540c\u65f6\uff0c\u5b83\u4e5f\u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u8bf7\u6c42\u7684\u8be6\u60c5\uff0c\u4e3a\u8c03\u8bd5Bug\u5e26\u6765\u4fbf\u5229\u3002 \u901a\u8fc7Jar\u5305\u72ec\u7acb\u542f\u52a8\u7684WireMock\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406API\u83b7\u53d6\u5339\u914d\u7ed3\u679c\uff0c\u4f46\u662f\u4f7f\u7528\u72ec\u7acb\u542f\u52a8\u7684WireMock\u670d\u52a1\u65f6\uff0c\u5f88\u5c11\u4f1a\u53bb\u9a8c\u8bc1\u6a21\u62df\u6570\u636e\u7684\u5339\u914d\u60c5\u51b5\u3002 \u901a\u8fc7\u5185\u5d4c\u542f\u52a8\u7684WireMock\u670d\u52a1\u4f7f\u7528Java API\u6765\u5b9e\u73b0\u5bf9API\u7684\u9a8c\u8bc1\u5c31\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u8c03\u7528verify\u65b9\u6cd5\u5373\u53ef\uff1a @Test void verify_mock_server() { // \u51c6\u5907 Mock \u6570\u636e configureFor(\"localhost\", 9090); stubFor(get(urlEqualTo(\"/users\")) .willReturn(aResponse() .withHeader(\"Content-Type\", \"text/json\") .withBody(\"{\\\"name\\\":\\\"john\\\"}\"))); // \u8c03\u7528\u88ab\u6d4b\u8bd5\u5185\u5bb9 String response = restTemplate.getForObject(\"http://localhost:9090/users\", String.class); System.out.println(response); // \u9a8c\u8bc1\u88ab\u4f9d\u8d56 API \u662f\u5426\u88ab\u8c03\u7528 verify(getRequestedFor(urlEqualTo(\"/users\")) .withHeader(\"Content-Type\", equalTo(\"text/json\"))); } \u793a\u4f8b\u4ee3\u7801\u4e2d\u7684 verify \u65b9\u6cd5\u4e0eMockito \u4e2d\u7684\u76f8\u5173\u65b9\u6cd5\u91cd\u540d\uff0c\u8bf7\u6ce8\u610f\u5f15\u5165\u7684\u5305\u662f\u5426\u6b63\u786e\u3002\u8fd9\u91cc\u7684 getRequestedFor\u83b7\u5f97Builder\u5bf9\u8c61\u7684\u8bed\u6cd5\u4e0e\u51c6\u5907 Mock\u6570\u636e\u65f6\u975e\u5e38\u76f8\u4f3c\u3002verify\u65b9\u6cd5\u6ca1\u6709\u522b\u7684\u53c2\u6570\u65f6\uff0c\u4f1a\u9a8c\u8bc1\u5339\u914d\u7684\u89c4\u5219\u662f\u5426\u81f3\u5c11\u8c03\u7528\u4e86\u4e00\u6b21\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0crestTemplate\u5bf9\u8c61\u53d1\u51fa\u53bb\u7684\u8bf7\u6c42\u6ca1\u6709\u5e26\u4e0aContent-Type\uff0c\u56e0\u6b64\u6d4b\u8bd5\u4f1a\u5931\u8d25\u3002\u6d4b\u8bd5\u5931\u8d25\u540e\uff0c\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u67e5\u770b\u9519\u8bef\u4fe1\u606f\uff0c\u5982\u56fe6-4\u6240\u793a\u3002\u4f7f\u7528IntelliJIDEA\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5355\u51fb\u9519\u8bef\u4fe1\u606f\u53ef\u4ee5\u67e5\u770b\u5dee\u5f02\uff0c\u4ece\u800c\u5206\u6790\u95ee\u9898\u4ea7\u751f\u7684\u539f\u56e0\u3002 \u56fe 6-4 \u5bf9\u6bd4\u5206\u6790\u9519\u8bef\u539f\u56e0 \u5f53\u7136\uff0c\u4e0eMockito\u7c7b\u4f3c\uff0cverify\u65b9\u6cd5\u9664\u4e86\u9ed8\u8ba4\u6267\u884c\u81f3\u5c11\u4e00\u6b21\u7684\u6821\u9a8c\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e86\u591a\u79cd\u9a8c\u8bc1\u64cd\u4f5c\uff1a verify(lessThan(5), postRequestedFor(urlEqualTo(\"/many\"))); verify(lessThanOrExactly(5), postRequestedFor(urlEqualTo(\"/many\"))); verify(exactly(5), postRequestedFor(urlEqualTo(\"/many\"))); verify(moreThanOrExactly(5), postRequestedFor(urlEqualTo(\"/many\"))); verify(moreThan(5), postRequestedFor(urlEqualTo(\"/many\"))); 4. \u81ea\u5b9a\u4e49 JUnit 5 Extension \u6211\u4eec\u77e5\u9053JUnit4\u63d0\u4f9b\u4e86Rule\uff0cWireMock\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2aWireMockRule\u6765\u96c6\u6210\u539f\u751f\u7684API\u3002\u56de\u987e\u4e4b\u524d\u4ecb\u7ecd\u7684Rule\uff0c\u6211\u4eec\u77e5\u9053\uff0cRule\u662fJUnit\u7684\u4e00\u79cd\u62d3\u5c55\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8ba9\u6d4b\u8bd5\u66f4\u4e3a\u7075\u6d3b\uff0c\u5b83\u80fd\u8d77\u5230\u7c7b\u4f3c\u63d2\u4ef6\u7684\u4f5c\u7528\u3002Rule\u6700\u57fa\u672c\u7684\u4f7f\u7528\u65b9\u5f0f\u5c31\u662f@Rule\u6ce8\u89e3\u5728\u6d4b\u8bd5\u7c7b\u4e2d\u58f0\u660e\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Rule public WireMockRule wireMockRule = new WireMockRule(); \u4e5f\u53ef\u4ee5\u589e\u52a0\u4e00\u4e9b\u53c2\u6570\uff1a @Rule public WireMockRule wireMockRule = new WireMockRule(options().port(8888).httpsPort(8889)); \u4f46\u662f\uff0c\u6211\u4eec\u7684\u4f8b\u5b50\u73b0\u5728\u5df2\u7ecf\u5347\u7ea7\u5230\u4e86JUnit5\u7248\u672c\uff0c\u5728Junit5\u4e2d\u4f7f\u7528Extension\u4ee3\u66ff\u4e86Rule\uff0c\u8ba9\u62d3\u5c55\u7684\u7f16\u5199\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u8fd9\u91cc\u4f7f\u7528WireMock\u7684\u539f\u751fAPI\u7f16\u5199\u4e00\u4e2aJUnit 5\u7684Extension\u3002\u7f16\u5199Extension\u7684\u65b9\u6cd5\u6bd4\u8f83\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528WireMockServer\u5bf9\u8c61\u4f5c\u4e3a\u7236\u7c7b\uff0c\u7136\u540e\u5b9e\u73b0\u76f8\u5e94\u7684\u63a5\u53e3\u3002 public class WireMockExtension extends WireMockServer implements BeforeEachCallback, AfterEachCallback { public WireMockExtension() { } @Override public void afterEach(ExtensionContext context) { stop(); resetAll(); } @Override public void beforeEach(ExtensionContext context) { start(); } } \u4e00\u4e2a\u6781\u5176\u7b80\u5355\u7684Extension\u5c31\u5f00\u53d1\u5b8c\u6210\u4e86\uff0c\u4f7f\u7528@RegisterExtension\u53ef\u4ee5\u6ce8\u4ebaExtension \u4ee3\u66ff\u6bcf\u6b21\u624b\u52a8\u7f16\u5199\u7684start\u3001stop\u65b9\u6cd5\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class WireMockExtensionTest extends TestBase { @RegisterExtension WireMockExtension wireMock = new WireMockExtension(); ... } } WireMockServer\u63d0\u4f9b\u4e86\u6839\u636e\u53c2\u6570\u6784\u5efa\u6a21\u62df\u670d\u52a1\u7684\u65b9\u6cd5\uff0c\u5728Extension\u4e2d\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u76f8\u5e94\u7684\u65b9\u6cd5\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a // \u6839\u636e\u914d\u7f6e\u6784\u5efa WireMockServer public WireMockExtension(Options options) { super(options); } // \u6839\u636e\u7aef\u53e3\u6784\u5efa WireMockServer public WireMockExtension(int port, Integer httpsPort) { super(port, httpsPort); } 6.7 API \u81ea\u52a8\u5316\u6d4b\u8bd5\u7b56\u7565 \u5728\u7f16\u5199API\u6d4b\u8bd5\u65f6\uff0c\u6d4b\u8bd5\u7b56\u7565\u662f\u4e00\u4ef6\u6bd4\u8f83\u4ee4\u4eba\u5934\u75bc\u7684\u4e8b\u60c5\uff0c\u76f8\u5bf9\u6765\u8bf4\uff0c\u6d4b\u8bd5\u7684\u4e00\u4e9b\u6280\u672f\u95ee\u9898\u53cd\u800c\u6bd4\u8f83\u597d\u89e3\u51b3\u3002\u539f\u56e0\u662f\u5e94\u7528\u67b6\u6784\u7684\u6c34\u5e73\u53c2\u5dee\u4e0d\u9f50\uff0cAPI\u7684\u804c\u8d23\u4e0d\u662f\u90a3\u4e48\u6e05\u6670\uff0c\u4ece\u800c\u5bfc\u81f4\u6d4b\u8bd5\u53d8\u5f97\u56f0\u96be\u3002 \u826f\u597d\u7684API\u8bbe\u8ba1\u4f1a\u5c3d\u53ef\u80fd\u5730\u8003\u8651\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\u7684MECE\u539f\u5219\uff08Mutually Exclusive Collectively Exhaustive\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u529f\u80fd\u7a77\u5c3d\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd8\u4f1a\u8bbe\u6cd5\u505a\u5230\u5f7c\u6b64\u72ec\u7acb\u3002\u8fd9\u6837\u4e00\u6765\uff0cAPI\u7684\u804c\u8d23\u5c31\u6bd4\u8f83\u5355\u4e00\u4e86\uff0c\u81ea\u7136\u6211\u4eec\u7684\u6d4b\u8bd5\u5de5\u4f5c\u4e5f\u4f1a\u76f8\u5bf9\u7b80\u5355\u3002 \u5bf9\u4e8e\u4e0d\u540c\u7684API\u7c7b\u578b\uff0c\u6d4b\u8bd5\u7b56\u7565\u4e5f\u4f1a\u4e0d\u4e00\u6837\u3002\u8fd9\u91cc\u7684\u6d4b\u8bd5\u7b56\u7565\u4e0e\u901a\u5e38\u610f\u4e49\u4e0a\u7684\u6d4b\u8bd5\u7b56\u7565\u7565\u6709\u4e0d\u540c\uff0c\u56e0\u4e3a\u5df2\u7ecf\u9650\u5b9a\u4e86\u662fAPI\u6d4b\u8bd5\uff0c\u6240\u4ee5\u5b83\u7684\u6d4b\u8bd5\u76ee\u6807\u3001\u7c7b\u578b\u57fa\u672c\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8ba8\u8bba\u7684\u91cd\u70b9\u4e5f\u5c31\u53d8\u6210\u4e86\u5982\u4f55\u66f4\u597d\u5730\u4e3aAPI\u7ec4\u7ec7\u6d4b\u8bd5\u3001\u5982\u4f55\u63d0\u9ad8\u6d4b\u8bd5\u6709\u6548\u6027\uff0c\u4ee5\u53ca\u5982\u4f55\u8ba9\u6d4b\u8bd5\u7684\u7f16\u5199\u53d8\u5f97\u66f4\u52a0\u4fbf\u5229\u3002 \u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6d4b\u8bd5\u7b56\u7565\u5f80\u5f80\u4e0e\u67b6\u6784\u6709\u5173\uff0cAPI\u6d4b\u8bd5\u53d7\u67b6\u6784\u7684\u5236\u7ea6\u3002\u4f8b\u5982\uff0c\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u9762\u5411\u5e94\u7528\u7684API\u5728\u4e00\u4e9b\u516c\u53f8\u53eb\u4f5cExperience API\u3001\u524d\u53f0\u3001BFF\u7b49\uff0c\u800c\u9762\u5411\u5185\u90e8\u670d\u52a1\u7684API\u5219\u53eb\u4f5c\u9886\u57df\u670d\u52a1\u6216\u6838\u5fc3\u670d\u52a1API\u3002 \u4e0b\u9762\u4ee5\u9910\u996e\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u8bf4\u660e\u4e0a\u8ff0\u4e24\u79cdAPI\u7684\u7ec6\u5fae\u5dee\u5f02\u3002\u7528\u6237\u53ef\u4ee5\u5728\u624b\u673a\u4e0a\u70b9\u9910\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u6216\u8005APP\u8bbf\u95ee\u7528\u6237\u7aefAPI\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406\u7aefAPI\u7ba1\u7406\u7528\u6237\u7b49\u7cfb\u7edf\u4e2d\u7684\u8d44\u6e90\u3002\u8fd9\u4e9b\u8bf7\u6c42\u6700\u7ec8\u90fd\u4f1a\u901a\u8fc7\u4e0d\u540c\u7684\u5e94\u7528API\u5230\u8fbe\u9886\u57dfAPI\u4e2d\uff0c\u5982\u56fe6-5\u6240\u793a\u3002 \u56fe 6-5 \u4e0d\u540c\u7c7b\u578b\u7684 API 6.7.1 \u9762\u5411\u5e94\u7528\u7684 API \u5e94\u7528API\u53ea\u662f\u5bf9\u9886\u57dfAPI\u7684\u7ec4\u7ec7\u548c\u7f16\u6392\uff0c\u6ca1\u6709\u7279\u522b\u591a\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u6d4b\u8bd5\u91cd\u70b9\u662f\u9a8c\u8bc1\u8fd9\u5957 API\u80fd\u5426\u5b8c\u6210\u7aef\u5230\u7aef\u7684\u9a8c\u8bc1\u3002\u8fd9\u7c7b API\u7684\u6d4b\u8bd5\u5de5\u4f5c\u6700\u597d\u6309\u7167\u573a\u666f\u6765\u7ec4\u7ec7\uff0c\u6bd4\u8f83\u63a8\u8350\u7684\u505a\u6cd5\u662f\u6839\u636e\u573a\u666f\u6765\u6d4b\u8bd5\uff0c\u53ef\u4f7f\u7528\u7528\u6237\u65c5\u7a0b\uff08User Journey\uff09\u6d4b\u8bd5\u7684\u98ce\u683c\u6765\u7ec4\u7ec7\u6d4b\u8bd5\u3002 \u7531\u4e8e\u5e94\u7528API\u4f9d\u8d56\u4e8e\u7528\u6237\u670d\u52a1\u3001\u4ea7\u54c1\u670d\u52a1\u7b49\uff0c\u56e0\u6b64\u9700\u8981\u901a\u8fc7\u6a21\u62df\u8fd9\u4e9b\u4f9d\u8d56\u8ba9\u573a\u666f\u6d4b\u8bd5\u987a\u5229\u8fdb\u884c\u3002\u53c8\u56e0\u4e3a\u5e94\u7528API\u4e2d\u7684\u4e1a\u52a1\u903b\u8f91\u548c\u5206\u652f\u6761\u4ef6\u8f83\u5c11\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u5f02\u5e38\u5206\u652f\u5c31\u80fd\u8ba9\u6d4b\u8bd5\u7684\u8986\u76d6\u7387\u8f83\u9ad8\u3002\u8fd9\u7c7b API\u6d4b\u8bd5\u4e5f\u4e0d\u9700\u8981\u5173\u6ce8\u540e\u7aef API\u7684\u4e1a\u52a1\u903b\u8f91\u4e2d\u53d1\u751f\u4e86\u54ea\u4e9b\u4e1a\u52a1\u5f02\u5e38\u3002 1. \u6d4b\u8bd5\u76ee\u7684 \u9488\u5bf9\u9762\u5411\u5e94\u7528\u7684 API\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff0c\u76ee\u6807\u662f\u6d4b\u8bd5API\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u9a8c\u8bc1\u5b57\u6bb5\u662f\u5426\u6b63\u5e38\u8fd4\u56de\uff0c\u4ee5\u53ca\u6700\u7ec8\u7684\u540e\u7aefAPI\u662f\u5426\u88ab\u5408\u7406\u8c03\u7528\u3002 2. \u6d4b\u8bd5\u51c6\u5907 \u4e3b\u8981\u4f7f\u7528WireMock\u5bf9\u4f9d\u8d56\u7684\u540e\u7aefAPI\u8fdb\u884c\u6a21\u62df\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u53ef\u4ee5\u628a\u5e38\u7528\u7684\u6a21\u62df\u65b9\u6cd5\u7ec4\u5408\u6210\u901a\u7528\u7684\u65b9\u6cd5\uff0c\u907f\u514d\u91cd\u590d\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\u3002\u53e6\u5916\uff0c\u8fd9\u7c7b\u6d4b\u8bd5\u5f80\u5f80\u4e0e\u7528\u6237\u7684\u8ba4\u8bc1\u6709\u5173\uff0c\u56e0\u6b64\u9700\u8981\u6a21\u62df\u4e0e\u7528\u6237\u8ba4\u8bc1\u76f8\u5173\u7684\u884c\u4e3a\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\u524d\u9762\u7684\u9274\u6743\u5904\u7406\u3002 3. \u6d4b\u8bd5\u7ec4\u7ec7\u65b9\u5f0f \u4f7f\u7528\u7528\u6237\u65c5\u7a0b\u6765\u7ec4\u7ec7\u6d4b\u8bd5\u5728JUnit\u4e2d\u6709\u4e24\u79cd\u98ce\u683c\u3002 \u7b2c\u4e00\u79cd\u662f\u901a\u8fc7\u7c7b\u7684\u65b9\u5f0f\u6765\u7ec4\u7ec7\u3001\u7136\u540e\u5728\u7c7b\u7684\u7ea7\u522b\u4e2d\u8bbe\u7f6e\u901a\u7528\u7684Mock\u884c\u4e3a\uff0c\u5e76\u901a\u8fc7\u8bbe\u7f6e\u6d4b\u8bd5\u65b9\u6cd5\u7684\u8fd0\u884c\u5e8f\u5217\u6574\u4f53\u8fd0\u884c\u6d4b\u8bd5\u3002\u5728JUnit5\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528@Order\u6ce8\u89e3\u8ba9\u6d4b\u8bd5\u987a\u5e8f\u6267\u884c\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @TestMethodOrder(MethodOrderer.OrderAnnotation.class) public class BuyScenarioTest { @BeforeAll static void beforeAll() { // \u8fd9\u91cc\u8fdb\u884c\u901a\u7528\u7684\u51c6\u5907 } @AfterAll static void afterAll() { // \u8fd9\u91cc\u8fdb\u884c\u901a\u7528\u7684\u6e05\u7406 } @Test @Order(1) void should_list_products() { System.out.println(\"should_list_products\"); } @Test @Order(2) void should_get_product_detail() { System.out.println(\"should_get_product_detail\"); } @Test @Order(3) void should_add_product_to_shopping_cart() { System.out.println(\"should_add_product_to_shopping_cart\"); } ... } \u7531\u4e8e\u5728\u8fd9\u4e00\u5c42API\u4e2d\uff0c\u6211\u4eec\u653e\u5f03\u4e86\u5bf9\u5f02\u5e38\uff08\u6307\u5c40\u90e8\u5f02\u5e38\uff0c\u5bf9\u5206\u652f\u6d41\u7a0b\u7684\u5f02\u5e38\u8fd8\u662f\u4f1a\u6d4b\u8bd5\uff09\u7684\u6d4b\u8bd5\uff0c\u56e0\u6b64\u8ba9\u6574\u4e2a\u6d4b\u8bd5\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u548c\u7ef4\u62a4\u3002\u53ea\u6709\u4f4e\u6210\u672c\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u624d\u4f1a\u8ba9\u56e2\u961f\u6709\u52a8\u529b\u6301\u7eed\u5730\u7ef4\u62a4\u4e0b\u53bb\u3002 \u4f46\u4e60\u60ef\u4e86\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u7ec4\u7ec7\u6d4b\u8bd5\u4e4b\u540e\uff0c\u5f88\u591a\u5f00\u53d1\u8005\u4f1a\u5bf9\u90a3\u4e9b\u65e0\u610f\u4e49\u7684@Order\u6ce8\u89e3\u611f\u5230\u538c\u70e6------------\u65e2\u7136\u6211\u4eec\u662f\u4f7f\u7528\u573a\u666f\u7ec4\u7ec7API\u6d4b\u8bd5\u7684\uff0c\u4f55\u4e0d\u5c31\u4ee5\u4e00\u4e2a\u573a\u666f\u4f5c\u4e3a\u5355\u4f4d\u5212\u5206\u6d4b\u8bd5\u5462\uff1f\u8fd9\u5c31\u662f\u7b2c\u4e8c\u79cd\u98ce\u683c\uff0c\u76f4\u63a5\u4ee5\u573a\u666f\u4e3a\u7c92\u5ea6\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f7f\u7528\u4e00\u4e2a\u6d4b\u8bd5\u7f16\u6392\u591a\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u3002\u5728\u5176\u4ed6\u7684BDD\u6d4b\u8bd5\u6846\u67b6\u4e2d\uff0c\u5bf9\u6b64\u662f\u6709\u4e13\u95e8\u7684\u8bed\u6cd5\u6765\u652f\u6301\u7684\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class ScenarioTest { @Test void buy_scenario_test() { // \u8fd9\u91cc\u8fdb\u884c\u901a\u7528\u7684\u51c6\u5907 shouldListProducts(); shouldGetProductDetail(); shouldAddProductToShoppingCart(); ... // \u8fd9\u91cc\u8fdb\u884c\u901a\u7528\u7684\u6e05\u7406 } void shouldListProducts() { System.out.println(\"should_list_products\"); } void shouldGetProductDetail() { System.out.println(\"should_get_product_detail\"); } void shouldAddProductToShoppingCart() { System.out.println(\"should_add_product_to_shopping_cart\"); } } 6.7.2 \u9762\u5411\u9886\u57df\u670d\u52a1\u7684 API \u9762\u5411\u9886\u57df\u670d\u52a1\u7684API\u4e0d\u662f\u4e3a\u6700\u7ec8\u7684\u573a\u666f\u670d\u52a1\u7684\uff0c\u800c\u662f\u63d0\u4f9b\u901a\u7528\u7684\u4e1a\u52a1\u80fd\u529b\u3002\u4ee5\u4ea7\u54c1\u670d\u52a1\u4e3a\u4f8b\uff0c\u5bf9\u4e8e\u4ea7\u54c1\u670d\u52a1\u6765\u8bf4\uff0c\u5b83\u63d0\u4f9b\u7684\u662f\u57fa\u672c\u7684\u670d\u52a1\u80fd\u529b\uff0c\u4f8b\u5982\u6dfb\u52a0\u4ea7\u54c1\u3001\u5220\u9664\u4ea7\u54c1\u3002\u9886\u57df\u670d\u52a1\u7684\u5404\u4e2aAPI\u4e4b\u95f4\u7684\u5173\u8054\u6027\u76f8\u5bf9\u8f83\u5f31\uff0c\u56e0\u6b64\u53ef\u4ee5\u72ec\u7acb\u5730\u7ec4\u7ec7\u6d4b\u8bd5\u6570\u636e\uff0c\u4e0d\u8fc7\uff0c\u9700\u8981\u9a8c\u8bc1\u5f02\u5e38\u6d4b\u8bd5\u3002 1.\u6d4b\u8bd5\u76ee\u6807 \u9488\u5bf9\u9762\u5411\u9886\u57df\u670d\u52a1 API\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff0c\u76ee\u6807\u662f\u6d4b\u8bd5 API\u7684\u4e1a\u52a1\u80fd\u529b\uff0c\u5305\u62ec\u5355\u5143\u6d4b\u8bd5\u4e0d\u80fd\u8986\u76d6\u7684\u5f02\u5e38\u884c\u4e3a\u3002 2.\u6d4b\u8bd5\u51c6\u5907 \u9886\u57df\u670d\u52a1\u9664\u4e86\u4f1a\u4f9d\u8d56\u5c11\u91cf\u7684\u7b2c\u4e09\u65b9API\u4e4b\u5916\uff0c\u8fd8\u4f1a\u4f9d\u8d56\u6570\u636e\u5e93\u3001\u6587\u4ef6\u7b49\u57fa\u7840\u8bbe\u65bd\u3002\u8fd9\u91cc\u53c2\u8003\u4e4b\u524d\u7684\u5185\u5bb9\u4e3a\u4e0d\u540c\u7684\u57fa\u7840\u8bbe\u65bd\u51c6\u5907\u6d4b\u8bd5\u5185\u5bb9\uff1a \u542f\u52a8\u5185\u5d4c\u7684\u6570\u636e\u5e93\u7b49\u57fa\u7840\u8bbe\u65bd\u3002 \u76f4\u63a5\u4f7f\u7528\u6e90\u7801\u4e2d\u7684Service\u3001Repository\u7b49Bean\u6765\u51c6\u5907\u6570\u636e\u5e93\u4e2d\u7684\u5185\u5bb9\u3002 \u4f7f\u7528 WireMock\u6765\u5904\u7406\u5916\u90e8\u7cfb\u7edf\u3002 3.\u6d4b\u8bd5\u7ec4\u7ec7\u65b9\u5f0f \u7531\u4e8e\u9762\u5411\u9886\u57df\u670d\u52a1\u7684API\u63d0\u4f9b\u7684\u57fa\u672c\u662f\u539f\u5b50\u6027\u7684API\uff0c\u56e0\u6b64\u5176\u4e0e\u5355\u5143\u6d4b\u8bd5\u7684\u7ec4\u7ec7\u98ce\u683c\u7c7b\u4f3c\uff0c\u5373\u4fdd\u6301\u4e00\u4e2aController\u5bf9\u5e94\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\u3002\u82e5\u4e3a\u6bcf\u4e2aAPI\u5355\u72ec\u51c6\u5907\u3001\u6267\u884c\u3001\u9a8c\u8bc1\u6d4b\u8bd5\u7528\u4f8b\uff0c\u90a3\u4e48\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u4e2a\u6d4b\u8bd5\u3002\u60f3\u8ba9\u6d4b\u8bd5\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\uff0c\u53ef\u4ee5\u628a\u6b63\u5411\u3001\u5f02\u5e38\u6d4b\u8bd5\u7ec4\u7ec7\u5230\u4e00\u4e2a\u5d4c\u5957\u6d4b\u8bd5\u4e2d\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class ProductControllerTest { @Nested @DisplayName(\"query product list suite\") class QueryProduct { @Test void should_list_product_list_with_default_page() { System.out.println(\"should_list_product_list_with_default_page\"); } @Test void should_list_product_list_with_specify_page() { System.out.println(\"should_list_product_list_with_specify_page\"); } } @Nested @DisplayName(\"add product test suite\") class AddProduct { @Test void should_add_product_success() { System.out.println(\"should_add_product_success\"); } @Test void should_add_product_failed_when_exceed_product_limitation() { System.out.println(\"should_add_product_failed_when_exceed_product_limitation\"); } } } \u5d4c\u5957\u7c7b\u5c24\u5176\u9002\u5408\u8fd9\u79cd\u573a\u666f\uff0c\u5728IntelliJIDEA\u4e2d\u8fd0\u884c\u6d4b\u8bd5\u65f6\uff0c\u53ef\u4ee5\u5728\u6d4b\u8bd5\u7ed3\u679c\u4e2d\u770b\u5230\u975e\u5e38\u6e05\u6670\u7684\u6d4b\u8bd5\u7ed3\u6784\u3002\u56fe6-6\u5c55\u793a\u4e86\u5d4c\u5957\u6d4b\u8bd5\u6267\u884c\u540e\u7684\u6837\u5b50\u3002 \u56fe 6-6 \u4f7f\u7528\u5d4c\u5957\u7c7b\u7ec4\u7ec7\u6d4b\u8bd5 6.8 \u5c0f\u7ed3 \u5728\u524d\u540e\u7aef\u5206\u79bb\u548c\u5fae\u670d\u52a1\u76db\u884c\u7684\u6280\u672f\u8d8b\u52bf\u4e0b\uff0cAPI\u6d4b\u8bd5\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002\u672c\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528MockMvc\u3001RESTAssured\u7b49\u5de5\u5177\u5b9e\u73b0API\u6d4b\u8bd5\uff0c\u4ee5\u53ca\u4e00\u4e9b\u76f8\u5173\u7684\u6ce8\u610f\u4e8b\u9879\u548c\u6280\u5de7\u3002API\u6d4b\u8bd5\u4e0d\u518d\u662f\u5355\u5143\u6d4b\u8bd5\u7684\u8303\u7574\uff0c\u5b83\u7684\u6d4b\u8bd5\u5de5\u5177\u3001Mock\u5de5\u5177\u3001\u6d4b\u8bd5\u7b56\u7565\u7b49\u90fd\u4e0e\u5355\u5143\u6d4b\u8bd5\u6709\u6240\u4e0d\u540c\u3002\u901a\u8fc7WireMock\u53ef\u4ee5\u9694\u79bb\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9API\uff0c\u8ba9\u5904\u4e8e\u9519\u7efc\u590d\u6742\u7684\u8c03\u7528\u5173\u7cfb\u4e0b\u7684API\u66f4\u5bb9\u6613\u88ab\u6d4b\u8bd5\u3002 \u5bf9\u4e8e\u5fae\u670d\u52a1\u6765\u8bf4\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u5fae\u670d\u52a1\u4f1a\u63d0\u4f9b\u4e0d\u540c\u7684API\uff0c\u8fd9\u4e9bAPI\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6d4b\u8bd5\u7b56\u7565\uff0c\u4e3a\u573a\u666f\u5b9a\u5236\u6d4b\u8bd5\u7b56\u7565\u800c\u4e0d\u662f\u6b7b\u677f\u5730\u4f7f\u7528\u540c\u4e00\u5957\u65b9\u6cd5\u5c24\u4e3a\u91cd\u8981\u3002","title":"\u7b2c 6 \u7ae0 RESTful API \u6d4b\u8bd5"},{"location":"06-api-testing/#6-restful-api","text":"API \u6d4b\u8bd5\u5c5e\u4e8e\u96c6\u6210\u6d4b\u8bd5\u7684\u8303\u7574\uff0c\u624b\u52a8\u8fdb\u884c API \u6d4b\u8bd5\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a \u4f7f\u7528Curl \u547d\u4ee4\u3002 \u4f7f\u7528 Postman\u3002 \u4f7f\u7528 Swagger \u9644\u5e26\u7684 UI \uff08\u7528\u6237\u754c\u9762\uff09\u5de5\u5177\u3002 \u8fd9\u4e9b\u65b9\u6cd5\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7684\u95ee\u9898\uff0c\u5c31\u662f\u5b9e\u73b0\u81ea\u52a8\u5316\u7684\u53cd\u590d\u6267\u884c\u6bd4\u8f83\u56f0\u96be\u3002\u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\u901a\u8fc7\u7f16\u7801\u7684\u65b9\u5f0f\u8fdb\u884cAPI\u6d4b\u8bd5\uff0c\u6700\u597d\u653e\u5230\u4ee3\u7801\u4ed3\u5e93\u4e2d\u4ee5\u81ea\u52a8\u5316\u7684\u5f62\u5f0f\u5b8c\u6210\uff0c\u5e76\u96c6\u6210\u5728CI \uff08\u6301\u7eed\u96c6\u6210\uff09\u6d41\u6c34\u7ebf\u4e2d\u3002 \u5728\u4e00\u4e9b\u4f01\u4e1a\u4e2d\u6709\u4e13\u95e8\u7684API\u6d4b\u8bd5\u5e73\u53f0\u7ba1\u7406\u76f8\u5173\u6d4b\u8bd5\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u7075\u6d3b\u6027\u4f1a\u7a0d\u5f31\u5e76\u4e0e\u4f01\u4e1a\u5185\u90e8\u7684\u57fa\u7840\u8bbe\u65bd\u5f3a\u5173\u8054\uff0c\u56e0\u6b64\u672c\u7ae0\u9009\u7528\u7684\u5de5\u5177\u90fd\u662f\u57fa\u4e8e\u5f00\u6e90\u8f6f\u4ef6\u5b9e\u73b0\u7684\u3002 \u672c\u7ae0\u7684\u76ee\u6807\u662f\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e\u6e90\u4ee3\u7801\u7f16\u5199\u53ef\u4ee5\u7ef4\u62a4\u7684API\u6d4b\u8bd5\uff0c\u6db5\u76d6\u7684\u5185\u5bb9\u6709\uff1a RESTful API \u6d4b\u8bd5\u5de5\u5177\u96c6\u3002 \u7b2c\u4e09\u65b9 API \u7684\u5904\u7406\u3002","title":"\u7b2c 6 \u7ae0 RESTful API \u6d4b\u8bd5"},{"location":"06-api-testing/#61-restful-api","text":"Spring Boot \u7684spring-boot-starter-test Starter\u9879\u76ee\u5df2\u7ecf\u4e3a\u6211\u4eec\u51c6\u5907\u4e86\u4e00\u5957\u6d4b\u8bd5\u5de5\u5177\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u8ba9API\u6d4b\u8bd5\u66f4\u6709\u6548\u548c\u4fbf\u5229\uff0c\u9664\u4e86Spring\u6d4b\u8bd5\u5957\u4ef6\u4ee5\u5916\uff0c\u8fd8\u9700\u8981\u51c6\u5907\u4e00\u4e9b\u989d\u5916\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u4f8b\u5982\uff0cREST Assured\u53ef\u4ee5\u4f5c\u4e3aAPI\u6d4b\u8bd5\u7684\u57fa\u672c\u6846\u67b6\uff0cDbUnit\u53ef\u4ee5\u7528\u6765\u5728\u591a\u4e2a\u6d4b\u8bd5\u4e4b\u95f4\u9694\u79bb\u6570\u636e\u5e93\u7684\u72b6\u6001\uff0cWireMock\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u7b2c\u4e09\u65b9\u4f9d\u8d56\u7684API\u3002\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u5b8c\u6210\u6d4b\u8bd5\u7528\u4f8b\u7684\u7f16\u5199\u548c\u8fd0\u884c\uff0c\u4f46\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u4e0d\u662f\u5fc5\u9009\u7684\u3002 \u5728Spring\u7684\u6d4b\u8bd5\u4f53\u7cfb\u4e0b\uff0cMockMvc\u4e5f\u662fAPI\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u4e00\u4e2a\u91cd\u8981\u5de5\u5177\uff0c\u4f46\u662f\u6211\u4eec\u5e38\u5e38\u5e76\u6ca1\u6709\u9009\u7528\u5b83\u4f5c\u4e3aAPI\u6d4b\u8bd5\u7684\u5de5\u5177\u3002\u8fd9\u662f\u56e0\u4e3aAPI\u6d4b\u8bd5\u5df2\u7ecf\u662f\u4e00\u4e2aE2E\u6d4b\u8bd5\u4e86\uff0cAPI\u6d4b\u8bd5\u5173\u6ce8\u7684\u662f\u670d\u52a1\u662f\u5426\u80fd\u63d0\u4f9b\u5b8c\u6574\u7684\u529f\u80fd\uff0c\u6211\u4eec\u4f1a\u5e0c\u671b\u542f\u52a8\u5b8c\u6574\u7684\u4e0a\u4e0b\u6587\u6765\u8fdb\u884c\u7aef\u5230\u7aef\u7684\u6d4b\u8bd5\u3002 MockMvc\u5728\u524d\u9762\u7ae0\u8282\u4ecb\u7ecd\u8fc7\uff0c\u7528\u6765\u6a21\u62dfWeb\u670d\u52a1\u5668\uff0c\u4ee5\u4fbf\u8ba9Controller\u4e0a\u7684\u6ce8\u89e3\u53ef\u4ee5\u88ab\u6d4b\u8bd5\u5230\uff0c\u6240\u4ee5\u5e38\u5e38\u5728\u5206\u5c42\u7684\u5355\u5143\u6d4b\u8bd5\u4e2d\u7528\u4e8e\u9a8c\u8bc1Controller\u90e8\u5206\u7684\u903b\u8f91\u3002 \u66f4\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u9009\u7528\u4e13\u4e1a\u7684API\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\uff0c\u6bd4\u5982REST Assured\u3001Karate DSL\u7b49\u3002\u672c\u4e66\u57fa\u4e8e\u5e02\u573a\u5360\u6709\u91cf\u9009\u62e9\u4e86\u4ee5REST Assured\u4e3a\u4f8b\u8be6\u7ec6\u8bb2\u89e3API\u6d4b\u8bd5\u3002\u5b9e\u9645\u4e0a\uff0cMockMvc\u4e5f\u53ef\u4ee5\u914d\u5408RESTAssured\u4f7f\u7528\u3002","title":"6.1 RESTful API \u6d4b\u8bd5\u5de5\u5177\u96c6"},{"location":"06-api-testing/#611-rest-assured","text":"REST Assured \u7531 Johan Haleby \u5728 Jayway \u516c\u53f8\u521b\u5efa\u3002\u4e0eMockMvo \u4e0d\u540c\u7684\u662f\uff0cREST Assured \u66f4\u50cf\u662fJava\u4e2d\u5173\u4e8e\u6d4b\u8bd5\u7684\u9886\u57df\u7279\u5b9a\u8bed\u8a00\uff08DSL\uff09\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u5957\u94fe\u5f0f\u7684API\u6765\u7f16\u5199Given\u3001When\u3001Then\u98ce\u683c\u7684\u6d4b\u8bd5\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a given(). param(\"key1\", \"value1\"). param(\"key2\", \"value2\"). when(). post(\"/somewhere\"). then(). body(containsString(\"OK\")); \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7\u6d41\u5f0f\u7684\u98ce\u683c\u58f0\u660e\u4e86Given\u3001When\u3001Then\u8fd9\u4e09\u79cd\u8bed\u53e5\u5757\uff0c\u8ba9API\u6d4b\u8bd5\u5177\u6709\u4e0e\u5355\u5143\u6d4b\u8bd5\u7c7b\u4f3c\u7684\u98ce\u683c\u3002 REST Assured\u7684\u4f18\u79c0\u4e4b\u5904\u8fd8\u5728\u4e8e\u63d0\u4f9b\u4e86xml-path\u3001json-path\u8fd9\u4e24\u4e2a\u5f3a\u5927\u7684\u65ad\u8a00\u5e93\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u65ad\u8a00\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u65b9\u4fbf\u3002json-path\u4e5f\u88ab\u5438\u6536\u5230spring-boot-starter-test\u4e2d\u4e86\uff0c\u57fa\u672c\u5df2\u6210\u4e3a\u65ad\u8a00JSON\u6570\u636e\u7684\u5fc5\u5907\u5de5\u5177\u3002 REST Assured\u53ea\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u6d4b\u8bd5\u5957\u4ef6\uff0c\u5185\u542b\u4e00\u4e2aHTTP\u5ba2\u6237\u7aef\uff0c\u6d4b\u8bd5\u65f6\u9700\u8981\u542f\u52a8\u5168\u91cf\u7684Web\u670d\u52a1\uff0c\u4e14\u9700\u8981\u4f9d\u8d56@SpringBootTest\u6ce8\u89e3\u542f\u52a8\u5b8c\u6574\u7684\u5e94\u7528\u4e0a\u4e0b\u6587\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u968f\u673a\u7aef\u53e3\uff0c\u907f\u514d\u6d4b\u8bd5\u88ab\u5e72\u6270\u3002\u5982\u679c\u89c9\u5f97Web\u670d\u52a1\u5668\u542f\u52a8\u5f97\u592a\u6162\uff0cRESTAssured\u4e5f\u53ef\u4ee5\u7ed3\u5408MockMvc\u6765\u4f7f\u7528\u3002 \u521b\u5efa\u4e00\u4e2aMaven\u9879\u76ee\u6216\u8005\u6a21\u5757\uff0c\u9664\u4e86\u8981\u5f15\u4ebaSpring\u751f\u6001\u4e0b\u57fa\u672c\u7684\u4f9d\u8d56\u5916\uff0c\u8fd8\u9700\u8981\u5f15\u5165\u4e0b\u9762\u7684\u4f9d\u8d56\u5305\uff1a <dependency> <groupId>io.rest-assured</groupId> <artifactId>rest-assured</artifactId> <version>4.4.0</version> <scope>test</scope> </dependency> RESTAssured\u7684\u914d\u7f6e\u975e\u5e38\u7b80\u5355\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u811a\u672c\u5373\u53ef\u5b8c\u6210\u521d\u59cb\u5316\uff1a @SpringBootTest(webEnvironment = RANDOM_PORT, classes = {Application.class}) .... @LocalServerPort private int port; @BeforeEach public void setup() { System.out.println(\"port:\" + port); RestAssured.port = port; RestAssured.basePath = \"/api\"; RestAssured.enableLoggingOfRequestAndResponseIfValidationFails(); } @LocalServerPort\u6ce8\u89e3\u53ef\u4ee5\u8bfb\u53d6@SpringBootTest\u5728\u542f\u52a8\u65f6\u521b\u5efa\u7684\u968f\u673a\u7aef\u53e3\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u540e\u7eed\u7684\u6d4b\u8bd5\u4e2d\u3002\u5728setup \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e3aREST Assured\u914d\u7f6e\u4e86\u7aef\u53e3\u3001API\u524d\u7f00\uff0c\u5e76\u6253\u5f00\u4e86\u4e00\u4e2a\u7279\u6027\u5f00\u5173\uff0c\u4ee5\u4fbf\u6d4b\u8bd5\u5931\u8d25\u65f6\u6253\u5370\u51fa\u8bf7\u6c42\u548c\u8fd4\u56de\u7684\u8be6\u60c5\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u5c31\u662f\u542f\u7528REST Assured\u7684\u5168\u90e8\u914d\u7f6e\uff0c\u540e\u9762\u4f1a\u5728\u6d4b\u8bd5\u5b9e\u4f8b\u4e2d\u7ed9\u51fa\u5b8c\u6574\u7684\u4f7f\u7528\u793a\u4f8b\u3002\u5982\u679c\u9700\u8981\u5b9e\u73b0 MockMvc \u7684\u6548\u679c\uff0c\u53ef\u4ee5\u4f7f\u7528spring-mock-mve \u5e93\u4e2d\u7684RestAssuredMockMvc \u7c7b\u8fdb\u884c\u6865\u63a5\uff0c\u52a0\u5feb\u6d4b\u8bd5\u901f\u5ea6\u3002","title":"6.1.1 REST Assured"},{"location":"06-api-testing/#612-mariadb","text":"\u4e0a\u4e00\u7ae0\u8ba8\u8bba\u8fc7\u5355\u5143\u6d4b\u8bd5\u4e2d\u5173\u4e8e\u57fa\u7840\u8bbe\u65bd\u7684\u95ee\u9898\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6d89\u53ca\u6570\u636e\u5e93\u7684\u6d4b\u8bd5\u53ef\u4ee5\u4f7f\u7528\u5185\u5d4c\u7684\u6570\u636e\u5e93\u6bd4\u5982H2\u6765\u5b9e\u73b0\u76f8\u5e94\u7684\u6a21\u62df\u3002\u4f46\u662fH2\u7684\u529f\u80fd\u6bd4\u8f83\u6709\u9650\uff0c\u6709\u65f6\u5019\u4e0d\u4e00\u5b9a\u80fd\u6ee1\u8db3\u9700\u8981\u3002\u6bd4\u5982\uff0c\u5728\u505aE2E\u6d4b\u8bd5\u65f6\uff0cH2\u65e0\u6cd5\u6a21\u62df\u51fa\u4e0eMySQL\u540c\u6837\u7684\u529f\u80fd\uff0cSQL\u8bed\u6cd5\u4e0a\u4e5f\u4e0e\u5176\u5b58\u5728\u4e00\u5b9a\u7684\u5dee\u5f02\u3002\u8fd9\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528MariaDB\u6765\u6a21\u62dfMySQL\uff0c\u5e76\u901a\u8fc7MariaDB4j\u8fd9\u4e2a\u5de5\u5177\u4ece\u6d4b\u8bd5\u4e2d\u542f\u52a8MariaDB\u3002 MariaDB\u662f\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edfMySQL\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u4e3b\u8981\u7531\u5f00\u6e90\u793e\u533a\u7ef4\u62a4\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u5c06\u5176\u770b\u4f5cMySQL\u3002 MariaDB4j\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2a\u542f\u52a8\u5668\uff0c\u771f\u6b63\u7684\u6570\u636e\u5e93\u8fd8\u662f\u4f1a\u7531\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u7684\u4e8c\u8fdb\u5236\u5305\u542f\u52a8\u3002\u4e3a\u4e86\u4f7f\u7528\u968f\u673a\u7684\u6570\u636e\u5e93\u7aef\u53e3\uff0c\u6211\u4eec\u4e0d\u518d\u4f7f\u7528Spring Boot\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u800c\u662f\u76f4\u63a5\u7ed9\u4e0a\u4e0b\u6587\u914d\u7f6e\u4e00\u4e2aDataSource\u3002\u6765\u770b\u4e2a\u793a\u4f8b\uff0c\u8001\u89c4\u77e9\uff0c\u5148\u5f15\u5165\u4e00\u4e2a\u4f9d\u8d56\uff1a <dependency> <groupId>ch.vorburger.mariaDB4j</groupId> <artifactId>mariaDB4j</artifactId> <version>2.4.0</version> </dependency> \u7136\u540e\u5728\u6d4b\u8bd5\u6a21\u5757\u4e2d\u5f15\u5165\u4e00\u4e2a\u914d\u7f6e\u7c7b\u3002\u5728\u6d4b\u8bd5\u6a21\u5757\u4e2d\u5b9a\u4e49\u7684\u76f8\u5173Bean\u4e5f\u4f1a\u88ab\u52a0\u8f7d\u5230Spring Boot \u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4f46\u662f\u4e0d\u4f1a\u5bf9\u4e1a\u52a1\u4ee3\u7801\u4ea7\u751f\u5f71\u54cd\u3002 @Configuration public class MariaDB4jSpringConfiguration { @Autowired private DataSourceProperties dataSourceProperties; @Bean public MariaDB4jSpringService mariaDB4j() { MariaDB4jSpringService mariaDB4jSpringService = new MariaDB4jSpringService(); mariaDB4jSpringService.getConfiguration().addArg(\"--user=root\"); mariaDB4jSpringService.getConfiguration().addArg(\"--character-set-server=utf8\"); return mariaDB4jSpringService; } @Bean @Primary public DataSource dataSource() throws ManagedProcessException { String dbname = UUID.randomUUID().toString().substring(0, 8); mariaDB4j().getDB().createDB(dbname); return DataSourceBuilder.create() .driverClassName(dataSourceProperties.getDriverClassName()) .url(mariaDB4j().getConfiguration().getURL(dbname)) .username(dataSourceProperties.getUsername()) .password(dataSourceProperties.getPassword()) .build(); } } MariaDB4jSpringService\u7ee7\u627f\u4e86MariaDB4jService\uff0c\u5e76\u5b9e\u73b0\u4e86Lifecycle\u63a5\u53e3\uff0c\u5b83\u662f\u542f\u52a8MariaDB4jService\u7684\u539f\u751fAPI\uff0c\u53ef\u4ee5\u542f\u52a8\u548c\u5173\u505c\u6570\u636e\u5e93\u3002MariaDB4jSpringService\u5b9e\u73b0\u4e86Spring\u7684\u751f\u547d\u5468\u671f\u94a9\u5b50\uff0c\u8ba9\u6570\u636e\u5e93\u968f\u7740Spring\u7684\u751f\u547d\u5468\u671f\u542f\u52a8\u548c\u5173\u505c\u3002 DataSource Bean\u81ea\u5b9a\u4e49\u4e86\u6570\u636e\u5e93\u540d\u79f0\uff0c\u5e76\u83b7\u5f97\u4e86MariaDB4j\u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u7136\u540e\u4ee5\u6b64\u6765\u521b\u5efa\u6570\u636e\u6e90\u3002\u5728DataSource\u7684\u914d\u7f6e\u4e2d\u4f7f\u7528\u4e86DataSourceProperties\u7684\u914d\u7f6e\uff0c\u8be5\u914d\u7f6e\u6765\u6e90\u4e8e\u6211\u4eec\u5728YAML\u6587\u4ef6\uff08application.yml\uff09\u4e2d\u914d\u7f6e\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c06\u539f\u672c\u9700\u8981\u8fde\u63a5\u771f\u5b9e MySQL\u7684\u6570\u636e\u6e90\u5207\u6362\u6210\u5185\u7f6e\u7684\u4e34\u65f6\u6570\u636e\u5e93\u3002","title":"6.1.2 MariaDB"},{"location":"06-api-testing/#613-dbunit","text":"\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u7ed3\u5408\u6570\u636e\u5e93\u6765\u8fdb\u884cE2E\u6d4b\u8bd5\uff0c\u6bcf\u6267\u884c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6d4b\u8bd5\u6570\u636e\u5c31\u6709\u53ef\u80fd\u4f1a\u6c61\u67d3\u6570\u636e\u5e93\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0cDbUnit\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5728\u6d4b\u8bd5\u524d\u6682\u5b58\u6570\u636e\u5e93\u7684\u72b6\u6001\uff0c\u5e76\u5728\u6d4b\u8bd5\u540e\u6062\u590d\uff0c\u907f\u514d\u6d4b\u8bd5\u4e4b\u95f4\u4ea7\u751f\u5e72\u6270\u3002 \u5982\u679c\u6211\u4eec\u7684\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u521d\u59cb\u6570\u636e\uff0c\u53ef\u4ee5\u76f4\u63a5\u505a\u6e05\u7a7a\u64cd\u4f5c\uff0c\u5219\u4e0d\u9700\u8981DbUnit\u7684\u5e2e\u52a9\u3002\u4f46\u662f\uff0c\u4e00\u822c\u6765\u8bf4\u6211\u4eec\u4f1a\u4f7f\u7528Flyway\u7ba1\u7406\u6570\u636e\u5e93\u7684\u8868\u7ed3\u6784\uff0c\u800c\u4e14\u4e3a\u4e86\u5f00\u53d1\u65b9\u4fbf\uff0c\u4e5f\u4f1a\u5c06\u4e00\u4e9b\u521d\u59cb\u6570\u636e\u540c\u6b65\u5199\u5165\u3002\u7cfb\u7edf\u4e2d\u603b\u662f\u9700\u8981\u521d\u59cb\u5316\u4e00\u4e9b\u9ed8\u8ba4\u6570\u636e\uff0c\u4f8b\u5982\u8d85\u7ea7\u7ba1\u7406\u5458\u7684\u8d26\u53f7\u548c\u5bc6\u7801\u7b49\uff0c\u901a\u8fc7Flyway\u7ba1\u7406\u4f1a\u975e\u5e38\u65b9\u4fbf\u3002\u5982\u679c\u6d4b\u8bd5\u8fd0\u884c\u524d\u6570\u636e\u5e93\u4e2d\u6709\u4e00\u4e9b\u9ed8\u8ba4\u6570\u636e\uff08\u800c\u4e14\u662f\u901a\u8fc7Flyway\u7ba1\u7406\u7684\uff09\uff0c\u5c31\u4e0d\u80fd\u901a\u8fc7\u7b80\u5355\u5730\u6e05\u7a7a\u6570\u636e\u5e93\u6765\u91cd\u7f6e\u6570\u636e\u5e93\u72b6\u6001\uff0c\u8fd9\u65f6DbUnit\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002 \u6309\u7167\u60ef\u4f8b\uff0c\u5c06DbUnit\u52a0\u5165\u9879\u76ee\u4e2d\u65f6\uff0c\u5148\u5f15\u5165\u9700\u8981\u7684\u4f9d\u8d56\u5305\uff1a <dependency> <groupId>org.dbunit</groupId> <artifactId>dbunit</artifactId> <version>2.7.0</version> </dependency> \u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cDbUnit\u7684\u5b9e\u73b0\u65b9\u5f0f\u6bd4\u8f83\u6734\u7d20\uff0c\u4e3b\u8981\u63d0\u4f9b\u4e86\u4e00\u4e2aIDataSet\u63a5\u53e3\uff0c\u5b83\u901a\u8fc7CSV\u3001XML\u3001SQL\u7b49\u5b9e\u73b0\u65b9\u5f0f\u628a\u6570\u636e\u4e34\u65f6\u5b58\u50a8\u4e0b\u6765\uff0c\u5982\u56fe6-1\u6240\u793a\u3002 \u56fe 6-1 DbUnit \u6682\u5b58\u6570\u636e\u96c6\u7684\u51e0\u79cd\u65b9\u5f0f DbUnit\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5de5\u5177\u7c7bDatabaseOperation\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u64cd\u4f5c\u6570\u636e\u5e93\u548c\u6570\u636e\u96c6\uff0c\u5b9e\u73b0\u5907\u4efd\u3001\u8fd8\u539f\u548c\u6e05\u7a7a\u7b49\u529f\u80fd\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u5c01\u88c5\u597d\u7684\u670d\u52a1\uff0c\u5c06\u5176\u52a0\u8f7d\u5230\u6d4b\u8bd5\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u65b9\u6cd5\u4e2d\u5373\u53ef\u3002 @Service public class ResetDbService { private static IDatabaseConnection conn; @Autowired private DataSource dataSource; private File tempFile; // \u5907\u4efd\u6570\u636e\u72b6\u6001\u7684\u65b9\u6cd5 public void backup() throws Exception { this.getConnection(); this.backupCustom(); } // \u6062\u590d\u6570\u636e\u72b6\u6001\u7684\u65b9\u6cd5 public void rollback() throws Exception { this.reset(); this.closeConnection(); } protected void backupCustom() { try { QueryDataSet qds = new QueryDataSet(conn); // \u6307\u5b9a\u9700\u8981\u5907\u4efd\u7684\u6570\u636e\u5e93\u8868\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\u6765\u83b7\u5f97\u6570\u636e\u5e93\u4e2d\u7684\u6240\u6709\u8868 qds.addTable(\"user\"); tempFile = new File(\"temp.xml\"); // \u5199\u5165\u5230 XML \u6587\u4ef6\u4e2d FlatXmlDataSet.write(qds, new FileWriter(tempFile), \"UTF-8\"); } catch (Exception e) { e.printStackTrace(); } } void getConnection() throws DatabaseUnitException { conn = new DatabaseConnection(DataSourceUtils.getConnection(dataSource)); } protected void reset() throws FileNotFoundException, DatabaseUnitException, SQLException { FlatXmlDataSetBuilder builder = new FlatXmlDataSetBuilder(); builder.setColumnSensing(true); IDataSet ds = builder.build(new FileInputStream(tempFile)); DatabaseOperation.CLEAN_INSERT.execute(conn, ds); } protected void closeConnection() throws SQLException { if (conn != null) { conn.close(); } } } ResetDbService\u670d\u52a1\u63d0\u4f9b\u4e86backup\u3001rollback\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u3002backup\u4f1a\u5728\u6d4b\u8bd5\u542f\u52a8\u65f6\u5c06\u5f53\u524d\u6570\u636e\u5e93\u7684\u72b6\u6001\u6682\u5b58\u4e0b\u6765\uff0c\u6d4b\u8bd5\u5b8c\u6210\u65f6\u518d\u8c03\u7528rollback\u65b9\u6cd5\u6062\u590d\uff0c\u8fd9\u6837\u5c31\u80fd\u59cb\u7ec8\u4e3a\u6bcf\u4e2a\u6d4b\u8bd5\u63d0\u4f9b\u4e00\u4e2a\u4e00\u81f4\u7684\u73af\u5883\uff0c\u4e5f\u4e0d\u9700\u8981\u624b\u52a8\u5bf9\u7279\u5b9a\u7684\u6570\u636e\u8fdb\u884c\u6e05\u7406\uff0c\u907f\u514d\u9057\u5fd8\u3002 \u6211\u4eec\u53ef\u4ee5\u5728\u6d4b\u8bd5\u7684\u57fa\u7c7b\u4e2d\u7ec4\u88c5\u8fd9\u4e9b\u51c6\u5907\u3001\u6e05\u7406\u7684\u5de5\u4f5c\uff0c\u4e0b\u9762\u518d\u4ecb\u7ecd\u53e6\u5916\u4e00\u79cd\u66f4\u7075\u6d3b\u7684\u7ec4\u88c5\u65b9\u6cd5\u3002","title":"6.1.3 DbUnit"},{"location":"06-api-testing/#62-api","text":"\u524d\u9762\u4ecb\u7ecd\u4e86\u51e0\u79cd\u5de5\u5177\u7684\u4f7f\u7528\uff0c\u8fd9\u91cc\u901a\u8fc7\u6700\u5c0f\u7684\u5b9e\u4f8b\u5c06\u5b83\u4eec\u7ec4\u88c5\u8d77\u6765\u3002\u4e3a\u4e86\u51cf\u5c11\u7bc7\u5e45\uff0c\u4e0b\u9762\u53ea\u8d34\u4e0a\u5fc5\u8981\u7684\u4ee3\u7801\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u53ef\u4ee5\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230\uff1ahttps://github.com/java-self-testing/java-self-testing-example/tree/master/api\u3002 \u793a\u4f8b\u4ee3\u7801\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u56fe6-2\u6240\u793a\u3002 \u56fe 6-2 API \u6d4b\u8bd5\u793a\u4f8b \u4e0b\u9762\u662f\u793a\u4f8b\u9879\u76ee\u7684\u4f9d\u8d56\u7684\u5305\uff1a <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"> <parent> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-parent</artifactId> <version>2.4.12</version> </parent> <modelVersion>4.0.0</modelVersion> <artifactId>api</artifactId> <dependencies> <dependency> <groupId>org.projectlombok</groupId> <artifactId>lombok</artifactId> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-web</artifactId> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-jpa</artifactId> </dependency> <dependency> <groupId>org.flywaydb</groupId> <artifactId>flyway-core</artifactId> </dependency> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>8.0.25</version> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId> <scope>test</scope> </dependency> <dependency> <groupId>ch.vorburger.mariaDB4j</groupId> <artifactId>mariaDB4j</artifactId> <version>2.4.0</version> </dependency> <dependency> <groupId>io.rest-assured</groupId> <artifactId>rest-assured</artifactId> <version>4.4.0</version> <scope>test</scope> </dependency> <dependency> <groupId>org.dbunit</groupId> <artifactId>dbunit</artifactId> <version>2.7.0</version> </dependency> </dependencies> <build> <plugins> <plugin> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-maven-plugin</artifactId> <configuration> <finalName>${project.artifactId}</finalName> <outputDirectory>../package</outputDirectory> </configuration> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> <configuration> <source>8</source> <target>8</target> </configuration> </plugin> </plugins> </build> </project> \u6e90\u7801\u4e0b\u9762\u7684\u5305\u4e2d\u5b9e\u73b0\u4e86 2 \u4e2a\u7b80\u5355\u7684 API\uff0c\u4fbf\u4e8e\u7ba1\u7406\u5458\u6dfb\u52a0\u548c\u5217\u51fa\u7528\u6237\uff1a @RestController @RequestMapping(\"/api/users\") public class UserController { @Autowired UserService userService; @GetMapping(\"\") public ResponseEntity<List<User>> getAll() { return ResponseEntity.ok(userService.listAll()); } @PostMapping(\"\") public ResponseEntity addUser(@RequestBody AddUserRequest addUserRequest) { User savedUser = userService.add(addUserRequest); return ResponseEntity.created( URI.create(\"/api/users/\" + savedUser.getId()) ).build(); } } \u5728\u6d4b\u8bd5\u76ee\u5f55\u4e2d\uff0c\u6709\u4e00\u4e2a TestBase \uff0c\u662f\u4e3a\u6240\u6709\u6d4b\u8bd5\u7c7b\u7684\u57fa\u7c7b\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u6d4b\u8bd5\u4e0a\u4e0b\u6587\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @SpringBootTest(webEnvironment = RANDOM_PORT, classes = {Application.class}) @TestExecutionListeners({ DependencyInjectionTestExecutionListener.class, ResetDbListener.class, }) public abstract class TestBase { @LocalServerPort private int port; @BeforeEach public void setUp() { System.out.println(\"port:\" + port); RestAssured.port = port; RestAssured.basePath = \"/api/\"; RestAssured.enableLoggingOfRequestAndResponseIfValidationFails(); } } @TestExecutionListeners\u6ce8\u89e3\u662fJUnit\u7684\u4e00\u79cd\u9ad8\u7ea7\u7528\u6cd5\uff0c\u53ef\u4ee5\u6ce8\u518c\u6d4b\u8bd5\u751f\u547d\u5468\u671f\u51fd\u6570\uff0c\u7c7b\u4f3c\u4e8e@BeforeEach\u548c@AfterEach\u7684\u4f5c\u7528\uff0c\u4f46\u662f\u66f4\u52a0\u7b80\u6d01\uff0c\u4f7f\u7528\u8be5\u6ce8\u89e3\u65f6\u9700\u8981\u5b9e\u73b0TestExecutionListener\u63a5\u53e3\u3002 \u4e0b\u9762\u4ecb\u7ecd\u4e24\u4e2a\u5e38\u7528\u7684TestExecutionListener\u63a5\u53e3\u7684\u5b9e\u73b0\u3002 DependencylnjectionTestExecutionListener\uff1a\u53ef\u4ee5\u5bf9\u6d4b\u8bd5\u7c7b\u4e2d\u7684\u4f9d\u8d56\u8fdb\u884c\u6ce8\u5165\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7c7b\uff0c\u5c31\u4f1a\u52a0\u8f7d\u4e0d\u5230@LocalServerPort\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a@Value\u6ce8\u89e3\u7684\u5305\u88c5\u3002 TransactionalTestExecutionListener\uff1a\u7528\u4e8e\u4fdd\u8bc1\u63d2\u5165\u6570\u636e\u5e93\u4e2d\u7684\u6d4b\u8bd5\u6570\u636e\u5728\u6d4b\u8bd5\u5b8c\u6210\u4e4b\u540e\u4f1a\u8fdb\u884c\u4e8b\u52a1\u56de\u6eda\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u76d1\u542c\u5668\u53ef\u4ee5\u5c06\u63d2\u5165\u7684\u6570\u636e\u5220\u9664\uff0c\u4fdd\u8bc1\u6570\u636e\u5e93\u5e72\u51c0\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u7c7b\u80fd\u8d77\u5230\u7c7b\u4f3cDbUnit\u7684\u4f5c\u7528\u3002\u4f46\u662f\uff0c\u5b83\u4fe9\u53c8\u6709\u6240\u4e0d\u540c\uff0cDbUnit\u53ef\u4ee5\u5b8c\u6574\u5730\u9a8c\u8bc1\u4e8b\u52a1\u7684\u7ed3\u679c\uff0c\u7136\u540e\u8fdb\u884c\u6e05\u7406\uff1aTransactionalTestExecutionListener\u5219\u662f\u8ba9\u6d4b\u8bd5\u4e2d\u7684\u4e8b\u52a1\u7edf\u7edf\u4e0d\u63d0\u4ea4\u3002\u7531\u4e8eAPI\u6d4b\u8bd5\u662f\u4e00\u4e2aE2E\u6d4b\u8bd5\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6d4b\u8bd5\u7684\u51c6\u786e\u6027\uff0c\u9700\u8981\u5c3d\u91cf\u4f7f\u7528\u5b8c\u6574\u7684\u6d4b\u8bd5\u65b9\u5f0f\uff0c\u56e0\u6b64\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u53ef\u4ee5\u914c\u60c5\u4f7f\u7528TransactionalTestExecutionListener\u3002 \u4e0b\u9762\u5b9a\u4e49\u4e00\u4e2aResetDbListener\uff0c\u7528\u6765\u6682\u5b58\u548c\u6062\u590d\u6570\u636e\u5e93\u7684\u72b6\u6001\uff1a public class ResetDbListener extends AbstractTestExecutionListener { @Override public int getOrder() { return 0; } @Override public void beforeTestMethod(TestContext testContext) throws Exception { ResetDbService resetDbService = testContext.getApplicationContext().getBean(ResetDbService.class); resetDbService.backup(); } @Override public void afterTestMethod(TestContext testContext) throws Exception { ResetDbService resetDbService = testContext.getApplicationContext().getBean(ResetDbService.class); resetDbService.rollback(); } } \u7531\u4e8eResetDbListener\u4e2d\u4e0d\u80fd\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\uff0c\u56e0\u6b64\u8981\u4f7f\u7528\u6d4b\u8bd5\u4e0a\u4e0b\u6587\u6765\u52a0\u8f7dResetDbService\u3002\u524d\u9762\u5df2\u7ecf\u5c55\u793a\u8fc7ResetDbService\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a\u5176\u4ed6\u7248\u672c\u7684ResetDbService\u3002 \u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u521b\u5efa\u6d4b\u8bd5\u4e86\uff0c\u5728UserController\u5bf9\u5e94\u7684\u6d4b\u8bd5\u76ee\u5f55\u4e0b\u521b\u5efa\u4e24\u4e2a\u6d4b\u8bd5\uff0c\u8ba9\u5b83\u4eec\u5206\u522b\u5bf9\u5e94\u5217\u51fa\u7528\u6237\u548c\u6dfb\u52a0\u7528\u6237\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a class UserControllerTest extends TestBase { @Test void should_list_all_users() { given() .contentType(\"application/json\") .when() .get(\"/users\") .then().statusCode(200); } @Test void should_add_user() { given() .contentType(\"application/json\") .body(Maps.of( \"name\", \"test-user\", \"email\", \"test@email.com\", \"password\", \"123456\" )) .when() .post(\"/users\") .then().statusCode(201); } } \u8fd9\u662f\u4e24\u4e2a\u6700\u57fa\u672c\u7684\u6d4b\u8bd5\uff0c\u7531\u4e8e\u53ea\u662f\u6f14\u793a\uff0c\u6211\u4eec\u6ca1\u6709\u7f16\u5199\u66f4\u591a\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002\u5728\u8fd9\u4e24\u4e2a\u6d4b\u8bd5\u4e2d\uff0c\u72b6\u6001\u7801\u7684\u65ad\u8a00\u6bd4\u8f83\u7b80\u5355\uff0c\u4f8b\u5982\u5728\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u4e2d\uff0c\u9a8c\u8bc1\u4e86\u6700\u7ec8\u8fd4\u56de\u7684\u662f201\u72b6\u6001\u7801\u3002\u4f46\u662f\uff0c\u5bf9\u8fd4\u56de\u503c\u7684\u65ad\u8a00\u7a0d\u663e\u590d\u6742\uff0c\u540e\u9762\u4f1a\u4e13\u95e8\u8ba8\u8bba\u5982\u4f55\u5b9e\u73b0\u590d\u6742\u7684\u65ad\u8a00\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u57fa\u4e8eREST Assured\u7684API\u6d4b\u8bd5\u5c31\u5b8c\u6210\u4e86\uff0c\u8fd9\u91cc\u9762\u7684\u6bcf\u4e2a\u6d4b\u8bd5\u91cc\u90fd\u53ea\u6709\u4e00\u4e2a\u975e\u5e38\u7b80\u6d01\u7684\u94fe\u5f0f\u7ed3\u6784\uff0c\u53ef\u7ef4\u62a4\u6027\u548c\u9605\u8bfb\u6027\u90fd\u975e\u5e38\u9ad8\u3002\u4e0b\u9762\u6211\u4eec\u6765\u5c55\u5f00\u770b\u4e00\u4e0b API\u6d4b\u8bd5\u7684\u5404\u4e2a\u9636\u6bb5\u3002 \u4ee5\u6d4b\u8bd5\u7528\u4f8bshould_add_user\u4e3a\u4f8b\uff0c\u5176\u6d4b\u8bd5\u7684\u903b\u8f91\u662f\u63d0\u4ea4\u4e00\u7ec4\u6570\u636e\u7ed9/users API\uff0c\u7528\u4e8e\u521b\u5efa\u7528\u6237\u3002given\u65b9\u6cd5\u662f\u95e8\u9762\u7c7bRestAssured\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u89c4\u683c\u5bf9\u8c61RequestSpecification\u7684\u5b9e\u4f8b\u3002\u57fa\u4e8e\u8fd9\u4e2a\u5b9e\u4f8b\uff0c\u5728\u6bcf\u6b21\u8c03\u7528\u65b0\u7684\u65b9\u6cd5\u540e\uff0c\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u7528\u4e8e\u94fe\u5f0f\u8c03\u7528\u3002 \u8fd9\u4e2a\u8c03\u7528\u94fe\u6709\u4ee5\u4e0b\u51e0\u4e2a\u660e\u663e\u7684\u9636\u6bb5\uff0c\u6bcf\u4e2a\u9636\u6bb5\u8fd4\u56de\u7684\u5bf9\u8c61\u4e0d\u540c\u3002 \uff081\uff09Given \u9636\u6bb5 \u8fd4\u56deRequestSpecification\u5b9e\u4f8b\uff0c\u7528\u4e8e\u7ec4\u7ec7\u8bf7\u6c42\u7684\u6570\u636e\u3002\u5b83\u63d0\u4f9b\u4e86\u8bbe\u7f6e\u7aef\u53e3\u3001\u63d0\u4ea4\u6570\u636e\u3001Query\u53c2\u6570\u3001Session\u3001\u8bf7\u6c42\u5934\u7b49\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u65b9\u4fbf\u6784\u5efaHTTP\u6570\u636e\u4f53\u3002 \uff082\uff09When \u9636\u6bb5 when\u65b9\u6cd5\u4e0egiven\u65b9\u6cd5\u6240\u505a\u7684\u4e8b\u60c5\u4e00\u6837\uff0c\u53ea\u662f\u5b83\u7684\u8bed\u6cd5\u66f4\u7b26\u5408BDD\u98ce\u683c\u3002\u771f\u6b63\u7684When \u9636\u6bb5\u662f\u901a\u8fc7\u4e0eHTTP\u52a8\u8bcd\uff08Method\uff09\u540c\u540d\u7684\u65b9\u6cd5get\u3001put\u3001post\u7b49\u5b9e\u73b0\u7684\u3002\u4f8b\u5982\uff0c\u8c03\u7528get\u65b9\u6cd5\u540e\u4f1a\u8fd4\u56deResponse\u5bf9\u8c61\u3002 \uff083\uff09Then \u9636\u6bb5 \u5f97\u5230\u8fd4\u56de\u503c\u540e\u53ef\u4ee5\u901a\u8fc7Response\u4e0a\u7684getBody\u3001getHeader\u7b49\u65b9\u6cd5\u76f4\u63a5\u83b7\u5f97\u6570\u636e\u5e76\u8fdb\u884c\u65ad\u8a00\uff0c\u7136\u540e\u4e2d\u65ad\u94fe\u5f0f\u8c03\u7528\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528then\u65b9\u6cd5\u83b7\u53d6ValidatableResponseOptions\u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u4f20\u5165\u5404\u79cd\u6821\u9a8c\u5668\u6821\u9a8cResponse\u4e2d\u7684\u6570\u636e\uff0c\u6821\u9a8c\u7684\u65b9\u6cd5\u6709statusCode\u3001body\u3001header\u7b49\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u83b7\u53d6\u8fd4\u56de\u7ed3\u679c\u7684\u793a\u4f8b\uff0c\u8fd9\u91cc\u57fa\u4e8e\u4ece\u5217\u8868\u63a5\u53e3\u83b7\u5f97\u7684\u6570\u636e\u8fdb\u884c\u65ad\u8a00\uff1a String body = given() .contentType(\"application/json\") .when() .get(\"/users\").getBody().print(); Assertions.assertEquals(\"[{\"id\":\"admin-id\",\"name\":\"admin\",\"role\":\"ADMIN\",\"email\":\"admin@test.com\",\"password\":\"$2a$10$Q9xt3B2Ixe0tGnbCjVWAbunD4lYdf5PpMSYGyLNrD4S38FGUt4NMC\",\"createdAt\":\"2020-12-16T21:45:41.147Z\",\"updatedAt\":\"2020-12-16T21:45:41.147Z\"}]\", body); \u4f46\u662f\u5982\u679c\u8981\u8fdb\u4e00\u6b65\u5bf9\u7ed3\u679c\u4e2d\u7684\u5c5e\u6027\u8fdb\u884c\u65ad\u8a00\uff0c\u9700\u8981\u5148\u4f7f\u7528JSON\u89e3\u6790\u5e93\u5c06\u5b57\u7b26\u4e32\u89e3\u6790\u4e3aJava\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u5bf9\u89e3\u6790\u540e\u7684\u5bf9\u8c61\u5c5e\u6027\u8fdb\u884c\u65ad\u8a00\u3002\u5982\u6b64\u4e00\u6765\uff0c\u4f9d\u8d56\u4ee3\u7801\u5c31\u662f\u5197\u957f\u7684\u3002\u867d\u7136ValidatableResponseOptions\u63d0\u4f9b\u4e86\u76f4\u63a5\u5728\u8c03\u7528\u94fe\u4e0a\u65ad\u8a00\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u5728then\u65b9\u6cd5\u540e\u9762\u8c03\u7528statusCode(201) \u65b9\u6cd5\u6765\u5224\u65ad\u72b6\u6001\u7801\uff0c\u4f46\u82e5\u9762\u5bf9\u7684\u662fbody\u65b9\u6cd5\u4e2d\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u4e0d\u80fd\u8fd9\u4e48\u7b80\u5355\u5730\u5b8c\u6210\u6821\u9a8c\u4e86\u3002 \u4e3a\u4e86\u8ba9\u65ad\u8a00\u66f4\u5bb9\u6613\uff0c\u53ef\u4ee5\u501f\u7528JsonPath\u548cXmIPath\u8fd9\u4e24\u79cd\u5de5\u5177\uff0c\u901a\u8fc7\u4f20\u5165\u4e00\u4e2aJSON \u8def\u5f84\u8868\u8fbe\u5f0f\u6765\u8bbf\u95ee\u6570\u636e\u4e2d\u7684\u7279\u5b9a\u8282\u70b9\uff0c\u4ece\u800c\u5b8c\u6210\u65ad\u8a00\u3002\u5728then\u65b9\u6cd5\u540e\uff0c\u53ef\u4ee5\u57fa\u4e8ebody\u65b9\u6cd5\u7684\u5404\u79cd\u91cd\u8f7d\u914d\u5408JSON \u8def\u5f84\u8868\u8fbe\u5f0f\u5b8c\u6210\u7b80\u6d01\u548c\u9ad8\u6548\u7684\u65ad\u8a00\u3002","title":"6.2 API \u6d4b\u8bd5\u5b9e\u4f8b"},{"location":"06-api-testing/#63-jsonpath","text":"\u7531\u4e8e\u8d8a\u6765\u8d8a\u591a\u7684\u5e94\u7528\u90fd\u5f00\u59cb\u4f7f\u7528RESTful API\uff08RESTful API\u7684\u6570\u636e\u683c\u5f0f\u4e3aJSON\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u8868\u8fbe\u5f0f\uff08JsonPath\uff09\u6765\u8fdb\u884c\u65ad\u8a00\u3002\u8fd9\u91cc\u4e3a\u4e86\u6f14\u793aJsonPath\u7684\u4f7f\u7528\uff0c\u5c06\u7528\u6237\u5217\u8868\u7684\u63a5\u53e3\u4fee\u6539\u4e3aPage\u7c7b\u578b\u4e86\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u8fd4\u56de\u7ed3\u679c\u53d8\u5f97\u66f4\u590d\u6742\u4e00\u4e9b\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a // UserController @GetMapping(\"\") public ResponseEntity<Page<User>> getAll() { return ResponseEntity.ok(userService.listAll()); } // UserService public Page<User> listAll() { return userRepository.findAll(); } \u8fd9\u65f6\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u4f1a\u5e26\u4e0a\u5206\u9875\u4fe1\u606f\uff0c\u76f8\u5bf9\u590d\u6742\u4e86\u4e00\u4e9b\uff0c\u5177\u4f53\u5982\u4e0b\uff1a { \"content\": [ { \"id\": \"admin-id\", ... } ], \"totalPages\": 1, \"totalElements\": 1, \"size\": 15, \"number\": 0, \"numberOfElements\": 1 } REST Assured\u63d0\u4f9b\u7684body\u65b9\u6cd5\u53ef\u63a5\u6536\u4e00\u4e2aJsonPath\u548c\u4e00\u4e2aMatcher\u3002\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u5c06\u4e0d\u540c\u7684JsonPath\u548cMatcher\u7ec4\u5408\u4f7f\u7528\u5c31\u53ef\u4ee5\u5b8c\u6210\u9700\u8981\u7684\u65ad\u8a00\u3002 \u4e0b\u9762\u662f\u5e38\u89c1\u7684\u65ad\u8a00\u793a\u4f8b\uff1a \u65ad\u8a00\u5c5e\u6027\u3002\u4f8b\u5982totalPages\u5c5e\u6027\u7684\u503c\u4e3a1\uff0c\u53ef\u4ee5\u5199\u4e3a.body(\"$.totalPages\", is(1))\u3002 \u65ad\u8a00\u6570\u7ec4\u957f\u5ea6\u3002\u4f8b\u5982content\u5c5e\u6027\u7684\u5185\u5bb9\u957f\u5ea6\u4e3a1\uff0c\u53ef\u4ee5\u5199\u4e3a.body(\"$.content. size()\", is(1))\u3002 \u65ad\u8a00\u6570\u7ec4\u4e2d\u5177\u4f53\u7684\u5c5e\u6027\u3002\u4f8b\u5982content\u5c5e\u6027\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684name\u5c5e\u6027\u503c\u4e3aadmin\uff0c\u53ef\u4ee5\u5199\u4e3a.body(\"$.content[0].name\",is(\"admin\"))\u3002 \u5728JsonPath\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7279\u6b8a\u7684\u7b26\u53f7\u6765\u5339\u914d\u90e8\u5206\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e9b\u7b26\u53f7\u53eb\u4f5c\u64cd\u4f5c\u7b26\u3002\u6bd4\u5982\uff0c\u70b9\u53f7\u7528\u4e8e\u5339\u914d\u5bf9\u8c61\u7684\u5c5e\u6027\u3002\u88686-1\u5217\u51fa\u4e86\u5e38\u7528\u7684\u64cd\u4f5c\u7b26\u3002 \u8868 6-1 \u5e38\u7528 JsonPath \u64cd\u4f5c\u7b26 \u64cd\u4f5c\u7b26 \u7528\u9014 $ \u8981\u67e5\u8be2\u7684\u6839\u5143\u7d20\uff0c\u4e00\u822c\u7f6e\u4e8e\u8868\u8fbe\u5f0f\u4e4b\u524d @ \u8fed\u4ee3\u5668\u7684\u5f53\u524d\u5143\u7d20 * \u901a\u914d\u7b26\u64cd\u4f5c\u7b26\uff0c\u7528\u4e8e\u6a21\u7cca\u5339\u914d .. \u6df1\u5ea6\u5339\u914d\uff0c\u8de8\u591a\u5c42\u7ea7\u5339\u914d . \u5b50\u5c5e\u6027\u5339\u914d [' ' (, ' ')] \u4e00\u822c\u7528\u4e8e\u5339\u914d\u5bf9\u8c61\u7684\u591a\u4e2a\u5c5e\u6027 [ (, )] \u6839\u636e\u6570\u7ec4\u7d22\u5f15\u8bbf\u95ee","title":"6.3 \u4f7f\u7528 JsonPath \u65ad\u8a00"},{"location":"06-api-testing/#64","text":"API\u6d4b\u8bd5\u7684\u9274\u6743\u5904\u7406\u5e38\u7528\u5982\u4e0b\u65b9\u6cd5\uff1a \u9488\u5bf9API\u4f7f\u7528Basic\u9274\u6743\u3002\u73b0\u5b9e\u4e2d\uff0c\u5bf9\u4e8e\u66b4\u9732\u7ed9\u7528\u6237\u7684API\u51e0\u4e4e\u90fd\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u79cd\u9274\u6743\u65b9\u5f0f\uff0c\u4f46\u662f\u670d\u52a1\u4e4b\u95f4\u9274\u6743\u4f7f\u7528\u5f97\u8f83\u4e3a\u5e7f\u6cdb\u3002 \u9488\u5bf9API\u4f7f\u7528Token\u9274\u6743\u3002\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u53ef\u4ee5\u751f\u6210\u4e00\u6b21\u9274\u6743Token\uff0c\u5e76\u5728Header\u4e2d\u4f7f\u7528\u3002 \u9488\u5bf9API\u4f7f\u7528Cookie\u9274\u6743\uff1a\u4f7f\u7528Session\u65b9\u5f0f\u4f20\u9012\u9274\u6743\u4fe1\u606f\uff0cRESTAssured\u63d0\u4f9b\u7684SessionFilter\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u79cd\u66f4\u65b9\u4fbf\u7684\u65b9\u6cd5\u3002","title":"6.4 \u9274\u6743\u7684\u5904\u7406"},{"location":"06-api-testing/#641-basic","text":"\u8ba4\u8bc1\u4fe1\u606f\u90fd\u662f\u4f7f\u7528HTTP\u5934\u90e8\u6765\u4f20\u9012\u7684\uff0cBasic\u8ba4\u8bc1\u5c31\u662f\u5c06\u7528\u6237\u540d\u548c\u53e3\u4ee4\u62fc\u63a5\uff0c\u5e76\u8fdb\u884cBase64\u7f16\u7801\uff0c\u7136\u540e\u653e\u5230 Authorization\u5934\u4fe1\u606f\u4e2d\u3002 \u4f8b\u5982\uff0c\u7528\u6237\u540d\"admin\"\uff0c\u53e3\u4ee4\"123456\"\uff0c\u4f7f\u7528\"\uff1a\"\u62fc\u63a5\u5e76\u7f16\u7801\u540e\u53d8\u4e3aYWRtaW46 MTIzNDU2\u3002\u5728HTTP\u5305\u4e2d\u53d1\u9001\u7684\u6570\u636e\u5982\u4e0b\uff1a Authorization: Basic YWRtaW46MTIzNDU2 \u53ef\u4ee5\u624b\u52a8\u4f7f\u7528 header \u6765\u5b8c\u6210\u9274\u6743\uff1a given().header(\"Authorization\", \"Basic YWRtaW46MTIzNDU2\") \u4e5f\u53ef\u4ee5\u4f7f\u7528\u5feb\u6377\u65b9\u6cd5\uff1a given().auth().basic(\"admin\", \"123456\") \u5982\u679c\u9700\u8981\u5168\u5c40\u589e\u52a0\u9274\u6743\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 RestAssured\u7c7b\u7684\u5168\u5c40\u5c5e\u6027\uff0c\u4e0d\u8fc7\u8fd9\u4f1a\u964d\u4f4e\u7075\u6d3b\u6027\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a RestAssured.authentication = basic(\"admin\", \"123456\");","title":"6.4.1 Basic \u9274\u6743"},{"location":"06-api-testing/#642-token","text":"Token \u9274\u6743\u662f\u6700\u7075\u6d3b\u7684\u65b9\u5f0f\uff0c\u4e0eBasic\u9274\u6743\u7c7b\u4f3c\uff0c\u90fd\u662f\u5728HTTP\u8bf7\u6c42\u7684\u5934\u90e8\u4f20\u4eba\u8ba4\u8bc1\u4fe1\u606f\u3002\u4e00\u822c\u4f7f\u7528Token\u9274\u6743\u65f6\u90fd\u4f1a\u4f7f\u7528Bearer\u524d\u7f00\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a Authorization: Bearer a1e1eb29-2733-4ce3-b2cc-4569df7fdf0e \u4e0eToken\u9274\u6743\u7c7b\u4f3c\u7684\u8fd8\u6709JWT\u9274\u6743\u3001OAuth\u9274\u6743\u7b49\u3002\u8fd9\u4e9b\u9274\u6743\u65b9\u5f0f\u90fd\u662f\u901a\u8fc7\u751f\u6210\u4e00\u79cd\u7b80\u5355\u7684\u51ed\u8bc1\u5b9e\u73b0\u7684\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8eJWT\u662f\u4e00\u79cd\u81ea\u5305\u542b\u51ed\u8bc1\uff0c\u5b83\u4f1a\u5c06\u9274\u6743\u4fe1\u606f\u7f16\u7801\u5230Token \u4e2d\uff0c\u800cOAuth\u4e3a\u5206\u5e03\u5f0f\u9274\u6743\uff0c\u9700\u8981\u4f7f\u7528access_token\u548crefresh token\u8fd9\u4e24\u79cdToken\u3002 \u4f7f\u7528Token\u9274\u6743\u65f6\uff0c\u53ef\u4ee5\u5728\u6d4b\u8bd5\u4e2d\u63d0\u524d\u51c6\u5907\u4e00\u4e2aToken\uff0c\u5e76\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u4e2d\u590d\u7528\u3002\u8fd9\u91cc\u56e0\u4e3a\u662f\u5728\u540c\u4e00\u4e2a\u9879\u76ee\u4e2d\u7f16\u5199\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6240\u4ee5\u4f1a\u5728\u6d4b\u8bd5\u4e2d\u76f4\u63a5\u4f7f\u7528\u6e90\u4ee3\u7801\u4e2d\u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u66f4\u65b9\u4fbf\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Autowired private AuthorizeService authorizeService; private String token; ... @BeforeEach public void setup() { // \u8c03\u7528\u7236\u7c7b\u7684\u521d\u59cb\u5316\u65b9\u6cd5 super.setup(); // \u8bbe\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u6d4b\u8bd5\u7528\u6237 ... this.token = authorizeService.login(User user); } @Test public void test() { given().contentType(\"application/json\").header(\"Authorization\",\"Bearer \" + token); ... }","title":"6.4.2 Token \u9274\u6743"},{"location":"06-api-testing/#643-cookie","text":"\u5bf9\u4e8e\u4e00\u4e9b\u4f7f\u7528Cookie\u9274\u6743\u7684API\uff0c\u53ef\u4ee5\u901a\u8fc7\u6682\u5b58Cookie\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u6d4b\u8bd5\u4e2d\u7684\u9274\u6743\u3002Cookie\u9274\u6743\u7684\u539f\u7406\u662f\u7528\u6237\u5728\u521d\u6b21\u8bbf\u95ee\u9875\u9762\u6216API\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u751f\u6210\u4e00\u4e2aSession\uff0c\u6b64Session\u7531Session ID\u6807\u8bc6\uff0c\u5e76\u8fd4\u56de\u7ed9\u7528\u6237\u5728Cookie\u4e2d\u5b58\u50a8\u3002\u7528\u6237\u767b\u5f55\u540e\uff0c\u5173\u8054\u7528\u6237\u51ed\u8bc1\u4fe1\u606f\u5230\u8fd9\u4e2aSession ID\uff0c\u53ea\u8981\u7528\u6237\u6bcf\u6b21\u8bf7\u6c42\u90fd\u5e26\u4e0a\u8fd9\u4e2aID\uff0c\u670d\u52a1\u5668\u5c31\u80fd\u8bc6\u522b\u3002 \u7531\u4e8eCookie\u7684\u81ea\u52a8\u9644\u52a0\u662f\u6d4f\u89c8\u5668\u7684\u9ed8\u8ba4\u529f\u80fd\uff0c\u56e0\u6b64\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u65f6\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u505a\u592a\u591a\u5de5\u4f5c\u3002 \u6211\u4eec\u53ef\u4ee5\u5728\u767b\u5f55\u540e\u62bd\u53d6\u51faCookie\uff0c\u7136\u540e\u5728\u4e0b\u6b21\u8bf7\u6c42\u65f6\u5e26\u4e0a\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a // 1. \u767b\u5f55\u5e76\u7559\u5b58 Cookies Map<String, String> cookies = given() .contentType(\"application/json\") .body(Maps.of(\"email\", \"test@email.com\", \"password\", \"123456\")) .when().post(\"/authorizes\") .then().statusCode(201).extract().cookies(); // 2. \u4f7f\u7528 cookies \u83b7\u53d6\u7528\u6237\u4e2a\u4eba\u4fe1\u606f given() .contentType(\"application/json\") .cookies(cookies) .when().post(\"/authorizes/me\") .then().statusCode(200); RESTAssured\u57282.0.0\u7248\u672c\u4e4b\u540e\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5feb\u6377\u65b9\u5f0f\uff0c\u5373\u53ef\u4ee5\u4f7f\u7528SessionFilter\u6765\u4fdd\u6301\u4f1a\u8bdd\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a SessionFilter sessionFilter = new SessionFilter(); given() .contentType(\"application/json\") .filter(sessionFilter) .body(Maps.of(\"email\", \"test@email.com\", \"password\", \"123456\")) .when().post(\"/authorizes\") .then().statusCode(201); \u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u6d4b\u8bd5\u4e2d\u5173\u95ed\u9274\u6743\uff0c\u4e0d\u8fc7\u8fd9\u4f1a\u8ba9\u6d4b\u8bd5\u7684\u4ef7\u503c\u964d\u4f4e\uff0c\u56e0\u6b64\u5e76\u4e0d\u63a8\u8350\u3002","title":"6.4.3 Cookie \u9274\u6743"},{"location":"06-api-testing/#65","text":"\u6709\u4e00\u4e9bAPI\u9700\u8981\u4e0a\u4f20\u6587\u4ef6\uff0c\u6bd4\u5982\u5bfc\u5165\u3001\u4e0a\u4f20\u56fe\u7247\u7b49\uff0c\u56e0\u6b64\u5bf9\u5176\u8fdb\u884c\u6d4b\u8bd5\u65f6\u5c31\u9700\u8981\u5904\u7406\u76f8\u5e94\u7684\u6587\u4ef6\u3002\u4e0b\u9762\u4ecb\u7ecd\u51e0\u79cd\u53ef\u4ee5\u4ece\u6d4b\u8bd5\u76ee\u5f55\u7684\u8d44\u6e90\u6587\u4ef6\u5939\u4e2d\u8bfb\u53d6\u6587\u4ef6\u7684\u65b9\u6cd5\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u3002 \u5047\u8bbe\u5728\u6d4b\u8bd5\u8d44\u6e90\u76ee\u5f55\u4e2d\u6709\u4e00\u4e2a\u6587\u4ef6\u7528\u4e8e\u6d4b\u8bd5\uff0c\u5176\u6587\u4ef6\u5730\u5740\u4e3a\"classpath:file/test.pdf\"\u3002\u7b2c\u4e00\u79cd\u8bfb\u53d6\u6587\u4ef6\u7684\u65b9\u6cd5\u662f\u4f7f\u7528ClassLoader\u3002\u8fd9\u65f6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7c7b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u76f8\u5e94\u7684\u6587\u4ef6\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a ClassLoader classLoader = getClass().getClassLoader(); File file = new File(classLoader.getResource(\"file/test.pdf\").getFile()); \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528Google\u7684Guava\u3002\u5982\u679c\u9879\u76ee\u4e2d\u5f15\u5165\u4e86Google\u7684Guava\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528Resources\u5de5\u5177\u7c7b\u6765\u5b9e\u73b0\u6587\u4ef6\u7684\u52a0\u8f7d\uff0c\u975e\u5e38\u65b9\u4fbf\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a Resources.getResource(\"file/test.pdf\").getFile(); \u5982\u679c\u662f\u6587\u672c\u6587\u4ef6\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528Resources.toString\u6765\u8bfb\u53d6\u6587\u672c\u7684\u5185\u5bb9\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a Resources.toString(Resources.getResource(\"file/test.txt\")); \u83b7\u53d6\u6587\u4ef6\u6216\u8005\u6587\u4ef6\u5185\u5bb9\u540e\uff0c\u53ef\u4ee5\u5c06\u5176\u7528\u4e8e\u540e\u7eed\u7684\u6d4b\u8bd5\uff0c\u5728given\u65b9\u6cd5\u540e\u53ef\u4ee5\u4f7f\u7528multiPart \u65b9\u6cd5\u6765\u6784\u5efa\u8868\u5355\u4e2d\u7684\u6587\u4ef6\u6570\u636e\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a given() .multiPart(Resources.getResource(\"file/test.pdf\").getFile()) .when().post(\"/upload\"); \u4e0d\u8fc7\u91c7\u7528\u8fd9\u79cd\u5199\u6cd5\u65f6\uff0c\u9ed8\u8ba4\u6587\u4ef6\u8868\u5355\u63a7\u4ef6\u7684name\u5c5e\u6027\u4e3a\"file\"\uff0c\u67d0\u4e9bAPI\u4f1a\u81ea\u5b9a\u4e49name\u5c5e\u6027\u9700\u8981\u6ce8\u610f\u589e\u52a0\u76f8\u5e94\u7684\u53c2\u6570\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a given() .multiPart(\"custom_file_name\", Resources.getResource(\"file/test.pdf\").getFile()) .when().post(\"/upload\");","title":"6.5 \u6587\u4ef6\u5904\u7406"},{"location":"06-api-testing/#66-api","text":"\u5982\u679c\u6211\u4eec\u9700\u8981\u6d4b\u8bd5\u7684\u5e94\u7528\u4f9d\u8d56\u4e8e\u7b2c\u4e09\u65b9API\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u5148\u6a21\u62df\u6240\u4f9d\u8d56\u7684API\u624d\u80fd\u5b8c\u6210\u6d4b\u8bd5\uff0c\u5c24\u5176\u662f\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\uff0c\u5426\u5219\u4f1a\u8ba9\u6d4b\u8bd5\u53d8\u5f97\u6bd4\u8f83\u56f0\u96be\u3002 \u9664\u4e86\u642d\u5efa\u771f\u5b9e\u7684\u670d\u52a1\u4ee5\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5de5\u5177\u548c\u65b9\u6cd5\u6765\u8fdb\u884c\u6a21\u62df\u3002\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u4ece\u5f62\u5f62\u8272\u8272\u7684\u65b9\u6cd5\u4e2d\u5bfb\u627e\u4e00\u4e2a\u6210\u672c\u548c\u6548\u679c\u90fd\u80fd\u8fbe\u5230\u8bbe\u8ba1\u76ee\u6807\u7684\u65b9\u6cd5\u5373\u53ef\u3002","title":"6.6 \u6a21\u62df\u7b2c\u4e09\u65b9 API"},{"location":"06-api-testing/#661","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u548c\u7b2c\u4e09\u65b9API\u5bf9\u63a5\u65f6\uff0c\u9700\u8981\u5148\u5b9a\u4e49\u4e00\u4e9b\u5ba2\u6237\u7aef\u5bf9\u8c61\uff0c\u4ee5\u4fbf\u6839\u636e\u573a\u666f\u7684\u4e0d\u540c\u628a\u4e0e\u7b2c\u4e09\u65b9\u5bf9\u63a5\u7684\u8fd9\u90e8\u5206\u903b\u8f91\u5c01\u88c5\u8d77\u6765\uff0c\u8fd9\u79cd\u6a21\u5f0f\u79f0\u4e3a\u9002\u914d\u5668\uff08Adapter\uff09\u6a21\u5f0f\u3002\u5982\u679c\u9002\u914d\u5668\u7684\u8bbe\u8ba1\u826f\u597d\uff0c\u53ea\u9700\u8981\u6a21\u62df\u5bf9\u5e94\u7684\u5bf9\u8c61\u6216\u8005Bean \u5373\u53ef\u3002 xkcd.com\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5458\u56db\u683c\u6f2b\u753b\u7f51\u7ad9\uff0c\u6211\u5728https://any-api.com\u4e2d\u53d1\u73b0\u4e86\u5b83\u7684API\u3002\u8fd9\u4e2a\u770b\u4e0a\u53bb\u6781\u5176\u7b80\u5355\u7684API\u53ef\u7528\u6765\u53d1\u5e03\u4e00\u4e9b\u6f2b\u753b\u4fe1\u606f\uff0c\u4e0b\u9762\u5c31\u7528\u5b83\u6765\u6f14\u793aAPI\u6a21\u62df\u7684\u65b9\u6cd5\u3002API\u7684\u5730\u5740\u4e3ahttps://xkcd.com/info.0.json\u3002\u8bbf\u95ee\u6b64\u5730\u5740\uff0c\u53ef\u5f97\u5230JSON\u683c\u5f0f\u7684\u8fd4\u56de\u503c\uff1a { \"month\": \"6\", \"num\": 2472, \"link\": \"\", \"year\": \"2021\", \"news\": \"\", \"safe_title\": \"Fuzzy Blob\", \"transcript\": \"\", \"alt\": \"If there's no dome, how do you explain the irregularities the board discovered in the zoning permits issued in that area!?\", \"img\": \"https://imgs.xkcd.com/comics/fuzzy_blob.png\", \"title\": \"Fuzzy Blob\", \"day\": \"4\" } \u5728Spring Boot\u7684\u751f\u6001\u4e2d\uff0c\u53ef\u4ee5\u9009\u62e9\u7684HTTP\u5ba2\u6237\u7aef\u633a\u591a\uff0c\u6bd4\u5982RestTemplate\u3001Feign\u6216\u8005\u7b80\u5355\u7684OkHttp\u7b49\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f7f\u7528\u7684\u662fRestTemplate\u3002 \u5982\u56fe6-3\u6240\u793a\uff0c\u5728\u9879\u76ee\u4e2d\u6dfb\u52a0\u4e00\u4e2aDailyComicController \u548c\u76f8\u5173\u7684\u7c7b\uff0c\u7528\u4e8e\u8c03\u7528\u8fdc\u7a0b\u7684API\u3002 \u56fe 6-3 \u66f4\u65b0\u540e\u7684\u4ee3\u7801\u7ed3\u6784 Controller\u7c7b\u4f1a\u8c03\u7528XkcdClient\uff0c\u5e76\u8fd4\u56deDailyComic-Response \u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u76ee\u524d\u53ea\u6709\u4e00\u4e2aimageLink \u5c5e\u6027\uff0c\u4eceAPI\u4e2d\u8fd4\u56de\u7684\u5bf9\u5e94\u5b57\u6bb5\u4e3aimg\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @RestController @RequestMapping(\"/api/daily-comic\") public class DailyComicController { @Autowired private XkcdClient xkcdClient; @GetMapping(\"\") public ResponseEntity<DailyComicResponse> getCurrentComic() { XkcdVO xkcdVO = xkcdClient.getXkcdResponse(); return ResponseEntity.ok(DailyComicResponse.builder().imageLink(xkcdVO.getImg()).build()); } } XkcdClient\u7c7b\u4f7f\u7528RestTemplate\u7684getForObject\u65b9\u6cd5\u6765\u83b7\u53d6\u8fdc\u7a0bAPI\u7684\u6570\u636e\u3002Spring \u6846\u67b6\u5df2\u7ecf\u5e2e\u6211\u4eec\u5c01\u88c5\u597d\u4e86HTTP\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e0bRestTemplate\u7684Bean\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Service public class XkcdClient { @Autowired private RestTemplate restTemplate; public XkcdVO getXkcdResponse() { return restTemplate.getForObject(\"https://xkcd.com/info.0.json\", XkcdVO.class); } } \u4e0b\u9762\u6765\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u9a8c\u8bc1\u8fd9\u4e2a\u63a5\u53e3\u662f\u5426\u80fd\u8fd4\u56de\u9700\u8981\u7684\u5185\u5bb9\uff1a class DailyComicControllerTest extends TestBase { @Test void get_current_comic() { given() .contentType(\"application/json\") .when() .get(\"/daily-comic\") .then().statusCode(200) .body(\"imageLink\", is(\"https://imgs.xkcd.com/comics/fuzzy_blob.png\")); } } \u5982\u679c\u4ee3\u7801\u7f16\u5199\u65e0\u8bef\uff0c\u8fd9\u4e2a\u6d4b\u8bd5\u53ef\u4ee5\u901a\u8fc7\u3002\u8fd9\u65f6\u8fd8\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55\u6a21\u62df\u5de5\u5177\uff0c\u6d4b\u8bd5\u8fd0\u884c\u65f6\u4f1a\u6709\u5982\u4e0b\u4e24\u4e2a\u95ee\u9898\u3002 \u6bcf\u6b21\u8fd0\u884c\u6d4b\u8bd5\u65f6\u90fd\u9700\u8981\u4f9d\u8d56\u5916\u90e8\u7684API\uff0c\u5e76\u4e14\u8981\u4fdd\u8bc1\u80fd\u8bbf\u95ee\u5230\u670d\u52a1\u76ee\u6807\u3002 \u5982\u679c\u5bf9\u65b9\u7684API\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6d4b\u8bd5\u5c31\u4f1a\u5931\u8d25\u3002 \u63a5\u4e0b\u6765\u6a21\u62dfXkcdClient\u7684Bean\uff0c\u9996\u5148\u5728TestBase\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff0c\u5b9e\u73b0\u5bf9Bean\u7684\u6a21\u62df\uff0c\u8fd9\u90e8\u5206\u5728\u524d\u9762\u7ae0\u8282\u5df2\u7ecf\u8bb2\u8fc7\u3002 @MockBean private XkcdClient xkcdClient; \u7136\u540e\u5728\u6d4b\u8bd5\u4e2d\u4f7f\u7528@Autowired\u83b7\u5f97\u8fd9\u4e2a\u6a21\u62df\u5bf9\u8c61\uff0c\u5e76\u7ed9\u4e88\u7279\u5b9a\u7684\u8fd4\u56de\u503c\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c@MockBean\u5fc5\u987b\u5148\u5728TestBase\u7c7b\u4e2d\u5b9a\u4e49\u597d\uff0c\u7136\u540e\u518d\u4f7f\u7528@Autowired\u3002\u4e0b\u9762\u5c31\u662f\u5b8c\u6574\u7684\u5e26\u6709Mock\u7684\u6d4b\u8bd5\u3002 class DailyComicControllerTest extends TestBase { @Autowired private XkcdClient xkcdClient; @Test void get_current_comic() { BDDMockito.given(xkcdClient.getXkcdResponse()).willReturn(new XkcdVO() {{ setImg(\"https://imgs.xkcd.com/comics/fuzzy_blob.png\"); }}); given() .contentType(\"application/json\") .when() .get(\"/daily-comic\") .then().statusCode(200) .body(\"imageLink\", is(\"https://imgs.xkcd.com/comics/fuzzy_blob.png\")); } } \u901a\u8fc7@MockBean\u7684\u65b9\u6cd5\u6a21\u62df\u7b2c\u4e09\u65b9API\uff0c\u5bf9\u6e90\u4ee3\u7801\u7684\u4fb5\u5165\u8f83\u5f3a\uff0c\u5bf9\u5b9e\u73b0\u4ee3\u7801\u6709\u4e00\u4e9b\u8981\u6c42\u3002\u4e00\u4e9b\u6bd4\u8f83\u590d\u6742\u7684\u7cfb\u7edf\u8bbf\u95ee\u7b2c\u4e09\u65b9API\u65f6\uff0c\u76f8\u5173\u7684\u5b9e\u73b0\u53ef\u80fd\u6ca1\u90a3\u4e48\u89c4\u8303\uff0c\u4f7f\u7528MockBean \u4e5f\u5c31\u6ca1\u90a3\u4e48\u65b9\u4fbf\u4e86\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528\u5916\u90e8\u7684API Mock \u5de5\u5177\u3002\u8fd9\u4e9bMock \u5de5\u5177\u7684\u539f\u7406\u662f\u901a\u8fc7\u542f\u52a8\u4e00\u4e2a\u670d\u52a1\u6765\u52a0\u8f7d\u76f8\u5e94\u7684JSON\u6587\u4ef6\uff0c\u4ece\u800c\u5b9e\u73b0\u5b9a\u5236\u7684\u8fd4\u56de\uff0c\u5b83\u4eec\u4e5f\u4f1a\u63d0\u4f9b\u7b80\u5355\u7684\u89c4\u5219\u5b9e\u73b0\u4e0d\u540c\u7684\u54cd\u5e94\u9700\u6c42\u3002 \u5f00\u6e90\u7684Mock\u5de5\u5177\u975e\u5e38\u591a\uff0c\u6bd4\u5982WireMock\u3001Moco\u3001json-server\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e2a\u6700\u5177\u6709\u4ee3\u8868\u6027\u7684Mock\u5de5\u5177------WireMock\u3002","title":"6.6.1 \u4f7f\u7528\u9002\u914d\u5668\u6a21\u5f0f\u6a21\u62df"},{"location":"06-api-testing/#662-wiremock","text":"WireMock\u662f\u4e00\u4e2aHTTPMock\u670d\u52a1\u5668\uff0c\u5b83\u7684\u6838\u5fc3\u662f\u4e00\u4e2aWeb\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u4e3a\u7279\u5b9a\u7684\u8bf7\u6c42\u89c4\u5219\u8fd4\u56de\u76f8\u5e94\u7684\u5185\u5bb9\u3002\u53e6\u5916\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u9a8c\u8bc1\u529f\u80fd\uff0c\u53ef\u4fdd\u8bc1\u6d4b\u8bd5\u7684\u6709\u6548\u6027\u3002 WireMock\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u5f55\u5236\u8bf7\u6c42\u7684\u529f\u80fd\uff0c\u8fd9\u9879\u529f\u80fd\u53ef\u5927\u5927\u51cf\u5c11\u6d4b\u8bd5\u7684\u5de5\u4f5c\u91cf\u3002\u5f53\u4e00\u4e2a\u8bf7\u6c42\u8fc7\u6765\u65f6\uff0cWireMock \u5de5\u5177\u4f1a\u5148\u628a\u8bf7\u6c42\u8f6c\u53d1\u5230\u670d\u52a1\u76ee\u6807\u4e0a\uff0c\u6216\u8005\u5728\u8fd4\u56de\u76f8\u5e94\u7684\u503c\u540e\u5c06\u5176\u7f13\u5b58\u4e0b\u6765\uff0c\u5e76\u4e3a\u6d4b\u8bd5\u751f\u6210\u5bf9\u5e94\u7684\u6587\u4ef6\u3002\u53e6\u5916\u4e00\u4e2a\u6bd4\u8f83\u6709\u610f\u601d\u7684\u529f\u80fd\u662f\u8fd4\u56de\u9519\u8bef\u6216\u5ef6\u8fdf\u7684\u6570\u636e\uff0c\u8fd9\u7528\u4e8e\u6d4b\u8bd5\u4e00\u4e9b\u7279\u6b8a\u7684\u573a\u666f\uff0c\u4ee5\u4fbf\u8986\u76d6\u66f4\u591a\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 \u4e66\u4e2d\u8ba8\u8bba\u7684\u662fJava API\u6d4b\u8bd5\uff0c\u521a\u597dWireMock\u6784\u5efa\u4e8eJVM\u5e73\u53f0\u4e4b\u4e0a\uff0c\u5b83\u53ef\u4ee5\u5355\u72ec\u542f\u52a8\uff0c\u4e5f\u53ef\u4ee5\u5185\u5d4c\u5728\u9879\u76ee\u4e2d\u542f\u52a8\uff0c\u7a0d\u540e\u4f1a\u6f14\u793a\u8fd9\u4e24\u79cd\u542f\u52a8\u65b9\u5f0f\u3002\u7531\u4e8e\u53ef\u4ee5\u72ec\u7acb\u542f\u52a8\uff0c\u56e0\u6b64\u53ea\u8981\u5b89\u88c5\u4e86JRE \u73af\u5883\u5c31\u53ef\u4ee5\u8fd0\u884c\uff0c\u6545\u800c\u5b83\u4e0d\u9650\u4e8e\u7528\u4e8eJava\u9879\u76ee\u4e2d\u3002","title":"6.6.2 WireMock"},{"location":"06-api-testing/#1","text":"\u6839\u636e\u5b98\u7f51\u7684\u4ecb\u7ecd\u53ef\u77e5\uff0cWireMock\u901a\u8fc7Jar\u5305\u76f4\u63a5\u542f\u52a8\u65f6\uff0c\u4e0e\u547d\u4ee4\u884c\u7a0b\u5e8f\u6ca1\u6709\u533a\u522b\u3002\u53ef\u4ee5\u5728Maven\u4ed3\u5e93\u4e2d\u627e\u5230Jar\u6587\u4ef6\u7684\u4e0b\u8f7d\u5730\u5740https://repol.maven.org/maven2/com/github/tomakehurst/wiremock-jre8-standalone/2.28.0/wiremock-jre8-standalone-2.28.0.jar\u3002 \u542f\u52a8\u7684\u547d\u4ee4\u5982\u4e0b\uff1a java -jar wiremock-jre8-standalone-2.28.0.jar \u5b98\u7f51\u7ed9\u51fa\u7684\u53c2\u6570\u6bd4\u8f83\u591a\uff0c\u8fd9\u91cc\u9009\u62e9\u51e0\u4e2a\u5e38\u7528\u7684\u8fdb\u884c\u8bf4\u660e\u3002 --port: \u8bbe\u7f6e\u4e00\u4e2aHTTP\u7684\u7aef\u53e3\u53f7\u3002\u8fd9\u662f\u4e3a\u4e86\u4e0eHTTPS\u7684\u7aef\u53e3\u533a\u5206\u5f00\u6765\uff0c\u56e0\u4e3a\u5728Web\u670d\u52a1\u5668\u4e2d\uff0c\u4e24\u79cd\u7aef\u53e3\u662f\u4e0d\u540c\u7684\u5b9e\u73b0\u3002 --https-port: \u8bbe\u7f6e\u4e00\u4e2aHTTPS\u7aef\u53e3\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cWireMock\u4f9d\u7136\u9ed8\u8ba4\u5f00\u542fHTTP\u7aef\u53e3\uff08\u9ed8\u8ba4\u503c\u4e3a8080\uff09\uff0c\u5982\u679c\u5f00\u542f\u4e86\u591a\u4e2aWireMock\u5b9e\u4f8b\uff0c\u6700\u597d\u4e5f\u540c\u65f6\u6307\u5b9aHTTP \u7aef\u53e3\u3002\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u5e94\u7528\u4f9d\u8d56\u7684\u8fdc\u7a0b\u670d\u52a1\u5730\u5740\u90fd\u662f\u53ef\u4ee5\u914d\u7f6e\u7684\u3002\u53ef\u4ee5\u8ba9\u751f\u4ea7\u4f7f\u7528HTTPS\uff0c\u6d4b\u8bd5\u4f9d\u7136\u914d\u7f6e\u4e3aHTTP\u3002\u5982\u679c\u9700\u8981\u914d\u7f6eHTTPS\uff0c\u5219\u9700\u8981\u76f8\u5e94\u7684\u8bc1\u4e66\u548c\u5bc6\u94a5\u3002 --bind-address: \u4e3b\u673a\u9274\u5b9a\u7ed1\u5b9a\uff0c\u9ed8\u8ba4\u7ed1\u5b9a\u7684\u662f\u672c\u5730\u7f51\u7edc\u9002\u914d\u5668\uff080.0.0.0\uff09\uff0c\u5982\u679c\u6ca1\u6709\u591a\u4e2a\u7f51\u5361\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002 --root-dir: \u8bbe\u7f6e\u6a21\u62df\u6570\u636e\u6587\u4ef6\u7684\u5b58\u653e\u76ee\u5f55\uff0c\u7528\u4e8e\u5b58\u653emappings\u548c_files\u8fd9\u4e24\u4e2a\u5b50\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4e3a\u5f53\u524d\u7a0b\u5e8f\u7684\u5de5\u4f5c\u76ee\u5f55\u3002 --record-mappings: \u5f00\u542f\u8bb0\u5f55\u6a21\u5f0f\uff0c\u628a\u8bf7\u6c42\u5230\u540e\u65b9\u7684\u6570\u636e\u8bb0\u5f55\u4e0b\u6765\uff0c\u5e76\u5b58\u653e\u5230\u76ee\u5f55\u4e2d\u3002 --match-headers: \u5f00\u542f\u8bb0\u5f55\u6a21\u5f0f\u540e\uff0c\u628a\u4e00\u4e9b\u8bf7\u6c42\u5934\u4e2d\u7684\u503c\u4e5f\u8bb0\u5f55\u4e0b\u6765\u3002 --enable-stub-cors: \u5141\u8bb8\u81ea\u52a8\u53d1\u9001CORS\u54cd\u5e94\u5934\uff0c\u53ef\u4ee5\u89e3\u51b3\u524d\u7aef\u8c03\u8bd5\u65f6\u5b58\u5728\u7684\u8de8\u57df\u95ee\u9898\uff0c\u8fd9\u91cc\u9ed8\u8ba4\u4e3a\u5173\u95ed\u72b6\u6001\u3002 --help: \u663e\u793a\u547d\u4ee4\u7684\u5e2e\u52a9\u63d0\u793a\u3002 \u6b64\u5916\uff0cWireMock\u8fd8\u63d0\u4f9b\u4e86HTTPS\u8bc1\u4e66\u3001\u4ee3\u7406\u548c\u7ebf\u7a0b\u63a7\u5236\u7b49\u76f8\u5173\u53c2\u6570\uff0c\u4f46\u662f\u7528\u5f97\u4e0d\u591a\uff0c\u5982\u9700\u4f7f\u7528\uff0c\u67e5\u8be2\u624b\u518c\u5373\u53ef\u3002 \u8fd9\u91cc\u8fd8\u662f\u4ee5xkcd.com\u7684\u8bbf\u95ee\u503c\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff0c\u6211\u4eec\u4e0d\u4f7f\u7528\u4efb\u4f55\u53c2\u6570\u542f\u52a8WireMock\uff0c\u800c\u662f\u901a\u8fc7API\u52a8\u6001\u5730\u6dfb\u52a0Mock\u6570\u636e\u3002\u4e3a\u4e86\u51cf\u5c11\u4ee3\u7801\uff0c\u53ea\u8f93\u51fa\u4e00\u4e2a\"Hello World\"\u3002\u670d\u52a1\u542f\u52a8\u540e\uff0c\u7ec4\u7ec7\u4e0b\u9762\u7684API\u8bf7\u6c42\u3002 curl -X POST --data '{ \"request\": { \"url\": \"/info.0.json\", \"method\":\"GET\" }, \"response\": {\"status\": 200, \"body\":\"{\"hello\":\"world\"}\" }}' http://localhost:8080/__admin/mappings/new \u5176\u4e2d\uff0c/_admin/mappings/new API\u662fWireMock\u7684\u7ba1\u7406API\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u8bbe\u7f6e\u7279\u5b9a\u7684\u6a21\u62df\u5185\u5bb9\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u8bbe\u7f6e\u662f\u5426\u6210\u529f\uff1a curl http://localhost:8080/info.0.json {\"hello\":\"world\"} \u5927\u5bb6\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c\u6bcf\u6b21\u4f7f\u7528\u6a21\u62df\u6570\u636e\u65f6\uff0c\u90fd\u9700\u8981\u8c03\u7528\u4e00\u6b21API\u5148\u8bbe\u7f6e\u6a21\u62df\u6570\u636e\uff0c\u8fd9\u6837\u505a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u53ef\u4ee5\u76f4\u63a5\u7f16\u5199\u914d\u7f6e\u6587\u4ef6\u6765\u5b9e\u73b0\u6a21\u62df\u6570\u636e\u7684\u51c6\u5907\u5de5\u4f5c\u3002 \u5b9e\u4f8b\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u521b\u5efa_files\u548cmappings\u8fd9\u4e24\u4e2a\u76ee\u5f55\uff0c\u7f16\u5199\u7684\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u653e\u5230\u8fd9\u4e24\u4e2a\u76ee\u5f55\u4e2d\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u76ee\u5f55\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 __files: \u5f53WireMock\u542f\u52a8\u65f6\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4f1a\u88ab\u5f53\u4f5c\u4e00\u4e2a\u9759\u6001\u670d\u52a1\u5668\u7684\u6839\u8def\u5f84\u3002\u4f8b\u5982\uff0c\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7f16\u5199hello.html\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7http://localhost:8080/hello.html\u8bbf\u95ee\u3002\u901a\u5e38\uff0c\u8fd9\u4e2a\u76ee\u5f55\u7528\u4e8e\u4e00\u4e9b\u6ca1\u6709\u7279\u5b9a\u89c4\u5219\u7684\u573a\u666f\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5927\u7684\u6587\u4ef6API\uff0c\u6bd4\u5982\u9700\u8981\u5b58\u653e\u4e00\u5f20\u56fe\u7247\u65f6\u3002 mappings: \u8fd9\u4e2a\u76ee\u5f55\u53ef\u4ee5\u7528\u4e8e\u8bf7\u6c42\u6620\u5c04\u8fd4\u56de\u9700\u8981\u7684\u5185\u5bb9\uff0c\u6bd4\u5982\u5339\u914d\u8bf7\u6c42\u4e2d\u7684URL\u3001Header\uff0c\u8fd4\u56de\u7279\u5b9a\u7684\u6570\u636e\u3002\u53ef\u4ee5\u7528\u4e8e\u5b9a\u4e49\u66f4\u4e3a\u590d\u6742\u7684\u4ea4\u4e92\u573a\u666f\uff0c\u9002\u5408\u8f83\u4e3a\u52a8\u6001\u7684API\u3002\u53e6\u5916\uff0c\u5b83\u4e5f\u5177\u6709\u6bd4__files\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\u3002 mappings\u4e2d\u4e0d\u80fd\u50cf __files \u4e00\u6837\u76f4\u63a5\u653e\u9759\u6001\u6587\u4ef6\uff08\u5982\u679c\u8fd9\u6837\u5c31\u4e0d\u80fd\u53d1\u6325\u52a8\u6001\u6a21\u62df\u7684\u4ef7\u503c\u4e86\uff09\uff0c\u9700\u8981\u4f7f\u7528\u89c4\u5b9a\u7684DSL\u8bed\u6cd5\u6765\u5b9e\u73b0\u3002\u4f9d\u7136\u4f7f\u7528xkcd\u7684\u4f8b\u5b50\uff0c\u4e0d\u8fc7\u8fd9\u6b21\u662f\u901a\u8fc7\u5b9a\u4e49\u914d\u7f6e\u6587\u4ef6\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u6a21\u62df\u6570\u636e\u7684\u51c6\u5907\u3002 \u5728mappings\u76ee\u5f55\u7684info.0.json\u4e2d\u653e\u5165\u4e0b\u9762\u7684\u6587\u4ef6\u5185\u5bb9\uff0c\u6ce8\u610fbody\u65b9\u6cd5\u63a5\u6536\u7684\u8fd8\u662fString\u7c7b\u578b\uff0c\u56e0\u6b64\u9700\u8981\u8f6c\u4e49\u4e3aJSON\u7684\u5185\u5bb9\u3002 { \"request\": { \"method\": \"GET\", \"url\": \"/info.0.json\" }, \"response\": { \"status\": 200, \"body\":\"{\"month\":\"6\",\"num\":2472,\"link\":\"\",\"year\":\"2021\",\"news\":\"\",\"safe_title\":\"Fuzzy Blob\",\"transcript\":\"\",\"alt\":\"If there's no dome, how do you explain the irregularities the board discovered in the zoning permits issued in that area!?\",\"img\":\"https://imgs.xkcd.com/comics/fuzzy_blob.png\",\"title\":\"Fuzzy Blob\",\"day\":\"4\"}\" } }","title":"1. \u72ec\u7acb\u542f\u52a8"},{"location":"06-api-testing/#2-junit","text":"WireMock\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u72ec\u7acb\u542f\u52a8\u7684\u65b9\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4f9d\u8d56\u5305\u5728\u6d4b\u8bd5\u4e2d\u542f\u52a8\u3002\u901a\u8fc7WireMock \u66b4\u9732\u51fa\u6765\u7684API\u53ef\u5b9e\u73b0\u7075\u6d3b\u7684\u914d\u7f6e\u3001\u9a8c\u8bc1\u3001\u91cd\u7f6e\u3001\u5f55\u5236\u7b49\u529f\u80fd\uff0c\u8fd9\u5c31\u4e3a\u6211\u4eec\u7684\u6d4b\u8bd5\u5e26\u6765\u65e0\u9650\u7684\u53ef\u80fd\u3002\u4e0b\u9762\u6f14\u793a\u5982\u4f55\u4f7f\u7528 WireMock \u5728\u6d4b\u8bd5\u4e2d\u52a8\u6001\u5730\u6a21\u62df\u7b2c\u4e09\u65b9\u670d\u52a1\u3002 \u9996\u5148\uff0c\u4f9d\u7136\u662f\u5728POM\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff0c\u8fd9\u91cc\u53c2\u8003\u5b98\u7f51\u7684\u4f8b\u5b50\u4f7f\u7528\u4e86wiremock-jre8 \u8fd9\u4e2a\u7248\u672c\uff0c\u5efa\u8bae\u5927\u5bb6\u6839\u636eJava\u7248\u672c\u9009\u62e9\u5408\u9002\u7684WireMock\u53d1\u884c\u7248\u3002 \u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\uff0c\u76f4\u63a5\u542f\u52a8WireMockServer\u5373\u53ef\uff0c\u8fd9\u4e0e\u524d\u9762\u4ecb\u7ecd\u7684RedisServer \u7c7b\u4f3c\uff0c\u90fd\u662f\u9700\u8981\u542f\u52a8\u4e00\u4e2a\u5b9e\u4f8b\u3002 public class UserMockServerTest extends TestBase { private WireMockServer wireMockServer; @Autowired RestTemplate restTemplate; @BeforeEach public void setUp() { super.setUp(); wireMockServer = new WireMockServer(options().port(9090)); wireMockServer.start(); } @AfterEach void tearDown() { wireMockServer.stop(); } @Test void test_mock_server() { String response = restTemplate.getForObject(\"http://localhost:9090/users\", String.class); System.out.println(response); } } \u4e3a\u4e86\u7b80\u5316\u6f14\u793a\uff0c\u8fd9\u91cc\u6ca1\u5b9e\u73b0\u6e90\u4ee3\u7801\u4e2d\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u800c\u662f\u76f4\u63a5\u4f7f\u7528RestTemplate\u8bf7\u6c42\u542f\u52a8\u4e86WireMock\u7684\u6a21\u62df\u670d\u52a1\u3002\u5728test_mock_server\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u8bbf\u95eehttp://localhost:9090/users\u4f1a\u5f97\u5230\u4e00\u4e2a404\u7684\u9519\u8bef\uff0c\u56e0\u4e3a\u8fd9\u91cc\u8fd8\u6ca1\u6709\u8bbe\u7f6e\u4efb\u4f55\u6a21\u62df\u6570\u636e\u3002 \u63a5\u4e0b\u6765\uff0c\u7f16\u5199\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u52a8\u6001\u6a21\u62df\u4ee3\u7801\uff0c\u5e76\u8bf4\u660e\u5bf9\u5e94\u65b9\u6cd5\u7684\u7528\u9014\u3002 configureFor(\"localhost\", 9090); stubFor(get(urlEqualTo(\"/users\")) .willReturn(aResponse() .withHeader(\"Content-Type\", \"text/json\") .withBody(\"{\"name\":\"john\"}\"))); configureFor(String host, int port) \u65b9\u6cd5\u7528\u4e8e\u7ed9\u540e\u7eed\u7684\u65b9\u6cd5stubFor\u914d\u7f6e\u4e00\u4e2aWireMock\u7684\u5730\u5740\u548c\u7aef\u53e3\uff0c\u800cstubFor\u7684\u539f\u7406\u53c8\u4e0e\u8c03\u7528WireMock\u7684/admin\u7aef\u53e3\u4e00\u6837\uff0c\u56e0\u6b64\u4e5f\u9700\u8981\u4e3a\u5176\u914d\u7f6e\u5bf9\u5e94\u7684\u7aef\u53e3\u3002 stubFor(MappingBuilder mappingBuilder) \u65b9\u6cd5\u7528\u4e8e\u914d\u7f6e\u6a21\u62df\u7684\u6570\u636e\uff0c\u7531\u4e8eget\u65b9\u6cd5\u7684\u91cd\u540d\u65b9\u6cd5\u592a\u591a\uff08Mockito\u3001JDK \u7b49\u5305\u4e2d\u4e5f\u6709 get \u65b9\u6cd5\uff09\uff0c\u5efa\u8bae\u5c06com.github.tomakehurst.wiremock. client.WireMock \u8fd9\u4e2a\u5305\u4f7f\u7528\"*\"\u5f15\u8fdb\u6765\u3002get\u3001urlEqualTo\u3001aResponse\u90fd\u662f\u7528\u4e8e\u6784\u5efa\u5339\u914d\u89c4\u5219\u548c\u8fd4\u56de\u503c\u7684\u76f8\u5173\u65b9\u6cd5\u3002 \u6dfb\u52a0\u4ee5\u4e0a\u7684\u65b9\u6cd5\u540e\uff0c\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u3002\u987a\u5229\u7684\u8bdd\uff0c\u6d4b\u8bd5\u4f1a\u901a\u8fc7\u5e76\u6253\u5370\u51fa\u9700\u8981\u8fd4\u56de\u7684\u6570\u636e\u5185\u5bb9\u3002\u4e0a\u9762\u901a\u8fc7Java\u8bed\u8a00\u63cf\u8ff0\u7684\u6a21\u62df\u6570\u636e\u7b49\u4ef7\u4e8e\u4e0b\u9762\u7684JSON\u6587\u4ef6\uff1a { \"request\": { \"method\": \"GET\", \"url\": \"/users\" }, \"response\": { \"status\": 200, \"body\": \"{\\\"name\\\":\\\"john\\\"}\", \"headers\": { \"Content-Type\": \"text/json\" } } } WireMock\u7c7b\u4e2d\u63d0\u4f9b\u4e86\u975e\u5e38\u591a\u7684Builder\u65b9\u6cd5\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u66f4\u52a0\u7075\u6d3b\u5730\u6784\u5efa\u6a21\u62dfAPI\uff0c\u8fd9\u5bf9\u4e8e\u6784\u5efa\u4e00\u4e9b\u5f02\u5e38\u8fd4\u56de\u7279\u522b\u6709\u7528\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u7701\u7565urlEqualTo\u65b9\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528okJson\u65b9\u6cd5\u6784\u5efaJSON\u7684\u8fd4\u56de\u5185\u5bb9\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test void test_mock_json() { configureFor(\"localhost\", 9090); stubFor(get(\"/users\") .willReturn(okJson(\"{\\\"name\\\":\\\"john\\\"}\"))); String response = restTemplate.getForObject(\"http://localhost:9090/users\", String.class); Assertions.assertEquals(\"{\\\"name\\\":\\\"john\\\"}\", response); } \u5f53\u6d4b\u8bd5\u670d\u52a1\u5f02\u5e38\u65f6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528unauthorized\u3001forbidden\u3001notFound\u7b49\u65b9\u6cd5\u6784\u5efa\u5f02\u5e38\u8fd4\u56de\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test void mock_status() { configureFor(\"localhost\", 9090); stubFor(get(\"/limited-resources\") .willReturn(unauthorized())); Assertions.assertThrows(HttpClientErrorException.Unauthorized.class, () -> { restTemplate.getForEntity(\"http://localhost:9090/limited-resources\", String.class); }); } \u8fd8\u53ef\u4ee5\u4f7f\u7528temporaryRedirect\u6784\u5efa\u8df3\u8f6c\u65b9\u6cd5\uff0c\u6bd4\u5982\u6d4b\u8bd5302\u3001301\u8df3\u8f6c\u3002\u9ed8\u8ba4\u7684RestTemplate \u5f00\u542f\u4e86\u81ea\u52a8\u83b7\u53d6\u8df3\u8f6c\u540e\u7684\u6570\u636e\u7684\u529f\u80fd\uff0c\u8fd9\u91cc\u4e3a\u4e86\u6f14\u793a\u65b9\u4fbf\uff0c\u65ad\u8a00\u4e86\u8df3\u8f6c\u5230/redirect-to\u540e\u7684\u8fd4\u56de\u503c\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Test void mock_redirect() { configureFor(\"localhost\", 9090); stubFor(get(\"/redirect-to\") .willReturn(ok(\"new-url\"))); stubFor(get(\"/redirect\") .willReturn(temporaryRedirect(\"/redirect-to\"))); String response = restTemplate.getForObject(\"http://localhost:9090/redirect-to\", String.class); Assertions.assertEquals(response, \"new-url\"); } \u5982\u679c\u60f3\u5173\u95edRestTemplate\u7684\u81ea\u52a8\u8df3\u8f6c\uff0c\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2aBean\u8fdb\u884c\u914d\u7f6e\u3002\u5173\u95edRestTemplate \u7684\u81ea\u52a8\u8df3\u8f6c\uff08\u4e5f\u53ef\u4ee5\u4f7f\u7528\u524d\u9762\u4ecb\u7ecd\u7684TestRestTemplate\uff09\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528getForEntity \u83b7\u53d6\u8fd4\u56de\u7684HTTP\u5305\u5b9e\u4f53\uff0c\u5e76\u83b7\u53d6\u771f\u5b9e\u7684\u72b6\u6001\u7801\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Bean public RestTemplate restTemplate () { RestTemplate restTemplate = new RestTemplate(); final HttpComponentsClientHttpRequestFactory factory = new HttpComponentsClientHttpRequestFactory(); CloseableHttpClient build = HttpClientBuilder.create().disableRedirectHandling().build(); factory.setHttpClient(build); restTemplate.setRequestFactory(factory); return restTemplate; }","title":"2. \u5185\u5d4c\u5728 JUnit \u5e73\u53f0\u4e2d\u4f7f\u7528"},{"location":"06-api-testing/#3","text":"WireMock\u5b9e\u4f8b\u5728\u542f\u52a8\u540e\u4f1a\u8bb0\u5f55\u6240\u6709\u7684\u6d4b\u8bd5\u8bf7\u6c42\uff0c\u5e76\u4e14\u5728\u91cd\u7f6e\u4e4b\u524d\u90fd\u4e0d\u4f1a\u6e05\u7406\u6389\u3002\u5b83\u7684\u7528\u5904\u5c31\u662f\u83b7\u53d6\u8bf7\u6c42\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u4ece\u800c\u5224\u5b9a\u6d4b\u8bd5\u7ed3\u679c\u3002\u540c\u65f6\uff0c\u5b83\u4e5f\u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u8bf7\u6c42\u7684\u8be6\u60c5\uff0c\u4e3a\u8c03\u8bd5Bug\u5e26\u6765\u4fbf\u5229\u3002 \u901a\u8fc7Jar\u5305\u72ec\u7acb\u542f\u52a8\u7684WireMock\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406API\u83b7\u53d6\u5339\u914d\u7ed3\u679c\uff0c\u4f46\u662f\u4f7f\u7528\u72ec\u7acb\u542f\u52a8\u7684WireMock\u670d\u52a1\u65f6\uff0c\u5f88\u5c11\u4f1a\u53bb\u9a8c\u8bc1\u6a21\u62df\u6570\u636e\u7684\u5339\u914d\u60c5\u51b5\u3002 \u901a\u8fc7\u5185\u5d4c\u542f\u52a8\u7684WireMock\u670d\u52a1\u4f7f\u7528Java API\u6765\u5b9e\u73b0\u5bf9API\u7684\u9a8c\u8bc1\u5c31\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u8c03\u7528verify\u65b9\u6cd5\u5373\u53ef\uff1a @Test void verify_mock_server() { // \u51c6\u5907 Mock \u6570\u636e configureFor(\"localhost\", 9090); stubFor(get(urlEqualTo(\"/users\")) .willReturn(aResponse() .withHeader(\"Content-Type\", \"text/json\") .withBody(\"{\\\"name\\\":\\\"john\\\"}\"))); // \u8c03\u7528\u88ab\u6d4b\u8bd5\u5185\u5bb9 String response = restTemplate.getForObject(\"http://localhost:9090/users\", String.class); System.out.println(response); // \u9a8c\u8bc1\u88ab\u4f9d\u8d56 API \u662f\u5426\u88ab\u8c03\u7528 verify(getRequestedFor(urlEqualTo(\"/users\")) .withHeader(\"Content-Type\", equalTo(\"text/json\"))); } \u793a\u4f8b\u4ee3\u7801\u4e2d\u7684 verify \u65b9\u6cd5\u4e0eMockito \u4e2d\u7684\u76f8\u5173\u65b9\u6cd5\u91cd\u540d\uff0c\u8bf7\u6ce8\u610f\u5f15\u5165\u7684\u5305\u662f\u5426\u6b63\u786e\u3002\u8fd9\u91cc\u7684 getRequestedFor\u83b7\u5f97Builder\u5bf9\u8c61\u7684\u8bed\u6cd5\u4e0e\u51c6\u5907 Mock\u6570\u636e\u65f6\u975e\u5e38\u76f8\u4f3c\u3002verify\u65b9\u6cd5\u6ca1\u6709\u522b\u7684\u53c2\u6570\u65f6\uff0c\u4f1a\u9a8c\u8bc1\u5339\u914d\u7684\u89c4\u5219\u662f\u5426\u81f3\u5c11\u8c03\u7528\u4e86\u4e00\u6b21\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0crestTemplate\u5bf9\u8c61\u53d1\u51fa\u53bb\u7684\u8bf7\u6c42\u6ca1\u6709\u5e26\u4e0aContent-Type\uff0c\u56e0\u6b64\u6d4b\u8bd5\u4f1a\u5931\u8d25\u3002\u6d4b\u8bd5\u5931\u8d25\u540e\uff0c\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u67e5\u770b\u9519\u8bef\u4fe1\u606f\uff0c\u5982\u56fe6-4\u6240\u793a\u3002\u4f7f\u7528IntelliJIDEA\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5355\u51fb\u9519\u8bef\u4fe1\u606f\u53ef\u4ee5\u67e5\u770b\u5dee\u5f02\uff0c\u4ece\u800c\u5206\u6790\u95ee\u9898\u4ea7\u751f\u7684\u539f\u56e0\u3002 \u56fe 6-4 \u5bf9\u6bd4\u5206\u6790\u9519\u8bef\u539f\u56e0 \u5f53\u7136\uff0c\u4e0eMockito\u7c7b\u4f3c\uff0cverify\u65b9\u6cd5\u9664\u4e86\u9ed8\u8ba4\u6267\u884c\u81f3\u5c11\u4e00\u6b21\u7684\u6821\u9a8c\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e86\u591a\u79cd\u9a8c\u8bc1\u64cd\u4f5c\uff1a verify(lessThan(5), postRequestedFor(urlEqualTo(\"/many\"))); verify(lessThanOrExactly(5), postRequestedFor(urlEqualTo(\"/many\"))); verify(exactly(5), postRequestedFor(urlEqualTo(\"/many\"))); verify(moreThanOrExactly(5), postRequestedFor(urlEqualTo(\"/many\"))); verify(moreThan(5), postRequestedFor(urlEqualTo(\"/many\")));","title":"3. \u8c03\u7528\u9a8c\u8bc1"},{"location":"06-api-testing/#4-junit-5-extension","text":"\u6211\u4eec\u77e5\u9053JUnit4\u63d0\u4f9b\u4e86Rule\uff0cWireMock\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2aWireMockRule\u6765\u96c6\u6210\u539f\u751f\u7684API\u3002\u56de\u987e\u4e4b\u524d\u4ecb\u7ecd\u7684Rule\uff0c\u6211\u4eec\u77e5\u9053\uff0cRule\u662fJUnit\u7684\u4e00\u79cd\u62d3\u5c55\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8ba9\u6d4b\u8bd5\u66f4\u4e3a\u7075\u6d3b\uff0c\u5b83\u80fd\u8d77\u5230\u7c7b\u4f3c\u63d2\u4ef6\u7684\u4f5c\u7528\u3002Rule\u6700\u57fa\u672c\u7684\u4f7f\u7528\u65b9\u5f0f\u5c31\u662f@Rule\u6ce8\u89e3\u5728\u6d4b\u8bd5\u7c7b\u4e2d\u58f0\u660e\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @Rule public WireMockRule wireMockRule = new WireMockRule(); \u4e5f\u53ef\u4ee5\u589e\u52a0\u4e00\u4e9b\u53c2\u6570\uff1a @Rule public WireMockRule wireMockRule = new WireMockRule(options().port(8888).httpsPort(8889)); \u4f46\u662f\uff0c\u6211\u4eec\u7684\u4f8b\u5b50\u73b0\u5728\u5df2\u7ecf\u5347\u7ea7\u5230\u4e86JUnit5\u7248\u672c\uff0c\u5728Junit5\u4e2d\u4f7f\u7528Extension\u4ee3\u66ff\u4e86Rule\uff0c\u8ba9\u62d3\u5c55\u7684\u7f16\u5199\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u8fd9\u91cc\u4f7f\u7528WireMock\u7684\u539f\u751fAPI\u7f16\u5199\u4e00\u4e2aJUnit 5\u7684Extension\u3002\u7f16\u5199Extension\u7684\u65b9\u6cd5\u6bd4\u8f83\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528WireMockServer\u5bf9\u8c61\u4f5c\u4e3a\u7236\u7c7b\uff0c\u7136\u540e\u5b9e\u73b0\u76f8\u5e94\u7684\u63a5\u53e3\u3002 public class WireMockExtension extends WireMockServer implements BeforeEachCallback, AfterEachCallback { public WireMockExtension() { } @Override public void afterEach(ExtensionContext context) { stop(); resetAll(); } @Override public void beforeEach(ExtensionContext context) { start(); } } \u4e00\u4e2a\u6781\u5176\u7b80\u5355\u7684Extension\u5c31\u5f00\u53d1\u5b8c\u6210\u4e86\uff0c\u4f7f\u7528@RegisterExtension\u53ef\u4ee5\u6ce8\u4ebaExtension \u4ee3\u66ff\u6bcf\u6b21\u624b\u52a8\u7f16\u5199\u7684start\u3001stop\u65b9\u6cd5\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class WireMockExtensionTest extends TestBase { @RegisterExtension WireMockExtension wireMock = new WireMockExtension(); ... } } WireMockServer\u63d0\u4f9b\u4e86\u6839\u636e\u53c2\u6570\u6784\u5efa\u6a21\u62df\u670d\u52a1\u7684\u65b9\u6cd5\uff0c\u5728Extension\u4e2d\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u76f8\u5e94\u7684\u65b9\u6cd5\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a // \u6839\u636e\u914d\u7f6e\u6784\u5efa WireMockServer public WireMockExtension(Options options) { super(options); } // \u6839\u636e\u7aef\u53e3\u6784\u5efa WireMockServer public WireMockExtension(int port, Integer httpsPort) { super(port, httpsPort); }","title":"4. \u81ea\u5b9a\u4e49 JUnit 5 Extension"},{"location":"06-api-testing/#67-api","text":"\u5728\u7f16\u5199API\u6d4b\u8bd5\u65f6\uff0c\u6d4b\u8bd5\u7b56\u7565\u662f\u4e00\u4ef6\u6bd4\u8f83\u4ee4\u4eba\u5934\u75bc\u7684\u4e8b\u60c5\uff0c\u76f8\u5bf9\u6765\u8bf4\uff0c\u6d4b\u8bd5\u7684\u4e00\u4e9b\u6280\u672f\u95ee\u9898\u53cd\u800c\u6bd4\u8f83\u597d\u89e3\u51b3\u3002\u539f\u56e0\u662f\u5e94\u7528\u67b6\u6784\u7684\u6c34\u5e73\u53c2\u5dee\u4e0d\u9f50\uff0cAPI\u7684\u804c\u8d23\u4e0d\u662f\u90a3\u4e48\u6e05\u6670\uff0c\u4ece\u800c\u5bfc\u81f4\u6d4b\u8bd5\u53d8\u5f97\u56f0\u96be\u3002 \u826f\u597d\u7684API\u8bbe\u8ba1\u4f1a\u5c3d\u53ef\u80fd\u5730\u8003\u8651\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\u7684MECE\u539f\u5219\uff08Mutually Exclusive Collectively Exhaustive\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u529f\u80fd\u7a77\u5c3d\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd8\u4f1a\u8bbe\u6cd5\u505a\u5230\u5f7c\u6b64\u72ec\u7acb\u3002\u8fd9\u6837\u4e00\u6765\uff0cAPI\u7684\u804c\u8d23\u5c31\u6bd4\u8f83\u5355\u4e00\u4e86\uff0c\u81ea\u7136\u6211\u4eec\u7684\u6d4b\u8bd5\u5de5\u4f5c\u4e5f\u4f1a\u76f8\u5bf9\u7b80\u5355\u3002 \u5bf9\u4e8e\u4e0d\u540c\u7684API\u7c7b\u578b\uff0c\u6d4b\u8bd5\u7b56\u7565\u4e5f\u4f1a\u4e0d\u4e00\u6837\u3002\u8fd9\u91cc\u7684\u6d4b\u8bd5\u7b56\u7565\u4e0e\u901a\u5e38\u610f\u4e49\u4e0a\u7684\u6d4b\u8bd5\u7b56\u7565\u7565\u6709\u4e0d\u540c\uff0c\u56e0\u4e3a\u5df2\u7ecf\u9650\u5b9a\u4e86\u662fAPI\u6d4b\u8bd5\uff0c\u6240\u4ee5\u5b83\u7684\u6d4b\u8bd5\u76ee\u6807\u3001\u7c7b\u578b\u57fa\u672c\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8ba8\u8bba\u7684\u91cd\u70b9\u4e5f\u5c31\u53d8\u6210\u4e86\u5982\u4f55\u66f4\u597d\u5730\u4e3aAPI\u7ec4\u7ec7\u6d4b\u8bd5\u3001\u5982\u4f55\u63d0\u9ad8\u6d4b\u8bd5\u6709\u6548\u6027\uff0c\u4ee5\u53ca\u5982\u4f55\u8ba9\u6d4b\u8bd5\u7684\u7f16\u5199\u53d8\u5f97\u66f4\u52a0\u4fbf\u5229\u3002 \u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6d4b\u8bd5\u7b56\u7565\u5f80\u5f80\u4e0e\u67b6\u6784\u6709\u5173\uff0cAPI\u6d4b\u8bd5\u53d7\u67b6\u6784\u7684\u5236\u7ea6\u3002\u4f8b\u5982\uff0c\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u9762\u5411\u5e94\u7528\u7684API\u5728\u4e00\u4e9b\u516c\u53f8\u53eb\u4f5cExperience API\u3001\u524d\u53f0\u3001BFF\u7b49\uff0c\u800c\u9762\u5411\u5185\u90e8\u670d\u52a1\u7684API\u5219\u53eb\u4f5c\u9886\u57df\u670d\u52a1\u6216\u6838\u5fc3\u670d\u52a1API\u3002 \u4e0b\u9762\u4ee5\u9910\u996e\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u8bf4\u660e\u4e0a\u8ff0\u4e24\u79cdAPI\u7684\u7ec6\u5fae\u5dee\u5f02\u3002\u7528\u6237\u53ef\u4ee5\u5728\u624b\u673a\u4e0a\u70b9\u9910\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u6216\u8005APP\u8bbf\u95ee\u7528\u6237\u7aefAPI\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406\u7aefAPI\u7ba1\u7406\u7528\u6237\u7b49\u7cfb\u7edf\u4e2d\u7684\u8d44\u6e90\u3002\u8fd9\u4e9b\u8bf7\u6c42\u6700\u7ec8\u90fd\u4f1a\u901a\u8fc7\u4e0d\u540c\u7684\u5e94\u7528API\u5230\u8fbe\u9886\u57dfAPI\u4e2d\uff0c\u5982\u56fe6-5\u6240\u793a\u3002 \u56fe 6-5 \u4e0d\u540c\u7c7b\u578b\u7684 API","title":"6.7 API \u81ea\u52a8\u5316\u6d4b\u8bd5\u7b56\u7565"},{"location":"06-api-testing/#671-api","text":"\u5e94\u7528API\u53ea\u662f\u5bf9\u9886\u57dfAPI\u7684\u7ec4\u7ec7\u548c\u7f16\u6392\uff0c\u6ca1\u6709\u7279\u522b\u591a\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u6d4b\u8bd5\u91cd\u70b9\u662f\u9a8c\u8bc1\u8fd9\u5957 API\u80fd\u5426\u5b8c\u6210\u7aef\u5230\u7aef\u7684\u9a8c\u8bc1\u3002\u8fd9\u7c7b API\u7684\u6d4b\u8bd5\u5de5\u4f5c\u6700\u597d\u6309\u7167\u573a\u666f\u6765\u7ec4\u7ec7\uff0c\u6bd4\u8f83\u63a8\u8350\u7684\u505a\u6cd5\u662f\u6839\u636e\u573a\u666f\u6765\u6d4b\u8bd5\uff0c\u53ef\u4f7f\u7528\u7528\u6237\u65c5\u7a0b\uff08User Journey\uff09\u6d4b\u8bd5\u7684\u98ce\u683c\u6765\u7ec4\u7ec7\u6d4b\u8bd5\u3002 \u7531\u4e8e\u5e94\u7528API\u4f9d\u8d56\u4e8e\u7528\u6237\u670d\u52a1\u3001\u4ea7\u54c1\u670d\u52a1\u7b49\uff0c\u56e0\u6b64\u9700\u8981\u901a\u8fc7\u6a21\u62df\u8fd9\u4e9b\u4f9d\u8d56\u8ba9\u573a\u666f\u6d4b\u8bd5\u987a\u5229\u8fdb\u884c\u3002\u53c8\u56e0\u4e3a\u5e94\u7528API\u4e2d\u7684\u4e1a\u52a1\u903b\u8f91\u548c\u5206\u652f\u6761\u4ef6\u8f83\u5c11\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u5f02\u5e38\u5206\u652f\u5c31\u80fd\u8ba9\u6d4b\u8bd5\u7684\u8986\u76d6\u7387\u8f83\u9ad8\u3002\u8fd9\u7c7b API\u6d4b\u8bd5\u4e5f\u4e0d\u9700\u8981\u5173\u6ce8\u540e\u7aef API\u7684\u4e1a\u52a1\u903b\u8f91\u4e2d\u53d1\u751f\u4e86\u54ea\u4e9b\u4e1a\u52a1\u5f02\u5e38\u3002","title":"6.7.1 \u9762\u5411\u5e94\u7528\u7684 API"},{"location":"06-api-testing/#1_1","text":"\u9488\u5bf9\u9762\u5411\u5e94\u7528\u7684 API\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff0c\u76ee\u6807\u662f\u6d4b\u8bd5API\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u9a8c\u8bc1\u5b57\u6bb5\u662f\u5426\u6b63\u5e38\u8fd4\u56de\uff0c\u4ee5\u53ca\u6700\u7ec8\u7684\u540e\u7aefAPI\u662f\u5426\u88ab\u5408\u7406\u8c03\u7528\u3002","title":"1. \u6d4b\u8bd5\u76ee\u7684"},{"location":"06-api-testing/#2","text":"\u4e3b\u8981\u4f7f\u7528WireMock\u5bf9\u4f9d\u8d56\u7684\u540e\u7aefAPI\u8fdb\u884c\u6a21\u62df\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u53ef\u4ee5\u628a\u5e38\u7528\u7684\u6a21\u62df\u65b9\u6cd5\u7ec4\u5408\u6210\u901a\u7528\u7684\u65b9\u6cd5\uff0c\u907f\u514d\u91cd\u590d\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\u3002\u53e6\u5916\uff0c\u8fd9\u7c7b\u6d4b\u8bd5\u5f80\u5f80\u4e0e\u7528\u6237\u7684\u8ba4\u8bc1\u6709\u5173\uff0c\u56e0\u6b64\u9700\u8981\u6a21\u62df\u4e0e\u7528\u6237\u8ba4\u8bc1\u76f8\u5173\u7684\u884c\u4e3a\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\u524d\u9762\u7684\u9274\u6743\u5904\u7406\u3002","title":"2. \u6d4b\u8bd5\u51c6\u5907"},{"location":"06-api-testing/#3_1","text":"\u4f7f\u7528\u7528\u6237\u65c5\u7a0b\u6765\u7ec4\u7ec7\u6d4b\u8bd5\u5728JUnit\u4e2d\u6709\u4e24\u79cd\u98ce\u683c\u3002 \u7b2c\u4e00\u79cd\u662f\u901a\u8fc7\u7c7b\u7684\u65b9\u5f0f\u6765\u7ec4\u7ec7\u3001\u7136\u540e\u5728\u7c7b\u7684\u7ea7\u522b\u4e2d\u8bbe\u7f6e\u901a\u7528\u7684Mock\u884c\u4e3a\uff0c\u5e76\u901a\u8fc7\u8bbe\u7f6e\u6d4b\u8bd5\u65b9\u6cd5\u7684\u8fd0\u884c\u5e8f\u5217\u6574\u4f53\u8fd0\u884c\u6d4b\u8bd5\u3002\u5728JUnit5\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528@Order\u6ce8\u89e3\u8ba9\u6d4b\u8bd5\u987a\u5e8f\u6267\u884c\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a @TestMethodOrder(MethodOrderer.OrderAnnotation.class) public class BuyScenarioTest { @BeforeAll static void beforeAll() { // \u8fd9\u91cc\u8fdb\u884c\u901a\u7528\u7684\u51c6\u5907 } @AfterAll static void afterAll() { // \u8fd9\u91cc\u8fdb\u884c\u901a\u7528\u7684\u6e05\u7406 } @Test @Order(1) void should_list_products() { System.out.println(\"should_list_products\"); } @Test @Order(2) void should_get_product_detail() { System.out.println(\"should_get_product_detail\"); } @Test @Order(3) void should_add_product_to_shopping_cart() { System.out.println(\"should_add_product_to_shopping_cart\"); } ... } \u7531\u4e8e\u5728\u8fd9\u4e00\u5c42API\u4e2d\uff0c\u6211\u4eec\u653e\u5f03\u4e86\u5bf9\u5f02\u5e38\uff08\u6307\u5c40\u90e8\u5f02\u5e38\uff0c\u5bf9\u5206\u652f\u6d41\u7a0b\u7684\u5f02\u5e38\u8fd8\u662f\u4f1a\u6d4b\u8bd5\uff09\u7684\u6d4b\u8bd5\uff0c\u56e0\u6b64\u8ba9\u6574\u4e2a\u6d4b\u8bd5\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u548c\u7ef4\u62a4\u3002\u53ea\u6709\u4f4e\u6210\u672c\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u624d\u4f1a\u8ba9\u56e2\u961f\u6709\u52a8\u529b\u6301\u7eed\u5730\u7ef4\u62a4\u4e0b\u53bb\u3002 \u4f46\u4e60\u60ef\u4e86\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u7ec4\u7ec7\u6d4b\u8bd5\u4e4b\u540e\uff0c\u5f88\u591a\u5f00\u53d1\u8005\u4f1a\u5bf9\u90a3\u4e9b\u65e0\u610f\u4e49\u7684@Order\u6ce8\u89e3\u611f\u5230\u538c\u70e6------------\u65e2\u7136\u6211\u4eec\u662f\u4f7f\u7528\u573a\u666f\u7ec4\u7ec7API\u6d4b\u8bd5\u7684\uff0c\u4f55\u4e0d\u5c31\u4ee5\u4e00\u4e2a\u573a\u666f\u4f5c\u4e3a\u5355\u4f4d\u5212\u5206\u6d4b\u8bd5\u5462\uff1f\u8fd9\u5c31\u662f\u7b2c\u4e8c\u79cd\u98ce\u683c\uff0c\u76f4\u63a5\u4ee5\u573a\u666f\u4e3a\u7c92\u5ea6\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f7f\u7528\u4e00\u4e2a\u6d4b\u8bd5\u7f16\u6392\u591a\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u3002\u5728\u5176\u4ed6\u7684BDD\u6d4b\u8bd5\u6846\u67b6\u4e2d\uff0c\u5bf9\u6b64\u662f\u6709\u4e13\u95e8\u7684\u8bed\u6cd5\u6765\u652f\u6301\u7684\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class ScenarioTest { @Test void buy_scenario_test() { // \u8fd9\u91cc\u8fdb\u884c\u901a\u7528\u7684\u51c6\u5907 shouldListProducts(); shouldGetProductDetail(); shouldAddProductToShoppingCart(); ... // \u8fd9\u91cc\u8fdb\u884c\u901a\u7528\u7684\u6e05\u7406 } void shouldListProducts() { System.out.println(\"should_list_products\"); } void shouldGetProductDetail() { System.out.println(\"should_get_product_detail\"); } void shouldAddProductToShoppingCart() { System.out.println(\"should_add_product_to_shopping_cart\"); } }","title":"3. \u6d4b\u8bd5\u7ec4\u7ec7\u65b9\u5f0f"},{"location":"06-api-testing/#672-api","text":"\u9762\u5411\u9886\u57df\u670d\u52a1\u7684API\u4e0d\u662f\u4e3a\u6700\u7ec8\u7684\u573a\u666f\u670d\u52a1\u7684\uff0c\u800c\u662f\u63d0\u4f9b\u901a\u7528\u7684\u4e1a\u52a1\u80fd\u529b\u3002\u4ee5\u4ea7\u54c1\u670d\u52a1\u4e3a\u4f8b\uff0c\u5bf9\u4e8e\u4ea7\u54c1\u670d\u52a1\u6765\u8bf4\uff0c\u5b83\u63d0\u4f9b\u7684\u662f\u57fa\u672c\u7684\u670d\u52a1\u80fd\u529b\uff0c\u4f8b\u5982\u6dfb\u52a0\u4ea7\u54c1\u3001\u5220\u9664\u4ea7\u54c1\u3002\u9886\u57df\u670d\u52a1\u7684\u5404\u4e2aAPI\u4e4b\u95f4\u7684\u5173\u8054\u6027\u76f8\u5bf9\u8f83\u5f31\uff0c\u56e0\u6b64\u53ef\u4ee5\u72ec\u7acb\u5730\u7ec4\u7ec7\u6d4b\u8bd5\u6570\u636e\uff0c\u4e0d\u8fc7\uff0c\u9700\u8981\u9a8c\u8bc1\u5f02\u5e38\u6d4b\u8bd5\u3002","title":"6.7.2 \u9762\u5411\u9886\u57df\u670d\u52a1\u7684 API"},{"location":"06-api-testing/#1_2","text":"\u9488\u5bf9\u9762\u5411\u9886\u57df\u670d\u52a1 API\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff0c\u76ee\u6807\u662f\u6d4b\u8bd5 API\u7684\u4e1a\u52a1\u80fd\u529b\uff0c\u5305\u62ec\u5355\u5143\u6d4b\u8bd5\u4e0d\u80fd\u8986\u76d6\u7684\u5f02\u5e38\u884c\u4e3a\u3002","title":"1.\u6d4b\u8bd5\u76ee\u6807"},{"location":"06-api-testing/#2_1","text":"\u9886\u57df\u670d\u52a1\u9664\u4e86\u4f1a\u4f9d\u8d56\u5c11\u91cf\u7684\u7b2c\u4e09\u65b9API\u4e4b\u5916\uff0c\u8fd8\u4f1a\u4f9d\u8d56\u6570\u636e\u5e93\u3001\u6587\u4ef6\u7b49\u57fa\u7840\u8bbe\u65bd\u3002\u8fd9\u91cc\u53c2\u8003\u4e4b\u524d\u7684\u5185\u5bb9\u4e3a\u4e0d\u540c\u7684\u57fa\u7840\u8bbe\u65bd\u51c6\u5907\u6d4b\u8bd5\u5185\u5bb9\uff1a \u542f\u52a8\u5185\u5d4c\u7684\u6570\u636e\u5e93\u7b49\u57fa\u7840\u8bbe\u65bd\u3002 \u76f4\u63a5\u4f7f\u7528\u6e90\u7801\u4e2d\u7684Service\u3001Repository\u7b49Bean\u6765\u51c6\u5907\u6570\u636e\u5e93\u4e2d\u7684\u5185\u5bb9\u3002 \u4f7f\u7528 WireMock\u6765\u5904\u7406\u5916\u90e8\u7cfb\u7edf\u3002","title":"2.\u6d4b\u8bd5\u51c6\u5907"},{"location":"06-api-testing/#3_2","text":"\u7531\u4e8e\u9762\u5411\u9886\u57df\u670d\u52a1\u7684API\u63d0\u4f9b\u7684\u57fa\u672c\u662f\u539f\u5b50\u6027\u7684API\uff0c\u56e0\u6b64\u5176\u4e0e\u5355\u5143\u6d4b\u8bd5\u7684\u7ec4\u7ec7\u98ce\u683c\u7c7b\u4f3c\uff0c\u5373\u4fdd\u6301\u4e00\u4e2aController\u5bf9\u5e94\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\u3002\u82e5\u4e3a\u6bcf\u4e2aAPI\u5355\u72ec\u51c6\u5907\u3001\u6267\u884c\u3001\u9a8c\u8bc1\u6d4b\u8bd5\u7528\u4f8b\uff0c\u90a3\u4e48\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u4e2a\u6d4b\u8bd5\u3002\u60f3\u8ba9\u6d4b\u8bd5\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\uff0c\u53ef\u4ee5\u628a\u6b63\u5411\u3001\u5f02\u5e38\u6d4b\u8bd5\u7ec4\u7ec7\u5230\u4e00\u4e2a\u5d4c\u5957\u6d4b\u8bd5\u4e2d\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public class ProductControllerTest { @Nested @DisplayName(\"query product list suite\") class QueryProduct { @Test void should_list_product_list_with_default_page() { System.out.println(\"should_list_product_list_with_default_page\"); } @Test void should_list_product_list_with_specify_page() { System.out.println(\"should_list_product_list_with_specify_page\"); } } @Nested @DisplayName(\"add product test suite\") class AddProduct { @Test void should_add_product_success() { System.out.println(\"should_add_product_success\"); } @Test void should_add_product_failed_when_exceed_product_limitation() { System.out.println(\"should_add_product_failed_when_exceed_product_limitation\"); } } } \u5d4c\u5957\u7c7b\u5c24\u5176\u9002\u5408\u8fd9\u79cd\u573a\u666f\uff0c\u5728IntelliJIDEA\u4e2d\u8fd0\u884c\u6d4b\u8bd5\u65f6\uff0c\u53ef\u4ee5\u5728\u6d4b\u8bd5\u7ed3\u679c\u4e2d\u770b\u5230\u975e\u5e38\u6e05\u6670\u7684\u6d4b\u8bd5\u7ed3\u6784\u3002\u56fe6-6\u5c55\u793a\u4e86\u5d4c\u5957\u6d4b\u8bd5\u6267\u884c\u540e\u7684\u6837\u5b50\u3002 \u56fe 6-6 \u4f7f\u7528\u5d4c\u5957\u7c7b\u7ec4\u7ec7\u6d4b\u8bd5","title":"3.\u6d4b\u8bd5\u7ec4\u7ec7\u65b9\u5f0f"},{"location":"06-api-testing/#68","text":"\u5728\u524d\u540e\u7aef\u5206\u79bb\u548c\u5fae\u670d\u52a1\u76db\u884c\u7684\u6280\u672f\u8d8b\u52bf\u4e0b\uff0cAPI\u6d4b\u8bd5\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002\u672c\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528MockMvc\u3001RESTAssured\u7b49\u5de5\u5177\u5b9e\u73b0API\u6d4b\u8bd5\uff0c\u4ee5\u53ca\u4e00\u4e9b\u76f8\u5173\u7684\u6ce8\u610f\u4e8b\u9879\u548c\u6280\u5de7\u3002API\u6d4b\u8bd5\u4e0d\u518d\u662f\u5355\u5143\u6d4b\u8bd5\u7684\u8303\u7574\uff0c\u5b83\u7684\u6d4b\u8bd5\u5de5\u5177\u3001Mock\u5de5\u5177\u3001\u6d4b\u8bd5\u7b56\u7565\u7b49\u90fd\u4e0e\u5355\u5143\u6d4b\u8bd5\u6709\u6240\u4e0d\u540c\u3002\u901a\u8fc7WireMock\u53ef\u4ee5\u9694\u79bb\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9API\uff0c\u8ba9\u5904\u4e8e\u9519\u7efc\u590d\u6742\u7684\u8c03\u7528\u5173\u7cfb\u4e0b\u7684API\u66f4\u5bb9\u6613\u88ab\u6d4b\u8bd5\u3002 \u5bf9\u4e8e\u5fae\u670d\u52a1\u6765\u8bf4\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u5fae\u670d\u52a1\u4f1a\u63d0\u4f9b\u4e0d\u540c\u7684API\uff0c\u8fd9\u4e9bAPI\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6d4b\u8bd5\u7b56\u7565\uff0c\u4e3a\u573a\u666f\u5b9a\u5236\u6d4b\u8bd5\u7b56\u7565\u800c\u4e0d\u662f\u6b7b\u677f\u5730\u4f7f\u7528\u540c\u4e00\u5957\u65b9\u6cd5\u5c24\u4e3a\u91cd\u8981\u3002","title":"6.8 \u5c0f\u7ed3"}]}